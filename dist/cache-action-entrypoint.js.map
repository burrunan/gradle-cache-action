{"version":3,"file":"cache-action-entrypoint.js","mappings":"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AAI0C,UAAgC5E;KACzClC,KAAKwzC,SAASpvC,IAAI0C,UAAU5E;AAC9B;;GCjDK,MACMuxC,kBAA0B,cAa1BC,qBAAwC,sCAExC,oCACC;IACVC,wBAAwB;IACxBC,WAAW;IACXC,UAAU;IACVC,WAAW;IACXC,SAAS;MAIAC,kCACI,KAOJ,0CACI,iBADJ,6CAGO,oBAHP,uCAIC,cAJD,6CAKO,oBALP,2CAMK,kBANL,wCAOE,eAPF,sDAQgB,6BARhB,yCASG,gBATH,mCAUH,UAVG,iCAWL,QAXK,qCAYD,YAZC,8CAaQ,qBAbR,0CAcI,iBAdJ,gDAeU,uBAfV,+CAgBS,SAhBT,kCAiBJ,SAjBI,sCAqBA,aArBA,4CAsBM,mBAtBN,yCAuBG,gBAiBHC,uCAAuC,EAClD,+BACA,iBACA,kBACA,gBACA,QACA,cACA,eACA,qBACA,cACA,0BACA,aACA,mBACA,mBACA,iCACA,gBACA,iBACA,uBACA,oBACA,oBACA,eACA,iBACA,QACA,iBACA,UACA,QACA,sBACA,oBACA,6BACA,gBACA,sBACA,oBACA,gCACA,uBACA,oBACA,qBACA,cACA,iCACA,yBACA,iBACA,qBACA,YACA,qBACA,iBACA,uBACA,oBACA,gCACA,6BACA,qBACA,uBACA,2BACA,2BACA,mCACA,iCACA,+BACA,iCACA,8BACA,8BACA,4BACA,yBACA,0BACA,2BACA,6BACA,kBACA,kCACA,sBACA,iCACA,yBACA,8BACA,uCACA,6BACA,8BACA,8BACA,8BACA,yBACA,qBACA,2BACA,uBACA,iBACA,mBACA,mBACA,0BACA,8BACA,2BACA,+BACA,iBACA,2BACA,wBACA,iCACA,6BACA,mCACA,kBACA,8BACA,+BACA,gCACA,gBACA,yBAGWC,2CAA2C,EACtD,QACA,cACA,QACA,QACA,QACA,QACA,QACA,MACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,WACA,UACA,UACA,UACA,WACA,WACA,iBACA,aACA,gBACA,OACA,SACA,OACA,OACA,SACA,OACA,cASWC,iBAAiB,EAC5B,SACA,SACA,SA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gBAAgB;OAChByF,SAAS;OACT7uB,MAAM;QACJI,MAAM;QACNisB,eAAe,EAAC,YAAY;;;MAGhCu5B,QAAQ;OACNx8B,gBAAgB;OAChByF,SAAS;OACT7uB,MAAM;QACJI,MAAM;;;MAGVylD,YAAY;OACVz8B,gBAAgB;OAChByF,SAAS;OACT7uB,MAAM;QACJI,MAAM;QACNisB,eAAe,EAAC,WAAW,WAAW,WAAW;;;MAGrDy5B,YAAY;OACV18B,gBAAgB;OAChByF,SAAS;OACT7uB,MAAM;QACJI,MAAM;;;MAGV2lD,cAAc;OACZ38B,gBAAgB;OAChByF,SAAS;OACT7uB,MAAM;QACJI,MAAM;;;MAGV4lD,iBAAiB;OACf58B,gBAAgB;OAChByF,SAAS;OACT7uB,MAAM;QACJI,MAAM;;;MAGV6lD,uBAAuB;OACrB78B,gBAAgB;OAChByF,SAAS;OACT7uB,MAAM;QACJI,MAAM;;;MAGV8lD,iBAAiB;OACf98B,gBAAgB;OAChByF,SAAS;OACT7uB,MAAM;QACJI,MAAM;;;MAGV+lD,iBAAiB;OACf/8B,gBAAgB;OAChByF,SAAS;OACT7uB,MAAM;QACJI,MAAM;;;MAGVgmD,qBAAqB;OACnBh9B,gBAAgB;OAChByF,SAAS;OACT7uB,MAAM;QACJI,MAAM;;;MAGV6iD,WAAW;OACT75B,gBAAgB;OAChByF,SAAS;OACT7uB,MAAM;QACJI,MAAM;;;MAGV8iD,wBAAwB;OACtB95B,gBAAgB;OAChByF,SAAS;OACT7uB,MAAM;QACJI,MAAM;;;MAGVimD,YAAY;OACVj9B,gBAAgB;OAChByF,SAAS;OACT7uB,MAAM;QACJI,MAAM;QACNisB,eAAe,EACb,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,WACA;;;MAINi6B,oBAAoB;OAClBl9B,gBAAgB;OAChByF,SAAS;OACT7uB,MAAM;QACJI,MAAM;;;MAGVmmD,eAAe;OACbn9B,gBAAgB;OAChByF,SAAS;OACT7uB,MAAM;QACJI,MAAM;QACNisB,eAAe,EACb,4BACA,6BACA;;;MAINm6B,2BAA2B;OACzBp9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CA,WACA,SACA,eACA,UACA,SACA,iBACA,mBACA,eACA,qBACA,qBACA,SACA,aACA,QACA,kBACA,iBACA,gBACA,qBACA,qBACA,wBACA,iBACA,MACA,uBACA,yBACA,eACA,mBACA,cACA,YACA,gBACA,kBACA,yBACA,gBACA,yBACA,WNq5CwD;KAC1D3D,eAAe,EAAC,WAAW;KAC3BhJ,QAAQ;MACNb,gBAAgB;MAChByF,SAAS;MACT7uB,MAAM;OACJI,MAAM;;;;IMx5CV2pB,QAAO;IACPsD,YAAY;MAERuxC,0BAAoD;IACxDpsD,MAAM;IACN+jB,YAAY;IACZrB,WAAW;KACT,KAAK;MACHa,eAAe;;KAEjBJ,SAAS;MACP9M,YAAY;MACZkN,eAAe;;;IAGnBoB,aAAa;IACb0C,iBAAiB,EACf,kBACA,QACA;IAEFhB,eAAe,EAAC;IAChBjC,kBAAkB,EAChB,SACA,WACA,eACA,SACA,eACA,qBACA,qBACA,iBACA,yBACA,2BACA,cACA;IAEF7M,QAAO;IACPpS,aAAa;IACb8f,WAAW;IACXpK,YAAY;MAERyxC,iCAA2D;IAC/DtsD,MAAM;IACN+jB,YAAY;IACZrB,WAAW;KACT,KAAK;MACHa,eAAe;;KAEjBJ,SAAS;MACP9M,YAAY;MACZkN,eAAe;;;IAGnB8D,iBAAiB,EACf,kBACA,QACA;IAEFhB,eAAe,EAAC;IAChBjC,kBAAkB,EAChB,SACA,WACA,SACA,eACA,SACA,eACA,qBACA,qBACA,iBACA,uBACA,yBACA,eACA,mBACA,kBACA,yBACA,WACA,oBACA;IAEF7M,QAAO;IACPsD,YAAY;MAER2xC,+BAAyD;IAC7DxsD,MAAM;IACN+jB,YAAY;IACZrB,WAAW;KACT,KAAK;MACHa,eAAe;;KAEjBJ,SAAS;MACP9M,YAAY;MACZkN,eAAe;;;IAGnBoB,aAAa;IACb0C,iBAAiB,EAAC,kBAA6B;IAC/ChB,eAAe,EAAC;IAChBjC,kBAAkB,EAChB,aACA,QACA,SACA,WACA,UACA,SACA,iBACA,mBACA,eACA,qBACA,qBACA,SACA,aACA,QACA,kBACA,iBACA,gBACA,qBACA,qBACA,wBACA,0BACA,wBACA,iBACA,MACA,gBACA,YACA,yBACA;IAEF7M,QAAO;IACPpS,aAAa;IACb8f,WAAW;IACXpK,YAAY;MAER8xC,4BAAsD;IAC1D3sD,MAAM;IACN+jB,YAAY;IACZrB,WAAW;KACT,KAAK;MACHrM,YAAY;MACZkN,eAAe;;KAEjBJ,SAAS;MACP9M,YAAY;MACZkN,eAAe;;;IAGnB8D,iBAAiB,EACf,kBACA,UACA,QNkzC6C;KAC/C5G,eAAe;KACfhJ,QAAQ;MACN2B,cAAc;MACdxC,gBAAgB;MAChByC,WAAU;MACVgD,SAAS;MACT7uB,MAAM;OACJI,MAAM;OACNisB,eAAe,EAAC,aAAa,eAAe;;;;IMxzChDwM,eAAe,EAAC;IAChBjC,kBAAkB,EAChB,SACA,WACA,SACA,SACA;IAEF7M,QAAO;IACPsD,YAAY;;GCvZP,MAAM+xC,sBAAsB;IAUjC,WAAA7gE,CAAYkJ,KAAahD;;KACvB,SAAYnD,MAARmG,KACF,MAAM,IAAI/H,MAAM;KAIb+E,YACHA,UAAU,CAAC;KAEb,MAKM+d,kBACJ/d,QAAQmf,oBAAoBnf,QAAQmf,iBAAiBpB,kBACjD,GAAG/d,QAAQmf,iBAAiBpB,wDAC5B;KAUNriB,MAR4B,OAAH,uCAVqB;MAC5Ci7B,oBAAoB;SAWjB32B,UAAO;MACVmf,kBAAkB;OAChBpB;;MAEF8Y,UAA6C,UAAnC,KAAgB,UAAhB,KAAA72B,QAAQ62B,kBAAQ,gBAAI72B,QAAQk0B,iBAAO,gBAAI;UAInD36B,KAAKyJ,MAAMA,KAGXzJ,KAAKiZ,UAAUxS,QAAQwS,WAAW,cAClCjZ,KAAKqhE,UAAU,IAAItH,YAAY/5D;KAC/BA,KAAKshE,YAAY,IAAIrG,cAAcj7D,OACnCA,KAAKkmB,OAAO,IAAI22C,SAAS78D,OACzBA,KAAKuhE,WAAW,IAAI3C,aAAa5+D;KACjCA,KAAKwhE,aAAa,IAAIzB,eAAe//D,OACrCA,KAAKyhE,YAAY,IAAInB,cAActgE;AACrC;;GCnEK,MAAM0hE,6BAA6BN;IACxC,0BAAMxjC,CACJ9I,oBACAmC;KAEA,MAAM0qC,sBAAsB,OAAH,WAAQ1qC;KAQjC,OAL+B,uBAA7B0qC,oBAAoBntD,QACS,8BAA7BmtD,oBAAoBntD,SAEpBmtD,oBAAoBntD,OAAO;KAEtBrS,MAAMy7B,qBAAqB9I,oBAAoB6sC;AACxD;;GCIK,MAAe;IA8BpB,YAAsBl4D,KAAaoC;KAEjC7L,KAAKyJ,MAAM2qC,cAAc3qC,MACzBzJ,KAAKg1C,cAAcK,sBAAsB5rC,MACzCzJ,KAAK6L,WAAWA;KAChB7L,KAAK4hE,uBAAuB,IAAIF,qBAAqB1hE,KAAKyJ,KAAKo2C,qBAAqBh0C;KAEpF7L,KAAK6hE,UAAUlqB,O7BoSZ,SAAsBluC;MAC3B;OACE,MAAM4qC,YAAY,IAAI9kC,IAAI9F;OAC1B,OAAO4qC,UAAUjgC,SAAShP,SAAS,OAAOivC,UAAUjgC,SAAStS,MAAM,IAAI,KAAKuyC,UAAUjgC;AACxF,QAAE,OAAOnG;OACP;AACF;AACF,M6B3S0B6zD,CAAa9hE,KAAKyJ,QAAQ,IAAI,UAEpDzJ,KAAK2mB,aAAa+6B,0BAA0B71C;KAGf7L,KAAK4hE,qBACbxkC,0BAAqB95B;AAC5C;;GC7DK,MAAMmhB,gBAAgBZ,oBAAoB;IAC/CG,aAAa;IACbC,gB/BTiC;I+BUjClgB,WAAW;;GCDN,MAAMg+D;IAAb;KAoGS,KAAAhjD,QAAgB,GAKhB,KAAA1X,OAAe,GAKf,KAAA2E,UAAkB,GAKlB,KAAA1H,SAAiB,GAKjB,KAAAiE,UAAkB;KAKlB,KAAAy5D,iBAAyB,GAKzB,KAAAC,OAAe,GAKf,KAAAC,QAAgB,GAKhB,KAAAC,WAAmB,GAKnB,KAAA5E,yBAAiC;KAKjC,KAAA6E,mBAA2B;AA6CpC;IA5LS,YAAOrrD,CAAM0vC;KAClB,MAAM4b,qBAAqB,IAAIN;KAE/B,KAAK,MAAM/4B,QAAQyd,aACjB,QAAQzd;KACN,KAAK;MACHq5B,mBAAmBtjD,QAAO;MAC1B;;KACF,KAAK;MACHsjD,mBAAmBh7D,OAAM;MACzB;;KACF,KAAK;MACHg7D,mBAAmBr2D,UAAS;MAC5B;;KACF,KAAK;MACHq2D,mBAAmB/9D,SAAQ;MAC3B;;KACF,KAAK;MACH+9D,mBAAmB95D,UAAS;MAC5B;;KACF,KAAK;MACH85D,mBAAmBL,iBAAgB;MACnC;;KACF,KAAK;MACHK,mBAAmBJ,OAAM;MACzB;;KACF,KAAK;MACHI,mBAAmBH,QAAO;MAC1B;;KACF,KAAK;MACHG,mBAAmBF,WAAU;MAC7B;;KACF,KAAK;MACHE,mBAAmB9E,yBAAwB;MAC3C;;KACF,KAAK;MACH8E,mBAAmBD,mBAAkB;MACrC;;KACF;MACE,MAAM,IAAIpsB,WAAW,uBAAuBhN;;KAIlD,OAAOq5B;AACT;IAQO,WAAO7vD,CAAK8vD;KACjB,MAAMD,qBAAqB,IAAIN;KAkC/B,OAjCIO,eAAevjD,SACjBsjD,mBAAmBtjD,QAAO,IAExBujD,eAAej7D,QACjBg7D,mBAAmBh7D,OAAM;KAEvBi7D,eAAet2D,WACjBq2D,mBAAmBr2D,UAAS,IAE1Bs2D,eAAeh+D,UACjB+9D,mBAAmB/9D,SAAQ;KAEzBg+D,eAAe/5D,WACjB85D,mBAAmB95D,UAAS,IAE1B+5D,eAAeN,kBACjBK,mBAAmBL,iBAAgB;KAEjCM,eAAeL,QACjBI,mBAAmBJ,OAAM,IAEvBK,eAAeJ,SACjBG,mBAAmBH,QAAO;KAExBI,eAAeH,YACjBE,mBAAmBF,WAAU,IAE3BG,eAAe/E,0BACjB8E,mBAAmB9E,yBAAwB;KAEzC+E,eAAeF,oBACjBC,mBAAmBD,mBAAkB,IAEhCC;AACT;IA+DO,QAAAx5D;KACL,MAAM49C,cAAwB;KAkC9B,OAjCIzmD,KAAK+e,QACP0nC,YAAYvlD,KAAK,MAEflB,KAAKqH,OACPo/C,YAAYvlD,KAAK,MAEflB,KAAKgM,UACPy6C,YAAYvlD,KAAK;KAEflB,KAAKsE,SACPmiD,YAAYvlD,KAAK,MAEflB,KAAKuI,UACPk+C,YAAYvlD,KAAK,MAEflB,KAAKgiE,iBACPvb,YAAYvlD,KAAK;KAEflB,KAAKiiE,OACPxb,YAAYvlD,KAAK,MAEflB,KAAKkiE,QACPzb,YAAYvlD,KAAK,MAEflB,KAAKmiE,WACP1b,YAAYvlD,KAAK;KAEflB,KAAKu9D,yBACP9W,YAAYvlD,KAAK,MAEflB,KAAKoiE,mBACP3b,YAAYvlD,KAAK;KAEZulD,YAAYh/C,KAAK;AAC1B;;GCpMK,MAAM86D;IAAb;KAgHS,KAAAxjD,QAAgB,GAKhB,KAAA1X,OAAe,GAKf,KAAA2E,UAAkB,GAKlB,KAAA1H,SAAiB,GAKjB,KAAAiE,UAAkB;KAKlB,KAAAy5D,iBAAyB,GAKzB,KAAAQ,QAAgB,GAKhB,KAAAP,OAAe,GAKf,KAAAC,QAAgB,GAKhB,KAAAC,WAAmB;KAKnB,KAAA5E,yBAAiC,GAKjC,KAAA6E,mBAA2B,GAK3B,KAAAK,gBAAwB;AAqDjC;IA1NS,YAAO1rD,CAAM0vC;KAClB,MAAMic,0BAA0B,IAAIH;KAEpC,KAAK,MAAMv5B,QAAQyd,aACjB,QAAQzd;KACN,KAAK;MACH05B,wBAAwB3jD,QAAO;MAC/B;;KACF,KAAK;MACH2jD,wBAAwBr7D,OAAM;MAC9B;;KACF,KAAK;MACHq7D,wBAAwB12D,UAAS;MACjC;;KACF,KAAK;MACH02D,wBAAwBp+D,SAAQ;MAChC;;KACF,KAAK;MACHo+D,wBAAwBn6D,UAAS;MACjC;;KACF,KAAK;MACHm6D,wBAAwBF,QAAO;MAC/B;;KACF,KAAK;MACHE,wBAAwBT,OAAM;MAC9B;;KACF,KAAK;MACHS,wBAAwBV,iBAAgB;MACxC;;KACF,KAAK;MACHU,wBAAwBR,QAAO;MAC/B;;KACF,KAAK;MACHQ,wBAAwBP,WAAU;MAClC;;KACF,KAAK;MACHO,wBAAwBnF,yBAAwB;MAChD;;KACF,KAAK;MACHmF,wBAAwBN,mBAAkB;MAC1C;;KACF,KAAK;MACHM,wBAAwBD,gBAAe;MACvC;;KACF;MACE,MAAM,IAAIzsB,WAAW,sBAAsBhN;;KAIjD,OAAO05B;AACT;IAQO,WAAOlwD,CAAK8vD;KACjB,MAAMI,0BAA0B,IAAIH;KAwCpC,OAvCID,eAAevjD,SACjB2jD,wBAAwB3jD,QAAO,IAE7BujD,eAAej7D,QACjBq7D,wBAAwBr7D,OAAM;KAE5Bi7D,eAAet2D,WACjB02D,wBAAwB12D,UAAS,IAE/Bs2D,eAAeh+D,UACjBo+D,wBAAwBp+D,SAAQ;KAE9Bg+D,eAAe/5D,WACjBm6D,wBAAwBn6D,UAAS,IAE/B+5D,eAAeE,SACjBE,wBAAwBF,QAAO;KAE7BF,eAAeN,kBACjBU,wBAAwBV,iBAAgB,IAEtCM,eAAeL,QACjBS,wBAAwBT,OAAM;KAE5BK,eAAeJ,SACjBQ,wBAAwBR,QAAO,IAE7BI,eAAeH,YACjBO,wBAAwBP,WAAU;KAEhCG,eAAe/E,0BACjBmF,wBAAwBnF,yBAAwB;KAE9C+E,eAAeF,oBACjBM,wBAAwBN,mBAAkB;KAExCE,eAAeG,iBACjBC,wBAAwBD,gBAAe,IAElCC;AACT;IA2EO,QAAA75D;KACL,MAAM49C,cAAwB;KAwC9B,OAvCIzmD,KAAK+e,QACP0nC,YAAYvlD,KAAK,MAEflB,KAAKqH,OACPo/C,YAAYvlD,KAAK,MAEflB,KAAKgM,UACPy6C,YAAYvlD,KAAK;KAEflB,KAAKsE,SACPmiD,YAAYvlD,KAAK,MAEflB,KAAKuI,UACPk+C,YAAYvlD,KAAK,MAEflB,KAAKgiE,iBACPvb,YAAYvlD,KAAK;KAEflB,KAAKwiE,QACP/b,YAAYvlD,KAAK,MAEflB,KAAKiiE,OACPxb,YAAYvlD,KAAK,MAEflB,KAAKkiE,QACPzb,YAAYvlD,KAAK;KAEflB,KAAKmiE,WACP1b,YAAYvlD,KAAK,MAEflB,KAAKu9D,yBACP9W,YAAYvlD,KAAK;KAEflB,KAAKoiE,mBACP3b,YAAYvlD,KAAK,MAEflB,KAAKyiE,gBACPhc,YAAYvlD,KAAK;KAEZulD,YAAYh/C,KAAK;AAC1B;;GC9NK,MAAMk7D;IAqBX,WAAApiE,CAAYy0C,aAAqB4tB;KAC/B5iE,KAAKg1C,cAAcA,aACnBh1C,KAAK4iE,oBAAoBA,mBACzB5iE,KAAKmP,MAAMmD,OAAOE,KAAKowD,kBAAkBv6D,OAAO;AAClD;IAOO,iBAAAy1C,CAAkBL;KAGvB,QAAO,oBAAAiB,YAAW,UAAU1+C,KAAKmP,KAAKwvC,OAAOlB,cAAc,QAAQmB,OAAO;AAC5E;;GCtBK,SAASikB,gBAAgBC;IAC9B,OAAOA,QAAQnwD,MAAM,GAAGmwD,QAAQ75B,SAAS65B,QAAQnwD,QAAQmwD,QAAQ75B;AACnE;GCjBA,IAAY85B;IAAZ,SAAYA;IAIV,6BAKA;AACD,IAVD,CAAYA,gBAAAA,cAAW;GA+GhB,MAAMC;IAoJX,WAAWF;KACT,IAAI9iE,KAAKijE,cACP,OAAO;MACLtwD,KAAK3S,KAAKijE,aAAatwD;MACvBs2B,OAAOjpC,KAAKijE,aAAah6B;;AAI/B;IA0DA,WAAA1oC,CACE0Y,SACA4kC,WACAqlB,sBACAC,UACAC,eACAhvD,UACAixC,UACAC,WACAwd,SACAO,YACAC,UACA7b,cACAD,oBACAr0C,iBACAm0C,iBACA3tC,aACAipD,mBACAW,4BACAC,eACA/a;KAEAzoD,KAAKiZ,UAAUA,SACfjZ,KAAK69C,YAAYA,gBAEYv6C,MAAzB4/D,wBAAsE,mBAAzBA,wBAE/CljE,KAAKymD,cAAcyc,qBAAqBzc;KACxCzmD,KAAKmjE,WAAWD,qBAAqBC,UACrCnjE,KAAKojE,gBAAgBF,qBAAqBE;KAC1CpjE,KAAKoU,WAAW8uD,qBAAqB9uD,UACrCpU,KAAKqlD,WAAW6d,qBAAqB7d;KACrCrlD,KAAKslD,YAAY4d,qBAAqB5d,WACtCtlD,KAAKijE,eAAeC,qBAAqBJ;KACzC9iE,KAAKqjE,aAAaH,qBAAqBG,YACvCrjE,KAAKyoD,kBAAkBya,qBAAqBza;KAC5CzoD,KAAKsjE,WAAWJ,qBAAqBI,UACrCtjE,KAAKynD,eAAeyb,qBAAqBzb;KACzCznD,KAAKwnD,qBAAqB0b,qBAAqB1b,oBAC/CxnD,KAAKmT,kBAAkB+vD,qBAAqB/vD;KAC5CnT,KAAKsnD,kBAAkB4b,qBAAqB5b,iBAC5CtnD,KAAK2Z,cAAcupD,qBAAqBvpD;KAEpCupD,qBAAqBN,sBACvB5iE,KAAKyjE,YAAYP,qBAAqBN,kBAAkBpd;KACxDxlD,KAAKylD,iBAAiByd,qBAAqBN,kBAAkBnd,gBAC7DzlD,KAAK0lD,iBAAiBwd,qBAAqBN,kBAAkBld;KAC7D1lD,KAAK2lD,kBAAkBud,qBAAqBN,kBAAkBjd,iBAC9D3lD,KAAK4lD,gBAAgBsd,qBAAqBN,kBAAkBhd;KAC5D5lD,KAAK6lD,gBAAgBqd,qBAAqBN,kBAAkB/c,eAE5D7lD,KAAKujE,6BAA6BL,qBAAqBK;KACvDvjE,KAAKwjE,gBAAgBN,qBAAqBM,mBAG5CxjE,KAAKmjE,WAAWA;KAChBnjE,KAAKojE,gBAAgBA,eACrBpjE,KAAKslD,YAAYA,WACjBtlD,KAAKymD,cAAcyc;KACnBljE,KAAKoU,WAAWA,UAChBpU,KAAKqlD,WAAWA,UAChBrlD,KAAKijE,eAAeH;KACpB9iE,KAAKyoD,kBAAkBA,iBACvBzoD,KAAKqjE,aAAaA,YAClBrjE,KAAKsjE,WAAWA;KAChBtjE,KAAKynD,eAAeA,cACpBznD,KAAKwnD,qBAAqBA;KAC1BxnD,KAAKmT,kBAAkBA,iBACvBnT,KAAKsnD,kBAAkBA;KACvBtnD,KAAK2Z,cAAcA,aAEfipD,sBACF5iE,KAAKyjE,YAAYb,kBAAkBpd;KACnCxlD,KAAKylD,iBAAiBmd,kBAAkBnd,gBACxCzlD,KAAK0lD,iBAAiBkd,kBAAkBld;KACxC1lD,KAAK2lD,kBAAkBid,kBAAkBjd,iBACzC3lD,KAAK4lD,gBAAgBgd,kBAAkBhd;KACvC5lD,KAAK6lD,gBAAgB+c,kBAAkB/c,eAEvC7lD,KAAKujE,6BAA6BA;KAClCvjE,KAAKwjE,gBAAgBA;AAG3B;IAMO,QAAA36D;KACL,MAAM+gB,SAAmB,EACvB,MACA,MACA,OACA,OACA,MACA,MACA,OACA,MACA,OACA,SACA,SACA,OACA,OACA,OACA,OACA,MACA,MACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,UAEIysB,UAAoB;KAE1B,KAAK,MAAMqtB,SAAS95C,QAClB,QAAQ85C;KACN,KAAK;MACH1jE,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKiZ;MAClD;;KACF,KAAK;MACHjZ,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKmjE;MAClD;;KACF,KAAK;MACHnjE,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKojE;MAClD;;KACF,KAAK;MACHpjE,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKoU;MAClD;;KACF,KAAK;MACHpU,KAAK2jE,wBACHttB,SACAqtB,OACA1jE,KAAKqlD,WAAW1O,qBAAqB32C,KAAKqlD,WAAU,UAAS/hD;MAE/D;;KACF,KAAK;MACHtD,KAAK2jE,wBACHttB,SACAqtB,OACA1jE,KAAKslD,YAAY3O,qBAAqB32C,KAAKslD,YAAW,UAAShiD;MAEjE;;KACF,KAAK;MACHtD,KAAK2jE,wBACHttB,SACAqtB,OACA1jE,KAAK8iE,UAAUD,gBAAgB7iE,KAAK8iE,gBAAWx/D;MAEjD;;KACF,KAAK;MACHtD,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKqjE;MAClD;;KACF,KAAK;MACHrjE,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKyoD;MAClD;;KACF,KAAK;MACHzoD,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKyjE;MAClD;;KACF,KAAK;MACHzjE,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKylD;MAClD;;KACF,KAAK;MACHzlD,KAAK2jE,wBACHttB,SACAqtB,OACA1jE,KAAK0lD,iBAAiB/O,qBAAqB32C,KAAK0lD,iBAAgB,UAASpiD;MAE3E;;KACF,KAAK;MACHtD,KAAK2jE,wBACHttB,SACAqtB,OACA1jE,KAAK2lD,kBAAkBhP,qBAAqB32C,KAAK2lD,kBAAiB,UAASriD;MAE7E;;KACF,KAAK;MACHtD,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAK4lD;MAClD;;KACF,KAAK;MACH5lD,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAK6lD;MAClD;;KACF,KAAK;MACH7lD,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKsjE;MAClD;;KACF,KAAK;MACHtjE,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKymD;MAClD;;KACF,KAAK;MACHzmD,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAK69C;MAClD;;KACF,KAAK;MACH79C,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKynD;MAClD;;KACF,KAAK;MACHznD,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKwnD;MAClD;;KACF,KAAK;MACHxnD,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKmT;MAClD;;KACF,KAAK;MACHnT,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKsnD;MAClD;;KACF,KAAK;MACHtnD,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAK2Z;MAClD;;KACF,KAAK;MACH3Z,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKujE;MAClD;;KACF,KAAK;MACHvjE,KAAK2jE,wBAAwBttB,SAASqtB,OAAO1jE,KAAKwjE;;KAIxD,OAAOntB,QAAQ5uC,KAAK;AACtB;IASQ,uBAAAk8D,CAAwBttB,SAAmBlnC,KAAa9G;KACzDA,UAIL8G,MAAM+rB,mBAAmB/rB,MACzB9G,QAAQ6yB,mBAAmB7yB,QACvB8G,IAAI1J,SAAS,KAAK4C,MAAM5C,SAAS,KACnC4wC,QAAQn1C,KAAK,GAAGiO,OAAO9G;AAE3B;;GCtUK,SAASu7D,+BACdC,wBACAC,wCACA9uB;IAEA,OAAO+uB,uCACLF,wBACAC,wCACA9uB,aACAgvB;AACJ;GAEO,SAASD,uCACdF,wBACAC,wCACA9uB;IAEA,MAAM/7B,UAAU4qD,uBAAuB5qD,UAAU4qD,uBAAuB5qD,UAAUw6B,iBAE5EwwB,sBACJH,kDAAkDrlB,6BAC9CqlB,8CACAxgE;IACN,IAAI4gE;IASJ,SAP4B5gE,MAAxB2gE,4BAAqD3gE,MAAhB0xC,gBACvCkvB,8BAA8B,IAAIvB,4BAChC3tB,aACA8uB;SAIwBxgE,MAAxB2gE,4BAAqE3gE,MAAhC4gE,6BACvC,MAAMtjE,UAAU;IAIlB,IAAIqY,WAAW,cACb,YAA4B3V,MAAxB2gE,sBA8QR,SACEJ,wBACAI;KAIA,IAFAJ,yBAAyBM,yCAAyCN;OAG/DA,uBAAuBR,cACtBQ,uBAAuBpd,eAAeod,uBAAuBve,YAE/D,MAAM,IAAItP,WACR;KAIJ,IAaIouB,qBAbAd,WAAmB,KACnBe,YAAYR,uBAAuBS;KACnCT,uBAAuB1oB,aACzBmoB,WAAW,KACPO,uBAAuBS,eACzBhB,WAAW,OACFO,uBAAuB/c,cAChCwc,WAAW;KACXe,YAAYR,uBAAuB/c;KAMnC+c,uBAAuBpd,gBAEvB2d,sBADEP,uBAAuB1oB,WACH4mB,mBAAmBhrD,MACvC8sD,uBAAuBpd,YAAY59C,YACnCA,aAEoB05D,wBAAwBxrD,MAC5C8sD,uBAAuBpd,YAAY59C,YACnCA;KAKN,MAAM40C,eAAe,EACnB2mB,uBAA4C,IAC5CP,uBAAuBxe,WACnB1O,qBAAqBktB,uBAAuBxe,WAAU,KACtD,IACJwe,uBAAuBve,YACnB3O,qBAAqBktB,uBAAuBve,YAAW,KACvD,IACJif,iBACEN,oBAAoBjvB,aACpB6uB,uBAAuB3d,eACvB2d,uBAAuB1oB,WAEzB0oB,uBAAuBR,YACvBQ,uBAAuBf,UAAUD,gBAAgBgB,uBAAuBf,WAAW,IACnFe,uBAAuBzvD,WAAWyvD,uBAAuBzvD,WAAW,IACpEyvD,uBAAuB5qD,SACvBqqD,UACAe,WACAR,uBAAuBpb,iBACvBob,uBAAuBpc,eAAeoc,uBAAuBpc,eAAe,IAC5Eoc,uBAAuBrc,qBAAqBqc,uBAAuBrc,qBAAqB,IACxFqc,uBAAuB1wD,kBAAkB0wD,uBAAuB1wD,kBAAkB,IAClF0wD,uBAAuBvc,kBAAkBuc,uBAAuBvc,kBAAkB,IAClFuc,uBAAuBlqD,cAAckqD,uBAAuBlqD,cAAc,KAC1ElS,KAAK,OAEDo2C,YAAYomB,oBAAoBnmB,kBAAkBL;KAExD,OAAO;MACLumB,oBAAoB,IAAIhB,mBACtBa,uBAAuB5qD,SACvB4kC,WACAumB,0BACA9gE,QACAA,GACAugE,uBAAuBzvD,UACvByvD,uBAAuBxe,UACvBwe,uBAAuBve,WACvBue,uBAAuBf,SACvBe,uBAAuBR,YACvBC,UACAO,uBAAuBpc,cACvBoc,uBAAuBrc,oBACvBqc,uBAAuB1wD,iBACvB0wD,uBAAuBvc,iBACvBuc,uBAAuBlqD,kBACvBrW,QACAA,QACAA,GACAugE,uBAAuBpb;MAEzBhL;;AAEJ,KA7Wa+mB,CAAuCX,wBAAwBI,uBAsmB5E,SACEJ,wBACAK;KAKA,IAHAL,yBAAyBM,yCAAyCN;MAG7DA,uBAAuBpd,gBAAgBod,uBAAuBve,WACjE,MAAM,IAAItP,WACR;KAIJ,IAaIouB,qBAbAd,WAAmB,KACnBe,YAAYR,uBAAuBS;KACnCT,uBAAuB1oB,aACzBmoB,WAAW,KACPO,uBAAuBS,eACzBhB,WAAW,OACFO,uBAAuB/c,cAChCwc,WAAW;KACXe,YAAYR,uBAAuB/c;KAMnC+c,uBAAuBpd,gBAEvB2d,sBADEP,uBAAuB1oB,WACH4mB,mBAAmBhrD,MACvC8sD,uBAAuBpd,YAAY59C,YACnCA,aAEoB05D,wBAAwBxrD,MAC5C8sD,uBAAuBpd,YAAY59C,YACnCA;KAKN,MAAM40C,eAAe,EACnB2mB,uBAA4C,IAC5CP,uBAAuBxe,WACnB1O,qBAAqBktB,uBAAuBxe,WAAU,KACtD,IACJwe,uBAAuBve,YACnB3O,qBAAqBktB,uBAAuBve,YAAW,KACvD,IACJif,iBACEL,4BAA4BlvB,aAC5B6uB,uBAAuB3d,eACvB2d,uBAAuB1oB,WAEzB+oB,4BAA4BtB,kBAAkBpd,gBAC9C0e,4BAA4BtB,kBAAkBnd,gBAC9Cye,4BAA4BtB,kBAAkBld,iBAC1C/O,qBAAqButB,4BAA4BtB,kBAAkBld,iBAAgB,KACnF,IACJwe,4BAA4BtB,kBAAkBjd,kBAC1ChP,qBAAqButB,4BAA4BtB,kBAAkBjd,kBAAiB,KACpF,IACJue,4BAA4BtB,kBAAkBhd,eAC9Cse,4BAA4BtB,kBAAkB/c,eAC9Cge,uBAAuBN,iCACvBjgE,GACAugE,uBAAuBL,eACvBK,uBAAuBf,UAAUD,gBAAgBgB,uBAAuBf,WAAW,IACnFe,uBAAuBzvD,WAAWyvD,uBAAuBzvD,WAAW,IACpEyvD,uBAAuB5qD,SACvBqqD,UACAe,WACAR,uBAAuBpb,iBACvBob,uBAAuBpc,cACvBoc,uBAAuBrc,oBACvBqc,uBAAuB1wD,iBACvB0wD,uBAAuBvc,iBACvBuc,uBAAuBlqD,cACvBlS,KAAK,OAEDo2C,YAAYqmB,4BAA4BpmB,kBAAkBL;KAChE,OAAO;MACLumB,oBAAoB,IAAIhB,mBACtBa,uBAAuB5qD,SACvB4kC,WACAumB,0BACA9gE,QACAA,GACAugE,uBAAuBzvD,UACvByvD,uBAAuBxe,UACvBwe,uBAAuBve,WACvBue,uBAAuBf,SACvBe,uBAAuBR,YACvBC,UACAO,uBAAuBpc,cACvBoc,uBAAuBrc,oBACvBqc,uBAAuB1wD,iBACvB0wD,uBAAuBvc,iBACvBuc,uBAAuBlqD,aACvBuqD,4BAA4BtB,mBAC5BiB,uBAAuBN,4BACvBM,uBAAuBL,eACvBK,uBAAuBpb;MAEzBhL;;AAEJ,KA7sBagnB,CACLZ,wBACAK;IAQN,IAAIjrD,WAAW,cACb,YAA4B3V,MAAxB2gE,sBAmJR,SACEJ,wBACAI;KAIA,IAFAJ,yBAAyBM,yCAAyCN;OAG/DA,uBAAuBR,cACtBQ,uBAAuBpd,eAAeod,uBAAuBve,YAE/D,MAAM,IAAItP,WACR;KAIJ,IAaIouB,qBAbAd,WAAmB,KACnBe,YAAYR,uBAAuBS;KACnCT,uBAAuB1oB,aACzBmoB,WAAW,KACPO,uBAAuBS,eACzBhB,WAAW,OACFO,uBAAuB/c,cAChCwc,WAAW;KACXe,YAAYR,uBAAuB/c;KAMnC+c,uBAAuBpd,gBAEvB2d,sBADEP,uBAAuB1oB,WACH4mB,mBAAmBhrD,MACvC8sD,uBAAuBpd,YAAY59C,YACnCA,aAEoB05D,wBAAwBxrD,MAC5C8sD,uBAAuBpd,YAAY59C,YACnCA;KAKN,MAAM40C,eAAe,EACnB2mB,uBAA4C,IAC5CP,uBAAuBxe,WACnB1O,qBAAqBktB,uBAAuBxe,WAAU,KACtD,IACJwe,uBAAuBve,YACnB3O,qBAAqBktB,uBAAuBve,YAAW,KACvD,IACJif,iBACEN,oBAAoBjvB,aACpB6uB,uBAAuB3d,eACvB2d,uBAAuB1oB,WAEzB0oB,uBAAuBR,YACvBQ,uBAAuBf,UAAUD,gBAAgBgB,uBAAuBf,WAAW,IACnFe,uBAAuBzvD,WAAWyvD,uBAAuBzvD,WAAW,IACpEyvD,uBAAuB5qD,SACvBqqD,UACAe,WACAR,uBAAuBpc,eAAeoc,uBAAuBpc,eAAe,IAC5Eoc,uBAAuBrc,qBAAqBqc,uBAAuBrc,qBAAqB,IACxFqc,uBAAuB1wD,kBAAkB0wD,uBAAuB1wD,kBAAkB,IAClF0wD,uBAAuBvc,kBAAkBuc,uBAAuBvc,kBAAkB,IAClFuc,uBAAuBlqD,cAAckqD,uBAAuBlqD,cAAc,KAC1ElS,KAAK,OAEDo2C,YAAYomB,oBAAoBnmB,kBAAkBL;KAExD,OAAO;MACLumB,oBAAoB,IAAIhB,mBACtBa,uBAAuB5qD,SACvB4kC,WACAumB,0BACA9gE,QACAA,GACAugE,uBAAuBzvD,UACvByvD,uBAAuBxe,UACvBwe,uBAAuBve,WACvBue,uBAAuBf,SACvBe,uBAAuBR,YACvBC,UACAO,uBAAuBpc,cACvBoc,uBAAuBrc,oBACvBqc,uBAAuB1wD,iBACvB0wD,uBAAuBvc,iBACvBuc,uBAAuBlqD;MAEzB8jC;;AAEJ,KA7OainB,CAAuCb,wBAAwBI,uBAGlEhrD,WAAW,eA8drB,SACE4qD,wBACAK;KAKA,IAHAL,yBAAyBM,yCAAyCN;MAG7DA,uBAAuBpd,gBAAgBod,uBAAuBve,WACjE,MAAM,IAAItP,WACR;KAIJ,IAaIouB,qBAbAd,WAAmB,KACnBe,YAAYR,uBAAuBS;KACnCT,uBAAuB1oB,aACzBmoB,WAAW,KACPO,uBAAuBS,eACzBhB,WAAW,OACFO,uBAAuB/c,cAChCwc,WAAW;KACXe,YAAYR,uBAAuB/c;KAMnC+c,uBAAuBpd,gBAEvB2d,sBADEP,uBAAuB1oB,WACH4mB,mBAAmBhrD,MACvC8sD,uBAAuBpd,YAAY59C,YACnCA,aAEoB05D,wBAAwBxrD,MAC5C8sD,uBAAuBpd,YAAY59C,YACnCA;KAKN,MAAM40C,eAAe,EACnB2mB,uBAA4C,IAC5CP,uBAAuBxe,WACnB1O,qBAAqBktB,uBAAuBxe,WAAU,KACtD,IACJwe,uBAAuBve,YACnB3O,qBAAqBktB,uBAAuBve,YAAW,KACvD,IACJif,iBACEL,4BAA4BlvB,aAC5B6uB,uBAAuB3d,eACvB2d,uBAAuB1oB,WAEzB+oB,4BAA4BtB,kBAAkBpd,gBAC9C0e,4BAA4BtB,kBAAkBnd,gBAC9Cye,4BAA4BtB,kBAAkBld,iBAC1C/O,qBAAqButB,4BAA4BtB,kBAAkBld,iBAAgB,KACnF,IACJwe,4BAA4BtB,kBAAkBjd,kBAC1ChP,qBAAqButB,4BAA4BtB,kBAAkBjd,kBAAiB,KACpF,IACJue,4BAA4BtB,kBAAkBhd,eAC9Cse,4BAA4BtB,kBAAkB/c,eAC9Cge,uBAAuBN,iCACvBjgE,GACAugE,uBAAuBL,eACvBK,uBAAuBf,UAAUD,gBAAgBgB,uBAAuBf,WAAW,IACnFe,uBAAuBzvD,WAAWyvD,uBAAuBzvD,WAAW,IACpEyvD,uBAAuB5qD,SACvBqqD,UACAe,WACAR,uBAAuBpc,cACvBoc,uBAAuBrc,oBACvBqc,uBAAuB1wD,iBACvB0wD,uBAAuBvc,iBACvBuc,uBAAuBlqD,cACvBlS,KAAK,OAEDo2C,YAAYqmB,4BAA4BpmB,kBAAkBL;KAChE,OAAO;MACLumB,oBAAoB,IAAIhB,mBACtBa,uBAAuB5qD,SACvB4kC,WACAumB,0BACA9gE,QACAA,GACAugE,uBAAuBzvD,UACvByvD,uBAAuBxe,UACvBwe,uBAAuBve,WACvBue,uBAAuBf,SACvBe,uBAAuBR,YACvBC,UACAO,uBAAuBpc,cACvBoc,uBAAuBrc,oBACvBqc,uBAAuB1wD,iBACvB0wD,uBAAuBvc,iBACvBuc,uBAAuBlqD,aACvBuqD,4BAA4BtB,mBAC5BiB,uBAAuBN,4BACvBM,uBAAuBL;MAEzB/lB;;AAEJ,KApkBeknB,CACLd,wBACAK,+BAyWV,SACEL,wBACAK;KAKA,IAHAL,yBAAyBM,yCAAyCN;MAG7DA,uBAAuBpd,gBAAgBod,uBAAuBve,WACjE,MAAM,IAAItP,WACR;KAIJ,IAaIouB,qBAbAd,WAAmB,KACnBe,YAAYR,uBAAuBS;KACnCT,uBAAuB1oB,aACzBmoB,WAAW,KACPO,uBAAuBS,eACzBhB,WAAW,OACFO,uBAAuB/c,cAChCwc,WAAW;KACXe,YAAYR,uBAAuB/c;KAMnC+c,uBAAuBpd,gBAEvB2d,sBADEP,uBAAuB1oB,WACH4mB,mBAAmBhrD,MACvC8sD,uBAAuBpd,YAAY59C,YACnCA,aAEoB05D,wBAAwBxrD,MAC5C8sD,uBAAuBpd,YAAY59C,YACnCA;KAKN,MAAM40C,eAAe,EACnB2mB,uBAA4C,IAC5CP,uBAAuBxe,WACnB1O,qBAAqBktB,uBAAuBxe,WAAU,KACtD,IACJwe,uBAAuBve,YACnB3O,qBAAqBktB,uBAAuBve,YAAW,KACvD,IACJif,iBACEL,4BAA4BlvB,aAC5B6uB,uBAAuB3d,eACvB2d,uBAAuB1oB,WAEzB+oB,4BAA4BtB,kBAAkBpd,gBAC9C0e,4BAA4BtB,kBAAkBnd,gBAC9Cye,4BAA4BtB,kBAAkBld,iBAC1C/O,qBAAqButB,4BAA4BtB,kBAAkBld,iBAAgB,KACnF,IACJwe,4BAA4BtB,kBAAkBjd,kBAC1ChP,qBAAqButB,4BAA4BtB,kBAAkBjd,kBAAiB,KACpF,IACJue,4BAA4BtB,kBAAkBhd,eAC9Cse,4BAA4BtB,kBAAkB/c,eAC9Cge,uBAAuBf,UAAUD,gBAAgBgB,uBAAuBf,WAAW,IACnFe,uBAAuBzvD,WAAWyvD,uBAAuBzvD,WAAW,IACpEyvD,uBAAuB5qD,SACvBqqD,UACAe,WACAR,uBAAuBpc,cACvBoc,uBAAuBrc,oBACvBqc,uBAAuB1wD,iBACvB0wD,uBAAuBvc,iBACvBuc,uBAAuBlqD,cACvBlS,KAAK,OAEDo2C,YAAYqmB,4BAA4BpmB,kBAAkBL;KAChE,OAAO;MACLumB,oBAAoB,IAAIhB,mBACtBa,uBAAuB5qD,SACvB4kC,WACAumB,0BACA9gE,QACAA,GACAugE,uBAAuBzvD,UACvByvD,uBAAuBxe,UACvBwe,uBAAuBve,WACvBue,uBAAuBf,SACvBe,uBAAuBR,YACvBC,UACAO,uBAAuBpc,cACvBoc,uBAAuBrc,oBACvBqc,uBAAuB1wD,iBACvB0wD,uBAAuBvc,iBACvBuc,uBAAuBlqD,aACvBuqD,4BAA4BtB;MAE9BnlB;;AAEJ,KAxcemnB,CACLf,wBACAK;IAMR,IAAIjrD,WAAW,cAAc;KAC3B,SAA4B3V,MAAxB2gE,qBACF,OA2BN,SACEJ,wBACAI;MAIA,IAFAJ,yBAAyBM,yCAAyCN;QAG/DA,uBAAuBR,cACtBQ,uBAAuBpd,eAAeod,uBAAuBve,YAE/D,MAAM,IAAItP,WACR;MAIJ,IAMIouB,qBANAd,WAAmB;MACnBO,uBAAuB1oB,aACzBmoB,WAAW;MAKTO,uBAAuBpd,gBAEvB2d,sBADEP,uBAAuB1oB,WACH4mB,mBAAmBhrD,MACvC8sD,uBAAuBpd,YAAY59C,YACnCA,aAEoB05D,wBAAwBxrD,MAC5C8sD,uBAAuBpd,YAAY59C,YACnCA;MAKN,MAAM40C,eAAe,EACnB2mB,uBAA4C,IAC5CP,uBAAuBxe,WACnB1O,qBAAqBktB,uBAAuBxe,WAAU,KACtD,IACJwe,uBAAuBve,YACnB3O,qBAAqBktB,uBAAuBve,YAAW,KACvD,IACJif,iBACEN,oBAAoBjvB,aACpB6uB,uBAAuB3d,eACvB2d,uBAAuB1oB,WAEzB0oB,uBAAuBR,YACvBQ,uBAAuBf,UAAUD,gBAAgBgB,uBAAuBf,WAAW,IACnFe,uBAAuBzvD,WAAWyvD,uBAAuBzvD,WAAW,IACpEyvD,uBAAuB5qD,SACvB4qD,uBAAuBpc,eAAeoc,uBAAuBpc,eAAe,IAC5Eoc,uBAAuBrc,qBAAqBqc,uBAAuBrc,qBAAqB,IACxFqc,uBAAuB1wD,kBAAkB0wD,uBAAuB1wD,kBAAkB,IAClF0wD,uBAAuBvc,kBAAkBuc,uBAAuBvc,kBAAkB,IAClFuc,uBAAuBlqD,cAAckqD,uBAAuBlqD,cAAc,KAC1ElS,KAAK,OAEDo2C,YAAYomB,oBAAoBnmB,kBAAkBL;MAExD,OAAO;OACLumB,oBAAoB,IAAIhB,mBACtBa,uBAAuB5qD,SACvB4kC,WACAumB,0BACA9gE,QACAA,GACAugE,uBAAuBzvD,UACvByvD,uBAAuBxe,UACvBwe,uBAAuBve,WACvBue,uBAAuBf,SACvBe,uBAAuBR,YACvBC,UACAO,uBAAuBpc,cACvBoc,uBAAuBrc,oBACvBqc,uBAAuB1wD,iBACvB0wD,uBAAuBvc,iBACvBuc,uBAAuBlqD;OAEzB8jC;;AAEJ,MA7GaonB,CAAuChB,wBAAwBI;KAEtE,MAAM,IAAIjuB,WACR;AAGN;IAEA,MAAM,IAAIA,WAAW;AACvB;GAuqBA,SAASuuB,iBAAiBvvB,aAAqBkR,eAAuB/K;IAGpE,MAAM1G,WAAqB,EAAC,SAASO,eAAekR;IAIpD,OAHI/K,YACF1G,SAASvzC,KAAK,IAAIi6C,aAEb1G,SAAShtC,KAAK;AACvB;GAEA,SAAS08D,yCACPN;IAEA,MAAM5qD,UAAU4qD,uBAAuB5qD,UAAU4qD,uBAAuB5qD,UAAUw6B;IAClF,IAAIowB,uBAAuBS,gBAAgBrrD,UAAU,cACnD,MAAM+8B,WAAW;IAEnB,SAAwC1yC,MAApCugE,uBAAuB1oB,YAA0B0oB,uBAAuBS,cAC1E,MAAMtuB,WAAW;IAGnB,IAAI6tB,uBAAuB/c,aAAa7tC,UAAU,cAChD,MAAM+8B,WAAW;IAEnB,SAAwC1yC,MAApCugE,uBAAuB1oB,YAA0B0oB,uBAAuB/c,WAC1E,MAAM9Q,WAAW;IAGnB,IACE6tB,uBAAuBpd,eACvBod,uBAAuBpd,YAAY8W,yBACnCtkD,UAAU,cAEV,MAAM+8B,WAAW;IAGnB,IACE6tB,uBAAuBpd,eACvBod,uBAAuBpd,YAAYub,iBACnC/oD,UAAU,cAEV,MAAM+8B,WAAW;IAGnB,IACE6tB,uBAAuBpd,eACvBod,uBAAuBpd,YAAY2b,mBACnCnpD,UAAU,cAEV,MAAM+8B,WAAW;IAGnB,IACE6tB,uBAAuBpd,eACvBod,uBAAuBpd,YAAYwb,OACnChpD,UAAU,cAEV,MAAM+8B,WAAW;IAGnB,IACE/8B,UAAU,gBACV4qD,uBAAuBpd,gBACtBod,uBAAuBpd,YAAYyb,QAAQ2B,uBAAuBpd,YAAY0b,UAE/E,MAAMnsB,WAAW;IAGnB,IACE/8B,UAAU,gBACV4qD,uBAAuBpd,eACtBod,uBAAuBpd,YAAwCgc,cAEhE,MAAMzsB,WAAW;IAGnB,IACE/8B,UAAU,iBACT4qD,uBAAuBN,8BAA8BM,uBAAuBL,gBAE7E,MAAMxtB,WACJ;IAIJ,IAAI6tB,uBAAuBpb,mBAAmBxvC,UAAU,cACtD,MAAM+8B,WAAW;IAInB,OADA6tB,uBAAuB5qD,UAAUA,SAC1B4qD;AACT;GC5+BO,MAAMiB;IAWX,WAAWpX;KACT,OAAO1tD,KAAK+kE;AACd;IAOA,OAAWt7D;KACT,OAAOzJ,KAAKglE;AACd;IAOA,WAAAzkE,CAAY+lB,QAAsConC;KAChD,MAAMuX,gBAAiB3+C,OAAes7C;KACtC5hE,KAAKglE,OAAO1+C,OAAO7c,UAEiBnG,MAA/BgjB,OAAsBlkB,QACzBpC,KAAKklE,gBAAe,GACpBllE,KAAKmlE,4BAA4BF,cAAc3D,cAE/CthE,KAAKklE,gBAAe;KACpBllE,KAAKmlE,4BAA4BF,cAAc/+C,OAG5CwnC,YACHA,UAAU;KAEZ1tD,KAAK+kE,WAAWrX;AAClB;IAcO,kBAAMqO,CACXzF,UACA7vD,UAAiC,CAAC;;KAElC,IACEzG,KAAKklE,kBACe,UAAlB,KAAAz+D,QAAQ2+D,oBAAU,uBAAEjO,YtChGJ,QsCgGiC,UAAlB,KAAA1wD,QAAQ2+D,oBAAU,uBAAEjO,aAChC,UAAlB,KAAA1wD,QAAQ2+D,oBAAU,uBAAEhO,gBtCjGL,QsCiGsC,UAAlB,KAAA3wD,QAAQ2+D,oBAAU,uBAAEhO,iBACtC,UAAlB,KAAA3wD,QAAQ2+D,oBAAU,uBAAEC,iBAEtB,MAAM,IAAIrvB,WACR;KAGJ,OAAOvxB,cAAcL,SACnB,gCACA3d,UACAwT,MAAOkK;;MACL,OAAOi3B,qBACCp7C,KAAKmlE,0BAA0BpJ,aAAa;OAChDp6D,aAAa8E,QAAQ9E;OACrB20D;OACAgP,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9B9O,iBAAiBv2D,KAAK+kE;OACtB7gD,gBAAgBC,eAAeD;;AAElC;AAGP;IAYO,iBAAMq4C,CACXhG,iBACA9vD,UAAiC,CAAC;;KAElC,IACEzG,KAAKklE,kBACe,UAAlB,KAAAz+D,QAAQ2+D,oBAAU,uBAAEjO,YtC5IJ,QsC4IiC,UAAlB,KAAA1wD,QAAQ2+D,oBAAU,uBAAEjO,aAChC,UAAlB,KAAA1wD,QAAQ2+D,oBAAU,uBAAEhO,gBtC7IL,QsC6IsC,UAAlB,KAAA3wD,QAAQ2+D,oBAAU,uBAAEhO,iBACtC,UAAlB,KAAA3wD,QAAQ2+D,oBAAU,uBAAEC,iBAEtB,MAAM,IAAIrvB,WACR;KAIJ,OAAOvxB,cAAcL,SACnB,+BACA3d,UACAwT,MAAOkK;;MACL,MAAMlU,WAAWmrC,qBACTp7C,KAAKmlE,0BAA0B5I,YAAYv8D,KAAK+kE,UAAUxO,iBAAiB;OAC/E50D,aAAa8E,QAAQ9E;OACrB2jE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BnhD,gBAAgBC,eAAeD;;MAInC,OADAlkB,KAAK+kE,WAAWxO,iBACTtmD;AAAQ;AAGrB;IAYO,kBAAMgsD,CAAax1D,UAAiC,CAAC;;KAC1D,IACEzG,KAAKklE,kBACe,UAAlB,KAAAz+D,QAAQ2+D,oBAAU,uBAAEjO,YtCtLJ,QsCsLiC,UAAlB,KAAA1wD,QAAQ2+D,oBAAU,uBAAEjO,aAChC,UAAlB,KAAA1wD,QAAQ2+D,oBAAU,uBAAEhO,gBtCvLL,QsCuLsC,UAAlB,KAAA3wD,QAAQ2+D,oBAAU,uBAAEhO,iBACtC,UAAlB,KAAA3wD,QAAQ2+D,oBAAU,uBAAEC,iBAEtB,MAAM,IAAIrvB,WACR;KAGJ,OAAOvxB,cAAcL,SACnB,gCACA3d,UACAwT,MAAOkK;;MACL,OAAOi3B,qBACCp7C,KAAKmlE,0BAA0BlJ,aAAaj8D,KAAK+kE,UAAU;OAC/DpjE,aAAa8E,QAAQ9E;OACrB2jE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BnhD,gBAAgBC,eAAeD;;AAElC;AAGP;IAWO,gBAAMi4C,CAAW11D,UAAiC,CAAC;;KACxD,IACEzG,KAAKklE,kBACe,UAAlB,KAAAz+D,QAAQ2+D,oBAAU,uBAAEjO,YtC5NJ,QsC4NiC,UAAlB,KAAA1wD,QAAQ2+D,oBAAU,uBAAEjO,aAChC,UAAlB,KAAA1wD,QAAQ2+D,oBAAU,uBAAEhO,gBtC7NL,QsC6NsC,UAAlB,KAAA3wD,QAAQ2+D,oBAAU,uBAAEhO,iBACtC,UAAlB,KAAA3wD,QAAQ2+D,oBAAU,uBAAEC,iBAEtB,MAAM,IAAIrvB,WACR;KAGJ,OAAOvxB,cAAcL,SAAS,8BAA8B3d,UAASwT,MAAOkK;;MAC1E,OAAOnkB,KAAKmlE,0BAA0BhJ,WAAWn8D,KAAK+kE,UAAU;OAC9DpjE,aAAa8E,QAAQ9E;OACrB2jE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BnhD,gBAAgBC,eAAeD;;AAC/B;AAEN;IAaO,gBAAMm4C,CACXzF,aACAnwD,UAAiC,CAAC;;KAElC,IACEzG,KAAKklE,kBACe,UAAlB,KAAAz+D,QAAQ2+D,oBAAU,uBAAEjO,YtCjQJ,QsCiQiC,UAAlB,KAAA1wD,QAAQ2+D,oBAAU,uBAAEjO,aAChC,UAAlB,KAAA1wD,QAAQ2+D,oBAAU,uBAAEhO,gBtClQL,QsCkQsC,UAAlB,KAAA3wD,QAAQ2+D,oBAAU,uBAAEhO,iBACtC,UAAlB,KAAA3wD,QAAQ2+D,oBAAU,uBAAEC,iBAEtB,MAAM,IAAIrvB,WACR;KAIJ,OAAOvxB,cAAcL,SAAS,8BAA8B3d,UAASwT,MAAOkK;;MAC1E,MAAML,mBAAsD;OAC1DniB,aAAa8E,QAAQ9E;OACrBi1D;OACA0O,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BnhD,gBAAgBC,eAAeD;;MAEjC,OAAOk3B,qBACCp7C,KAAKmlE,0BAA0B9I,WAAWv4C;AACjD;AAEL;;GC9SK,MAAMyhD,gCAAgC,iBAAAnmD;IAqB3C,YACEG,QACAimD,QACAC,QACA57B,OACApjC,UAA0C,CAAC;KAE3CtE,MAAM;MAAEujE,eAAej/D,QAAQi/D;SAtBzB,KAAAC,UAAkB,GAuDlB,KAAAC,oBAAqBv5B;MAC3B,IAAIrsC,KAAKyG,QAAQo/D,mBAKf,OAJA7lE,KAAKyG,QAAQo/D,yBAAoBviE;MACjCtD,KAAKuf,OAAOumD,SACZ9lE,KAAK+lE,gCACJ/lE,KAAKuf,OAAoB7Z;MAO5B1F,KAAKylE,UAAUp5B,KAAK5mC,QAChBzF,KAAKgmE,cACPhmE,KAAKgmE,WAAW;OAAEv0D,aAAazR,KAAKylE,SAASzlE,KAAKipC;UAE/CjpC,KAAKkB,KAAKmrC,SACbrsC,KAAKuf,OAAOumD;AACd,QAGM,KAAAG,uBAAuB;MAC7B,MAAMpxD,aAAa,IAAI,sBAAW;MAClC7U,KAAK0F,QAAQmP;AAAW,QAGlB,KAAAkxD,0BAA2BnxD;MAC7BA,OAAoB,iBAAbA,IAAIxS,OACbpC,KAAK0F,QAAQkP,QASf5U,KAAKkmE;MACDlmE,KAAKylE,SAAS,MAAMzlE,KAAK2S,MAC3B3S,KAAKkB,KAAK,QACDlB,KAAKylE,UAAUzlE,KAAK2S,MAIzB3S,KAAK2lE,UAAU3lE,KAAKmmE,oBACtBnmE,KAAK2lE,WAAW;MAChB3lE,KAAKwlE,OAAOxlE,KAAKylE,QACdxxD,MAAMmyD;OACLpmE,KAAKuf,SAAS6mD,WACdpmE,KAAKqmE;AACC,UAEPnyD,OAAOjO;OACNjG,KAAK0F,QAAQO;AAAM,aAGvBjG,KAAK0F,QACH,IAAIhE,MACF,sHACE1B,KAAKylE,SAAS,0BACSzlE,KAAK2S,iBAAiB3S,KAAK2lE,yBAClD3lE,KAAKmmE,uBAMbnmE,KAAK0F,QACH,IAAIhE,MACF,4FACE1B,KAAK2S,yBACe3S,KAAKylE,SAAS;AAG1C,QA1GAzlE,KAAKwlE,SAASA,QACdxlE,KAAKuf,SAASA,QACdvf,KAAKipC,QAAQw8B,QACbzlE,KAAKylE,SAASA;KACdzlE,KAAK2S,MAAM8yD,SAAS57B,QAAQ,GAC5B7pC,KAAKmmE,mBACH1/D,QAAQ0/D,oBAAoB1/D,QAAQ0/D,oBAAoB,IAAI1/D,QAAQ0/D,mBAAmB;KACzFnmE,KAAKgmE,aAAav/D,QAAQu/D,YAC1BhmE,KAAKyG,UAAUA,SAEfzG,KAAKqmE;AACP;IAEO,KAAAC;KACLtmE,KAAKuf,OAAOrM;AACd;IAEQ,sBAAAmzD;KACNrmE,KAAKuf,OAAOvO,GAAG,QAAQhR,KAAK4lE,oBAC5B5lE,KAAKuf,OAAOvO,GAAG,OAAOhR,KAAK+lE;KAC3B/lE,KAAKuf,OAAOvO,GAAG,SAAShR,KAAK+lE,0BAE7B/lE,KAAKuf,OAAOvO,GAAG,WAAWhR,KAAKimE;AACjC;IAEQ,yBAAAC;KACNlmE,KAAKuf,OAAOxO,eAAe,QAAQ/Q,KAAK4lE,oBACxC5lE,KAAKuf,OAAOxO,eAAe,OAAO/Q,KAAK+lE;KACvC/lE,KAAKuf,OAAOxO,eAAe,SAAS/Q,KAAK+lE,0BACzC/lE,KAAKuf,OAAOxO,eAAe,WAAW/Q,KAAKimE;AAC7C;IA+EA,QAAAM,CAAStgE,OAAqBuL;KAE5BxR,KAAKkmE,6BACJlmE,KAAKuf,OAAoB7Z,WAE1B8L,SAAmB,SAAVvL,aAAiB3C,IAAY2C;AACxC;;GC3JK,MAAMugE;IAOX,gBAAWzX;KACT,OAAO/uD,KAAK6gC,iBAAiBkuB;AAC/B;IAQA,gBAAWtH;KACT,OAAOznD,KAAK6gC,iBAAiB4mB;AAC/B;IASA,sBAAWD;KACT,OAAOxnD,KAAK6gC,iBAAiB2mB;AAC/B;IAQA,mBAAWr0C;KACT,OAAOnT,KAAK6gC,iBAAiB1tB;AAC/B;IAQA,mBAAWm0C;KACT,OAAOtnD,KAAK6gC,iBAAiBymB;AAC/B;IAQA,sBAAWI;KACT,OAAO1nD,KAAK6gC,iBAAiB6mB;AAC/B;IAQA,YAAWC;KACT,OAAO3nD,KAAK6gC,iBAAiB8mB;AAC/B;IAQA,iBAAW3nC;KACT,OAAOhgB,KAAK6gC,iBAAiB7gB;AAC/B;IAcA,cAAWunC;KACT,OAAOvnD,KAAK6gC,iBAAiB0mB;AAC/B;IASA,gBAAWuH;KACT,OAAO9uD,KAAK6gC,iBAAiBiuB;AAC/B;IAQA,eAAWn1C;KACT,OAAO3Z,KAAK6gC,iBAAiBlnB;AAC/B;IASA,mBAAWquC;KACT,OAAOhoD,KAAK6gC,iBAAiBmnB;AAC/B;IAQA,UAAWJ;KACT,OAAO5nD,KAAK6gC,iBAAiB+mB;AAC/B;IAUA,gBAAWG;KACT,OAAO/nD,KAAK6gC,iBAAiBknB;AAC/B;IASA,cAAWD;KACT,OAAO9nD,KAAK6gC,iBAAiBinB;AAC/B;IASA,cAAWD;KACT,OAAO7nD,KAAK6gC,iBAAiBgnB;AAC/B;IASA,yBAAWI;KACT,OAAOjoD,KAAK6gC,iBAAiBonB;AAC/B;IASA,iBAAWtD;KACT,OAAO3kD,KAAK6gC,iBAAiB8jB;AAC/B;IAQA,cAAWD;KACT,OAAO1kD,KAAK6gC,iBAAiB6jB;AAC/B;IAQA,eAAWD;KACT,OAAOzkD,KAAK6gC,iBAAiB4jB;AAC/B;IAQA,QAAW7N;KACT,OAAO52C,KAAK6gC,iBAAiB+V;AAC/B;IAQA,2BAAWoY;KACT,OAAOhvD,KAAK6gC,iBAAiBmuB;AAC/B;IAQA,QAAWxK;KACT,OAAOxkD,KAAK6gC,iBAAiB2jB;AAC/B;IAOA,YAAWmE;KACT,OAAO3oD,KAAK6gC,iBAAiB8nB;AAC/B;IAOA,aAAWqC;KACT,OAAOhrD,KAAK6gC,iBAAiBmqB;AAC/B;IAWA,qBAAWiE;KACT,OAAOjvD,KAAK6gC,iBAAiBouB;AAC/B;IAWA,kBAAWE;KACT,OAAOnvD,KAAK6gC,iBAAiBsuB;AAC/B;IASA,gBAAW5K;KACT,OAAOvkD,KAAK6gC,iBAAiB0jB;AAC/B;IAQA,gBAAW6K;KACT,OAAOpvD,KAAK6gC,iBAAiBuuB;AAC/B;IAOA,aAAW/H;KACT,OAAOrnD,KAAK6gC,iBAAiBwmB;AAC/B;IAQA,YAAWhD;KACT,OAAOrkD,KAAK6gC,iBAAiBwjB;AAC/B;IAQA,aAAWh6C;KACT,OAAOrK,KAAK6gC,iBAAiBx2B;AAC/B;IAQA,mBAAW0gD;KACT,OAAO/qD,KAAK6gC,iBAAiBkqB;AAC/B;IAQA,WAAW9xC;KACT,OAAOjZ,KAAK6gC,iBAAiB5nB;AAC/B;IAOA,aAAW6tC;KACT,OAAO9mD,KAAK6gC,iBAAiBimB;AAC/B;IAOA,oBAAWC;KACT,OAAO/mD,KAAK6gC,iBAAiBkmB;AAC/B;IAQA,uBAAWmI;KACT,OAAOlvD,KAAK6gC,iBAAiBquB;AAC/B;IAQA,gBAAWG;KACT,OAAOrvD,KAAK6gC,iBAAiBwuB;AAC/B;IAOA,wCAAWoX;KACT,OAAOzmE,KAAK6gC,iBAAiB4lC;AAC/B;IAOA,qCAAWC;KACT,OAAO1mE,KAAK6gC,iBAAiB6lC;AAC/B;IAOA,YAAW9d;KACT,OAAO5oD,KAAK6gC,iBAAiB+nB;AAC/B;IAOA,+BAAWG;KACT,OAAO/oD,KAAK6gC,iBAAiBkoB;AAC/B;IAOA,0BAAWC;KACT,OAAOhpD,KAAK6gC,iBAAiBmoB;AAC/B;IAOA,aAAWC;KACT,OAAOjpD,KAAK6gC,iBAAiBooB;AAC/B;IAQA,iBAAW0d;KACT,OAAO3mE,KAAK6gC,iBAAiB5V;AAC/B;IAUA,sBAAWvX;KACT,OAAO,aAAS1T,KAAK4mE,0BAAqBtjE;AAC5C;IAKA,aAAWujE;KACT,OAAO7mE,KAAK6gC,iBAAiBgmC;AAC/B;IAcA,YACEhmC,kBACA2kC,QACAC,QACA57B,OACApjC,UAA0C,CAAC;KAE3CzG,KAAK6gC,mBAAmBA,kBACxB7gC,KAAK4mE,qBAAqB,IAAIrB,wBAC5BvlE,KAAK6gC,iBAAiBntB,oBACtB8xD,QACAC,QACA57B,OACApjC;AAEJ;;GCxhBK,MACMqgE,kBAA8B,IAAItnD,WAAW,EAAC,IAAI,IAAI,KAAK;GCkBjE,MAAMunD;IAQJ,2BAAaC,CAClBt2D,QACAjL,QACAgB,UAAiC,CAAC;KAElC,MAAMwgE,cAAcv2D,OAAOqO,KAAKtZ,QAAQ;MAAE9D,aAAa8E,QAAQ9E;;KAC/D,IAAIslE,MAAMxhE,WAAWA,QACnB,MAAM,IAAI/D,MAAM;KAElB,OAAOulE;AACT;IAQQ,qBAAaC,CACnBx2D,QACAjK,UAAiC,CAAC;KAGlC,cADkBsgE,WAAWC,eAAet2D,QAAQ,GAAGjK,UAC5C;AACb;IAKQ,2BAAa0gE,CACnBz2D,QACAjK,UAAiC,CAAC;KAElC,IAEI2gE,MAAMC,cAAcC,qBAFpBC,gBAAgB,GAChBC,oBAAoB;KAGxB;MACEJ,aAAaL,WAAWG,SAASx2D,QAAQjK,UACzC4gE,eAAsB,MAAPD,MACfG,kBAAyB,MAAPH,SAAgBI;MAClCA,qBAAqB;cACdH,gBAAgBG,oBAAoB;KAE7C,IAAIH,cAAc;MAIhBC,sBAAsB;MACtB;OACEF,aAAaL,WAAWG,SAASx2D,QAAQjK,UACzC8gE,kBAAyB,MAAPH,QAAeE;OACjCA,uBAAuB;eACT,MAAPF;MAET,MAAMx0D,OAAO20D,gBAAgB,MAAMA,gBAAgB,KAAKA,iBAAiB;MACzE,IAAI30D,MAAMY,OAAOi0D,oBAAoB70D,MAAMY,OAAOk0D,kBAChD,MAAM,IAAIhmE,MAAM;MAElB,OAAOkR;AACT;KAEA,OAAQ20D,iBAAiB,MAAuB,IAAhBA;AAClC;IAEO,qBAAaI,CAClBj3D,QACAjK,UAAiC,CAAC;KAElC,OAAOsgE,WAAWI,eAAez2D,QAAQjK;AAC3C;IAEO,oBAAamhE,CAClBl3D,QACAjK,UAAiC,CAAC;KAElC,OAAOsgE,WAAWI,eAAez2D,QAAQjK;AAC3C;IAEO,qBAAaohE;KAClB,OAAO;AACT;IAEO,wBAAaC,CAClBp3D,QACAjK,UAAiC,CAAC;KAElC,MAAM0X,UAAU4oD,WAAWG,SAASx2D,QAAQjK;KAC5C,IAAU,MAAN0X,GACF,QAAO;KACF,IAAU,MAANA,GACT,QAAO;KAEP,MAAM,IAAIzc,MAAM;AAEpB;IAEO,sBAAaqmE,CAClBr3D,QACAjK,UAAiC,CAAC;KAElC,MAAMuhE,cAAcjB,WAAWC,eAAet2D,QAAQ,GAAGjK;KAEzD,OADa,IAAIwhE,SAASD,MAAMn0D,QAAQm0D,MAAME,YAAYF,MAAM92D,YACpDi3D,WAAW,IAAG;AAC5B;IAEO,uBAAaC,CAClB13D,QACAjK,UAAiC,CAAC;KAElC,MAAMuhE,cAAcjB,WAAWC,eAAet2D,QAAQ,GAAGjK;KAEzD,OADa,IAAIwhE,SAASD,MAAMn0D,QAAQm0D,MAAME,YAAYF,MAAM92D,YACpDm3D,WAAW,IAAG;AAC5B;IAEO,sBAAaC,CAClB53D,QACAjK,UAAiC,CAAC;KAElC,MAAM+G,aAAau5D,WAAWY,SAASj3D,QAAQjK;KAC/C,IAAI+G,OAAO,GACT,MAAM,IAAI9L,MAAM;KAGlB,OAAOgP,OAAOqO,KAAKvR,MAAM;MAAE7L,aAAa8E,QAAQ9E;;AAClD;IAEO,uBAAa4mE,CAClB73D,QACAjK,UAAiC,CAAC;KAElC,MAAMuhE,cAAcjB,WAAWuB,UAAU53D,QAAQjK;KAEjD,QADoB,IAAI+hE,aACLC,OAAOT;AAC5B;IAEQ,wBAAaU,CACnBh4D,QACAi4D,gBACAliE,UAAiC,CAAC;KAKlC,OAAO;MAAE0I,WAHS43D,WAAWwB,WAAW73D,QAAQjK;MAGlC4B,aADMsgE,eAAej4D,QAAQjK;;AAE7C;IAEO,oBAAamiE,CAClBl4D,QACAi4D,gBACAliE,UAAiC,CAAC;KAElC,MAOM81B,cAAiCwqC,WAAW8B,UAAUn4D,SAPrC,CACrBiM,GACA6Z,OAA8B,CAAC,MAExBuwC,WAAW2B,YAAY/rD,GAAGgsD,gBAAgBnyC,QAGiC/vB,UAE9EqiE,OAA0B,CAAC;KACjC,KAAK,MAAMtsC,QAAQD,OACjBusC,KAAKtsC,KAAKrtB,OAAOqtB,KAAKn0B;KAExB,OAAOygE;AACT;IAEQ,sBAAaD,CACnBn4D,QACAi4D,gBACAliE,UAAiC,CAAC;KAElC,MAAMsiE,QAAa;KACnB,KACE,IAAIl/B,cAAck9B,WAAWY,SAASj3D,QAAQjK,UACpC,MAAVojC,OACAA,cAAck9B,WAAWY,SAASj3D,QAAQjK,UAQ1C,KANIojC,QAAQ,YAEJk9B,WAAWY,SAASj3D,QAAQjK;KAClCojC,SAASA,QAGJA,WAAS;MACd,MAAMjuB,aAAgB+sD,eAAej4D,QAAQjK;MAC7CsiE,MAAM7nE,KAAK0a;AACb;KAEF,OAAOmtD;AACT;;GAQF,IAAKC,aAmBAC;IAnBL,SAAKD;IACH,+BACA,2BACA;IACA,yBACA,6BACA;AACD,IAPD,CAAKA,gBAAAA,cAAW,MAmBhB,SAAKC;IACH,6BACA,mCACA;IACA,6BACA,+BACA;IACA,+BACA;AACD,IATD,CAAKA,kBAAAA,gBAAa;GAWX,MAAeC;IAab,iBAAOC,CAAWjwB;KACvB,OAAsB,mBAAXA,SACFgwB,SAASE,iBAAiBlwB,UACxB12C,MAAMC,QAAQy2C,UAChBgwB,SAASG,gBAAgBnwB,UAEzBgwB,SAASI,iBAAiBpwB;AAErC;IAEQ,uBAAOkwB,CAAiBlwB;KAC9B,QAAQA;KACN,KAAK+vB,cAAcM;KACnB,KAAKN,cAAcO;KACnB,KAAKP,cAAcQ;KACnB,KAAKR,cAAcS;KACnB,KAAKT,cAAcU;KACnB,KAAKV,cAAcW;KACnB,KAAKX,cAAcY;KACnB,KAAKZ,cAAca;MACjB,OAAO,IAAIC,kBAAkB7wB;;KAC/B;MACE,MAAM,IAAIx3C,MAAM,wBAAwBw3C;;AAE9C;IAEQ,sBAAOmwB,CAAgBnwB;KAC7B,OAAO,IAAI8wB,cAAc9wB,OAAOt0C,IAAIskE,SAASC;AAC/C;IAEQ,uBAAOG,CAAiBpwB;KAC9B,MAAMl3C,OAAOk3C,OAAOl3C;KAEpB;MACE,OAAOknE,SAASE,iBAAiBpnE;AACnC,OAAE,YAEF;KAEA,QAAQA;KACN,KAAKgnE,YAAYiB;MACf,IAAI/wB,OAAOgxB,SACT,MAAM,IAAIxoE,MAAM,+CAA+Cw3C;MAEjE,KAAKA,OAAO92C,MACV,MAAM,IAAIV,MAAM,sDAAsDw3C;MAIxE,MAAMixB,SAAmC,CAAC;MAC1C,KAAKjxB,OAAOixB,QACV,MAAM,IAAIzoE,MAAM,wDAAwDw3C;MAE1E,KAAK,MAAMkxB,SAASlxB,OAAOixB,QACzBA,OAAOC,MAAMhoE,QAAQ8mE,SAASC,WAAWiB,MAAMpoE;MAEjD,OAAO,IAAIqoE,eAAeF,QAAQjxB,OAAO92C;;KAC3C,KAAK4mE,YAAYsB;MACf,IAAIpxB,OAAOgxB,SACT,MAAM,IAAIxoE,MAAM,+CAA+Cw3C;MAEjE,KAAKA,OAAOqxB,SACV,MAAM,IAAI7oE,MAAM,yDAAyDw3C;MAE3E,OAAO,IAAIsxB,aAAatxB,OAAOqxB;;KACjC,KAAKvB,YAAYyB;MACf,KAAKvxB,OAAOvwC,QACV,MAAM,IAAIjH,MAAM,wDAAwDw3C;MAE1E,OAAO,IAAIwxB,YAAYxB,SAASC,WAAWjwB,OAAOvwC;;KACpD,KAAKqgE,YAAY2B;KACjB,KAAK3B,YAAYxsB;KACjB;MACE,MAAM,IAAI96C,MAAM,wBAAwBM,WAAWk3C;;AAEzD;;GAGF,MAAM6wB,0BAA0Bb;IAG9B,WAAA3oE,CAAYqqE;KACVzoE,SACAnC,KAAK6qE,aAAaD;AACpB;IAGO,IAAA7rD,CAAKrO,QAAsBjK,UAAiC,CAAC;KAClE,QAAQzG,KAAK6qE;KACX,KAAK5B,cAAcM;MACjB,OAAOxC,WAAWc;;KACpB,KAAKoB,cAAcO;MACjB,OAAOzC,WAAWe,YAAYp3D,QAAQjK;;KACxC,KAAKwiE,cAAcQ;MACjB,OAAO1C,WAAWa,QAAQl3D,QAAQjK;;KACpC,KAAKwiE,cAAcS;MACjB,OAAO3C,WAAWY,SAASj3D,QAAQjK;;KACrC,KAAKwiE,cAAcU;MACjB,OAAO5C,WAAWgB,UAAUr3D,QAAQjK;;KACtC,KAAKwiE,cAAcW;MACjB,OAAO7C,WAAWqB,WAAW13D,QAAQjK;;KACvC,KAAKwiE,cAAcY;MACjB,OAAO9C,WAAWuB,UAAU53D,QAAQjK;;KACtC,KAAKwiE,cAAca;MACjB,OAAO/C,WAAWwB,WAAW73D,QAAQjK;;KACvC;MACE,MAAM,IAAI/E,MAAM;;AAEtB;;GAGF,MAAM8oE,qBAAqBtB;IAGzB,WAAA3oE,CAAYgqE;KACVpoE,SACAnC,KAAK8qE,WAAWP;AAClB;IAGO,UAAMxrD,CAAKrO,QAAsBjK,UAAiC,CAAC;KACxE,MAAM4B,cAAc0+D,WAAWa,QAAQl3D,QAAQjK;KAC/C,OAAOzG,KAAK8qE,SAASziE;AACvB;;GAGF,MAAM2hE,sBAAsBd;IAG1B,WAAA3oE,CAAYwqE;KACV5oE,SACAnC,KAAKgrE,SAASD;AAChB;IAEO,UAAMhsD,CACXrO,QACAjK,UAAiC,CAAC;KAGlC,MAAMwkE,kBAAkBlE,WAAWa,QAAQl3D,QAAQjK;KACnD,OAAOzG,KAAKgrE,OAAOC,WAAWlsD,KAAKrO,QAAQjK;AAC7C;;GAGF,MAAMikE,oBAAoBxB;IAGxB,WAAA3oE,CAAY2qE;KACV/oE,SACAnC,KAAKmrE,YAAYD;AACnB;IAGO,IAAAnsD,CAAKrO,QAAsBjK,UAAiC,CAAC;KAQlE,OAAOsgE,WAAW6B,QAAQl4D,SAPH,CACrBiM,GACA6Z,SAGOx2B,KAAKmrE,UAAUpsD,KAAKpC,GAAG6Z,QAEkB/vB;AACpD;;GAGF,MAAM4jE,uBAAuBnB;IAI3B,WAAA3oE,CAAY4pE,QAAkC/nE;KAC5CD,SACAnC,KAAKorE,UAAUjB,QACfnqE,KAAKkjB,QAAQ9gB;AACf;IAGO,UAAM2c,CAAKrO,QAAsBjK,UAAiC,CAAC;KAExE,MAAM4kE,SAAwC,CAAC;KAC/CA,OAAgB,UAAIrrE,KAAKkjB;KACzB,KAAK,MAAM/T,OAAOnP,KAAKorE,SACjBvnE,OAAOsM,UAAU0M,eAAehb,KAAK7B,KAAKorE,SAASj8D,SACrDk8D,OAAOl8D,aAAanP,KAAKorE,QAAQj8D,KAAK4P,KAAKrO,QAAQjK;KAGvD,OAAO4kE;AACT;;GClcK,SAASC,YAAYptD,GAAeC;IACzC,IAAID,MAAMC,GAAG,QAAO;IAEpB,IAAS,QAALD,KAAkB,QAALC,GAAW,QAAO;IACnC,IAAID,EAAEzY,WAAW0Y,EAAE1Y,QAAQ,QAAO;IAElC,KAAK,IAAIsX,IAAI,GAAGA,IAAImB,EAAEzY,UAAUsX,GAC9B,IAAImB,EAAEnB,OAAOoB,EAAEpB,IAAI,QAAO;IAE5B,QAAO;AACT;GCUO,MAAMwuD;IAmBX,eAAWC;KACT,OAAOxrE,KAAKyrE;AACd;IAGA,eAAWC;KACT,OAAO1rE,KAAK2rE;AACd;IAaA,WAAAprE,CACEqrE,YACAC,cACAC,oBACAC;KAEA/rE,KAAKgsE,cAAcJ,YACnB5rE,KAAKisE,gBAAgBJ,gBAAgBD;KACrC5rE,KAAKksE,gBAAe,GACpBlsE,KAAKyrE,eAAeK,sBAAsB,GAC1C9rE,KAAK2rE,eAAeI,2BAA2B;KAC/C/rE,KAAKmsE,sBAAsBL,sBAAsB;AACnD;IAEQ,gBAAMM,CAAW3lE,UAA4B,CAAC;KAIpD,KAAK6kE,kBAHgBvE,WAAWC,eAAehnE,KAAKisE,eAAenF,gBAAgBrhE,QAAQ;MACzF9D,aAAa8E,QAAQ9E;SAEEmlE,kBACvB,MAAM,IAAIplE,MAAM;KAKlB1B,KAAKqsE,kBAAkBtF,WAAW6B,QAAQ5oE,KAAKisE,eAAelF,WAAWwB,YAAY;MACnF5mE,aAAa8E,QAAQ9E;;KAIvB,MAAM2qE,QAAQtsE,KAAKqsE,UH3Fe;KG4FlC,IAAMC,iBAAmD,WAAVA,OAC7C,MAAM,IAAI5qE,MAAM;KAIlB1B,KAAKusE,oBAAoBxF,WAAWC,eAAehnE,KAAKisE,eHnGf,IGmGqD;MAC5FtqE,aAAa8E,QAAQ9E;;KAIvB,MAAMu3C,SAASpwC,KAAKiO,MAAM/W,KAAKqsE,UHrGI;KGmHnC,IAbArsE,KAAKmrE,YAAYjC,SAASC,WAAWjwB,SAEX,MAAtBl5C,KAAKyrE,iBACPzrE,KAAKyrE,eAAezrE,KAAKmsE,sBAAsBnsE,KAAKgsE,YAAYruC;KAGlE39B,KAAKwsE,+BAA+BzF,WAAWY,SAAS3nE,KAAKgsE,aAAa;MACxErqE,aAAa8E,QAAQ9E;eAGjBolE,WAAWY,SAAS3nE,KAAKgsE,aAAa;MAAErqE,aAAa8E,QAAQ9E;SAEnE3B,KAAKksE,gBAAe,GAChBlsE,KAAK2rE,gBAAgB3rE,KAAK2rE,eAAe,GAC3C,KAAK,IAAI5uD,IAAI,GAAGA,IAAI/c,KAAK2rE,cAAc5uD,WAC/B/c,KAAKmrE,UAAUpsD,KAAK/e,KAAKgsE,aAAa;MAAErqE,aAAa8E,QAAQ9E;SACnE3B,KAAKwsE;AAGX;IAEO,OAAAC;KACL,QAAQzsE,KAAKksE,gBAAgBlsE,KAAKwsE,yBAA0B;AAC9D;IAEc,YAAAE;yDACZjmE,UAA4B,CAAC;MAM7B,KAJKzG,KAAKksE,uBACR,QAAMlsE,KAAKosE,WAAW3lE,YAGjBzG,KAAKysE,aAAW;OACrB,MAAMtoE,eAAS,QAAMnE,KAAKmrE,UAAWpsD,KAAK/e,KAAKgsE,aAAa;QAC1DrqE,aAAa8E,QAAQ9E;;OAMvB,IAHA3B,KAAKwsE,0BACLxsE,KAAK2rE,gBAE+B,MAAhC3rE,KAAKwsE,wBAA8B;QACrC,MAAM1oB,eAAS,QAAMijB,WAAWC,eAAehnE,KAAKgsE,aHlJf,IGkJmD;SACtFrqE,aAAa8E,QAAQ9E;;QAMvB,IAHA3B,KAAKyrE,eAAezrE,KAAKmsE,sBAAsBnsE,KAAKgsE,YAAYruC,UAChE39B,KAAK2rE,eAAe;SAEfL,YAAYtrE,KAAKusE,aAAczoB,SAClC,MAAM,IAAIpiD,MAAM;QAGlB;SACE1B,KAAKwsE,+BAAyB,QAAMzF,WAAWY,SAAS3nE,KAAKgsE,aAAa;UACxErqE,aAAa8E,QAAQ9E;;AAEzB,UAAE;SAEA3B,KAAKwsE,yBAAyB;AAChC;QAEIxsE,KAAKwsE,yBAA0B,YAEjC,QAAMzF,WAAWY,SAAS3nE,KAAKgsE,aAAa;SAAErqE,aAAa8E,QAAQ9E;;AAEvE;mBACA,QAAMwC;AACR;AACF;;;GChKK,MAAewoE;GCTtB,MAAMC,cAAc,IAAI,sBAAW;GAE5B,MAAMC,+BAA+BF;IAIlC,YAAAG,CAAazgC;KACnB,OAAoB,mBAATA,OACF/5B,OAAOE,KAAK65B,QAEdA;AACT;IAEA,WAAA9rC,CAAYoQ;KACVxO,SACAnC,KAAK+sE,YAAYp8D,UACjB3Q,KAAKgtE,YAAY;AACnB;IACA,YAAWrvC;KACT,OAAO39B,KAAKgtE;AACd;IACO,UAAMjuD,CAAKvR,MAAc/G,UAAmC,CAAC;;KAClE,IAAuB,UAAnB,KAAAA,QAAQ9E,qBAAW,uBAAEjB,SACvB,MAAMksE;KAGR,IAAIp/D,OAAO,GACT,MAAM,IAAI9L,MAAM,sCAAsC8L;KAGxD,IAAa,MAATA,MACF,OAAO,IAAIgS;KAGb,KAAKxf,KAAK+sE,UAAUp8D,UAClB,MAAM,IAAIjP,MAAM;KAGlB,MAAM4P,QAAQtR,KAAK+sE,UAAUhuD,KAAKvR;KAClC,OAAI8D,SACFtR,KAAKgtE,aAAa17D,MAAM7L,QAEjBzF,KAAK8sE,aAAax7D,UAGlB,IAAIV,SAAQ,CAACC,SAAS+C;MAE3B,MAAMq5D,UAAsB;OAC1BjtE,KAAK+sE,UAAUh8D,eAAe,YAAYm8D,mBAC1CltE,KAAK+sE,UAAUh8D,eAAe,SAASo8D;OACvCntE,KAAK+sE,UAAUh8D,eAAe,OAAOo8D,iBACrCntE,KAAK+sE,UAAUh8D,eAAe,SAASo8D;OAEnC1mE,QAAQ9E,eACV8E,QAAQ9E,YAAaR,oBAAoB,SAASu2C;AACpD,SAGIw1B,mBAA+B;OACnC,MAAME,gBAAgBptE,KAAK+sE,UAAUhuD,KAAKvR;OACtC4/D,kBACFptE,KAAKgtE,aAAaI,cAAc3nE,QAChCwnE,WAEAp8D,QAAQ7Q,KAAK8sE,aAAaM;AAC5B,SAGID,iBAA6B;OACjCF,WACAr5D;AAAQ,SAGJ8jC,eAA2B;OAC/Bu1B,WACAr5D,OAAOg5D;AAAY;MAGrB5sE,KAAK+sE,UAAU/7D,GAAG,YAAYk8D,mBAC9BltE,KAAK+sE,UAAUp4D,KAAK,SAASw4D;MAC7BntE,KAAK+sE,UAAUp4D,KAAK,OAAOw4D,iBAC3BntE,KAAK+sE,UAAUp4D,KAAK,SAASw4D;MACzB1mE,QAAQ9E,eACV8E,QAAQ9E,YAAaZ,iBAAiB,SAAS22C;AACjD;AAIN;;GC7DK,MAAM21B,6BAA6B,iBAAAjuD;IAcxC,YAAmBG,QAA+B9Y,UAAuC,CAAC;KACxFtE,SAXM,KAAAmrE,cAAsB,GAY5BttE,KAAKuf,SAASA,QACdvf,KAAKgmE,aAAav/D,QAAQu/D;KAC1BhmE,KAAKutE,UAAU9mE,QAAQ8mE,SACvBvtE,KAAKwtE,aAAa,IAAIjC,WAAW,IAAIsB,uBAAuB7sE,KAAKuf;KACjEvf,KAAKytE,WAAWztE,KAAKwtE,WAAWd,aAAa;MAAE/qE,aAAa8E,QAAQ9E;;AACtE;IAEO,KAAA2kE;KACDtmE,KAAKstE,cACPttE,KAAK0tE,eAAex5D,OAAOU;MACzB5U,KAAK2tE,KAAK,SAAS/4D;AAAI;AAG7B;IAEQ,kBAAM84D;KAEZ,IAAIE;KADJ5tE,KAAKstE,cAAa;KAElB,GAAG;MAED,IADAM,iBAAiB5tE,KAAKytE,SAAS9hE,QAC3BiiE,SAASxwD,MACX;MAEF,MAAMnO,MAAM2+D,SAASvlE,OACf6wC,SAAUjqC,IAAY4+D;MAC5B,IAAsB,mBAAX30B,QACT,MAAMx3C,MAAM;MAGd,QAAQw3C;MACN,KAAK;OACH;QACE,MAAM7M,OAAQp9B,IAAYo9B;QAC1B,IAAIA,gBAAgB7sB,eAAe,GACjC,MAAM9d,MAAM;QAET1B,KAAKkB,KAAKoR,OAAOE,KAAK65B,WACzBrsC,KAAKstE,cAAa;AAEtB;OACA;;MACF,KAAK;OACH;QACE,MAAMQ,eAAgB7+D,IAAY6+D;QAClC,IAA4B,mBAAjBA,cACT,MAAMpsE,MAAM;QAEV1B,KAAKgmE,cACPhmE,KAAKgmE,WAAW;SAAEv0D,aAAaq8D;;AAEnC;OACA;;MACF,KAAK;OACH,IAAI9tE,KAAKgmE,YAAY;QACnB,MAAM+H,aAAc9+D,IAAY8+D;QAChC,IAA0B,mBAAfA,YACT,MAAMrsE,MAAM;QAEd1B,KAAKgmE,WAAW;SAAEv0D,aAAas8D;;AACjC;OACA/tE,KAAKkB,KAAK;OACV;;MACF,KAAK;OACH,IAAIlB,KAAKutE,SAAS;QAChB,MAAMS,QAAS/+D,IAAY++D;QAC3B,IAAqB,oBAAVA,OACT,MAAMtsE,MAAM;QAEd,MAAMU,OAAQ6M,IAAY7M;QAC1B,IAAoB,mBAATA,MACT,MAAMV,MAAM;QAEd,MAAMusE,cAAeh/D,IAAYg/D;QACjC,IAA2B,mBAAhBA,aACT,MAAMvsE,MAAM;QAEd,MAAMi8B,WAAY1uB,IAAY0uB;QAC9B,IAAwB,mBAAbA,UACT,MAAMj8B,MAAM;QAEd1B,KAAKutE,QAAQ;SACX5vC;SACAv7B;SACA8rE,SAASF;SACTC;;AAEJ;OACA;;MACF;OACE,MAAMvsE,MAAM,kBAAkBw3C;;AAEpC,eAAU00B,SAASxwD,SAASpd,KAAKstE;AACnC;;GCpHK,MAAMa;IAOX,gBAAWpf;KACT,OAAO/uD,KAAK6gC,iBAAiBkuB;AAC/B;IAQA,gBAAWtH;KACT,OAAOznD,KAAK6gC,iBAAiB4mB;AAC/B;IASA,sBAAWD;KACT,OAAOxnD,KAAK6gC,iBAAiB2mB;AAC/B;IAQA,mBAAWr0C;KACT,OAAOnT,KAAK6gC,iBAAiB1tB;AAC/B;IAQA,mBAAWm0C;KACT,OAAOtnD,KAAK6gC,iBAAiBymB;AAC/B;IAQA,sBAAWI;KACT,OAAO1nD,KAAK6gC,iBAAiB6mB;AAC/B;IAQA,YAAWC;KACT,OAAO3nD,KAAK6gC,iBAAiB8mB;AAC/B;IAQA,iBAAW3nC;KACT,OAAOhgB,KAAK6gC,iBAAiB7gB;AAC/B;IAcA,cAAWunC;KACT,OAAOvnD,KAAK6gC,iBAAiB0mB;AAC/B;IASA,gBAAWuH;KACT,OAAO9uD,KAAK6gC,iBAAiBiuB;AAC/B;IAQA,eAAWn1C;KACT,OAAO3Z,KAAK6gC,iBAAiBlnB;AAC/B;IASA,mBAAWquC,IAEX;IAQA,UAAWJ;KACT,OAAO5nD,KAAK6gC,iBAAiB+mB;AAC/B;IAUA,gBAAWG;KACT,OAAO/nD,KAAK6gC,iBAAiBknB;AAC/B;IASA,cAAWD;KACT,OAAO9nD,KAAK6gC,iBAAiBinB;AAC/B;IASA,cAAWD;KACT,OAAO7nD,KAAK6gC,iBAAiBgnB;AAC/B;IASA,yBAAWI;KACT,OAAOjoD,KAAK6gC,iBAAiBonB;AAC/B;IASA,iBAAWtD;KACT,OAAO3kD,KAAK6gC,iBAAiB8jB;AAC/B;IAQA,cAAWD;KACT,OAAO1kD,KAAK6gC,iBAAiB6jB;AAC/B;IAQA,eAAWD;KACT,OAAOzkD,KAAK6gC,iBAAiB4jB;AAC/B;IAQA,QAAW7N;KACT,OAAO52C,KAAK6gC,iBAAiB+V;AAC/B;IAQA,2BAAWoY;KACT,OAAOhvD,KAAK6gC,iBAAiBmuB;AAC/B;IAQA,QAAWxK;KACT,OAAOxkD,KAAK6gC,iBAAiB2jB;AAC/B;IAOA,aAAWwG;KACT,OAAOhrD,KAAK6gC,iBAAiBmqB;AAC/B;IAWA,qBAAWiE;KACT,OAAOjvD,KAAK6gC,iBAAiBouB;AAC/B;IAWA,kBAAWE;KACT,OAAOnvD,KAAK6gC,iBAAiBsuB;AAC/B;IASA,gBAAW5K;KACT,OAAOvkD,KAAK6gC,iBAAiB0jB;AAC/B;IAQA,YAAWF;KACT,OAAOrkD,KAAK6gC,iBAAiBwjB;AAC/B;IAQA,aAAWh6C;KACT,OAAOrK,KAAK6gC,iBAAiBx2B;AAC/B;IAQA,mBAAW0gD;KACT,OAAO/qD,KAAK6gC,iBAAiBkqB;AAC/B;IAQA,WAAW9xC;KACT,OAAOjZ,KAAK6gC,iBAAiB5nB;AAC/B;IAQA,uBAAWi2C;KACT,OAAOlvD,KAAK6gC,iBAAiBquB;AAC/B;IAQA,gBAAWG;KACT,OAAOrvD,KAAK6gC,iBAAiBwuB;AAC/B;IAQA,YAAWpkC,IAEX;IAUA,sBAAWvX;KACT,OAAO,aAAS1T,KAAK4mE,0BAAqBtjE;AAC5C;IAKA,aAAWujE;KACT,OAAO7mE,KAAK6gC,iBAAiBgmC;AAC/B;IAWA,YACEhmC,kBACAp6B,UAAuC,CAAC;KAExCzG,KAAK6gC,mBAAmBA,kBACxB7gC,KAAK4mE,qBAAqB,IAAIyG,qBAC5BrtE,KAAK6gC,iBAAiBntB,oBACtBjN;AAEJ;;GC9TF,IAAY2nE,eAyBAC,qBA+LAC;GAhJL,SAASC,aACd3W;IAEA,SAAat0D,MAATs0D,MAIJ,OAAOA;AACT;GAEO,SAAS4W,qBAAqBC,KAA0B5M;IAC7D,IAAI4M,QAAQ5M,SACV,MAAM,IAAI7rB,WAAW;IAGnBy4B,QAAQA,IAAIvX,wBACduX,IAAIvX,sBjD1HgC;AiD4HxC;GA6IO,SAASwX,8BAA8BC;IAC5C,OAAO,WAAWA;AACpB;GCnSO,SAASC,uBACd3+D;IAEA,MAAM4qC,aAAa5qC,SAAS42D,UAAUj8C,WAAWiwB,aAAa,IAAIj2C,KAAK6X,MAAM;KAC3EgpD,QAAQhpD,EAAEwsB;KACVY,OAAOptB,EAAE9J,MAAM8J,EAAEwsB;UAGb6R,cAAc7qC,SAAS42D,UAAUj8C,WAAWkwB,cAAc,IAAIl2C,KAAK6X,MAAM;KAC7EgpD,QAAQhpD,EAAEwsB;KACVY,OAAOptB,EAAE9J,MAAM8J,EAAEwsB;;IAGnB,OAAO,OAAP,yBACKh5B,WAAQ;KACX4qC;KACAC;KACA+rB,WAAW,OAAF,yBACJ52D,SAAS42D,YAAS;MACrBj8C,YAAY;OACViwB;OACAC;;;;AAIR;IDiCA,SAAYszB;IAIV,2BAIA,6BAIA;IAKA;AACD,IAlBD,CAAYA,kBAAAA,gBAAa,MAyBzB,SAAYC;IAIV,+BAIA,+BAIA;IAIA,iCAIA,iCAIA;IAIA,iCAIA,iCAIA;IAIA,iCAIA;AACD,IA7CD,CAAYA,wBAAAA,sBAAmB,MA+L/B,SAAYC;IAIV,+EAIA;AACD,IATD,CAAYA,wBAAAA,sBAAmB;GE1TT,uBAAmB;GCUlC,MAAMO,2BAA2BntE;IACtC,WAAAnB,CAAY2B;KACVC,MAAMD,UACNlC,KAAKoC,OAAO,sBACZyB,OAAOqM,eAAelQ,MAAM6uE,mBAAmB1+D;AACjD;;GAOK,MAAM2+D,6BAA6BptE;IACxC,WAAAnB,CAAY2B;KACVC,MAAMD,UACNlC,KAAKoC,OAAO,wBACZyB,OAAOqM,eAAelQ,MAAM8uE,qBAAqB3+D;AACnD;;GAiEK,MAAe4+D;IAoFpB,WAAAxuE,CAAYyuE;KAhFF,KAAAC,yBAAiC,GACnC,KAAAC,WAAmB,GAMnB,KAAAC,wBAAwD;KA0E9DnvE,KAAKgvE,YAAYA,WACjBhvE,KAAKovE,UAAU,IAAIx+D,SACjB,CACEC,SACA+C;MAEA5T,KAAK6Q,UAAUA,SACf7Q,KAAK4T,SAASA;AAAM,UAMxB5T,KAAKovE,QAAQl7D,OAAM;AAGrB;IA6BQ,kBAAMm7D,CAAaC,cAAiD,CAAC;KAI3E,KAHItvE,KAAKkvE,YACPlvE,KAAKkvE,WAAU,KAETlvE,KAAKuvE,gBAAgBvvE,KAAKwvE,kBAC1BxvE,KAAKyvE,KAAKH;WACVtvE,KAAKo8C;AAEf;IAUQ,cAAMszB,CAASjpE,UAA6C,CAAC;KAC9DzG,KAAKwvE,aACRxvE,KAAKgvE,kBAAkBhvE,KAAKgvE,UAAUrwB,OAAO;MAC3Ch9C,aAAa8E,QAAQ9E;MACrBguE,cAAc3vE,KAAK2vE,aAAapmE,KAAKvJ;UAGzCA,KAAK4vE;AACP;IAUQ,YAAAD,CAAaE;KACnB,KAAK,MAAMr+D,YAAYxR,KAAKmvE,uBAC1B39D,SAASq+D;AAEb;IAKQ,gBAAMC,CAAWrpE,UAA6C,CAAC;KACrEzG,KAAKgvE,kBAAkBhvE,KAAKgvE,UAAUe,OAAOtpE;AAC/C;IAUO,IAAAgpE,CAAKhpE,UAA6C,CAAC;KACxD,KAAKzG,KAAKgwE,iBAAiB;MACzBhwE,KAAKgwE,kBAAkBhwE,KAAK0vE,SAASjpE;MACrC,MAAMwpE,uBAAuB;OAC3BjwE,KAAKgwE,uBAAkB1sE;AAAS;MAElCtD,KAAKgwE,gBAAgB/7D,KAAKg8D,sBAAsBA,sBAAsB/7D,MAAMlU,KAAK4T;AACnF;KACA,OAAO5T,KAAKgwE;AACd;IAEQ,mBAAAJ;KACN,IAAI5vE,KAAKgvE,UAAUa,MAAM5pE,UACvBjG,KAAKkvE,WAAU,IACVlvE,KAAKivE,wBAER,MADAjvE,KAAK4T,OAAQ5T,KAAKgvE,UAAUa,MAAM5pE;KAC5BjG,KAAKgvE,UAAUa,MAAM5pE;KAG/B,IAAIjG,KAAKgvE,UAAUa,MAAMK,gBACvBlwE,KAAKkvE,WAAU,IACVlvE,KAAKivE,wBAAuB;MAC/B,MAAMhpE,QAAQ,IAAI6oE,qBAAqB;MAEvC,MADA9uE,KAAK4T,OAAQ3N,QACPA;AACR;KAEEjG,KAAKwvE,YAAYxvE,KAAK6Q,WAMxB7Q,KAAK6Q,QAAQ7Q,KAAKmwE;AAEtB;IAKO,mBAAMC,CACXd,cAAiD,CAAC;KAQlD,OANItvE,KAAKkvE,WACPlvE,KAAKqvE,aAAaC,aAAap7D,MAAMlU,KAAK4T,SAI5C5T,KAAK4vE;KACE5vE,KAAKovE;AACd;IAQO,UAAApJ,CAAWx0D;KAEhB,OADAxR,KAAKmvE,sBAAsBjuE,KAAKsQ,WACzB;MACLxR,KAAKmvE,wBAAwBnvE,KAAKmvE,sBAAsB/jE,QAAQilE,KAAMA,MAAM7+D;AAAS;AAEzF;IAKO,MAAAg+D;KACL,MAAMK,QAAqC7vE,KAAKgvE,UAAUa;KAC1D,OAAO1oE,QAAQ0oE,MAAMS,eAAeT,MAAMK,eAAeL,MAAM5pE;AACjE;IAKO,WAAAsqE;KACAvwE,KAAKkvE,YACRlvE,KAAKkvE,WAAU,GACXlvE,KAAK4T,UACP5T,KAAK4T,OAAO,IAAIi7D,mBAAmB;AAGzC;IAKO,SAAAU;KACL,OAAOvvE,KAAKkvE;AACd;IAWO,eAAAsB,CAAgB/pE,UAA6C,CAAC;KACnE,IAAKzG,KAAKywE;MAEH,IAAIhqE,QAAQ9E,aACjB,MAAM,IAAID,MAAM;YAFhB1B,KAAKywE,gBAAgBzwE,KAAK8vE,WAAWrpE;KAIvC,OAAOzG,KAAKywE;AACd;IAkDO,iBAAAC;KACL,OAAO1wE,KAAKgvE,UAAUa;AACxB;IAQO,SAAAM;KAEL,OAD2CnwE,KAAKgvE,UAAUa,MAC7C1rE;AACf;IAMO,QAAA0E;KACL,OAAO7I,KAAKgvE,UAAUnmE;AACxB;;GC9XK,MAAM8nE,mCAAmC5B;IAM9C,WAAAxuE,CAAYkG;KACV,OAAM,YACM,YACA,eACK,MAAK,YACV,YACA,2BAERA;KAEJ,IAAIopE;KAEAe,eACFf,QAAQ/mE,KAAKiO,MAAM65D,YAAYf;KAUjC1tE,MAPkB0uE,sCAAsC,OAAD,yBAClDhB,QAAK;MACRiB;MACAhpB;MACAipB;WAKwB,qBAAf/K,cACThmE,KAAKgmE,WAAWA,aAGlBhmE,KAAKgxE,eAAeA;AACtB;IAEO,KAAA50B;KACL,OAAO,YAAMp8C,KAAKgxE;AACpB;;GASF,MAAMjB,SAAsD91D,eAE1DxT,UAAU,CAAC;IAEX,MAAMopE,QAAQ7vE,KAAK6vE,QACb,UAAaA;IACnB,OAAIA,MAAMS,cACDO,sCAAsChB,SAG1CjoB,gBAMCioB,MAAMiB,WAAW3S,iBAAiBvW,QAAQ;KAC9CjmD,aAAa8E,QAAQ9E;QAEvBkuE,MAAMK,eAAc,GAEbW,sCAAsChB,WAV3CA,MAAMK,eAAc;IACbW,sCAAsChB;AAUjD,MAQMlxB,SAAsD1kC,eAE1DxT,UAAU,CAAC;IAEX,MAAMopE,QAAQ7vE,KAAK6vE,QACb,YAAY,YAAY,2BAA8BA;IAE5D,IAAKA,MAAMoB;KAUJ,KAAKpB,MAAMS,aAChB;MACE,MAAMnsE,eAAe0rE,MAAMiB,WAAW5W,cAAc;OAAEv4D,aAAa8E,QAAQ9E;WACrE,YAAY,gBAAmBwC,QAC/B+sE,mBAAmBrB,MAAM9nB;MAC3BA,iBACF8nB,MAAM9nB,eAAeA,eAGN,cAAfF,cACAE,iBAAiBmpB,oBACe,qBAAzBzqE,QAAQkpE,eAGflpE,QAAQkpE,aAAaE,SACG,cAAfhoB,cACTgoB,MAAM1rE,SAASA;MACf0rE,MAAMS,eAAc,KACI,aAAfzoB,eACTgoB,MAAM5pE,QAAQ,IAAIvE,MAChB,kCAAkCyC,OAAO8jD,yBAAyB;MAEpE4nB,MAAMS,eAAc;AAExB,OAAE,OAAO17D;MACPi7D,MAAM5pE,QAAQ2O,KACdi7D,MAAMS,eAAc;AACtB;WArCoB;KACpBT,MAAMoB,aAAY;KAClB,MAAM9sE,eAAe2sE,WAAW/S,iBAAiBjW,YAAYipB;KAG7DlB,MAAMjoB,SAASzjD,OAAOyjD,QACI,cAAtBzjD,OAAO0jD,eACTgoB,MAAM1rE,SAASA;KACf0rE,MAAMS,eAAc;AAExB;IA8BA,OAAOO,sCAAsChB;AAC/C,MAQM,sCAA0D;IAG9D,OAAO/mE,KAAKC,UAAU;KAAE8mE,OAAO7vE,KAAK6vE;QAAS,CAAC1gE,KAAK9G;KAEjD,IAAY,iBAAR8G,KAGJ,OAAO9G;AAAK;AAEhB;GAMA,SAASwoE,sCACPhB;IAEA,OAAO;KACLA,OAAO,OAAF,WAAOA;KACZE;KACAlnE,UAAQ;KACR81C;;AAEJ;GC3NO,SAASwyB,cAAcC;IAC5B,IAAIA,OAAO3L,SAAS,GAClB,MAAM,IAAIzvB,WAAW;IAEvB,IAAIo7B,OAAOvnC,SAASunC,OAAOvnC,SAAS,GAClC,MAAM,IAAImM,WACR;IAGJ,OAAOo7B,OAAOvnC,QACV,SAASunC,OAAO3L,UAAU2L,OAAO3L,SAAS2L,OAAOvnC,QAAQ,MACzD,SAASunC,OAAO3L;AACtB;OCvBK4L;IAAL,SAAKA;IACH,4CACA;AACD,IAHD,CAAKA,gBAAAA,cAAW;GAUT,MAAMC;IAyCX,YAAmBC,cAAsB;KACvC,IAjCM,KAAAC,UAAkB,GAKlB,KAAAC,YAAoB,GAKpB,KAAAhM,SAAiB,GAKjB,KAAAiM,aAA0B;KAM1B,KAAA7B,QAAqBwB,YAAYM,MAYnCJ,cAAc,GAChB,MAAM,IAAIv7B,WAAW;KAEvBh2C,KAAKuxE,cAAcA,aACnBvxE,KAAK4xE,UAAU,IAAI,iBAAAC;AACrB;IAOO,YAAAC,CAAa9C;KAClBhvE,KAAK0xE,WAAWxwE,MAAK+Y;MACnB;OACEja,KAAKwxE,iBACCxC,aACNhvE,KAAKwxE,WACLxxE,KAAKyxE,aACLzxE,KAAK+xE;AACP,QAAE,OAAO9rE;OACPjG,KAAK4xE,QAAQjE,KAAK,SAAS1nE;AAC7B;AAAA;AAEJ;IAMO,QAAM;KACX,OAA+B,MAA3BjG,KAAK0xE,WAAWjsE,SACXmL,QAAQC,aAGjB7Q,KAAK+xE;KAEE,IAAInhE,SAAc,CAACC,SAAS+C;MACjC5T,KAAK4xE,QAAQ5gE,GAAG,UAAUH,UAE1B7Q,KAAK4xE,QAAQ5gE,GAAG,UAAU/K;OACxBjG,KAAK6vE,QAAQwB,YAAY3vE,OACzBkS,OAAO3N;AAAM;AACb;AAEN;IAMQ,aAAA+rE;KACN,OAAIhyE,KAAKylE,SAASzlE,KAAK0xE,WAAWjsE,SACzBzF,KAAK0xE,WAAW1xE,KAAKylE,YAEvB;AACT;IAOQ,eAAAsM;KACN,IAAI/xE,KAAK6vE,UAAUwB,YAAY3vE,OAI/B,IAAI1B,KAAKyxE,aAAazxE,KAAK0xE,WAAWjsE,QACpCzF,KAAK4xE,QAAQjE,KAAK,gBAIpB,MAAO3tE,KAAKwxE,UAAUxxE,KAAKuxE,eAAa;MACtC,MAAMvC,YAAYhvE,KAAKgyE;MACvB,KAAIhD,WAGF;MAFAA;AAIJ;AACF;;GCvIK,MAAMiD,sBAAsB,iBAAA7yD;IAuBjC,WAAA7e,CACU2xE,SACAhhE,YACRzK;KAEAtE,MAAMsE,UAJE,KAAAyrE,UAAAA,SACA,KAAAhhE,aAAAA,YAIRlR,KAAKmyE,4BAA4B;KACjCnyE,KAAKoyE,cAAc,GACnBpyE,KAAKqyE,oBAAoB;KAGzB,IAAIC,gBAAgB;KACpB,KAAK,MAAMC,OAAOvyE,KAAKkyE,SACrBI,iBAAiBC,IAAIrhE;KAEvB,IAAIohE,gBAAgBtyE,KAAKkR,YACvB,MAAM,IAAIxP,MAAM;AAEpB;IAOO,KAAA4kE,CAAM94D;KACPxN,KAAKqyE,qBAAqBryE,KAAKkR,cACjClR,KAAKkB,KAAK,OAGPsM,SACHA,OAAOxN,KAAKwyE;KAGd,MAAMC,aAAuB;KAC7B,IAAI11D,IAAI;KACR,MAAOA,IAAIvP,QAAQxN,KAAKqyE,oBAAoBryE,KAAKkR,cAAY;MAE3D,MAAMwhE,4BAA4B1yE,KAAKkR,aAAalR,KAAKqyE,mBACnDM,gCACJ3yE,KAAKkyE,QAAQlyE,KAAKoyE,aAAalhE,aAAalR,KAAKmyE,2BAC7CS,YAAYp9D,KAAKG,IAAIg9D,+BAA+BD;MAC1D,IAAIE,YAAYplE,OAAOuP,GAAG;OAExB,MAAMpK,MAAM3S,KAAKmyE,4BAA4B3kE,OAAOuP;OACpD01D,WAAWvxE,KAAKlB,KAAKkyE,QAAQlyE,KAAKoyE,aAAatwE,MAAM9B,KAAKmyE,2BAA2Bx/D;OACrF3S,KAAKqyE,qBAAqB7kE,OAAOuP,GACjC/c,KAAKmyE,4BAA4Bx/D,KACjCoK,IAAIvP;OACJ;AACF;MAAO;OAEL,MAAMmF,MAAM3S,KAAKmyE,4BAA4BS;OAC7CH,WAAWvxE,KAAKlB,KAAKkyE,QAAQlyE,KAAKoyE,aAAatwE,MAAM9B,KAAKmyE,2BAA2Bx/D;OACjFigE,cAAcD,iCAEhB3yE,KAAKmyE,4BAA4B;OACjCnyE,KAAKoyE,iBAELpyE,KAAKmyE,4BAA4Bx/D,KAEnC3S,KAAKqyE,qBAAqBO;OAC1B71D,KAAK61D;AACP;AACF;KAEIH,WAAWhtE,SAAS,IACtBzF,KAAKkB,KAAKoR,OAAOzD,OAAO4jE,eACO,MAAtBA,WAAWhtE,UACpBzF,KAAKkB,KAAKuxE,WAAW;AAEzB;;;GCjGF,MAAMI,yDAAkB,aAAiBC;GAUlC,MAAMC;IAoBX,QAAWvlE;KACT,OAAOxN,KAAKgzE;AACd;IAsBA,WAAAzyE,CAAY0yE,UAAkBf,SAAoBgB;KAvC1C,KAAAhB,UAAoB,IAwC1BlyE,KAAKizE,WAAWA,UAChBjzE,KAAKgzE,QAAQ;KAGb,MAAMG,YAAY39D,KAAKO,KAAKk9D,WAAWJ;KACvC,KAAK,IAAI91D,IAAI,GAAGA,IAAIo2D,WAAWp2D,KAAK;MAClC,IAAIkS,MAAMlS,MAAMo2D,YAAY,IAAIF,WAAWJ,kBAAkBA;MACjD,MAAR5jD,QACFA,MAAM4jD,kBAER7yE,KAAKkyE,QAAQhxE,KAAKoR,OAAO8gE,YAAYnkD;AACvC;KAEIijD,WACFlyE,KAAKqzE,KAAKnB,SAASgB;AAEvB;IAWO,IAAAG,CAAKnB,SAAmBgB;KAC7BlzE,KAAKgzE,QAAQx9D,KAAKG,IAAI3V,KAAKizE,UAAUC;KAErC,IAAIn2D,IAAI,GACN0pB,IAAI,GACJ6sC,eAAe,GACfC,eAAe,GACfC,iBAAiB;KACnB,MAAOA,iBAAiBxzE,KAAKgzE,SAAO;MAClC,MAAMzzD,SAAS2yD,QAAQn1D,IACjBmjB,SAASlgC,KAAKkyE,QAAQzrC,IACtBgtC,YAAYl0D,OAAOm0D,KAAKxzC,QAAQozC,cAAcC;MAEpDC,kBAAkBC,WAClBF,gBAAgBE,WAChBH,gBAAgBG;MACZF,iBAAiBh0D,OAAO9Z,WAC1BsX,KACAw2D,eAAe,IAEbD,iBAAiBpzC,OAAOz6B,WAC1BghC;MACA6sC,eAAe;AAEnB;KAGApB,QAAQ3wE,OAAO,GAAGwb,IACdm1D,QAAQzsE,SAAS,MACnBysE,QAAQ,KAAKA,QAAQ,GAAGpwE,MAAMyxE;AAElC;IAMO,iBAAAI;KACL,OAAO,IAAI1B,cAAcjyE,KAAKkyE,SAASlyE,KAAKwN;AAC9C;;GC7FK,MAAMomE;IAmGX,WAAArzE,CACEoQ,UACAkjE,YACAC,YACAC,iBACAxC,aACAyC;KAEA,IAjFe,KAAApC,UAAwB,IAAI,iBAAAC,cAUrC,KAAApM,SAAiB,GAKjB,KAAAwO,eAAuB;KAKvB,KAAAjmE,WAAmB,GAKnB,KAAAkmE,4BAAoC,GAUpC,KAAAC,aAAqB,GASrB,KAAAC,sBAAgC;KAKhC,KAAAC,mBAA2B,GAK3B,KAAAC,WAA2B,IAK3B,KAAAC,WAA2B,IAsB7BV,cAAc,GAChB,MAAM,IAAI79B,WAAW,gDAAgD69B;KAGvE,IAAIC,cAAc,GAChB,MAAM,IAAI99B,WAAW,gDAAgD89B;KAGvE,IAAIvC,eAAe,GACjB,MAAM,IAAIv7B,WAAW,iDAAiDu7B;KAGxEvxE,KAAK6zE,aAAaA,YAClB7zE,KAAK8zE,aAAaA,YAClB9zE,KAAK2Q,WAAWA;KAChB3Q,KAAK+zE,kBAAkBA,iBACvB/zE,KAAKuxE,cAAcA,aACnBvxE,KAAKg0E,WAAWA;AAClB;IAOO,QAAM;KACX,OAAO,IAAIpjE,SAAc,CAACC,SAAS+C;MACjC5T,KAAK2Q,SAASK,GAAG,SAASq7B;OACxBA,OAAuB,mBAATA,OAAoB/5B,OAAOE,KAAK65B,MAAMrsC,KAAKg0E,YAAY3nC,MACrErsC,KAAKw0E,qBAAqBnoC;OAErBrsC,KAAKy0E,iBACRz0E,KAAK2Q,SAASm1D;AAChB,WAGF9lE,KAAK2Q,SAASK,GAAG,UAAU4D;OACzB5U,KAAK4xE,QAAQjE,KAAK,SAAS/4D;AAAI,WAGjC5U,KAAK2Q,SAASK,GAAG,QAAO;OACtBhR,KAAKi0E,eAAc,GACnBj0E,KAAK4xE,QAAQjE,KAAK;AAAW,WAG/B3tE,KAAK4xE,QAAQ5gE,GAAG,UAAU4D;OACxB5U,KAAKgO,WAAU,GACfhO,KAAK2Q,SAASm1D,SACdlyD,OAAOgB;AAAI,WAGb5U,KAAK4xE,QAAQ5gE,GAAG,aAAY;OAC1B,IAAIhR,KAAKu0E,SAAS9uE,SAAS,GACzBzF,KAAK00E,gCAIP,IAAI10E,KAAKi0E,eAAkD,MAAnCj0E,KAAKk0E,2BAC3B,IAAIl0E,KAAKq0E,mBAAmB,KAAKr0E,KAAKq0E,mBAAmBr0E,KAAK6zE,YAAY;QACxE,MAAMhgE,SAAS7T,KAAK20E;QACpB30E,KAAK+zE,iBAAgB,MAAMlgE,OAAO8/D,sBAAqB9/D,OAAOrG,MAAMxN,KAAKylE,QACtExxD,KAAKpD,SACLqD,MAAMN;AACX,cAAO;QAAA,IAAI5T,KAAKq0E,oBAAoBr0E,KAAK6zE,YACvC;QAEAhjE;AACF;AACF;AACA;AAEN;IAOQ,oBAAA2jE,CAAqBnoC;KAC3BrsC,KAAKo0E,oBAAoBlzE,KAAKmrC,OAC9BrsC,KAAKq0E,oBAAoBhoC,KAAK5mC;AAChC;IAOQ,kCAAAkvE,CAAmC9gE;KAQzC,OAPKA,SAGHA,OAAOw/D,KAAKrzE,KAAKo0E,qBAAqBp0E,KAAKq0E,oBAF3CxgE,SAAS,IAAIk/D,aAAa/yE,KAAK6zE,YAAY7zE,KAAKo0E,qBAAqBp0E,KAAKq0E;KAK5Er0E,KAAKq0E,oBAAoBxgE,OAAOrG,MACzBqG;AACT;IAWQ,WAAA4gE;KACN,MAAOz0E,KAAKq0E,oBAAoBr0E,KAAK6zE,cAAY;MAC/C,IAAIhgE;MAEJ,IAAI7T,KAAKs0E,SAAS7uE,SAAS,GACzBoO,SAAS7T,KAAKs0E,SAAS/1D,SACvBve,KAAK20E,mCAAmC9gE,cACnC;OACL,MAAI7T,KAAKm0E,aAAan0E,KAAK8zE,aAKzB,QAAO;OAJPjgE,SAAS7T,KAAK20E,sCACd30E,KAAKm0E;AAKT;MAEAn0E,KAAKu0E,SAASrzE,KAAK2S,SACnB7T,KAAK00E;AACP;KACA,QAAO;AACT;IAMQ,6BAAMA;KACZ,IAAI7gE;KACJ,GAAG;MACD,IAAI7T,KAAKk0E,6BAA6Bl0E,KAAKuxE,aACzC;MAGF19D,SAAS7T,KAAKu0E,SAASh2D,SACnB1K,UACF7T,KAAK40E,uBAAuB/gE;AAEhC,cAASA;AACX;IAOQ,4BAAM+gE,CAAuB/gE;KACnC,MAAMghE,eAAehhE,OAAOrG;KAE5BxN,KAAKk0E,6BACLl0E,KAAKylE,UAAUoP;KAEf;YACQ70E,KAAK+zE,iBACT,MAAMlgE,OAAO8/D,sBACbkB,cACA70E,KAAKylE,SAASoP;AAElB,OAAE,OAAOjgE;MAEP,YADA5U,KAAK4xE,QAAQjE,KAAK,SAAS/4D;AAE7B;KAEA5U,KAAKk0E,6BACLl0E,KAAK80E,YAAYjhE,SACjB7T,KAAK4xE,QAAQjE,KAAK;AACpB;IAOQ,WAAAmH,CAAYjhE;KAClB7T,KAAKs0E,SAASpzE,KAAK2S,SACd7T,KAAKgO,YAAWhO,KAAKy0E,iBAAkBz0E,KAAKi0E,eAC/Cj0E,KAAK2Q,SAASuC;AAElB;;;GC3TK+G,eAAe86D,eACpBrkE,QACAmD,QACA4xD,QACA9yD,KACAqhE;IAEA,IAAIgB,MAAM;IACV,MAAMnrC,QAAQl3B,MAAM8yD;IAEpB,OAAO,IAAI70D,SAAc,CAACC,SAAS+C;KACjC,MAAM/Q,UAAUG,YACd,MAAM4Q,OAAO,IAAIlS,MAAM,oD3DfU;K2DmBnCgP,OAAOM,GAAG,aAAY;MACpB,IAAIgkE,OAAOnrC,OAGT,OAFA/2B,aAAajQ,eACbgO;MAIF,IAAIS,QAAQZ,OAAOqO;MACnB,KAAKzN,OACH;MAEmB,mBAAVA,UACTA,QAAQgB,OAAOE,KAAKlB,OAAO0iE;MAI7B,MAAMiB,cAAcD,MAAM1jE,MAAM7L,SAASokC,QAAQA,QAAQmrC,MAAM1jE,MAAM7L;MAErEoO,OAAOw/D,KAAK/hE,MAAMxP,MAAM,GAAGmzE,cAAcxP,SAASuP,KAAKvP,SAASuP,MAAMC;MACtED,OAAOC;AAAW,UAGpBvkE,OAAOM,GAAG,QAAO;MACf8B,aAAajQ,UACTmyE,MAAMnrC,SACRj2B,OACE,IAAIlS,MACF,+DAA+DszE,mBAAmBnrC;MAIxFh5B;AAAS,UAGXH,OAAOM,GAAG,UAAU4lB;MAClB9jB,aAAajQ,UACb+Q,OAAOgjB;AAAI;AACX;AAEN;GAuGO,MAAMs+C,mCAAS,UAAe,oBAExBC,qBAAqB;GCguB3B,MAAMC,mBAAmB;IAe9B,QAAWhzE;KACT,OAAOpC,KAAKkjB;AACd;IAKA,iBAAWgjC;KACT,OAAOlmD,KAAKq1E;AACd;IA6DA,WAAA90E,CACE+0E,uBACAC,qCAMAC,mBAGA/uE;KAGA,IAAIoF,UACApC;KACJ,IAHAhD,UAAUA,WAAW,CAAC,GAGlB44C,eAAek2B,sCAEjB9rE,MAAM6rE;KACNzpE,WAAW0pE,0CACN,IACJ,cAAUA,+CAA+C92B,8BAC1D82B,+CAA+Cz2B,uBAC/C90B,kBAAkBurD,sCAGlB9rE,MAAM6rE;KAENzpE,WAAW6zC,YAAY61B,qCADvB9uE,UAAU+uE,yBAEL,IACJD,uCAC8C,mBAAxCA,qCASF;MAAA,KACLA,uCAC+C,mBAAxCA,wCACPC,qBAC6B,mBAAtBA,mBAyCP,MAAM,IAAI9zE,MAAM;MAxChB;OAEA,MAAMwkD,gBAAgBqvB,qCAChBp6B,WAAWq6B,mBAEXC,iBAAiB/gC,6BAA6B4gC;OACpD,IAA4B,wBAAxBG,eAAetgC,MAA8B;QAC/C,KAAI,YAgBF,MAAM,IAAIzzC,MAAM;QAhBN;SACV,MAAMuiE,sBAAsB,IAAIxlB,2BAC9Bg3B,eAAezgC,aACfygC,eAAexgC;SAEjBxrC,MAAM6rC,gBACJA,gBAAgBmgC,eAAehsE,KAAKyxB,mBAAmBgrB,iBACvDhrB,mBAAmBigB;SAGhB10C,QAAQgf,iBACXhf,QAAQgf,eAAe,oCAAwBgwD,eAAe9gC;SAGhE9oC,WAAW6zC,YAAYukB,qBAAqBx9D;AAC9C;AAGF,cAAO;QAAA,IAA4B,oBAAxBgvE,eAAetgC,MAUxB,MAAM,IAAIzzC,MACR;QAVF+H,MACE6rC,gBACEA,gBAAgBmgC,eAAehsE,KAAKyxB,mBAAmBgrB,iBACvDhrB,mBAAmBigB,aAErB,MACAs6B,eAAergC;QACjBvpC,WAAW6zC,YAAY,IAAIZ,qBAAuBr4C;AAKpD;AACF;AAEA,YAnDEgD,MAAM6rE,uBACFE,qBAAkD,mBAAtBA,sBAC9B/uE,UAAU+uE;KAEZ3pE,WAAW6zC,YAAY,IAAIZ,qBAAuBr4C;KAiDpDtE,MAAMsH,KAAKoC,aACRsvC,UAAUn7C,KAAKkjB,OAAOgjC,eAAelmD,KAAKq1E,kBAC3Cr1E,KAAK01E;KACP11E,KAAK21E,cAAc31E,KAAK4hE,qBAAqB17C,MAE7ClmB,KAAK41E,YAAYjgC,gBAAgB31C,KAAKyJ,KAAK,kCAAwBoqC;KACnE7zC,KAAK61E,aAAalgC,gBAAgB31C,KAAKyJ,KAAK,kCAAwBqqC;AACtE;IASO,YAAAgiC,CAAajvB;KAClB,OAAO,IAAIuuB,WACT7/B,gBACEv1C,KAAKyJ,KACL,kCAAwBoqC,UACJ,MAApBgT,SAASphD,cAAenC,IAAYujD,WAEtC7mD,KAAK6L;AAET;IASO,WAAAkqE,CAAYjvB;KACjB,OAAO,IAAIsuB,WACT7/B,gBACEv1C,KAAKyJ,KACL,kCAAwBqqC,WACH,MAArBgT,UAAUrhD,cAAenC,IAAYwjD,YAEvC9mD,KAAK6L;AAET;IAMO,mBAAAmqE;KACL,OAAO,IAAIC,iBAAiBj2E,KAAKyJ,KAAKzJ,KAAK6L;AAC7C;IAMO,kBAAAqqE;KACL,OAAO,IAAIC,gBAAgBn2E,KAAKyJ,KAAKzJ,KAAK6L;AAC5C;IAMO,iBAAAuqE;KACL,OAAO,IAAIC,eAAer2E,KAAKyJ,KAAKzJ,KAAK6L;AAC3C;IA6DO,cAAMixD,CACX2I,SAAiB,GACjB57B,OACApjC,UAA+B,CAAC;KAMhC,OAJAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5C3+D,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC;KAC5CoJ,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE,UAEhDp9C,cAAcL,SAAS,uBAAuB3d,UAASwT,MAAOkK;;MACnE,MAAMvR,MAAMwoC,qBACJp7C,KAAK21E,YAAY7Y,SAAS;OAC9Bn7D,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BrsC,gBAAgB;QACd5uB,oBAAoB,kBAAS9G,IAAYmD,QAAQu/D;;OAEnDhP,OAAkB,MAAXyO,UAAiB57B,QAAoBsnC,cAAc;QAAE1L;QAAQ57B;iBAApCvmC;OAChCkzE,oBAAoB/vE,QAAQ+vE;OAC5BC,sBAAsBhwE,QAAQiwE;OAC9B7vB,UAAUpgD,QAAQogD;OAClB8vB,SAASlwE,QAAQ6vE;OACjBpyD,gBAAgBC,eAAeD;WAI7B0yD,aAAU,gCACXhkE,MAAG;OACNi0D,WAAWj0D,IAAIi0D;OACfJ,sCAAsC7zD,IAAIg8C;OAC1C8X,mCAAmCvtB,6BAA6BvmC,IAAIi8C;;MAGtE,KAAK,YACH,OAAO+nB;MAaT,UALiCtzE,MAA7BmD,QAAQ0/D,oBAAkC1/D,QAAQ0/D,mBAAmB,OAEvE1/D,QAAQ0/D,mB5DluC2C;W4DquC3B7iE,MAAtBsP,IAAIoN,eACN,MAAM,IAAIg2B,WAAW;MAGvB,KAAKpjC,IAAI4xC,MACP,MAAM,IAAIxO,WAAW;MAGvB,OAAO,IAAIwwB,qBACToQ,aACA38D,MAAOgvB;;OACL,MAAM4tC,yBAAqD;QACzDN,uBAAuB9vE,QAAQ2+D;QAC/BE,0BAA0B;SACxBnO,SAAS1wD,QAAQ2+D,WAAYjO,WAAWvkD,IAAI4xC;SAC5CuR,iBAAiBtvD,QAAQ2+D,WAAYrP;SACrCqB,aAAa3wD,QAAQ2+D,WAAYhO;SACjCpB,mBAAmBvvD,QAAQ2+D,WAAYpP;SACvCqB,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;QAE9BrO,OAAOma,cAAc;SACnBtnC,OAAO47B,SAAS7yD,IAAIoN,gBAAiBipB;SACrCw8B,QAAQx8B;;QAEVutC,oBAAoB/vE,QAAQ+vE;QAC5BC,sBAAsBhwE,QAAQiwE;QAC9B7vB,UAAUpgD,QAAQogD;QAClB8vB,SAASlwE,QAAQ6vE;;OAUnB,cACQt2E,KAAK21E,YAAY7Y,SAAS,OAAD;QAC7Bn7D,aAAa8E,QAAQ9E;UAClBk1E,0BAELnjE;AAAmB,UAEvB+xD,QACA7yD,IAAIoN,eACJ;OACEmmD,kBAAkB1/D,QAAQ0/D;OAC1BH,YAAYv/D,QAAQu/D;;AAEvB;AAEL;IAWO,YAAM8Q,CAAOrwE,UAA6B,CAAC;KAChD,OAAOge,cAAcL,SAAS,qBAAqB3d,UAASwT,MAAOkK;MACjE;OAQE,OAPAqqD,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE,gBACjD7hE,KAAKk6D,cAAc;QACvBv4D,aAAa8E,QAAQ9E;QACrB20E,qBAAqB7vE,QAAQ6vE;QAC7BlR,YAAY3+D,QAAQ2+D;QACpBlhD,gBAAgBC,eAAeD;YAE1B;AACT,QAAE,OAAOjW;OACP,IAAqB,QAAjBA,EAAE6B,YAEJ,QAAO;OACF,IACY,QAAjB7B,EAAE6B,e5D3mC0C,0C4D4mC3C7B,EAAEiwB,QAAQ8sB,a5D1mCnB,gD4D2mCU/8C,EAAEiwB,QAAQ8sB,YAGZ,QAAO;OAET,MAAM/8C;AACR;AAAA;AAEJ;IAcO,mBAAMisD,CACXzzD,UAAoC,CAAC;KAIrC,OAFAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5CoJ,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE;KAChDp9C,cAAcL,SAAS,4BAA4B3d,UAASwT,MAAOkK;;MACxE,MAAMvR,MAAMwoC,qBACJp7C,KAAK21E,YAAYzb,cAAc;OACnCv4D,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BsR,SAASlwE,QAAQ6vE;OACjBpyD,gBAAgBC,eAAeD;;MAInC,OAAO,OAAP,yBACKtR,MAAG;OACNi0D,WAAWj0D,IAAIi0D;OACfJ,sCAAsC7zD,IAAIg8C;OAC1C8X,mCAAmCvtB,6BAA6BvmC,IAAIi8C;;AAAuB;AAGjG;IAWO,YAAM,CAAOpoD,UAA6B,CAAC;KAEhD,OADAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GACrC3gD,cAAcL,SAAS,qBAAqB3d,UAASwT,MAAOkK;;MACjE,OAAOi3B,qBACCp7C,KAAK21E,YAAYptE,OAAO;OAC5B5G,aAAa8E,QAAQ9E;OACrBo1E,iBAAiBtwE,QAAQswE;OACzBR,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BnhD,gBAAgBC,eAAeD;;AAElC;AAEL;IAWO,oBAAM8yD,CACXvwE,UAA6B,CAAC;KAE9B,OAAOge,cAAcL,SAAS,6BAA6B3d,UAASwT,MAAOkK;;MACzE;OACE,MAAMvR,MAAMwoC,qBAAqBp7C,KAAKuI,OAAO4b;OAC7C,OAAO,OAAP;QACE8yD,YAAW;UACRrkE,MAAG;QACNi0D,WAAWj0D,IAAIi0D;;AAEnB,QAAE,OAAO54D;OACP,IAA6B,oBAAhB,UAAT,KAAAA,EAAEiwB,iBAAO,uBAAE8sB,YACb,OAAO,OAAP;QACEisB,YAAW;UACE,UAAV,KAAAhpE,EAAEgC,kBAAQ,uBAAE0a,gBAAa;QAC5Bk8C,WAAW54D,EAAEgC;;OAGjB,MAAMhC;AACR;AAAA;AAEJ;IAUO,cAAM+uD,CAASv2D,UAA+B,CAAC;KACpD,OAAOge,cAAcL,SAAS,uBAAuB3d,UAASwT,MAAOkK,kBAC5Di3B,qBACCp7C,KAAK21E,YAAY3Y,SAAS;MAC9Br7D,aAAa8E,QAAQ9E;MACrBuiB,gBAAgBC,eAAeD;;AAIvC;IAiBO,oBAAMgzD,CACXC,iBACA1wE,UAAqC,CAAC;KAItC,OAFAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5CoJ,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE;KAChDp9C,cAAcL,SAAS,6BAA6B3d,UAASwT,MAAOkK;;MACzE,OAAOi3B,qBACCp7C,KAAK21E,YAAYtY,eAAe;OACpC17D,aAAa8E,QAAQ9E;OACrBy1E,iBAAiBD;OACjBZ,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAG9BnhD,gBAAgBC,eAAeD;;AAElC;AAEL;IAaO,iBAAMk3C,CACX/W,UACA59C,UAAkC,CAAC;KAInC,OAFAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5CoJ,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE;KAChDp9C,cAAcL,SAAS,0BAA0B3d,UAASwT,MAAOkK;;MACtE,OAAOi3B,qBACCp7C,KAAK21E,YAAYva,YAAY;OACjCz5D,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/B/gB;OACAihB,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BsR,SAASlwE,QAAQ6vE;OACjB7tB,iBAAiBhiD,QAAQgiD;OACzBvkC,gBAAgBC,eAAeD;;AAElC;AAEL;IAWO,aAAMw6C,CAAQ/2B,MAAYlhC,UAA8B,CAAC;KAC9D,OAAOge,cAAcL,SAAS,sBAAsB3d,UAASwT,MAAOkK;;MAClE,OAAOi3B,qBACCp7C,KAAK21E,YAAYjX,QAAQ;OAC7B/8D,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BnhD,gBAAgBC,eAAeD;OAC/ByjB,MAAMuQ,WAAWvQ;;AAEpB;AAEL;IAOO,aAAM62B,CAAQ/3D,UAA8B,CAAC;KAClD,OAAOge,cAAcL,SAAS,sBAAsB3d,UAASwT,MAAOkK;;MAClE,MAAMlU,WAAWmrC,qBACTp7C,KAAK21E,YAAYnX,QAAQ;OAC7B78D,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BnhD,gBAAgBC,eAAeD;;MAQnC,OALqB,gCAChBjU,WAAQ;OACX42D,WAAW52D,SAAS42D;OACpBl/B,MAAMyQ,OAAO;QAAED,YAAYloC,SAASkoC;aAAiB,CAAC;;AAElC;AAE1B;IAQO,kBAAAk/B,CAAmBC;KACxB,OAAO,IAAIxS,gBAAgB9kE,MAAMs3E;AACnC;IAQO,oBAAMzZ,CACXp3D,UAAqC,CAAC;KAItC,OAFAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5CoJ,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE;KAChDp9C,cAAcL,SAAS,6BAA6B3d,UAASwT,MAAOkK;;MACzE,OAAOi3B,qBACCp7C,KAAK21E,YAAY9X,eAAe;OACpCl8D,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/B/gB,UAAU59C,QAAQ49C;OAClBihB,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BsR,SAASlwE,QAAQ6vE;OACjB7tB,iBAAiBhiD,QAAQgiD;OACzBvkC,gBAAgBC,eAAeD;;AAElC;AAEL;IA0EO,sBAAMqzD,CACXzvB,YACArhD,UAAuC,CAAC;KAOxC,MAKM+wE,SAAS,IAAI7G,2BAA2B;MAC5CG,YANmC;OACnC3S,kBAAkB,IAAI95D,SAASrE,KAAKm+D,oBAAoB95D;OACxD61D,eAAe,IAAI71D,SAASrE,KAAKk6D,iBAAiB71D;OAClD05D,kBAAkB,IAAI15D,SAASrE,KAAK+9D,oBAAoB15D;;MAIxDyjD;MACAkpB,cAAcvqE,QAAQuqE;MACtBhL,YAAYv/D,QAAQu/D;MACpB4K,YAAYnqE,QAAQmqE;MACpBG,yBAAyBtqE;;KAO3B,aAFM+wE,OAAO/H,QAEN+H;AACT;IAUO,sBAAMrZ,CACXvW,QACAnhD,UAAuC,CAAC;KAExC,OAAOge,cAAcL,SACnB,+BACA3d,UACAwT,MAAOkK,kBACEi3B,qBACCp7C,KAAK21E,YAAYxX,iBAAiBvW,QAAQ;MAC9CjmD,aAAa8E,QAAQ9E;MACrB40E,uBAAuB9vE,QAAQ2+D;MAC/BlhD,gBAAgBC,eAAeD;;AAKzC;IAUO,qBAAMuzD,CACX3vB,YACArhD,UAAsC,CAAC;KAIvC,OAFAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5C3+D,QAAQixE,mBAAmBjxE,QAAQixE,oBAAoB,CAAC;KACjDjzD,cAAcL,SAAS,8BAA8B3d,UAASwT,MAAOkK;;MAC1E,OAAOi3B,qBACCp7C,KAAK21E,YAAY1X,YAAYnW,YAAY;OAC7CnmD,aAAa8E,QAAQ9E;OACrB0iD,UAAU59C,QAAQ49C;OAClBkyB,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BsS,gCAAgC;QAC9B5f,eAAuC,UAAxB,KAAAtxD,QAAQixE,0BAAgB,uBAAEvgB;QACzCU,uBAA+C,UAAxB,KAAApxD,QAAQixE,0BAAgB,uBAAE3hB;QACjDiC,mBAA2C,UAAxB,KAAAvxD,QAAQixE,0BAAgB,uBAAEtgB;QAC7CU,yBAAiD,UAAxB,KAAArxD,QAAQixE,0BAAgB,uBAAE1hB;;OAErDoC,kBAAkB3xD,QAAQ2xD;OAC1BC,yBAAyBte,0BAA0BtzC,QAAQmxE;OAC3DhgB,MAAM2W,aAAa9nE,QAAQmxD;OAC3BM,gBAAgBlgB,iBAAiBvxC,QAAQkhC;OACzCwoB,0BAAoD,UAA1B,KAAA1pD,QAAQoxE,4BAAkB,uBAAEC;OACtD9uB,wBAAkD,UAA1B,KAAAviD,QAAQoxE,4BAAkB,uBAAEE;OACpD9uB,WAAWxiD,QAAQwiD;OACnBR,iBAAiBhiD,QAAQgiD;OACzB6P,gBAAgB7xD,QAAQ6xD;OACxBp0C,gBAAgBC,eAAeD;;AAElC;AAEL;IAaO,mBAAM8zD,CACXpgB,MACAnxD,UAA8B,CAAC;KAE/B,OAAOge,cAAcL,SAAS,4BAA4B3d,UAASwT,MAAOkK;;MACxE,OAAOi3B,qBACCp7C,KAAK21E,YAAYtX,QAAQkQ,aAAa3W,OAAQ;OAClDj2D,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9Bxc,mBAAmBpiD,QAAQoiD;OAC3B3kC,gBAAgBC,eAAeD;;AAElC;AAEL;IA8CO,sBAAM+zD,CACXC,QACAC,QACAC,QACAC,SAAsC,CAAC;;KAEvC,IAAIxkE,QACA4xD,SAAS,GACT57B,QAAQ,GACRpjC,UAAU4xE;KACVH,kBAAkB5lE,UACpBuB,SAASqkE,QACTzS,SAAS0S,UAAU,GACnBtuC,QAA0B,mBAAXuuC,SAAsBA,SAAS,MAE9C3S,SAA2B,mBAAXyS,SAAsBA,SAAS;KAC/CruC,QAA0B,mBAAXsuC,SAAsBA,SAAS,GAC9C1xE,UAAW2xE,UAA0C,CAAC;KAGxD,IAAIE,YAA6B,UAAjB,KAAA7xE,QAAQ6xE,mBAAS,gBAAI;KAErC,IAAIA,YAAY,GACd,MAAM,IAAItiC,WAAW;KAMvB,IAJkB,MAAdsiC,cACFA,Y5Dh3DmD,U4Dm3DjD7S,SAAS,GACX,MAAM,IAAIzvB,WAAW;KAGvB,IAAInM,SAASA,SAAS,GACpB,MAAM,IAAImM,WAAW;KAOvB,OAJKvvC,QAAQ2+D,eACX3+D,QAAQ2+D,aAAa,CAAC,IAGjB3gD,cAAcL,SACnB,+BACA3d,UACAwT,MAAOkK;MAEL,KAAK0lB,OAAO;OACV,MAAM55B,iBAAiBjQ,KAAKk6D,cAAc,OAAD,yBACpCzzD,UAAO;QACVyd,gBAAgBC,eAAeD;;OAGjC,IADA2lB,QAAQ55B,SAAS+P,gBAAiBylD,QAC9B57B,QAAQ,GACV,MAAM,IAAImM,WACR,UAAUyvB,6CAA6Cx1D,SAAS+P;AAGtE;MAGA,KAAKnM,QACH;OACEA,SAASvB,OAAOimE,MAAM1uC;AACxB,QAAE,OAAO5jC;OACP,MAAM,IAAIvE,MACR,0CAA0CmoC,0JAA0J5jC,MAAM/D;AAE9M;MAGF,IAAI2R,OAAOpO,SAASokC,OAClB,MAAM,IAAImM,WACR,mFAAmFnM;MAIvF,IAAI2uC,mBAA2B;MAC/B,MAAMC,QAAQ,IAAInH,MAAM7qE,QAAQ8qE;MAChC,KAAK,IAAImH,MAAMjT,QAAQiT,MAAMjT,SAAS57B,OAAO6uC,OAAYJ,WACvDG,MAAM3G,cAAa73D;OAEjB,IAAI0+D,WAAWlT,SAAS57B;OACpB6uC,MAAMJ,YAAYK,aACpBA,WAAWD,MAAMJ;OAEnB,MAOM5nE,gBAPiB1Q,KAAK88D,SAAS4b,KAAKC,WAAWD,KAAK;QACxD/2E,aAAa8E,QAAQ9E;QACrByjE,YAAY3+D,QAAQ2+D;QACpBe,kBAAkB1/D,QAAQmyE;QAC1BtC,qBAAqB7vE,QAAQ6vE;QAC7BpyD,gBAAgBC,eAAeD;WAETxQ;aAClBqhE,eAAerkE,QAAQmD,QAAS6kE,MAAMjT,QAAQkT,WAAWlT,SAI/D+S,oBAAoBG,WAAWD;OAC3BjyE,QAAQu/D,cACVv/D,QAAQu/D,WAAW;QAAEv0D,aAAa+mE;;AACpC;MAIJ,aADMC,MAAMI,MACLhlE;AAAM;AAGnB;IAkBO,oBAAMilE,CACXC,UACAtT,SAAiB,GACjB57B,OACApjC,UAA+B,CAAC;KAEhC,OAAOge,cAAcL,SAAS,6BAA6B3d,UAASwT,MAAOkK;MACzE,MAAMlU,iBAAiBjQ,KAAK88D,SAAS2I,QAAQ57B,OAAO,OAAF,yBAC7CpjC,UAAO;OACVyd,gBAAgBC,eAAeD;;MAQjC,OANIjU,SAASyD,4BDp1DZuG,eACL++D,IACAC;OAEA,OAAO,IAAIroE,SAAc,CAACC,SAAS+C;QACjC,MAAMslE,KAAK,+BAAqBD;QAEhCD,GAAGhoE,GAAG,UAAU4D;SACdhB,OAAOgB;AAAI,aAGbskE,GAAGloE,GAAG,UAAU4D;SACdhB,OAAOgB;AAAI,aAGbskE,GAAGloE,GAAG,SAASH,UAEfmoE,GAAGxoE,KAAK0oE;AAAG;AAEf,OCk0DcC,CAAsBlpE,SAASyD,oBAAoBqlE,WAI1D9oE,SAAiB22D,0BAAqBtjE;MAChC2M;AAAQ;AAEnB;IAEQ,+BAAAylE;KACN,IAAIxvB,eACA/K;KACJ;MASE,MAAMp5B,YAAY,IAAIxS,IAAIvP,KAAKyJ;MAE/B,IAAqC,WAAjCsY,UAAU9G,KAAKtW,MAAM,KAAK,IAAe;OAG3C,MAAMy0E,iBAAiBr3D,UAAUtN,SAAS+L,MAAM;OAChD0lC,gBAAgBkzB,eAAgB,IAChCj+B,WAAWi+B,eAAgB;AAC7B,aAAO,IAAIrhC,kBAAkBh2B,YAAY;OAIvC,MAAMq3D,iBAAiBr3D,UAAUtN,SAAS+L,MAAM;OAChD0lC,gBAAgBkzB,eAAgB,IAChCj+B,WAAWi+B,eAAgB;AAC7B,aAAO;OAGL,MAAMA,iBAAiBr3D,UAAUtN,SAAS+L,MAAM;OAChD0lC,gBAAgBkzB,eAAgB,IAChCj+B,WAAWi+B,eAAgB;AAC7B;MAUA,IAPAlzB,gBAAgB/L,mBAAmB+L,gBACnC/K,WAAWhB,mBAAmBgB;MAI9BA,WAAWA,SAASp2C,QAAQ,OAAO,OAE9BmhD,eACH,MAAM,IAAIxkD,MAAM;MAGlB,OAAO;OAAEy5C;OAAU+K;;AACrB,OAAE,OAAOjgD;MACP,MAAM,IAAIvE,MAAM;AAClB;AACF;IAeQ,sBAAMq8D,CACZjW,YACArhD,UAAuC,CAAC;KAExC,OAAOge,cAAcL,SACnB,+BACA3d,UACAwT,MAAOkK;;MAGL,OAFA1d,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5C3+D,QAAQixE,mBAAmBjxE,QAAQixE,oBAAoB,CAAC;MACjDt8B,qBACCp7C,KAAK21E,YAAY5X,iBAAiBjW,YAAY;OAClDnmD,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/B/gB,UAAU59C,QAAQ49C;OAClBihB,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BsS,gCAAgC;QAC9B5f,eAAetxD,QAAQixE,iBAAiBvgB;QACxCU,uBAAuBpxD,QAAQixE,iBAAiB3hB;QAChDiC,mBAAmBvxD,QAAQixE,iBAAiBtgB;QAC5CU,yBAAyBrxD,QAAQixE,iBAAiB1hB;QAClDiC,cAAcxxD,QAAQixE,iBAAiBrS;;OAEzClV,0BAAoD,UAA1B,KAAA1pD,QAAQoxE,4BAAkB,uBAAEC;OACtD9uB,wBAAkD,UAA1B,KAAAviD,QAAQoxE,4BAAkB,uBAAEE;OACpD9uB,WAAWxiD,QAAQwiD;OACnBJ,mBAAmBpiD,QAAQoiD;OAC3B+O,MAAM2W,aAAa9nE,QAAQmxD;OAC3BM,gBAAgBlgB,iBAAiBvxC,QAAQkhC;OACzC0xC,UAAU5yE,QAAQ4yE;OAClBn1D,gBAAgBC,eAAeD;;AAElC;AAGP;IAaO,cAAAo1D,CAAe7yE;KACpB,OAAO,IAAImK,SAASC;MAClB,MAAM7Q,KAAK2mB,sBAAsB83B,6BAC/B,MAAM,IAAIzI,WACR;MAIJ,MAAMujC,MAAM3V,+BAA+B,OAAD;OAEtC1d,eAAelmD,KAAKq1E;OACpBl6B,UAAUn7C,KAAKkjB;OACfohD,cAActkE,KAAK41E;OACnB9uB,WAAW9mD,KAAK61E;SACbpvE,UAELzG,KAAK2mB,YACL9d;MAEFgI,QAAQ2lC,iBAAiBx2C,KAAKyJ,KAAK8vE;AAAK;AAE5C;IAcO,uBAAAC,CAAwB/yE;KAC7B,MAAMzG,KAAK2mB,sBAAsB83B,6BAC/B,MAAM,IAAIzI,WACR;KAIJ,OAAO+tB,uCAAuC,OAAD;MAEzC7d,eAAelmD,KAAKq1E;MACpBl6B,UAAUn7C,KAAKkjB;MACfohD,cAActkE,KAAK41E;MACnB9uB,WAAW9mD,KAAK61E;QACbpvE,UAELzG,KAAK2mB,YACL82B;AACJ;IAaO,4BAAAg8B,CACLhzE,SACAm8D;KAEA,OAAO,IAAIhyD,SAASC;MAClB,MAAM0oE,MAAM3V,+BAA+B,OAAD;OAEtC1d,eAAelmD,KAAKq1E;OACpBl6B,UAAUn7C,KAAKkjB;OACfohD,cAActkE,KAAK41E;OACnB9uB,WAAW9mD,KAAK61E;SACbpvE,UAELm8D,mBACA5iE,KAAKg1C,aACLnsC;MAEFgI,QAAQ2lC,iBAAiBx2C,KAAKyJ,KAAK8vE;AAAK;AAE5C;IAeO,qCAAAG,CACLjzE,SACAm8D;KAEA,OAAOmB,uCAAuC,OAAD;MAEzC7d,eAAelmD,KAAKq1E;MACpBl6B,UAAUn7C,KAAKkjB;MACfohD,cAActkE,KAAK41E;MACnB9uB,WAAW9mD,KAAK61E;QACbpvE,UAELm8D,mBACA5iE,KAAKg1C,aACLyI;AACJ;IAOO,8BAAMggB,CACXh3D,UAA+C,CAAC;KAEhD,OAAOge,cAAcL,SACnB,uCACA3d,UACAwT,MAAOkK,kBACEi3B,qBAICp7C,KAAK21E,YAAYlY,yBAAyB;MAC9Cv5C,gBAAgBC,eAAeD;;AAKzC;IAOO,2BAAMq5C,CACXsa,oBACApxE,UAA4C,CAAC;KAE7C,OAAOge,cAAcL,SACnB,oCACA3d,UACAwT,MAAOkK,kBACEi3B,qBACCp7C,KAAK21E,YAAYpY,sBAAsB;MAC3CpN,0BAA0B0nB,mBAAmBC;MAC7C9uB,wBAAwB6uB,mBAAmBE;MAC3C7zD,gBAAgBC,eAAeD;;AAKzC;IAOO,kBAAMy5C,CACXgc,kBACAlzE,UAAmC,CAAC;KAEpC,OAAOge,cAAcL,SAAS,2BAA2B3d,UAASwT,MAAOkK,kBAChEi3B,qBACCp7C,KAAK21E,YAAYhY,aAAagc,kBAAkB;MACpDz1D,gBAAgBC,eAAeD;;AAIvC;IAYO,oBAAMw2C,CACXj0D,UAAqC,CAAC;KAEtC,OAAOge,cAAcL,SAAS,6BAA6B3d,UAASwT,MAAOkK,kBAClEi3B,qBACCp7C,KAAK21E,YAAYjb,eAAe;MACpC/4D,aAAa8E,QAAQ9E;MACrBuiB,gBAAgBC,eAAeD;;AAIvC;;GAgOK,MAAM+xD,yBAAyBb;IAsEpC,WAAA70E,CACE+0E,uBACAC,qCAMAC,mBAGA/uE;KAIA,IAAIoF,UACApC;KAEJ,IADAhD,UAAUA,WAAW,CAAC,GAClB44C,eAAek2B,sCAEjB9rE,MAAM6rE;KACNzpE,WAAW0pE,0CACN,IACJ,cAAUA,+CAA+C92B,8BAC1D82B,+CAA+Cz2B,uBAC/C90B,kBAAkBurD,sCAGlB9rE,MAAM6rE;KAENzpE,WAAW6zC,YAAY61B,qCADvB9uE,UAAU+uE,yBAEL,IACJD,uCAC8C,mBAAxCA,qCAMF;MAAA,KACLA,uCAC+C,mBAAxCA,wCACPC,qBAC6B,mBAAtBA,mBAyCP,MAAM,IAAI9zE,MAAM;MAxChB;OAEA,MAAMwkD,gBAAgBqvB,qCAChBp6B,WAAWq6B,mBAEXC,iBAAiB/gC,6BAA6B4gC;OACpD,IAA4B,wBAAxBG,eAAetgC,MAA8B;QAC/C,KAAI,YAgBF,MAAM,IAAIzzC,MAAM;QAhBN;SACV,MAAMuiE,sBAAsB,IAAIxlB,2BAC9Bg3B,eAAezgC,aACfygC,eAAexgC;SAEjBxrC,MAAM6rC,gBACJA,gBAAgBmgC,eAAehsE,KAAKyxB,mBAAmBgrB,iBACvDhrB,mBAAmBigB;SAGhB10C,QAAQgf,iBACXhf,QAAQgf,eAAe,oCAAwBgwD,eAAe9gC;SAGhE9oC,WAAW6zC,YAAYukB,qBAAqBx9D;AAC9C;AAGF,cAAO;QAAA,IAA4B,oBAAxBgvE,eAAetgC,MAUxB,MAAM,IAAIzzC,MACR;QAVF+H,MACE6rC,gBACEA,gBAAgBmgC,eAAehsE,KAAKyxB,mBAAmBgrB,iBACvDhrB,mBAAmBigB,aAErB,MACAs6B,eAAergC;QACjBvpC,WAAW6zC,YAAY,IAAIZ,qBAAuBr4C;AAKpD;AACF;AAEA,YAjDEgD,MAAM6rE,uBAENzpE,WAAW6zC,YAAY,IAAIZ,qBAAuBr4C;KAgDpDtE,MAAMsH,KAAKoC,WACX7L,KAAK45E,oBAAoB55E,KAAK4hE,qBAAqBJ;AACrD;IAUO,YAAAsU,CAAajvB;KAClB,OAAO,IAAIovB,iBACT1gC,gBACEv1C,KAAKyJ,KACL,kCAAwBoqC,UACJ,MAApBgT,SAASphD,cAAenC,IAAYujD,WAEtC7mD,KAAK6L;AAET;IAgBO,YAAMG,CAAOvF,UAAmC,CAAC;KAGtD,OAFAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5CoJ,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE;KAChDp9C,cAAcL,SAAS,2BAA2B3d,UAASwT,MAAOkK;;MACvE,OAAOi3B,qBACCp7C,KAAK45E,kBAAkB5tE,OAAO,GAAG;OACrCrK,aAAa8E,QAAQ9E;OACrBy1E,iBAAiB3wE,QAAQ0wE;OACzBZ,uBAAuB9vE,QAAQ2+D;OAC/B/gB,UAAU59C,QAAQ49C;OAClBihB,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BsR,SAASlwE,QAAQ6vE;OACjB7tB,iBAAiBhiD,QAAQgiD;OACzB0H,0BAAoD,UAA1B,KAAA1pD,QAAQoxE,4BAAkB,uBAAEC;OACtD9uB,wBAAkD,UAA1B,KAAAviD,QAAQoxE,4BAAkB,uBAAEE;OACpD9uB,WAAWxiD,QAAQwiD;OACnBiP,gBAAgBlgB,iBAAiBvxC,QAAQkhC;OACzCzjB,gBAAgBC,eAAeD;;AAElC;AAEL;IASO,uBAAM21D,CACXpzE,UAA8C,CAAC;KAE/C,MAAM2+D,aAAa;MAAEhO,a5DtrFF;;K4DurFnB,OAAO3yC,cAAcL,SACnB,sCACA3d,UACAwT,MAAOkK;;MACL;OACE,MAAMvR,MAAMwoC,qBACJp7C,KAAKgM,OAAO,OAAD,yBACZmY,iBAAc;QACjBihD;;OAGJ,OAAO,OAAP;QACE6R,YAAW;UACRrkE,MAAG;QACNi0D,WAAWj0D,IAAIi0D;;AAEnB,QAAE,OAAO54D;OACP,IAA6B,yBAAhB,UAAT,KAAAA,EAAEiwB,iBAAO,uBAAE8sB,YACb,OAAO,OAAP;QACEisB,YAAW;UACE,UAAV,KAAAhpE,EAAEgC,kBAAQ,uBAAE0a,gBAAa;QAC5Bk8C,WAAW54D,EAAEgC;;OAGjB,MAAMhC;AACR;AAAA;AAGN;IAOO,UAAMmyD,CAAK35D,UAAiC,CAAC;KAElD,OADAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GACrC3gD,cAAcL,SAAS,yBAAyB3d,UAASwT,MAAOkK;;MACrE,OAAOi3B,qBACCp7C,KAAK45E,kBAAkBxZ,KAAK;OAChCz+D,aAAa8E,QAAQ9E;OACrBm4E,gCAAgCrzE,QAAQ2+D;OACxCmR,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BnhD,gBAAgBC,eAAeD;;AAElC;AAEL;IA0BO,iBAAM87C,CACXt2D,MACAsW,eACAvZ,UAAwC,CAAC;KAIzC,OAFAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5CoJ,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE;KAChDp9C,cAAcL,SACnB,gCACA3d,UACAwT,MAAOkK;;MACL,OAAOi3B,qBACCp7C,KAAK45E,kBAAkB5Z,YAAYhgD,eAAetW,MAAM;OAC5D/H,aAAa8E,QAAQ9E;OACrBm4E,gCAAgCrzE,QAAQ2+D;OACxCmR,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BrsC,gBAAgB;QACd7uB,kBAAkB1D,QAAQu/D;;OAE5BvN,yBAAyBhyD,QAAQgyD;OACjCC,2BAA2BjyD,QAAQiyD;OACnCie,SAASlwE,QAAQ6vE;OACjB7tB,iBAAiBhiD,QAAQgiD;OACzBvkC,gBAAgBC,eAAeD;;AAElC;AAGP;IAgBO,wBAAM61D,CACXC,WACAzG,cACA1pC,OACApjC,UAA+C,CAAC;KAMhD,OAJAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5C3+D,QAAQixE,mBAAmBjxE,QAAQixE,oBAAoB,CAAC;KAExDlJ,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE,UAChDp9C,cAAcL,SACnB,uCACA3d,UACAwT,MAAOkK;;MACL,OAAOi3B,qBAICp7C,KAAK45E,kBAAkB1Z,mBAAmB8Z,WAAW,GAAG;OAC5Dr4E,aAAa8E,QAAQ9E;OACrBu9D,aAAaiS,cAAc;QAAE1L,QAAQ8N;QAAc1pC;;OACnDuuB,kBAAkB3xD,QAAQ2xD;OAC1BgB,oBAAoB3yD,QAAQ2yD;OAC5Bmd,uBAAuB9vE,QAAQ2+D;OAC/B0U,gCAAgCrzE,QAAQ2+D;OACxCE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BsS,gCAAgC;QAC9B5f,eAAuC,UAAxB,KAAAtxD,QAAQixE,0BAAgB,uBAAEvgB;QACzCU,uBAA+C,UAAxB,KAAApxD,QAAQixE,0BAAgB,uBAAE3hB;QACjDiC,mBAA2C,UAAxB,KAAAvxD,QAAQixE,0BAAgB,uBAAEtgB;QAC7CU,yBAAiD,UAAxB,KAAArxD,QAAQixE,0BAAgB,uBAAE1hB;;OAErDqC,yBAAyBte,0BAA0BtzC,QAAQmxE;OAC3DjB,SAASlwE,QAAQ6vE;OACjB7tB,iBAAiBhiD,QAAQgiD;OACzBvkC,gBAAgBC,eAAeD;;AAElC;AAGP;;GAukBK,MAAMiyD,wBAAwBf;IA8EnC,WAAA70E,CACE+0E,uBACAC,qCAMAC,mBAGA/uE;KAIA,IAAIoF,UACApC;KAEJ,IADAhD,UAAUA,WAAW,CAAC,GAClB44C,eAAek2B,sCAEjB9rE,MAAM6rE;KACNzpE,WAAW0pE,0CACN,IACJ,cAAUA,+CAA+C92B,8BAC1D82B,+CAA+Cz2B,uBAC/C90B,kBAAkBurD,sCAGlB9rE,MAAM6rE;KAENzpE,WAAW6zC,YAAY61B,qCADvB9uE,UAAU+uE,yBAEL,IACJD,uCAC8C,mBAAxCA,qCASF;MAAA,KACLA,uCAC+C,mBAAxCA,wCACPC,qBAC6B,mBAAtBA,mBAyCP,MAAM,IAAI9zE,MAAM;MAxChB;OAEA,MAAMwkD,gBAAgBqvB,qCAChBp6B,WAAWq6B,mBAEXC,iBAAiB/gC,6BAA6B4gC;OACpD,IAA4B,wBAAxBG,eAAetgC,MAA8B;QAC/C,KAAI,YAgBF,MAAM,IAAIzzC,MAAM;QAhBN;SACV,MAAMuiE,sBAAsB,IAAIxlB,2BAC9Bg3B,eAAezgC,aACfygC,eAAexgC;SAEjBxrC,MAAM6rC,gBACJA,gBAAgBmgC,eAAehsE,KAAKyxB,mBAAmBgrB,iBACvDhrB,mBAAmBigB;SAGhB10C,QAAQgf,iBACXhf,QAAQgf,eAAe,oCAAwBgwD,eAAe9gC;SAGhE9oC,WAAW6zC,YAAYukB,qBAAqBx9D;AAC9C;AAGF,cAAO;QAAA,IAA4B,oBAAxBgvE,eAAetgC,MAUxB,MAAM,IAAIzzC,MACR;QAVF+H,MACE6rC,gBACEA,gBAAgBmgC,eAAehsE,KAAKyxB,mBAAmBgrB,iBACvDhrB,mBAAmBigB,aAErB,MACAs6B,eAAergC;QACjBvpC,WAAW6zC,YAAY,IAAIZ,qBAAuBr4C;AAKpD;AACF;AAEA,YAnDEgD,MAAM6rE,uBACFE,qBAAkD,mBAAtBA,sBAC9B/uE,UAAU+uE;KAEZ3pE,WAAW6zC,YAAY,IAAIZ,qBAAuBr4C;KAgDpDtE,MAAMsH,KAAKoC,WACX7L,KAAKi6E,mBAAmBj6E,KAAK4hE,qBAAqBH;KAClDzhE,KAAKk6E,eAAel6E,KAAK4hE,qBAAqB17C;AAChD;IAUO,YAAA4vD,CAAajvB;KAClB,OAAO,IAAIsvB,gBACT5gC,gBACEv1C,KAAKyJ,KACL,kCAAwBoqC,UACJ,MAApBgT,SAASphD,cAAenC,IAAYujD,WAEtC7mD,KAAK6L;AAET;IAgCO,WAAM6qC,CACXA,OACAjwC,UAAiC,CAAC;KAGlC,IADA+nE,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE,WAClD,YACH,MAAM,IAAIngE,MAAM;KAGlB,OAAO+iB,cAAcL,SAAS,yBAAyB3d,UAASwT,MAAOkK;;MACrE,MAAMlU,WAAWmrC,qBACTp7C,KAAKk6E,aAAaxjC,MAAM;OAC5B/0C,aAAa8E,QAAQ9E;OACrB42D,cAAc;QACZtO,WAAW;QACXC,YAAYxT;QACZyT,oBAAoB7R,qBAAqB7xC,QAAQ0zE;QACjD/vB,qBAAqB9R,qBAAqB7xC,QAAQ2zE;;OAEpD7D,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BsR,SAASlwE,QAAQ6vE;OACjBpyD,gBAAgBC,eAAeD;;MAGnC,OAAO,IAAIiqD,kBAAkBl+D,UAAU;OACrCtO,aAAa8E,QAAQ9E;OACrBqkE,YAAYv/D,QAAQu/D;OACpBuH,SAAS9mE,QAAQ8mE;;AACjB;AAEN;IA6BO,YAAMhN,CACX72D,MACAsW,eACAvZ,UAAkC,CAAC;KAInC,OAFAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5CoJ,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE;KAChDp9C,cAAcL,SAAS,0BAA0B3d,UAASwT,MAAOkK;;MACtE,OAAOi3B,qBACCp7C,KAAKi6E,iBAAiB1Z,OAAOvgD,eAAetW,MAAM;OACtD/H,aAAa8E,QAAQ9E;OACrBy1E,iBAAiB3wE,QAAQ0wE;OACzBZ,uBAAuB9vE,QAAQ2+D;OAC/B/gB,UAAU59C,QAAQ49C;OAClBihB,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BrsC,gBAAgB;QACd7uB,kBAAkB1D,QAAQu/D;;OAE5B2Q,SAASlwE,QAAQ6vE;OACjB7tB,iBAAiBhiD,QAAQgiD;OACzB0H,0BAAoD,UAA1B,KAAA1pD,QAAQoxE,4BAAkB,uBAAEC;OACtD9uB,wBAAkD,UAA1B,KAAAviD,QAAQoxE,4BAAkB,uBAAEE;OACpD9uB,WAAWxiD,QAAQwiD;OACnB2O,MAAM2W,aAAa9nE,QAAQmxD;OAC3BM,gBAAgBlgB,iBAAiBvxC,QAAQkhC;OACzCzjB,gBAAgBC,eAAeD;;AAElC;AAEL;IAqBO,uBAAMm2D,CACXL,WACAvzE,UAA6C,CAAC;KAI9C,OAFAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5CoJ,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE;KAChDp9C,cAAcL,SACnB,qCACA3d,UACAwT,MAAOkK;;MACL,OAAOi3B,qBACCp7C,KAAKi6E,iBAAiBxZ,eAAe,GAAGuZ,WAAW,OAAF,yBAClDvzE,UAAO;OACV2wE,iBAAiB3wE,QAAQ0wE;OACzBZ,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BsS,gCAAgC;QAC9B5f,eAAuC,UAAxB,KAAAtxD,QAAQixE,0BAAgB,uBAAEvgB;QACzCU,uBAA+C,UAAxB,KAAApxD,QAAQixE,0BAAgB,uBAAE3hB;QACjDiC,mBAA2C,UAAxB,KAAAvxD,QAAQixE,0BAAgB,uBAAEtgB;QAC7CU,yBAAiD,UAAxB,KAAArxD,QAAQixE,0BAAgB,uBAAE1hB;QACnDiC,cAAsC,UAAxB,KAAAxxD,QAAQixE,0BAAgB,uBAAErS;;OAE1CsR,SAASlwE,QAAQ6vE;OACjBje,yBAAyBte,0BAA0BtzC,QAAQmxE;OAC3DhgB,MAAM2W,aAAa9nE,QAAQmxD;OAC3BM,gBAAgBlgB,iBAAiBvxC,QAAQkhC;OACzC2wB,gBAAgB7xD,QAAQ6xD;OACxBp0C,gBAAgBC,eAAeD;;AAElC;AAGP;IAaO,gBAAMy8C,CACX/G,SACAlwD,MACAsW,eACAvZ,UAAsC,CAAC;KAGvC,OADA+nE,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE,UAChDp9C,cAAcL,SAAS,8BAA8B3d,UAASwT,MAAOkK,kBACnEi3B,qBACCp7C,KAAKi6E,iBAAiBtZ,WAAW/G,SAAS55C,eAAetW,MAAM;MACnE/H,aAAa8E,QAAQ9E;MACrB40E,uBAAuB9vE,QAAQ2+D;MAC/BpsC,gBAAgB;OACd7uB,kBAAkB1D,QAAQu/D;;MAE5BvN,yBAAyBhyD,QAAQgyD;MACjCC,2BAA2BjyD,QAAQiyD;MACnCie,SAASlwE,QAAQ6vE;MACjB7tB,iBAAiBhiD,QAAQgiD;MACzBvkC,gBAAgBC,eAAeD;;AAIvC;IAuBO,uBAAM28C,CACXjH,SACAogB,WACAvU,SAAiB,GACjB57B,OACApjC,UAA6C,CAAC;KAG9C,OADA+nE,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE,UAChDp9C,cAAcL,SACnB,qCACA3d,UACAwT,MAAOkK,kBACEi3B,qBACCp7C,KAAKi6E,iBAAiBpZ,kBAAkBjH,SAAS,GAAGogB,WAAW;MACnEr4E,aAAa8E,QAAQ9E;MACrB40E,uBAAuB9vE,QAAQ2+D;MAC/BhN,kBAAkB3xD,QAAQ2xD;MAC1BgB,oBAAoB3yD,QAAQ2yD;MAC5B8F,aAAwB,MAAXuG,UAAiB57B,QAAoBsnC,cAAc;OAAE1L;OAAQ57B;gBAApCvmC;MACtCqzE,SAASlwE,QAAQ6vE;MACjB7tB,iBAAiBhiD,QAAQgiD;MACzB4P,yBAAyBte,0BAA0BtzC,QAAQmxE;MAC3D1zD,gBAAgBC,eAAeD;;AAKzC;IAcO,qBAAM68C,CACXlH,QACApzD,UAA2C,CAAC;KAI5C,OAFAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5CoJ,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE;KAChDp9C,cAAcL,SACnB,mCACA3d,UACAwT,MAAOkK;;MACL,OAAOi3B,qBACCp7C,KAAKi6E,iBAAiBlZ,gBAC1B;OAAEvX,QAAQqQ;SACV;OACEl4D,aAAa8E,QAAQ9E;OACrBy1E,iBAAiB3wE,QAAQ0wE;OACzBZ,uBAAuB9vE,QAAQ2+D;OAC/B/gB,UAAU59C,QAAQ49C;OAClBihB,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BsR,SAASlwE,QAAQ6vE;OACjB7tB,iBAAiBhiD,QAAQgiD;OACzB0H,0BAAoD,UAA1B,KAAA1pD,QAAQoxE,4BAAkB,uBAAEC;OACtD9uB,wBAAkD,UAA1B,KAAAviD,QAAQoxE,4BAAkB,uBAAEE;OACpD9uB,WAAWxiD,QAAQwiD;OACnB2O,MAAM2W,aAAa9nE,QAAQmxD;OAC3BM,gBAAgBlgB,iBAAiBvxC,QAAQkhC;OACzCzjB,gBAAgBC,eAAeD;;AAGpC;AAGP;IAYO,kBAAM+8C,CACXC,UACAz6D,UAAwC,CAAC;KAEzC,OAAOge,cAAcL,SACnB,gCACA3d,UACAwT,MAAOkK;;MACL,MAAMvR,MAAMwoC,qBAIJp7C,KAAKi6E,iBAAiBhZ,aAAaC,UAAU;OACjDv/D,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BnhD,gBAAgBC,eAAeD;;MAYnC,OARKtR,IAAI82C,oBACP92C,IAAI82C,kBAAkB,KAGnB92C,IAAI+2C,sBACP/2C,IAAI+2C,oBAAoB;MAGnB/2C;AAAG;AAGhB;IAmBO,gBAAM0nE,CACXjuC,MACA5lC,UAA0C,CAAC;KAE3C,OAAOge,cAAcL,SAAS,8BAA8B3d,UAASwT,MAAOkK;MAC1E,IAAI,YAAQ;OACV,IAAItQ;OAUJ,OAREA,SADEw4B,gBAAgB/5B,SACT+5B,OACAA,gBAAgBv3B,cAChBxC,OAAOE,KAAK65B,QAGZ/5B,OAAOE,KAAK65B,KAAKx4B,QAAQw4B,KAAK67B,YAAY77B,KAAKn7B;OAGnDlR,KAAKu6E,wBACV,CAAC9U,QAAgBj4D,SAAyBqG,OAAO/R,MAAM2jE,QAAQA,SAASj4D,QACxEqG,OAAO3C,YACPiT;AAEJ;MAAO;OACL,MAAMq2D,cAAc,IAAIrsD,KAAK,EAACke;OAC9B,OAAOrsC,KAAKu6E,wBACV,CAAC9U,QAAgBj4D,SAAuBgtE,YAAY14E,MAAM2jE,QAAQA,SAASj4D,QAC3EgtE,YAAYhtE,MACZ2W;AAEJ;AAAA;AAEJ;IAqBO,uBAAMs2D,CACXC,aACAj0E,UAA0C,CAAC;KAE3C,OAAOge,cAAcL,SACnB,qCACA3d,UACAwT,MAAOkK;MACL,MAAMq2D,cAAc,IAAIrsD,KAAK,EAACusD;MAC9B,OAAO16E,KAAKu6E,wBACV,CAAC9U,QAAgBj4D,SAAuBgtE,YAAY14E,MAAM2jE,QAAQA,SAASj4D,QAC3EgtE,YAAYhtE,MACZ2W;AACD;AAGP;IAiBQ,4BAAMo2D,CACZI,aACAntE,MACA/G,UAA0C,CAAC;;KAE3C,IAAI6xE,YAA6B,UAAjB,KAAA7xE,QAAQ6xE,mBAAS,gBAAI;KACrC,IAAIA,YAAY,KAAKA,Y5DvnI+B,W4DwnIlD,MAAM,IAAItiC,WACR;KAIJ,MAAM4kC,oBAA6C,UAAzB,KAAAn0E,QAAQm0E,2BAAiB,gB5D9nIC;K4DgoIpD,IAAIA,oBAAoB,KAAKA,oB5DhoIuB,W4DioIlD,MAAM,IAAI5kC,WACR;KAIJ,IAAkB,MAAdsiC,WAAiB;MACnB,IAAI9qE,OAAOqtE,WACT,MAAM,IAAI7kC,WAAW,GAAGxoC;MAEtBA,OAAOotE,sBACTtC,YAAY9iE,KAAKO,KAAKvI,O5DzoIe,M4D0oIjC8qE,Y5DxoI6C,Y4DyoI/CA,Y5DzoI+C;A4D4oIrD;KAQA,OAPK7xE,QAAQ0wE,oBACX1wE,QAAQ0wE,kBAAkB,CAAC,IAExB1wE,QAAQ2+D,eACX3+D,QAAQ2+D,aAAa,CAAC;KAGjB3gD,cAAcL,SACnB,0CACA3d,UACAwT,MAAOkK;MACL,IAAI3W,QAAQotE,mBACV,OAAOx/B,qBAAqBp7C,KAAKugE,OAAOoa,YAAY,GAAGntE,OAAOA,MAAM2W;MAGtE,MAAM22D,YAAoBtlE,KAAKQ,OAAOxI,OAAO,KAAK8qE,aAAa;MAC/D,IAAIwC,Y5D/pIiC,K4DgqInC,MAAM,IAAI9kC,WACR;MAKJ,MAAM+kC,YAAsB,IACtB/jC,gBAAgB;MACtB,IAAIwhC,mBAA2B;MAE/B,MAAMC,QAAQ,IAAInH,MAAM7qE,QAAQ8qE;MAChC,KAAK,IAAIx0D,IAAI,GAAGA,IAAI+9D,WAAW/9D,KAC7B07D,MAAM3G,cAAa73D;OACjB,MAAM+gE,UAAUjkC,gBAAgBC,eAAej6B,IACzCksB,QAAQqvC,YAAYv7D,GAEpBiD,iBADMjD,MAAM+9D,YAAY,IAAIttE,OAAOy7B,QAAQqvC,aACrBrvC;OAC5B8xC,UAAU75E,KAAK85E,gBACTh7E,KAAK2gE,WAAWqa,SAASL,YAAY1xC,OAAOjpB,gBAAgBA,eAAe;QAC/Ere,aAAa8E,QAAQ9E;QACrByjE,YAAY3+D,QAAQ2+D;QACpB3c,iBAAiBhiD,QAAQgiD;QACzBvkC,gBAAgBC,eAAeD;WAIjCs0D,oBAAoBx4D,eAChBvZ,QAAQu/D,cACVv/D,QAAQu/D,WAAY;QAClBv0D,aAAa+mE;;AAEjB;MAKJ,aAFMC,MAAMI,MAEL74E,KAAK+gE,gBAAgBga,WAAW52D;AAAe;AAG5D;IAeO,gBAAM82D,CACXlC,UACAtyE,UAA0C,CAAC;KAE3C,OAAOge,cAAcL,SAAS,8BAA8B3d,UAASwT,MAAOkK;MAC1E,MAAM3W,cAAc0nE,OAAO6D,WAAWvrE;MACtC,OAAOxN,KAAKu6E,wBACV,CAAC9U,QAAQ57B,UACA,MACLsrC,mBAAmB4D,UAAU;OAC3BmC,YAAW;OACXvoE,KAAKk3B,QAAQ47B,SAAS57B,QAAQ,IAAIsxC;OAClClyC,OAAOw8B;WAGbj4D,MAAI,gCAEC/G,UAAO;OACVyd,gBAAgBC,eAAeD;;AAElC;AAEL;IAkBO,kBAAMk3D,CACX1qE,QACAmjE,a5D/vImD,S4DgwInDwH,iBAAyB,GACzB50E,UAAwC,CAAC;KASzC,OAPKA,QAAQ0wE,oBACX1wE,QAAQ0wE,kBAAkB,CAAC,IAExB1wE,QAAQ2+D,eACX3+D,QAAQ2+D,aAAa,CAAC;KAGjB3gD,cAAcL,SACnB,gCACA3d,UACAwT,MAAOkK;MACL,IAAIm3D,WAAW;MACf,MAAMtkC,gBAAgB;MACtB,IAAIwhC,mBAA2B;MAC/B,MAAMuC,YAAsB,IAEtBQ,YAAY,IAAI3H,gBACpBljE,QACAmjE,YACAwH,iBACAphE,OAAOvQ,MAAMjE;OACX,MAAMu1E,UAAUjkC,gBAAgBC,eAAeskC;OAC/CP,UAAU75E,KAAK85E,UACfM,kBAEMt7E,KAAK2gE,WAAWqa,SAAStxE,MAAMjE,QAAQ;QAC3C6wE,qBAAqB7vE,QAAQ6vE;QAC7BlR,YAAY3+D,QAAQ2+D;QACpB3c,iBAAiBhiD,QAAQgiD;QACzBvkC,gBAAgBC,eAAeD;WAIjCs0D,oBAAoB/yE,QAChBgB,QAAQu/D,cACVv/D,QAAQu/D,WAAW;QAAEv0D,aAAa+mE;;AACpC,UAMFhjE,KAAKO,KAAMslE,iBAAiB,IAAK;MAInC,aAFME,UAAU1C,MAETz9B,qBACCp7C,KAAK+gE,gBAAgBga,WAAW,OAAF,yBAC/Bt0E,UAAO;OACVyd,gBAAgBC,eAAeD;;AAElC;AAGP;;GAwaK,MAAMmyD,uBAAuBjB;IA8DlC,WAAA70E,CACE+0E,uBACAC,qCAMAC,mBAGA/uE;KAIA,IAAIoF,UACApC;KAEJ,IADAhD,UAAUA,WAAW,CAAC,GAClB44C,eAAek2B,sCAEjB9rE,MAAM6rE;KACNzpE,WAAW0pE,0CACN,IACJ,cAAUA,+CAA+C92B,8BAC1D82B,+CAA+Cz2B,uBAC/C90B,kBAAkBurD,sCAGlB9rE,MAAM6rE;KAENzpE,WAAW6zC,YAAY61B,qCADvB9uE,UAAU+uE,yBAEL,IACJD,uCAC8C,mBAAxCA,qCAMF;MAAA,KACLA,uCAC+C,mBAAxCA,wCACPC,qBAC6B,mBAAtBA,mBAyCP,MAAM,IAAI9zE,MAAM;MAxChB;OAEA,MAAMwkD,gBAAgBqvB,qCAChBp6B,WAAWq6B,mBAEXC,iBAAiB/gC,6BAA6B4gC;OACpD,IAA4B,wBAAxBG,eAAetgC,MAA8B;QAC/C,KAAI,YAgBF,MAAM,IAAIzzC,MAAM;QAhBN;SACV,MAAMuiE,sBAAsB,IAAIxlB,2BAC9Bg3B,eAAezgC,aACfygC,eAAexgC;SAEjBxrC,MAAM6rC,gBACJA,gBAAgBmgC,eAAehsE,KAAKyxB,mBAAmBgrB,iBACvDhrB,mBAAmBigB;SAGhB10C,QAAQgf,iBACXhf,QAAQgf,eAAe,oCAAwBgwD,eAAe9gC;SAGhE9oC,WAAW6zC,YAAYukB,qBAAqBx9D;AAC9C;AAGF,cAAO;QAAA,IAA4B,oBAAxBgvE,eAAetgC,MAUxB,MAAM,IAAIzzC,MACR;QAVF+H,MACE6rC,gBACEA,gBAAgBmgC,eAAehsE,KAAKyxB,mBAAmBgrB,iBACvDhrB,mBAAmBigB,aAErB,MACAs6B,eAAergC;QACjBvpC,WAAW6zC,YAAY,IAAIZ,qBAAuBr4C;AAKpD;AACF;AAEA,YAhDEgD,MAAM6rE,uBACNzpE,WAAW6zC,YAAY,IAAIZ,qBAAuBr4C;KAgDpDtE,MAAMsH,KAAKoC,WACX7L,KAAKw7E,kBAAkBx7E,KAAK4hE,qBAAqBL;AACnD;IAUO,YAAAuU,CAAajvB;KAClB,OAAO,IAAIwvB,eACT9gC,gBACEv1C,KAAKyJ,KACL,kCAAwBoqC,UACJ,MAApBgT,SAASphD,cAAenC,IAAYujD,WAEtC7mD,KAAK6L;AAET;IAWO,YAAMG,CACXwB,MACA/G,UAAiC,CAAC;KAIlC,OAFAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5CoJ,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE;KAChDp9C,cAAcL,SAAS,yBAAyB3d,UAASwT,MAAOkK;;MACrE,OAAOi3B,qBACCp7C,KAAKw7E,gBAAgBxvE,OAAO,GAAGwB,MAAM;OACzC7L,aAAa8E,QAAQ9E;OACrBy1E,iBAAiB3wE,QAAQ0wE;OACzBzvB,oBAAoBjhD,QAAQihD;OAC5B6uB,uBAAuB9vE,QAAQ2+D;OAC/B/gB,UAAU59C,QAAQ49C;OAClBihB,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BsR,SAASlwE,QAAQ6vE;OACjB7tB,iBAAiBhiD,QAAQgiD;OACzB0H,0BAAoD,UAA1B,KAAA1pD,QAAQoxE,4BAAkB,uBAAEC;OACtD9uB,wBAAkD,UAA1B,KAAAviD,QAAQoxE,4BAAkB,uBAAEE;OACpD9uB,WAAWxiD,QAAQwiD;OACnB2O,MAAM2W,aAAa9nE,QAAQmxD;OAC3BM,gBAAgBlgB,iBAAiBvxC,QAAQkhC;OACzCzjB,gBAAgBC,eAAeD;;AAElC;AAEL;IAWO,uBAAM21D,CACXrsE,MACA/G,UAA4C,CAAC;KAE7C,OAAOge,cAAcL,SACnB,oCACA3d,UACAwT,MAAOkK;;MACL;OACE,MAAMihD,aAAa;QAAEhO,a5D94JR;U4D+4JPxkD,MAAMwoC,qBACJp7C,KAAKgM,OAAOwB,MAAM,OAAF,yBACjB/G,UAAO;QACV2+D;QACAlhD,gBAAgBC,eAAeD;;OAGnC,OAAO,OAAP;QACE+yD,YAAW;UACRrkE,MAAG;QACNi0D,WAAWj0D,IAAIi0D;;AAEnB,QAAE,OAAO54D;OACP,IAA6B,yBAAhB,UAAT,KAAAA,EAAEiwB,iBAAO,uBAAE8sB,YACb,OAAO,OAAP;QACEisB,YAAW;UACE,UAAV,KAAAhpE,EAAEgC,kBAAQ,uBAAE0a,gBAAa;QAC5Bk8C,WAAW54D,EAAEgC;;OAIjB,MAAMhC;AACR;AAAA;AAGN;IAYO,iBAAM4wD,CACXn1D,MACA+7D,QACA57B,OACApjC,UAAsC,CAAC;KAIvC,OAFAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5CoJ,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE;KAChDp9C,cAAcL,SAAS,8BAA8B3d,UAASwT,MAAOkK;;MAC1E,OAAOi3B,qBACCp7C,KAAKw7E,gBAAgB3c,YAAYh1B,OAAOngC,MAAM;OAClD/H,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BrsC,gBAAgB;QACd7uB,kBAAkB1D,QAAQu/D;;OAE5BhP,OAAOma,cAAc;QAAE1L;QAAQ57B;;OAC/B4xC,gCAAgCh1E,QAAQ2+D;OACxC3M,yBAAyBhyD,QAAQgyD;OACjCC,2BAA2BjyD,QAAQiyD;OACnCie,SAASlwE,QAAQ6vE;OACjB7tB,iBAAiBhiD,QAAQgiD;OACzBvkC,gBAAgBC,eAAeD;;AAElC;AAEL;IAaO,wBAAM+6C,CACX+a,WACAzG,cACAmI,YACA7xC,OACApjC,UAA6C,CAAC;KAK9C,OAHAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GAC5C3+D,QAAQixE,mBAAmBjxE,QAAQixE,oBAAoB,CAAC;KACxDlJ,qBAAqB/nE,QAAQ6vE,qBAAqBt2E,KAAK6hE,UAChDp9C,cAAcL,SACnB,qCACA3d,UACAwT,MAAOkK;;MACL,OAAOi3B,qBACCp7C,KAAKw7E,gBAAgBvc,mBACzB+a,WACA7I,cAAc;OAAE1L,QAAQ8N;OAAc1pC;UACtC,GACAsnC,cAAc;OAAE1L,QAAQiW;OAAY7xC;UACpC;OACEloC,aAAa8E,QAAQ9E;OACrBy2D,kBAAkB3xD,QAAQ2xD;OAC1BgB,oBAAoB3yD,QAAQ2yD;OAC5Bmd,uBAAuB9vE,QAAQ2+D;OAC/BqW,gCAAgCh1E,QAAQ2+D;OACxCE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BsS,gCAAgC;QAC9B5f,eAAuC,UAAxB,KAAAtxD,QAAQixE,0BAAgB,uBAAEvgB;QACzCU,uBAA+C,UAAxB,KAAApxD,QAAQixE,0BAAgB,uBAAE3hB;QACjDiC,mBAA2C,UAAxB,KAAAvxD,QAAQixE,0BAAgB,uBAAEtgB;QAC7CU,yBAAiD,UAAxB,KAAArxD,QAAQixE,0BAAgB,uBAAE1hB;;OAErD2gB,SAASlwE,QAAQ6vE;OACjB7tB,iBAAiBhiD,QAAQgiD;OACzB4P,yBAAyBte,0BAA0BtzC,QAAQmxE;OAC3D1zD,gBAAgBC,eAAeD;;AAGpC;AAGP;IAWO,gBAAM66C,CACX0G,SAAiB,GACjB57B,OACApjC,UAAqC,CAAC;KAGtC,OADAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GACrC3gD,cAAcL,SAAS,6BAA6B3d,UAASwT,MAAOkK;;MACzE,OAAOi3B,qBACCp7C,KAAKw7E,gBAAgBzc,WAAW,GAAG;OACvCp9D,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BrO,OAAOma,cAAc;QAAE1L;QAAQ57B;;OAC/B4xC,gCAAgCh1E,QAAQ2+D;OACxCuR,SAASlwE,QAAQ6vE;OACjB7tB,iBAAiBhiD,QAAQgiD;OACzBvkC,gBAAgBC,eAAeD;;AAElC;AAEL;IAWO,mBAAMk7C,CACXqG,SAAiB,GACjB57B,OACApjC,UAAwC,CAAC;KAGzC,OADAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GACrC3gD,cAAcL,SACnB,gCACA3d,UACAwT,MAAOkK;;MAiBL,OAAOyqD,uBAhBUxzB,qBAKTp7C,KAAKw7E,gBAAgBpc,cAAc;OACvCz9D,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BrO,OAAOma,cAAc;QAAE1L;QAAQ57B;;OAC/B3lB,gBAAgBC,eAAeD;;AAGI;AAG7C;IAcQ,2BAAMy3D,CACZlW,SAAiB,GACjB57B,OACAia,QACAr9C,UAAgD,CAAC;KAEjD,OAAOge,cAAcL,SACnB,uCACA3d,UACAwT,MAAOkK;;MACL,OAAOi3B,qBAKCp7C,KAAKw7E,gBAAgBpc,cAAc;OACvCz9D,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BrO,OAAOma,cAAc;QAAE1L;QAAQ57B;;OAC/Bia;OACAC,aAAat9C,QAAQs9C;OACrB7/B,gBAAgBC,eAAeD;;AAElC;AAGP;IAee,yBAAA03D;yDACbnW,SAAiB,GACjB57B,OACAia,QACAr9C,UAAgD,CAAC;MAEjD,IAAIo1E;MACJ,IAAM/3B,eAAqBxgD,MAAXwgD,QACd;OACE+3B,yCAAmC,QAAM77E,KAAK27E,sBAC5ClW,QACA57B,OACAia,QACAr9C;OAEFq9C,SAAS+3B,iCAAiC53B,+BAC1C,cAAM,QAAM43B;eACL/3B;AAEb;;IASe,kBAAAg4B;yDACbrW,SAAiB,GACjB57B,OACApjC,UAAgD,CAAC;;;OAGjD,KAAyC,IAKxC,IALwC,4BAAAzG,KAAK47E,0BAC5CnW,QACA57B,OAHEia,WAKFr9C,aACD,qDAAE;QALsC;QAA9B,MAAMm0C,uBAAoB;cAMnC,eAAO,+BAAAD,0BAA0BC;AACnC;;;;;;;;;;;;AACF;;IAyEO,cAAAmhC,CACLtW,SAAiB,GACjB57B,OACApjC,UAAyC,CAAC;KAE1CA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC;KAE5C,MAAM4W,OAAOh8E,KAAK87E,mBAAmBrW,QAAQ57B,OAAOpjC;KACpD,OAAO;MAILkF,MAAI,MACKqwE,KAAKrwE;MAKd,CAAC3C,OAAO2U;OACN,OAAO3d;AACT;MAIAi8E,QAAQ,CAAClhE,WAAyB,CAAC,MAC1B/a,KAAK47E,0BAA0BnW,QAAQ57B,OAAO9uB,SAASkpC,mBAAmB,OAAF;OAC7EF,aAAahpC,SAASgpC;SACnBt9C;;AAIX;IAYO,uBAAM64D,CACXmG,QACA57B,OACAqyC,cACAz1E,UAA4C,CAAC;KAG7C,OADAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GACrC3gD,cAAcL,SACnB,oCACA3d,UACAwT,MAAOkK;;MAkBL,OAAOyqD,uBAjBQxzB,qBAKPp7C,KAAKw7E,gBAAgBlc,kBAAkB;OAC3C39D,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9B8W,cAAcD;OACdllB,OAAOma,cAAc;QAAE1L;QAAQ57B;;OAC/B3lB,gBAAgBC,eAAeD;;AAGE;AAG3C;IAgBQ,+BAAMk4D,CACZ3W,QACA57B,OACAwyC,mBACAv4B,QACAr9C,UAAoD,CAAC;KAErD,OAAOge,cAAcL,SACnB,2CACA3d,UACAwT,MAAOkK;;MACL,OAAOi3B,qBAKCp7C,KAAKw7E,gBAAgBlc,kBAAkB;OAC3C39D,aAAa8E,uBAAO,IAAPA,QAAS9E;OACtB40E,uBAAuB9vE,uBAAO,IAAPA,QAAS2+D;OAChCE,0BAA0B,OAAF,yBACnB7+D,uBAAO,IAAPA,QAAS2+D,aAAU;QACtB/N,QAA2B,UAAnB,KAAA5wD,uBAAO,IAAPA,QAAS2+D,oBAAU,uBAAEC;;OAE/B8W,cAAcE;OACdrlB,OAAOma,cAAc;QACnB1L;QACA57B;;OAEFia;OACAC,aAAat9C,uBAAO,IAAPA,QAASs9C;OACtB7/B,gBAAgBC,eAAeD;;AAElC;AAGP;IAiBe,6BAAAo4D,CACb7W,QACA57B,OACAwyC,mBACAv4B,QACAr9C;;MAEA,IAAIo1E;MACJ,IAAM/3B,eAAqBxgD,MAAXwgD,QACd;OACE+3B,yCAAmC,QAAM77E,KAAKo8E,0BAC5C3W,QACA57B,OACAwyC,mBACAv4B,QACAr9C;OAEFq9C,SAAS+3B,iCAAiC53B,+BAC1C,cAAM,QAAM43B;eACL/3B;AAEb;;IAUe,sBAAAy4B,CACb9W,QACA57B,OACAwyC,mBACA51E;;;;OAGA,KAAyC,IAMxC,IANwC,4BAAAzG,KAAKs8E,8BAC5C7W,QACA57B,OACAwyC,mBAJEv4B,WAMFr9C,aACD,qDAAE;QANsC;QAA9B,MAAMm0C,uBAAoB;cAOnC,eAAO,+BAAAD,0BAA0BC;AACnC;;;;;;;;;;;;AACF;;IA0EO,kBAAA4hC,CACL/W,QACA57B,OACAqyC,cACAz1E,UAA6C,CAAC;KAE9CA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC;KAG5C,MAAM4W,OAAOh8E,KAAKu8E,uBAAuB9W,QAAQ57B,OAAOqyC,cAAc,OAAF,WAC/Dz1E;KAEL,OAAO;MAILkF,MAAI,MACKqwE,KAAKrwE;MAKd,CAAC3C,OAAO2U;OACN,OAAO3d;AACT;MAIAi8E,QAAQ,CAAClhE,WAAyB,CAAC,MAC1B/a,KAAKs8E,8BACV7W,QACA57B,OACAqyC,cACAnhE,SAASkpC,mBAAiB;OAExBF,aAAahpC,SAASgpC;SACnBt9C;;AAKb;IAYO,sCAAMg2E,CACXhX,QACA57B,OACA6yC,iBACAj2E,UAA4C,CAAC;KAG7C,OADAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GACrC3gD,cAAcL,SACnB,mDACA3d,UACAwT,MAAOkK;;MAkBL,OAAOyqD,uBAjBUxzB,qBAKTp7C,KAAKw7E,gBAAgBlc,kBAAkB;OAC3C39D,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BqX;OACA1lB,OAAOma,cAAc;QAAE1L;QAAQ57B;;OAC/B3lB,gBAAgBC,eAAeD;;AAGI;AAG7C;IAUO,YAAMs7C,CACXhyD,MACA/G,UAAiC,CAAC;KAGlC,OADAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GACrC3gD,cAAcL,SAAS,yBAAyB3d,UAASwT,MAAOkK;;MACrE,OAAOi3B,qBACCp7C,KAAKw7E,gBAAgBhc,OAAOhyD,MAAM;OACtC7L,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9B5c,iBAAiBhiD,QAAQgiD;OACzBvkC,gBAAgBC,eAAeD;;AAElC;AAEL;IAWO,0BAAMw7C,CACXC,sBACAgd,gBACAl2E,UAA+C,CAAC;KAGhD,OADAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GACrC3gD,cAAcL,SACnB,uCACA3d,UACAwT,MAAOkK;;MACL,OAAOi3B,qBAICp7C,KAAKw7E,gBAAgB9b,qBAAqBC,sBAAsB;OACpEh+D,aAAa8E,QAAQ9E;OACrB+lD,oBAAoBi1B;OACpBpG,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BnhD,gBAAgBC,eAAeD;;AAElC;AAGP;IAeO,0BAAM04D,CACX90B,YACArhD,UAA+C,CAAC;KAEhD,OAAOge,cAAcL,SACnB,uCACA3d,UACAwT,MAAOkK;;MACL,OAAOi3B,qBACCp7C,KAAKw7E,gBAAgB3b,gBAAgB/X,YAAY;OACrDnmD,aAAa8E,QAAQ9E;OACrB2jE,0BAA0B,OAAF,yBACnB7+D,QAAQ2+D,aAAU;QACrB/N,QAA0B,UAAlB,KAAA5wD,QAAQ2+D,oBAAU,uBAAEC;;OAE9BnhD,gBAAgBC,eAAeD;;AAElC;AAGP;;GC/vLKjK,eAAe4iE,cACpBC;IAEA,IAAIjpE,SAASvB,OAAOimE,M7D2DoB;I6DzDxC,MAAMwE,uBFsED9iE,eACLvJ,QACAmD,QACAmgE;KAEA,IAAIgB,MAAM;KACV,MAAMnB,aAAahgE,OAAOpO;KAE1B,OAAO,IAAImL,SAAgB,CAACC,SAAS+C;MACnClD,OAAOM,GAAG,aAAY;OACpB,IAAIM,QAAQZ,OAAOqO;OACdzN,UAGgB,mBAAVA,UACTA,QAAQgB,OAAOE,KAAKlB,OAAO0iE,YAGzBgB,MAAM1jE,MAAM7L,SAASouE,aACvBjgE,OAAO,IAAIlS,MAAM,4CAA4CmyE,kBAI/DhgE,OAAOw/D,KAAK/hE,OAAO0jE,KAAKA,MAAM1jE,MAAM7L;OACpCuvE,OAAO1jE,MAAM7L;AAAM,WAGrBiL,OAAOM,GAAG,QAAO;OACfH,QAAQmkE;AAAI,WAGdtkE,OAAOM,GAAG,SAAS4C;AAAO;AAE9B,KEvG+BopE,CAC3BF,cAAcppE,oBACdG;IAMF,OAFAA,SAASA,OAAO/R,MAAM,GAAGi7E,iBAElBlpE,OAAOhL;AAChB;GCIO,MAAMo0E;IAOX,WAAA18E,CACEu8E,eACAI;KAEA,KAAKJ,kBAAkBA,cAAcnjE,aAEnC,MAAM,IAAIq8B,WAAW;KAGvB,KAAKknC,eAAoC,MAArBA,YAAY1vE,MAE9B,MAAM,IAAIwoC,WAAW;KAGvBh2C,KAAK88E,gBAAgBA,eACrB98E,KAAKk9E,cAAcA,aACnBl9E,KAAKm9E,wBAAwBn9E,KAAK88E,cAAcnjE,YAAahV,MAAM,KAAK;KACxE3E,KAAKo9E,oBAAoB,KAAKp9E,KAAKm9E,6BACnCn9E,KAAKq9E,sBAAsB,KAAKr9E,KAAKm9E;AACvC;IAGO,wBAAMG;KAGX,IAAIt9E,KAAK88E,cAAcjW,UAAU5zD,WAAW+gC,iCAC1C,MAAM,IAAItyC,MACR,qDAAqD1B,KAAK88E,cAAcjW,UAAU5zD;KAItF,MAEMsqE,sBAF2BV,cAAc78E,KAAK88E,gBAGjDn4E,MAAM3E,KAAKq9E,qBAAqB,GAChC14E,MAAM3E,KAAKo9E,mBACXt7E,MAAM,IACH07E,mBAAmBD,aAAa93E;KAMtC,IAAI+3E,qBAAqBx9E,KAAKk9E,YAAY1vE,QAA6B,MAArBgwE,kBAChD,MAAM,IAAI97E,MAAM;KAGlB,MAAM+7E,2BAAoD,IAAIj7E,MAAMg7E;KACpE,IAAIE,6BAAqC,GACrCC,0BAAkC;KAGtC,KAAK,IAAIt8E,QAAQ,GAAGA,QAAQm8E,kBAAkBn8E,SAAS;MACrD,MAAMu8E,cAAcL,aAAal8E,QAC3Bw8E,0BAA0B,CAAC;MACjCA,wBAAwBl0E,UAAUk2B,kBAAkB;MAEpD,MAAMi+C,gBAAgBF,YAAYj5E,MAAM;MACxC,IAAIo5E,2BAA0B,GAC1BC,yBAAwB,GACxBC,iBAAgB,GAChBC,aAzEQ;MA2EZ,KAAK,MAAMC,gBAAgBL,eACzB,IAAKC,yBAmBL,IAA4B,OAAxBI,aAAar5E,QAUjB,IAAKk5E,uBAiBEH,wBAAwBlqE,eAC3BkqE,wBAAwBlqE,aAAa;MAGvCkqE,wBAAwBlqE,cAAcwqE,mBArBZ;OAC1B,KAAqD,MAAjDA,aAAa78E,QA5GG,OA8GlB,MAAM,IAAII,MACR,uCAAuCy8E;OAK3C,MAAMC,SAASD,aAAax5E,MApHR;OAqHpBk5E,wBAAwBl0E,QAAQlJ,IAAI29E,OAAO,IAAIA,OAAO,KAClDA,OAAO,OAAO,8CAChBP,wBAAwB7yB,YAAYozB,OAAO;OAC3CH,iBAAgB;AAEpB,aAvBOD,0BACHA,yBAAwB,SAd1B,IANIG,aAAan5E,WAAW,0CAC1Bk5E,YAAYl8D,SAASm8D,aAAax5E,MAjFhB,MAiF6C;MAK7Dw5E,aAAan5E,W9DjCK,a8DiCyB;OAC7C+4E,2BAA0B;OAE1B,MAAMK,SAASD,aAAax5E,MAxFhB;OAyFZk5E,wBAAwB5qE,SAAS+O,SAASo8D,OAAO,KACjDP,wBAAwBQ,gBAAgBD,OAAOt8E,MAAM,GAAG2F,KA1F5C;AA2Fd;OA1FQ,MAuIVy2E,aACA1qE,OAAO8qE,UAAUJ,cACjBA,aAAa,KACbA,YAAYl+E,KAAKk9E,YAAY1vE,aACWlK,MAAxCm6E,yBAAyBS,cAEzBL,wBAAwBU,WAAWv+E,KAAKk9E,YAAYr8E,IAAIq9E;MACxDT,yBAAyBS,aAAaL,2BAEtC,eAAO53E,MACL,gBAAgB5E,4EAA4E68E;MAI5FD,gBACFN,4BAEAD;AAEJ;KAEA,OAAO;MACLH,cAAcE;MACdC;MACAC;;AAEJ;;GClLF,IAAKa,iBCugBOC;IDvgBZ,SAAKD;IACH,wDACA;AACD,IAHD,CAAKA,oBAAAA,kBAAe;GAUb,MAAME;IAOJ,iBAAaC,CAAKxvE;KACvB,OAAO,IAAIyB,SAAeC;WACDvN,MAAnBtD,KAAKoI,KAAK+G,QAAsBnP,KAAKoI,KAAK+G,SAASqvE,gBAAgBI,YACrE5+E,KAAKoI,KAAK+G,OAAOqvE,gBAAgBK;MACjChuE,aAEA7Q,KAAK8+E,cAAc3vE,MAAK;OACtBnP,KAAKoI,KAAK+G,OAAOqvE,gBAAgBK,QACjChuE;AAAS;AAEb;AAEJ;IAOO,mBAAakuE,CAAO5vE;KACzB,OAAO,IAAIyB,SAAeC;MACpB7Q,KAAKoI,KAAK+G,SAASqvE,gBAAgBK,UACrC7+E,KAAKg/E,gBAAgB7vE,aAEhBnP,KAAKoI,KAAK+G;MACjB0B;AAAS;AAEb;IAKQ,oBAAOiuE,CAAc3vE,KAAa2B;UACZxN,MAAxBtD,KAAKoB,UAAU+N,OACjBnP,KAAKoB,UAAU+N,OAAO,EAAC2B,YAEvB9Q,KAAKoB,UAAU+N,KAAKjO,KAAK4P;AAE7B;IAEQ,sBAAOkuE,CAAgB7vE;KAC7B,SAA4B7L,MAAxBtD,KAAKoB,UAAU+N,QAAsBnP,KAAKoB,UAAU+N,KAAK1J,SAAS,GAAG;MACvE,MAAMqL,UAAU9Q,KAAKoB,UAAU+N,KAAKoP;MACpC0gE,cAAa;OACXnuE,QAASjP,KAAK7B;AAAK;AAEvB;AACF;;GAlBe,MAAAoI,OAA2C,CAAC,GAC5C,MAAAhH,YAA2C,CAAC;GEStD,MAAM89E;IAKX,WAAA3+E;KAHiB,KAAAk4E,QAAgB,SAI/Bz4E,KAAKm/E,eAAe,IAAIC;AAC1B;IAOO,uBAAAC;KACL,OAAOr/E,KAAKm/E,aAAaG;AAC3B;IAKO,kBAAAC;KACL,OAAOv/E,KAAKm/E,aAAaI;AAC3B;IAKO,cAAAC;KACL,OAAOx/E,KAAKm/E,aAAaK;AAC3B;IAEQ,2BAAMC,CACZC,YACAC;WAEMjB,MAAMC,KAAK3+E,KAAKy4E;KAEtB;MACEz4E,KAAKm/E,aAAaS,iBAAiBF,mBAC7BC;MACN3/E,KAAKm/E,aAAaU,kBAAkBH;AACtC;YACQhB,MAAMK,OAAO/+E,KAAKy4E;AAC1B;AACF;IAEQ,YAAAqH,CAAaC;KAInB,IAHK//E,KAAK+/E,cACR//E,KAAK+/E,YAAYA,YAEf//E,KAAK+/E,cAAcA,WACrB,MAAM,IAAI/pC,WACR,yFAAyFh2C,KAAK+/E;AAGpG;IAqCO,gBAAMC,CACXC,iBACAC,qBAMAz5E;KAEA,IAAIgD,KACAkd;KAEJ,IAC6B,mBAApBs5D,oBACL,cAAUC,+BAA+BzhC,8BACzCyhC,+BAA+BphC,uBAC/B90B,kBAAkBk2D,uBAGpBz2E,MAAMw2E;KACNt5D,aAAau5D,0BACR;MAAA,MAAID,2BAA2B7K,aAMpC,MAAM,IAAIp/B,WACR;MALFvsC,MAAMw2E,gBAAgBx2E,KACtBkd,aAAas5D,gBAAgBt5D,YAC7BlgB,UAAUy5E;AAKZ;KAMA,OAJKz5E,YACHA,UAAU,CAAC,IAGNge,cAAcL,SACnB,oCACA3d,UACAwT,MAAOkK;MACLnkB,KAAK8/E,aAAa,iBACZ9/E,KAAKy/E,sBACT;OACEh2E;OACAkd;UAEF1M;aACQ,IAAIm7D,WAAW3rE,KAAKzJ,KAAKm/E,aAAagB,eAAex5D,aAAape,OACtE4b;AACD;AAEJ;AAGP;IAgDO,uBAAMi8D,CACXH,iBACAI,kBAKAC,eACA75E;KAEA,IAAIgD,KACAkd,YACAixC;KAEJ,IAC6B,mBAApBqoB,oBACL,cAAUI,4BAA4B5hC,8BACtC4hC,4BAA4BvhC,uBAC5B90B,kBAAkBq2D,oBAGpB52E,MAAMw2E;KACNt5D,aAAa05D,kBAIbzoB,OAAO0oB,oBACF;MAAA,MAAIL,2BAA2B7K,aAOpC,MAAM,IAAIp/B,WACR;MANFvsC,MAAMw2E,gBAAgBx2E,KACtBkd,aAAas5D,gBAAgBt5D,YAC7BixC,OAAOyoB;MACP55E,UAAU65E;AAKZ;KAMA,OAJK75E,YACHA,UAAU,CAAC,IAGNge,cAAcL,SACnB,qCACA3d,UACAwT,MAAOkK;MACLnkB,KAAK8/E,aAAa,wBACZ9/E,KAAKy/E,sBACT;OACEh2E;OACAkd;UAEF1M;aACQ,IAAIm7D,WAAW3rE,KAAKzJ,KAAKm/E,aAAagB,eAAex5D,aAAaqxD,cACtEpgB,MACAzzC;AACD;AAEJ;AAGP;;GAOF,MAAMi7D;IASJ,WAAA7+E;KACEP,KAAKugF,iBAAiB,GACtBvgF,KAAK0J,OAAO;KAEZ,MAAM82E,WAAW;KAGjBxgF,KAAK4f,WAAW,SAAS4gE,YAIzBxgF,KAAKygF,mBAAmB,KAAKzgF,KAAK4f,eAA8B,+DAAoE;KAEpI5f,KAAK21D,uBAAuB,6BAA6B31D,KAAK4f,YAE9D5f,KAAK0gF,qBAAqB,KAAK1gF,KAAK4f;KAEpC5f,KAAKk9E,cAAc,IAAIh1E;AACzB;IASO,cAAAi4E,CACLx5D;KAEA,MAAMu5B,eAAe;KA6FzB,IAAoCi/B;KA5FhCj/B,aAAap1C,UACX4tB,oBAAoB;MAClBC;MACAtC,mBAAmB;OACjBhJ,KAAK;QACHG,YAAY;;;SAIlB;MAAExiB,OAAO;SAGXk1C,aAAap1C,UAgGR;MACL1I,MAAM;MACN,iBAAMkJ,CAAYE,SAA0BG;OAC1C,IAAIg1E,gBAAgB;OAEpB,KAAK,OAAOv+E,SAASoJ,QAAQ7B,SACvBguC,OAAOv1C,MAAM,4CACfu+E,gBAAgBv+E;OAQpB,OAJsB,OAAlBu+E,iBACFn1E,QAAQ7B,QAAQpB,OAAOo4E,gBAGlBh1E,KAAKH;AACd;SA9GA00C,aAAap1C,WA8EmBq0E,eA9EkBn/E,MA+E7C;MACLoC,MAAM;MACN6X,aAAiB,MAACzO,YAChB2zE,aAAayB,uBAAuBp1E,UAE7B;OACLA;OACAyH,QAAQ;OACRtJ,SAAS;;SAvF4C;MAAEsB,YAAY;SACnE+e,kBAAkBrD,cACpBu5B,aAAap1C,UACX8d,gCAAgC;MAC9BjC;MACAW,QAAQosB;MACR3qB,oBAAoB;OAAEC,6BAA6BqV;;SAErD;MAAErzB,OAAO;UAEF2b,sBAAsB83B,8BAC/ByB,aAAap1C,UACXk0C,iCAAiC;MAC/BhK,aAAaruB,WAAWquB;MACxBC,YAAatuB,WAAmBsuB;SAElC;MAAEjqC,OAAO;;KAGb,MAAMa,WAAW,IAAI2zC,SAAS;KAK9B,OAHC3zC,SAAiB+zC,cAAcj5B,YAC/B9a,SAAiBs0C,gBAAgBD;KAE3Br0C;AACT;IAEO,sBAAA+0E,CAAuBp1E;KAE5BxL,KAAK0J,QAAQ,EACX1J,KAAKygF,kBACL,GAAG,yCAA+BzgF,KAAKugF,kBACvC,IACA,GAAG/0E,QAAQ5B,OAAOf,cAAcitC,mBAC9BtqC,QAAQ/B,sBAEVhC,KjExV0B;KiE0V5B,KAAK,OAAOrF,MAAMiG,UAAUmD,QAAQ7B,SAClC3J,KAAK0J,QAAQ,GAAGtH,SAASiG;KAG3BrI,KAAK0J,QjE9VuB;AiEiW9B;IAEO,gBAAAk2E,CAAiBF;KACtB,IAAI1/E,KAAKugF,kBjEtWoB,KiEuW3B,MAAM,IAAIvqC,WAAW;KAIvB,MAAMxhC,OAAOqhC,WAAW6pC,WAAWj2E;KACnC,KAAK+K,QAAiB,OAATA,MACX,MAAM,IAAIwhC,WAAW,iCAAiC0pC,WAAWj2E;AAErE;IAEO,iBAAAo2E,CAAkBH;KACvB1/E,KAAKk9E,YAAYz8E,IAAIT,KAAKugF,gBAAgBb,aAC1C1/E,KAAKugF;AACP;IAGO,kBAAAhB;KACL,OAAO,GAAGv/E,KAAK0J,OAAO1J,KAAK0gF;AAC7B;IAEO,uBAAApB;KACL,OAAOt/E,KAAK21D;AACd;IAEO,cAAA6pB;KACL,OAAOx/E,KAAKk9E;AACd;;GChZK,MAAM2D;IA8BX,WAAAtgF,CACEkJ,KACAq3E,sBAOAr6E;KAEA,IAAIoF;KAEFA,WADEwzC,eAAeyhC,wBACNA,uBAKAphC,YAJDohC,wBAEa,IAAIhiC,qBAEkBr4C;KAG/C,MAAMm7D,uBAAuB,IAAIF,qBAAqBj4D,KAAKo2C,qBAAqBh0C,YAE1E2I,OAAOqhC,WAAWpsC;KAGtBzJ,KAAK+gF,4BAFHvsE,QAAiB,QAATA,OAEuBotD,qBAAqBN,YAErBM,qBAAqBP;AAE1D;IAMO,WAAA2f;KACL,OAAO,IAAI9B;AACb;IAsCO,iBAAM+B,CACXC,mBACAhB,qBAQAz5E;KAEA,MAAMgyE,QAAQ,IAAIyG;KAClB,KAAK,MAAMe,mBAAmBiB,mBACG,mBAApBjB,wBACHxH,MAAMuH,WAAWC,iBAAiBC,qBAAwCz5E,iBAE1EgyE,MAAMuH,WAAWC,iBAAiBC;KAG5C,OAAOlgF,KAAK46D,YAAY6d;AAC1B;IAkDO,wBAAM0I,CACXD,mBACAb,kBAKAC,eAGA75E;KAEA,MAAMgyE,QAAQ,IAAIyG;KAClB,KAAK,MAAMe,mBAAmBiB,mBACG,mBAApBjB,wBACHxH,MAAM2H,kBACVH,iBACAI,kBACAC,eACA75E,iBAGIgyE,MAAM2H,kBACVH,iBACAI,kBACAC;KAIN,OAAOtgF,KAAK46D,YAAY6d;AAC1B;IAqCO,iBAAM7d,CACXukB,cACA14E,UAA8C,CAAC;KAE/C,KAAK04E,gBAAuD,MAAvCA,aAAaK,iBAAiBhyE,MACjD,MAAM,IAAIwoC,WAAW;KAGvB,OAAOvxB,cAAcL,SACnB,+BACA3d,UACAwT,MAAOkK;MACL,MAAMi9D,mBAAmBjC,aAAaI,sBAGhC8B,mBAAoDjmC,qBAClDp7C,KAAK+gF,0BAA0BnmB,aLlShB7rC,MKmSJqyD;MLlSlB9uE,OAAOpB,WAAW6d,OKmSfowD,aAAaE,2BACb+B,kBAAgB,kBAEXj9D;MLvSV,IAAwB4K;MK6SvB,MAAMuyD,sBAAsB,IAAIrE,oBAC9BoE,kBACAlC,aAAaK,mBAET+B,wBAAwBD,oBAAoBhE;MAclD,OAZ0C;OACxCzW,WAAWwa,iBAAiBxa;OAC5BltD,aAAa0nE,iBAAiB1nE;OAC9BqxC,WAAWq2B,iBAAiBr2B;OAC5B3gD,WAAWg3E,iBAAiBh3E;OAC5B0gD,iBAAiBs2B,iBAAiBt2B;OAClC9xC,SAASooE,iBAAiBpoE;OAC1BskE,cAAcgE,gBAAgBhE;OAC9BG,4BAA4B6D,gBAAgB7D;OAC5CC,yBAAyB4D,gBAAgB5D;;AAGjC;AAGhB;;GCuPK,MAAM6D,wBAAwB;IAWnC,iBAAWt7B;KACT,OAAOlmD,KAAKq1E;AACd;IAmDA,WAAA90E,CACE+0E,uBACAC,qCAQA9uE;KAEA,IAAIoF,UACApC;KAEJ,IADAhD,UAAUA,WAAW,CAAC,GAClB44C,eAAek2B,sCAEjB9rE,MAAM6rE;KACNzpE,WAAW0pE,0CACN,IACJ,cAAUA,+CAA+C92B,8BAC1D82B,+CAA+Cz2B,uBAC/C90B,kBAAkBurD,sCAGlB9rE,MAAM6rE;KACNzpE,WAAW6zC,YAAY61B,qCAAqC9uE,eACvD,IACJ8uE,uCAC8C,mBAAxCA,qCAMF;MAAA,KACLA,uCAC+C,mBAAxCA,qCAkCP,MAAM,IAAI7zE,MAAM;MAjChB;OAEA,MAAMwkD,gBAAgBqvB,qCAEhBE,iBAAiB/gC,6BAA6B4gC;OACpD,IAA4B,wBAAxBG,eAAetgC,MAA8B;QAC/C,KAAI,YAaF,MAAM,IAAIzzC,MAAM;QAbN;SACV,MAAMuiE,sBAAsB,IAAIxlB,2BAC9Bg3B,eAAezgC,aACfygC,eAAexgC;SAEjBxrC,MAAM6rC,gBAAgBmgC,eAAehsE,KAAKyxB,mBAAmBgrB,iBAExDz/C,QAAQgf,iBACXhf,QAAQgf,eAAe,oCAAwBgwD,eAAe9gC;SAGhE9oC,WAAW6zC,YAAYukB,qBAAqBx9D;AAC9C;AAGF,cAAO;QAAA,IAA4B,oBAAxBgvE,eAAetgC,MAOxB,MAAM,IAAIzzC,MACR;QAPF+H,MACE6rC,gBAAgBmgC,eAAehsE,KAAKyxB,mBAAmBgrB,kBACvD,MACAuvB,eAAergC;QACjBvpC,WAAW6zC,YAAY,IAAIZ,qBAAuBr4C;AAKpD;AACF;AAEA,YAvCEgD,MAAM6rE,uBACNzpE,WAAW6zC,YAAY,IAAIZ,qBAAuBr4C;KAuCpDtE,MAAMsH,KAAKoC,WACX7L,KAAKq1E,iBAAiBr1E,KAAKyhF,2BAC3BzhF,KAAK0hF,mBAAmB1hF,KAAK4hE,qBAAqBN;AACpD;IAmBO,YAAMt1D,CAAOvF,UAAkC,CAAC;KACrD,OAAOge,cAAcL,SAAS,0BAA0B3d,UAASwT,MAAOkK,kBAC/Di3B,qBACCp7C,KAAK0hF,iBAAiB11E,OAAOmY;AAGzC;IAUO,uBAAM01D,CACXpzE,UAAkC,CAAC;KAEnC,OAAOge,cAAcL,SACnB,qCACA3d,UACAwT,MAAOkK;;MACL;OACE,MAAMvR,YAAY5S,KAAKgM,OAAOmY;OAC9B,OAAO,OAAP;QACE8yD,YAAW;UACRrkE,MAAG;QACNi0D,WAAWj0D,IAAIi0D;;AAEnB,QAAE,OAAO54D;OACP,IAA6B,8BAAhB,UAAT,KAAAA,EAAEiwB,iBAAO,uBAAE8sB,YACb,OAAO,OAAP;QACEisB,YAAW;UACE,UAAV,KAAAhpE,EAAEgC,kBAAQ,uBAAE0a,gBAAa;QAC5Bk8C,WAAW54D,EAAEgC;;OAGf,MAAMhC;AAEV;AAAA;AAGN;IAWO,YAAM6oE,CAAOrwE,UAAkC,CAAC;KACrD,OAAOge,cAAcL,SAAS,0BAA0B3d,UAASwT,MAAOkK;MACtE;OAKE,aAJMnkB,KAAKk6D,cAAc;QACvBv4D,aAAa8E,QAAQ9E;QACrBuiB,gBAAgBC,eAAeD;YAE1B;AACT,QAAE,OAAOjW;OACP,IAAqB,QAAjBA,EAAE6B,YACJ,QAAO;OAET,MAAM7B;AACR;AAAA;AAEJ;IAQO,aAAA0zE,CAAcxmC;KACnB,OAAO,IAAIi6B,WAAW9/B,gBAAgBt1C,KAAKyJ,KAAKyxC,WAAWC,YAAYn7C,KAAK6L;AAC9E;IAOO,mBAAAmqE,CAAoB76B;KACzB,OAAO,IAAI86B,iBAAiB3gC,gBAAgBt1C,KAAKyJ,KAAKyxC,WAAWC,YAAYn7C,KAAK6L;AACpF;IAiBO,kBAAAqqE,CAAmB/6B;KACxB,OAAO,IAAIg7B,gBAAgB7gC,gBAAgBt1C,KAAKyJ,KAAKyxC,WAAWC,YAAYn7C,KAAK6L;AACnF;IAOO,iBAAAuqE,CAAkBj7B;KACvB,OAAO,IAAIk7B,eAAe/gC,gBAAgBt1C,KAAKyJ,KAAKyxC,WAAWC,YAAYn7C,KAAK6L;AAClF;IAcO,mBAAMquD,CACXzzD,UAAyC,CAAC;KAM1C,OAJKA,QAAQ2+D,eACX3+D,QAAQ2+D,aAAa,CAAC,IAGjB3gD,cAAcL,SACnB,iCACA3d,UACAwT,MAAOkK,kBACEi3B,qBACCp7C,KAAK0hF,iBAAiBxnB,cAAc,OAAD;MACvCv4D,aAAa8E,QAAQ9E;QAClB8E,QAAQ2+D,aAAU;MACrBlhD,gBAAgBC,eAAeD;;AAKzC;IASO,YAAM,CACXzd,UAAwC,CAAC;KAMzC,OAJKA,QAAQ2+D,eACX3+D,QAAQ2+D,aAAa,CAAC,IAGjB3gD,cAAcL,SAAS,0BAA0B3d,UAASwT,MAAOkK,kBAC/Di3B,qBACCp7C,KAAK0hF,iBAAiBn5E,OAAO;MACjC5G,aAAa8E,QAAQ9E;MACrB40E,uBAAuB9vE,QAAQ2+D;MAC/BE,0BAA0B7+D,QAAQ2+D;MAClClhD,gBAAgBC,eAAeD;;AAIvC;IASO,oBAAM8yD,CACXvwE,UAAwC,CAAC;KAEzC,OAAOge,cAAcL,SACnB,kCACA3d,UACAwT,MAAOkK;;MACL;OACE,MAAMvR,YAAY5S,KAAKuI,OAAO4b;OAC9B,OAAO,OAAP;QACE8yD,YAAW;UACRrkE,MAAG;QACNi0D,WAAWj0D,IAAIi0D;;AAEnB,QAAE,OAAO54D;OACP,IAA6B,yBAAhB,UAAT,KAAAA,EAAEiwB,iBAAO,uBAAE8sB,YACb,OAAO,OAAP;QACEisB,YAAW;UACE,UAAV,KAAAhpE,EAAEgC,kBAAQ,uBAAE0a,gBAAa;QAC5Bk8C,WAAW54D,EAAEgC;;OAGjB,MAAMhC;AACR;AAAA;AAGN;IAcO,iBAAMmtD,CACX/W,UACA59C,UAAuC,CAAC;KAMxC,IAJKA,QAAQ2+D,eACX3+D,QAAQ2+D,aAAa,CAAC,IAGpB3+D,QAAQ2+D,WAAWpP,mBACrB,MAAM,IAAIhgB,WACR;KAIJ,OAAOvxB,cAAcL,SACnB,+BACA3d,UACAwT,MAAOkK,kBACEi3B,qBACCp7C,KAAK0hF,iBAAiBtmB,YAAY;MACtCz5D,aAAa8E,QAAQ9E;MACrB40E,uBAAuB9vE,QAAQ2+D;MAC/B/gB;MACAihB,0BAA0B7+D,QAAQ2+D;MAClClhD,gBAAgBC,eAAeD;;AAKzC;IAaO,qBAAMo3C,CACX70D,UAA2C,CAAC;KAM5C,OAJKA,QAAQ2+D,eACX3+D,QAAQ2+D,aAAa,CAAC,IAGjB3gD,cAAcL,SACnB,mCACA3d,UACAwT,MAAOkK;MACL,MAAMlU,WAAWmrC,qBAKTp7C,KAAK0hF,iBAAiBpmB,gBAAgB;OAC1C35D,aAAa8E,QAAQ9E;OACrB40E,uBAAuB9vE,QAAQ2+D;OAC/BlhD,gBAAgBC,eAAeD;WAI7BtR,MAAwC;OAC5Ci0D,WAAW52D,SAAS42D;OACpBva,kBAAkBr8C,SAASq8C;OAC3B1V,MAAM3mC,SAAS2mC;OACf4N,MAAMv0C,SAASu0C;OACfwG,WAAW/6C,SAAS+6C;OACpBzG,cAAct0C,SAASs0C;OACvBl6C,WAAW4F,SAAS5F;OACpB0gD,iBAAiB96C,SAAS86C;OAC1B62B,mBAAmB;OACnB3oE,SAAShJ,SAASgJ;;MAGpB,KAAK,MAAMoqD,cAAcpzD,UAAU;OACjC,IAAIs2C;OACA8c,WAAW9c,iBACbA,eAAe;QACbE,aAAa4c,WAAW9c,aAAaE;UAGnC4c,WAAW9c,aAAajB,cAC1BiB,aAAajB,YAAY,IAAIv3C,KAAKs1D,WAAW9c,aAAajB;OAGxD+d,WAAW9c,aAAalB,aAC1BkB,aAAalB,WAAW,IAAIt3C,KAAKs1D,WAAW9c,aAAalB;OAI7DzyC,IAAIgvE,kBAAkB1gF,KAAK;QACzBqlD;QACAD,IAAI+c,WAAW/c;;AAEnB;MAEA,OAAO1zC;AAAG;AAGhB;IAmBO,qBAAM4oD,CACX1F,QACA+rB,cACAp7E,UAA2C,CAAC;KAG5C,OADAA,QAAQ2+D,aAAa3+D,QAAQ2+D,cAAc,CAAC,GACrC3gD,cAAcL,SACnB,mCACA3d,UACAwT,MAAOkK;MACL,MAAM29D,MAA+B;MACrC,KAAK,MAAMze,cAAcwe,gBAAgB,IACvCC,IAAI5gF,KAAK;OACPqlD,cAAc;QACZjB,WAAW+d,WAAW9c,aAAajB,YAC/B3O,qBAAqB0sB,WAAW9c,aAAajB,aAC7C;QACJmB,aAAa4c,WAAW9c,aAAaE;QACrCpB,UAAUge,WAAW9c,aAAalB,WAC9B1O,qBAAqB0sB,WAAW9c,aAAalB,YAC7C;;OAENiB,IAAI+c,WAAW/c;;MAInB,OAAOlL,qBACCp7C,KAAK0hF,iBAAiBlmB,gBAAgB;OAC1C75D,aAAa8E,QAAQ9E;OACrBm0D;OACA+rB,cAAcC;OACdvL,uBAAuB9vE,QAAQ2+D;OAC/BE,0BAA0B7+D,QAAQ2+D;OAClClhD,gBAAgBC,eAAeD;;AAElC;AAGP;IAQO,kBAAAmzD,CAAmBC;KACxB,OAAO,IAAIxS,gBAAgB9kE,MAAMs3E;AACnC;IAwBO,qBAAMyK,CACX5mC,UACAzxC,MACAsW,eACAvZ,UAAkC,CAAC;KAEnC,OAAOge,cAAcL,SACnB,mCACA3d,UACAwT,MAAOkK;MACL,MAAM69D,kBAAkBhiF,KAAKk2E,mBAAmB/6B,WAC1ClrC,iBAAiB+xE,gBAAgBzhB,OAAO72D,MAAMsW,eAAemE;MACnE,OAAO;OACL69D;OACA/xE;;AACD;AAGP;IAaO,gBAAM+vE,CACX7kC,UACA10C,UAAsC,CAAC;KAEvC,OAAOge,cAAcL,SAAS,8BAA8B3d,UAASwT,MAAOkK;MAC1E,IAAI2sD,aAAa9wE,KAAK2hF,cAAcxmC;MAIpC,OAHI10C,QAAQqgD,cACVgqB,aAAaA,WAAWiF,YAAYtvE,QAAQqgD;MAEvCgqB,WAAWvoE,OAAO4b;AAAe;AAE5C;IAYQ,yBAAMs4C,CACZ3Y,QACAr9C,UAA4C,CAAC;KAE7C,OAAOge,cAAcL,SACnB,uCACA3d,UACAwT,MAAOkK;MACL,MAAMlU,WAAWmrC,qBAKTp7C,KAAK0hF,iBAAiBjlB,oBAAoB,OAAD;OAC7C3Y;SACGr9C,UAAO;OACVyd,gBAAgBC,eAAeD;;MlE7ZpC,IACLm2B;MkEqbM,OArBqB,gCAChBpqC,WAAQ;OACX42D,WAAW,OAAF,yBACJ52D,SAAS42D,YAAS;QACrBj8C,alEpaVyvB,mBkEoa4DpqC,SAAS42D,UAAUj8C,YlElaxE,OAAP,yBACKyvB,mBAAgB;SACnBC,SAAS;UACPG,WAAWJ,iBAAiBC,QAAQG,UAAU71C,KAAK81C,mBACnC,gCACTA,kBAAe;WAClBt4C,MAAM63C,iBAAiBS,gBAAgBt4C;;;;;OkE8ZvCk4C,SAAS,OAAF,yBACFrqC,SAASqqC,UAAO;QACnBG,WAAWxqC,SAASqqC,QAAQG,UAAU71C,KAAKq9E,oBAC3B,gCACTA,mBAAgB;SACnB7/E,MAAM63C,iBAAiBgoC,iBAAiB7/E;SACxCulC,MAAMyQ,OAAO6pC,iBAAiBj7B;SAC9B0f,mCAAmCvtB,6BACjC8oC,iBAAiBh7B;;;;AAOL;AAG5B;IAaQ,8BAAM0V,CACZ3gC,WACA8nB,QACAr9C,UAA4C,CAAC;KAE7C,OAAOge,cAAcL,SACnB,4CACA3d,UACAwT,MAAOkK;;MACL,MAAMlU,WAAWmrC,qBAKTp7C,KAAK0hF,iBAAiB/kB,yBAAyB3gC,WAAW,OAAF;OAC5D8nB;SACGr9C,UAAO;OACVyd,gBAAgBC,eAAeD;;MAgCnC,OA5BqB,gCAChBjU,WAAQ;OACX42D,WAAW,OAAF,yBACJ52D,SAAS42D,YAAS;QACrBj8C,YAAYwvB,2CAA2CnqC,SAAS42D,UAAUj8C;;OAE5E0vB,SAAS,OAAF,yBACFrqC,SAASqqC,UAAO;QACnBG,WAAWxqC,SAASqqC,QAAQG,UAAU71C,KAAKq9E,oBAC3B,gCACTA,mBAAgB;SACnB7/E,MAAM63C,iBAAiBgoC,iBAAiB7/E;SACxCulC,MAAMyQ,OAAO6pC,iBAAiBj7B;SAC9B0f,mCAAmCvtB,6BACjC8oC,iBAAiBh7B;;QAKvB1M,cAA2C,UAA7B,KAAAtqC,SAASqqC,QAAQC,sBAAY,uBAAE31C,KAAK41C,sBAChC,gCACXA,qBAAkB;SACrBp4C,MAAM63C,iBAAiBO,mBAAmBp4C;;;;AAM5B;AAG5B;IAce,YAAA8/E,CAAa;yDAC1Bp+B,QACAr9C,UAA4C,CAAC;MAE7C,IAAI07E;MACJ,IAAMr+B,eAAqBxgD,MAAXwgD,QACd;OACEq+B,qCAA+B,QAAMniF,KAAKy8D,oBAAoB3Y,QAAQr9C;OACtEq9C,SAASq+B,6BAA6Bl+B,+BACtC,cAAM,QAAMk+B;eACLr+B;AAEb;;IAOe,SAAAs+B;yDACb37E,UAA4C,CAAC;;;OAG7C,KAAiD,IAAkC,IAAlC,4BAAAzG,KAAKkiF,aADlDp+B,WACuEr9C,aAAQ,qDAAE;QAApC;QAAtC,MAAM07E,+BAA4B;cAC3C,eAAO,+BAAAA,6BAA6B7nC,QAAQG;AAC9C;;;;;;;;;;;;AACF;;IAwEO,aAAA4nC,CACL57E,UAAqC,CAAC;KAEtC,MAAM67E,UAAkC;KACpC77E,QAAQ87E,eACVD,QAAQphF,KAAK,SAEXuF,QAAQ+7E,kBACVF,QAAQphF,KAAK;KAEXuF,QAAQg8E,mBACVH,QAAQphF,KAAK,aAEXuF,QAAQi8E,oBACVJ,QAAQphF,KAAK;KAEXuF,QAAQk8E,mBACVL,QAAQphF,KAAK,aAEXuF,QAAQm8E,0BACVN,QAAQphF,KAAK;KAEXuF,QAAQo8E,eACVP,QAAQphF,KAAK,SAEXuF,QAAQq8E,8BACVR,QAAQphF,KAAK;KAEXuF,QAAQs8E,6BACVT,QAAQphF,KAAK,uBAEXuF,QAAQu8E,oBACVV,QAAQphF,KAAK;KAEQ,OAAnBuF,QAAQua,WACVva,QAAQua,cAAS1d;KAGnB,MAAM6gB,iBAAc,gCACf1d,UACC67E,QAAQ78E,SAAS,IAAI;MAAE68E;SAAqB,CAAC,IAI7CtG,OAAOh8E,KAAKoiF,UAAUj+D;KAC5B,OAAO;MAILxY,MAAI,MACKqwE,KAAKrwE;MAKd,CAAC3C,OAAO2U;OACN,OAAO3d;AACT;MAIAi8E,QAAQ,CAAClhE,WAAyB,CAAC,MAC1B/a,KAAKkiF,aAAannE,SAASkpC,mBAAmB,OAAF;OACjDF,aAAahpC,SAASgpC;SACnB5/B;;AAIX;IAee,qBAAA8+D,CAAsB,aAAD;yDAClCjnD,WACA8nB,QACAr9C,UAA4C,CAAC;MAE7C,IAAIy8E;MACJ,IAAMp/B,eAAqBxgD,MAAXwgD,QACd;OACEo/B,0CAAoC,QAAMljF,KAAK28D,yBAC7C3gC,WACA8nB,QACAr9C;OAEFq9C,SAASo/B,kCAAkCj/B,+BAC3C,cAAM,QAAMi/B;eACLp/B;AAEb;;IAQe,oBAAAq/B,CAAqB;yDAClCnnD,WACAv1B,UAA4C,CAAC;;;OAG7C,KAAsD,IAIrD,IAJqD,4BAAAzG,KAAKijF,sBACzDjnD,WAFE8nB,WAIFr9C,aACD,qDAAE;QAJmD;QAA3C,MAKH6zC,UAL0C,GAKEA;QAClD,IAAIA,QAAQC,cACV,KAAK,MAAMv5B,UAAUs5B,QAAQC,0BAC3B;SACEpF,MAAM;WACHn0B;QAIT,KAAK,MAAMkF,QAAQo0B,QAAQG,uBACzB;SAAQtF,MAAM;WAAWjvB;AAE7B;;;;;;;;;;;;AACF;;IAgFO,oBAAAk9D,CACLpnD,WACAv1B,UAAqC,CAAC;KAKtC,IAAkB,OAAdu1B,WACF,MAAM,IAAIga,WAAW;KAGvB,MAAMssC,UAAkC;KACpC77E,QAAQ87E,eACVD,QAAQphF,KAAK,SAEXuF,QAAQ+7E,kBACVF,QAAQphF,KAAK;KAEXuF,QAAQg8E,mBACVH,QAAQphF,KAAK,aAEXuF,QAAQi8E,oBACVJ,QAAQphF,KAAK;KAEXuF,QAAQk8E,mBACVL,QAAQphF,KAAK,aAEXuF,QAAQm8E,0BACVN,QAAQphF,KAAK;KAEXuF,QAAQo8E,eACVP,QAAQphF,KAAK,SAEXuF,QAAQq8E,8BACVR,QAAQphF,KAAK;KAEXuF,QAAQs8E,6BACVT,QAAQphF,KAAK,uBAEXuF,QAAQu8E,oBACVV,QAAQphF,KAAK;KAEQ,OAAnBuF,QAAQua,WACVva,QAAQua,cAAS1d;KAGnB,MAAM6gB,iBAAc,gCACf1d,UACC67E,QAAQ78E,SAAS,IAAI;MAAE68E;SAAqB,CAAC,IAG7CtG,OAAOh8E,KAAKmjF,qBAAqBnnD,WAAW7X;KAClD,OAAO;MAILlK,MAAU,YACD+hE,KAAKrwE;MAKd,CAAC3C,OAAO2U;OACN,OAAO3d;AACT;MAIAi8E,QAAQ,CAAClhE,WAAyB,CAAC,MAC1B/a,KAAKijF,sBAAsBjnD,WAAWjhB,SAASkpC,mBAAmB,OAAF;OACrEF,aAAahpC,SAASgpC;SACnB5/B;;AAIX;IAmBQ,4BAAMk/D,CACZC,wBACAx/B,QACAr9C,UAAkD,CAAC;KAEnD,OAAOge,cAAcL,SACnB,0CACA3d,UACAwT,MAAOkK;MACL,MAAMlU,WAAWmrC,qBAKTp7C,KAAK0hF,iBAAiB5mB,YAAY;OACtCn5D,aAAa8E,QAAQ9E;OACrBokD,OAAOu9B;OACPx/B;OACAC,aAAat9C,QAAQs9C;OACrB7/B,gBAAgBC,eAAeD;WAI7Bq/D,kBAAe,gCAChBtzE,WAAQ;OACX42D,WAAW52D,SAAS42D;OACpB7gB,OAAO/1C,SAAS+1C,MAAMphD,KAAKshB;;QACzB,IAAIwd,WAAW;QAIf,OAHqC,OAAxB,UAAT,KAAAxd,KAAKyhB,cAAI,uBAAEwQ,WAAW1yC,YACxBi+B,WAAWxd,KAAKyhB,KAAKwQ,WAAW,GAAG9vC;QAE9B,OAAP,yBAAY6d,OAAI;SAAEyhB,MAAMyQ,OAAOlyB,KAAKyhB;SAAOjE;;AAAQ;;MAGvD,OAAO6/C;AAAe;AAG5B;IAkBe,uBAAAC,CAAwB,0BAAD;yDACpCF,wBACAx/B,QACAr9C,UAAkD,CAAC;MAEnD,IAAIwJ;MACJ,IAAM6zC,eAAqBxgD,MAAXwgD,QACd;OACE7zC,iBAAW,QAAMjQ,KAAKqjF,uBAAuBC,wBAAwBx/B,QAAQr9C;OAC7EwJ,SAAS+1C,QAAQ/1C,SAAS+1C,SAAS,IACnClC,SAAS7zC,SAASg0C,+BAClB,QAAMh0C;eACC6zC;AAEb;;IAWe,oBAAA2/B,CAAqB;yDAClCH,wBACA78E,UAAkD,CAAC;;;OAGnD,KAA4B,IAI3B,IAJ2B,4BAAAzG,KAAKwjF,wBAC/BF,wBAFEx/B,WAIFr9C,aACD,qDAAE;QAJyB;QAAjB,MAAM6zC,UAAO;cAKtB,eAAO,+BAAAA,QAAQ0L;AACjB;;;;;;;;;;;;AACF;;IA+EO,eAAA09B,CACLJ,wBACA78E,UAA0C,CAAC;KAG3C,MAAMk9E,qBAAkB,kBACnBl9E,UAGCu1E,OAAOh8E,KAAKyjF,qBAAqBH,wBAAwBK;KAC/D,OAAO;MAILh4E,MAAI,MACKqwE,KAAKrwE;MAKd,CAAC3C,OAAO2U;OACN,OAAO3d;AACT;MAIAi8E,QAAQ,CAAClhE,WAAyB,CAAC,MAC1B/a,KAAKwjF,wBAAwBF,wBAAwBvoE,SAASkpC,mBAAmB,OAAF;OACpFF,aAAahpC,SAASgpC;SACnB4/B;;AAIX;IAYO,oBAAMjpB,CACXj0D,UAA0C,CAAC;KAE3C,OAAOge,cAAcL,SACnB,kCACA3d,UACAwT,MAAOkK,kBACEi3B,qBACCp7C,KAAK0hF,iBAAiBhnB,eAAe;MACzC/4D,aAAa8E,QAAQ9E;MACrBuiB,gBAAgBC,eAAeD;;AAKzC;IAEQ,uBAAAu9D;KACN,IAAIv7B;KACJ;MAOE,MAAMnkC,YAAY,IAAIxS,IAAIvP,KAAKyJ;MAqB/B,IAfEy8C,gBAJuC,WAArCnkC,UAAUxN,SAAS5P,MAAM,KAAK,KAIhBod,UAAUtN,SAAS9P,MAAM,KAAK,KACrCozC,kBAAkBh2B,aAIXA,UAAUtN,SAAS9P,MAAM,KAAK,KAI9Bod,UAAUtN,SAAS9P,MAAM,KAAK;MAIhDuhD,gBAAgB/L,mBAAmB+L,iBAE9BA,eACH,MAAM,IAAIxkD,MAAM;MAGlB,OAAOwkD;AACT,OAAE,OAAOjgD;MACP,MAAM,IAAIvE,MAAM;AAClB;AACF;IAaO,cAAA43E,CAAe7yE;KACpB,OAAO,IAAImK,SAASC;MAClB,MAAM7Q,KAAK2mB,sBAAsB83B,6BAC/B,MAAM,IAAIzI,WACR;MAIJ,MAAMujC,MAAM3V,+BAA+B,OAAD;OAEtC1d,eAAelmD,KAAKq1E;SACjB5uE,UAELzG,KAAK2mB,YACL9d;MAEFgI,QAAQ2lC,iBAAiBx2C,KAAKyJ,KAAK8vE;AAAK;AAE5C;IAcO,uBAAAC,CAAwB/yE;KAC7B,MAAMzG,KAAK2mB,sBAAsB83B,6BAC/B,MAAM,IAAIzI,WACR;KAIJ,OAAO+tB,uCAAuC,OAAD;MAEzC7d,eAAelmD,KAAKq1E;QACjB5uE,UAELzG,KAAK2mB,YACL82B;AACJ;IAYO,4BAAAg8B,CACLhzE,SACAm8D;KAEA,OAAO,IAAIhyD,SAASC;MAClB,MAAM0oE,MAAM3V,+BAA+B,OAAD;OAEtC1d,eAAelmD,KAAKq1E;SACjB5uE,UAELm8D,mBACA5iE,KAAKg1C,aACLnsC;MAEFgI,QAAQ2lC,iBAAiBx2C,KAAKyJ,KAAK8vE;AAAK;AAE5C;IAaO,qCAAAG,CACLjzE,SACAm8D;KAEA,OAAOmB,uCAAuC,OAAD;MAEzC7d,eAAelmD,KAAKq1E;QACjB5uE,UAELm8D,mBACA5iE,KAAKg1C,aACLyI;AACJ;IASO,kBAAAmmC;KACL,OAAO,IAAI/C,gBAAgB7gF,KAAKyJ,KAAKzJ,KAAK6L;AAC5C;;GCplEK,MAAMg4E;IAAb;KA+GS,KAAA9kE,QAAgB,GAKhB,KAAAza,SAAiB,GAKjB,KAAAiE,UAAkB,GAKlB,KAAAy5D,iBAAyB,GAKzB,KAAAQ,QAAgB;KAKhB,KAAAn7D,OAAe,GAKf,KAAA2E,UAAkB,GAKlB,KAAA2yC,UAAkB,GAKlB,KAAAx7C,WAAmB,GAKnB,KAAA8+D,OAAe;KAKf,KAAA72D,UAAkB,GAKlB,KAAAmyD,yBAAiC,GAKjC,KAAA6E,mBAA2B;AA0DpC;IA/NS,YAAOrrD,CAAM0vC;KAClB,MAAMq9B,wBAAwB,IAAID;KAElC,KAAK,MAAMxT,KAAK5pB,aACd,QAAQ4pB;KACN,KAAK;MACHyT,sBAAsB/kE,QAAO;MAC7B;;KACF,KAAK;MACH+kE,sBAAsBx/E,SAAQ;MAC9B;;KACF,KAAK;MACHw/E,sBAAsBv7E,UAAS;MAC/B;;KACF,KAAK;MACHu7E,sBAAsB9hB,iBAAgB;MACtC;;KACF,KAAK;MACH8hB,sBAAsBthB,QAAO;MAC7B;;KACF,KAAK;MACHshB,sBAAsBz8E,OAAM;MAC5B;;KACF,KAAK;MACHy8E,sBAAsB93E,UAAS;MAC/B;;KACF,KAAK;MACH83E,sBAAsBnlC,UAAS;MAC/B;;KACF,KAAK;MACHmlC,sBAAsB3gF,WAAU;MAChC;;KACF,KAAK;MACH2gF,sBAAsB7hB,OAAM;MAC5B;;KACF,KAAK;MACH6hB,sBAAsB14E,UAAS;MAC/B;;KACF,KAAK;MACH04E,sBAAsBvmB,yBAAwB;MAC9C;;KACF,KAAK;MACHumB,sBAAsB1hB,mBAAkB;MACxC;;KACF;MACE,MAAM,IAAIpsB,WAAW,iCAAiCq6B;;KAI5D,OAAOyT;AACT;IAQO,WAAOtxE,CAAK8vD;KACjB,MAAMwhB,wBAAwB,IAAID;KAwClC,OAvCIvhB,eAAevjD,SACjB+kE,sBAAsB/kE,QAAO,IAE3BujD,eAAeh+D,UACjBw/E,sBAAsBx/E,SAAQ;KAE5Bg+D,eAAe/5D,WACjBu7E,sBAAsBv7E,UAAS,IAE7B+5D,eAAeN,kBACjB8hB,sBAAsB9hB,iBAAgB;KAEpCM,eAAel3D,WACjB04E,sBAAsB14E,UAAS,IAE7Bk3D,eAAeL,QACjB6hB,sBAAsB7hB,OAAM;KAE1BK,eAAeE,SACjBshB,sBAAsBthB,QAAO,IAE3BF,eAAej7D,QACjBy8E,sBAAsBz8E,OAAM;KAE1Bi7D,eAAet2D,WACjB83E,sBAAsB93E,UAAS,IAE7Bs2D,eAAe3jB,WACjBmlC,sBAAsBnlC,UAAS;KAE7B2jB,eAAen/D,YACjB2gF,sBAAsB3gF,WAAU,IAE9Bm/D,eAAe/E,0BACjBumB,sBAAsBvmB,yBAAwB;KAE5C+E,eAAeF,oBACjB0hB,sBAAsB1hB,mBAAkB;KAEnC0hB;AACT;IA6EO,QAAAj7E;KAIL,MAAM49C,cAAwB;KAwC9B,OAvCIzmD,KAAK+e,QACP0nC,YAAYvlD,KAAK,MAEflB,KAAKsE,SACPmiD,YAAYvlD,KAAK;KAEflB,KAAKuI,UACPk+C,YAAYvlD,KAAK,MAEflB,KAAKgiE,iBACPvb,YAAYvlD,KAAK;KAEflB,KAAKoL,UACPq7C,YAAYvlD,KAAK,MAEflB,KAAKiiE,OACPxb,YAAYvlD,KAAK,MAEflB,KAAKwiE,QACP/b,YAAYvlD,KAAK;KAEflB,KAAKqH,OACPo/C,YAAYvlD,KAAK,MAEflB,KAAKgM,UACPy6C,YAAYvlD,KAAK,MAEflB,KAAK2+C,UACP8H,YAAYvlD,KAAK;KAEflB,KAAKmD,WACPsjD,YAAYvlD,KAAK,MAEflB,KAAKu9D,yBACP9W,YAAYvlD,KAAK;KAEflB,KAAKoiE,mBACP3b,YAAYvlD,KAAK,MAEZulD,YAAYh/C,KAAK;AAC1B;;GCpOK,MAAMs8E;IAAb;KAgCS,KAAA1iB,WAAmB,GAKnB,KAAAC,aAAqB,GAKrB,KAAAl0C,UAAkB;AAqB3B;IAxDS,YAAOrW,CAAMqsD;KAClB,MAAM4gB,0BAA0B,IAAID;KAEpC,KAAK,MAAM1T,KAAKjN,eACd,QAAQiN;KACN,KAAK;MACH2T,wBAAwB3iB,WAAU;MAClC;;KACF,KAAK;MACH2iB,wBAAwB1iB,aAAY;MACpC;;KACF,KAAK;MACH0iB,wBAAwB52D,UAAS;MACjC;;KACF;MACE,MAAM,IAAI4oB,WAAW,0BAA0Bq6B;;KAIrD,OAAO2T;AACT;IAuBO,QAAAn7E;KACL,MAAMu6D,gBAA0B;KAUhC,OATIpjE,KAAKqhE,WACP+B,cAAcliE,KAAK,MAEjBlB,KAAKshE,aACP8B,cAAcliE,KAAK;KAEjBlB,KAAKotB,UACPg2C,cAAcliE,KAAK,MAEdkiE,cAAc37D,KAAK;AAC5B;;GC9DK,MAAMw8E;IAAb;KAmCS,KAAA/9D,QAAgB,GAKhB,KAAA+yD,QAAgB,GAKhB,KAAAiL,SAAiB,GAKjB,KAAAC,SAAiB;AAsB1B;IAjES,YAAOptE,CAAMosD;KAClB,MAAMihB,qBAAqB,IAAIH;KAE/B,KAAK,MAAM5T,KAAKlN,UACd,QAAQkN;KACN,KAAK;MACH+T,mBAAmBl+D,QAAO;MAC1B;;KACF,KAAK;MACHk+D,mBAAmBnL,QAAO;MAC1B;;KACF,KAAK;MACHmL,mBAAmBF,SAAQ;MAC3B;;KACF,KAAK;MACHE,mBAAmBD,SAAQ;MAC3B;;KACF;MACE,MAAM,IAAInuC,WAAW,8BAA8Bq6B;;KAIzD,OAAO+T;AACT;IA0BO,QAAAv7E;KACL,MAAMs6D,WAAqB;KAa3B,OAZInjE,KAAKkmB,QACPi9C,SAASjiE,KAAK,MAEZlB,KAAKmkF,SACPhhB,SAASjiE,KAAK,MAEZlB,KAAKkkF,SACP/gB,SAASjiE,KAAK;KAEZlB,KAAKi5E,QACP9V,SAASjiE,KAAK,MAETiiE,SAAS17D,KAAK;AACvB;;GCOK,SAAS48E,kCACdC,2BACArgB;IAEA,OAAOsgB,0CAA0CD,2BAA2BrgB,qBACzED;AACL;GAEO,SAASugB,0CACdD,2BACArgB;IAEA,MAAMhrD,UAAUqrE,0BAA0BrrE,UACtCqrE,0BAA0BrrE,UAC1Bw6B;IAEJ,IACE6wC,0BAA0B79B,eAC1B69B,0BAA0B79B,YAAY8W,yBACtCtkD,UAAU,cAEV,MAAM+8B,WAAW;IAGnB,IACEsuC,0BAA0B79B,eAC1B69B,0BAA0B79B,YAAYub,iBACtC/oD,UAAU,cAEV,MAAM+8B,WAAW;IAGnB,IACEsuC,0BAA0B79B,eAC1B69B,0BAA0B79B,YAAY2b,mBACtCnpD,UAAU,cAEV,MAAM+8B,WAAW;IAGnB,IACEsuC,0BAA0B79B,eAC1B69B,0BAA0B79B,YAAYwb,OACtChpD,UAAU,cAEV,MAAM+8B,WAAW;IAGnB,IACEsuC,0BAA0B79B,eAC1B69B,0BAA0B79B,YAAYr7C,UACtC6N,UAAU,cAEV,MAAM+8B,WAAW;IAGnB,IAAIsuC,0BAA0B77B,mBAAmBxvC,UAAU,cACzD,MAAM+8B,WAAW;IAGnB,MAAMwuC,oBAAoBX,sBAAsB9sE,MAC9CutE,0BAA0B79B,YAAY59C,aAElC47E,iBAAiBR,mBAAmBltE,MAAMutE,0BAA0BnhB,UAAUt6D,YAC9E67E,sBAAsBX,wBAAwBhtE,MAClDutE,0BAA0BlhB,eAC1Bv6D;IAEF,IAAI40C;IAGFA,eADExkC,WAAW,eACE,EACbgrD,oBAAoBjvB,aACpBwvC,mBACAC,gBACAC,qBACAJ,0BAA0Bj/B,WACtB1O,qBAAqB2tC,0BAA0Bj/B,WAAU,KACzD,IACJ1O,qBAAqB2tC,0BAA0Bh/B,YAAW,IAC1Dg/B,0BAA0BxhB,UAAUD,gBAAgByhB,0BAA0BxhB,WAAW,IACzFwhB,0BAA0BlwE,WAAWkwE,0BAA0BlwE,WAAW,IAC1E6E,SACAqrE,0BAA0B77B,kBAAkB67B,0BAA0B77B,kBAAkB,IACxF,KACAhhD,KAAK,QAEQ,EACbw8D,oBAAoBjvB,aACpBwvC,mBACAC,gBACAC,qBACAJ,0BAA0Bj/B,WACtB1O,qBAAqB2tC,0BAA0Bj/B,WAAU,KACzD,IACJ1O,qBAAqB2tC,0BAA0Bh/B,YAAW,IAC1Dg/B,0BAA0BxhB,UAAUD,gBAAgByhB,0BAA0BxhB,WAAW,IACzFwhB,0BAA0BlwE,WAAWkwE,0BAA0BlwE,WAAW,IAC1E6E,SACA,KACAxR,KAAK;IAGT,MAAMo2C,YAAoBomB,oBAAoBnmB,kBAAkBL;IAEhE,OAAO;KACLumB,oBAAoB,IAAIhB,mBACtB/pD,SACA4kC,WACA2mC,kBAAkB37E,YAClB47E,gBACAC,qBACAJ,0BAA0BlwE,UAC1BkwE,0BAA0Bj/B,UAC1Bi/B,0BAA0Bh/B,WAC1Bg/B,0BAA0BxhB,cAC1Bx/D,QACAA,QACAA,QACAA,QACAA,QACAA,QACAA,QACAA,QACAA,QACAA,GACAghF,0BAA0B77B;KAE5BhL;;AAEJ;GCsHO,MAAMknC,0BAA0B;IAkB9B,2BAAOC,CACZrwC,kBAGA9tC;KAEAA,UAAUA,WAAW,CAAC;KACtB,MAAMgvE,iBAAiB/gC,6BAA6BH;KACpD,IAA4B,wBAAxBkhC,eAAetgC,MAA8B;MAC/C,IAAI,YAAQ;OACV,MAAM8uB,sBAAsB,IAAIxlB,2BAC9Bg3B,eAAezgC,aACfygC,eAAexgC;OAGZxuC,QAAQgf,iBACXhf,QAAQgf,eAAe,oCAAwBgwD,eAAe9gC;OAGhE,MAAM9oC,WAAW6zC,YAAYukB,qBAAqBx9D;OAClD,OAAO,IAAIk+E,kBAAkBlP,eAAehsE,KAAKoC;AACnD;MACE,MAAM,IAAInK,MAAM;AAEpB;KAAO,IAA4B,oBAAxB+zE,eAAetgC,MAA0B;MAClD,MAAMtpC,WAAW6zC,YAAY,IAAIZ,qBAAuBr4C;MACxD,OAAO,IAAIk+E,kBAAkBlP,eAAehsE,MAAM,MAAMgsE,eAAergC,YAAYvpC;AACrF;KACE,MAAM,IAAInK,MACR;AAGN;IAqDA,WAAAnB,CACEkJ,KACAq3E,sBAOAr6E;KAEA,IAAIoF;KAEFA,WADEwzC,eAAeyhC,wBACNA,uBAEV,cAAUA,gCAAgCriC,8BAC3CqiC,gCAAgChiC,uBAChC90B,kBAAkB82D,wBAEPphC,YAAYohC,sBAAsBr6E,WAGlCi5C,YAAY,IAAIZ,qBAAuBr4C;KAEpDtE,MAAMsH,KAAKoC,WACX7L,KAAK6kF,iBAAiB7kF,KAAK4hE,qBAAqBP;AAClD;IAcO,kBAAAyjB,CAAmB5+B;KACxB,OAAO,IAAIs7B,gBACTlsC,gBAAgBt1C,KAAKyJ,KAAKyxB,mBAAmBgrB,iBAC7ClmD,KAAK6L;AAET;IASO,qBAAMk5E,CACX7+B,eACAz/C,UAAkC,CAAC;KAKnC,OAAOge,cAAcL,SACnB,qCACA3d,UACAwT,MAAOkK;MACL,MAAM6gE,kBAAkBhlF,KAAK8kF,mBAAmB5+B,gBAC1C++B,gCAAgCD,gBAAgBh5E,OAAOmY;MAC7D,OAAO;OACL6gE;OACAC;;AACD;AAGP;IASO,qBAAMC,CACXh/B,eACAz/C,UAAwC,CAAC;KAEzC,OAAOge,cAAcL,SACnB,qCACA3d,UACAwT,MAAOkK,kBACmBnkB,KAAK8kF,mBAAmB5+B,eACzB39C,OAAO4b;AAGpC;IAWO,uBAAMghE,CACXC,sBACAC,yBACA5+E,UAA2C,CAAC;KAK5C,OAAOge,cAAcL,SACnB,uCACA3d,UACAwT,MAAOkK;MACL,MAAM6gE,kBAAkBhlF,KAAK8kF,mBAC3Br+E,QAAQ6+E,4BAA4BF,uBAGhC1D,mBAAmBsD,gBAAsC,qBAAE1jB;MAWjE,OAAO;OAAE0jB;OAAiBO,2BAVQnqC,qBAI1BsmC,iBAAiBhmB,QAAQ;QAC7B0pB;QACAC;QACAnhE,gBAAgBC,eAAeD;;;AAGkB;AAG3D;IAWQ,qBAAMshE,CACZ3pB,qBACAypB,0BACA7+E,UAAyC,CAAC;KAK1C,OAAOge,cAAcL,SACnB,qCACA3d,UACAwT,MAAOkK;;MACL,MAAM6gE,kBAAkBhlF,KAAK8kF,mBAAmBQ,2BAE1C5D,mBAAmBsD,gBAAsC,qBAAE1jB;MAUjE,OAAO;OAAE0jB;OAAiBS,yBATMrqC,qBAIxBsmC,iBAAiB9lB,OAAOC,qBAAqB,OAAF,yBAC5C13C,iBAAc;QACjBuhE,eAAsC,UAAvB,KAAAj/E,QAAQk/E,yBAAe,uBAAEj4B;;;AAGO;AAGzD;IAUO,mBAAMwM,CACXzzD,UAAuC,CAAC;KAExC,OAAOge,cAAcL,SACnB,mCACA3d,UACAwT,MAAOkK,kBACEi3B,qBACCp7C,KAAK6kF,eAAe3qB,cAAc;MACtCv4D,aAAa8E,QAAQ9E;MACrBuiB,gBAAgBC,eAAeD;;AAKzC;IAWO,mBAAM81C,CACX5V,YACA39C,UAAuC,CAAC;KAExC,OAAOge,cAAcL,SACnB,mCACA3d,UACAwT,MAAOkK,kBACEi3B,qBACCp7C,KAAK6kF,eAAe7qB,cAAc5V,YAAY;MAClDziD,aAAa8E,QAAQ9E;MACrBuiB,gBAAgBC,eAAeD;;AAKzC;IAWO,mBAAMk2C,CACX3zD,UAAuC,CAAC;KAExC,OAAOge,cAAcL,SACnB,mCACA3d,UACAwT,MAAOkK,kBACEi3B,qBACCp7C,KAAK6kF,eAAezqB,cAAc;MACtCz4D,aAAa8E,QAAQ9E;MACrBuiB,gBAAgBC,eAAeD;;AAKzC;IAYO,oBAAMw2C,CACXj0D,UAAwC,CAAC;KAEzC,OAAOge,cAAcL,SACnB,oCACA3d,UACAwT,MAAOkK,kBACEi3B,qBACCp7C,KAAK6kF,eAAenqB,eAAe;MACvC/4D,aAAa8E,QAAQ9E;MACrBuiB,gBAAgBC,eAAeD;;AAKzC;IAgBQ,2BAAMo2C,CACZxW,QACAr9C,UAA+C,CAAC;KAEhD,OAAOge,cAAcL,SACnB,2CACA3d,UACAwT,MAAOkK,kBACEi3B,qBAICp7C,KAAK6kF,eAAevqB,sBAAsB,OAAD;MAC7C34D,aAAa8E,QAAQ9E;MACrBmiD;QACGr9C,UAAO;MACV67E,SAAoC,mBAApB77E,QAAQ67E,UAAuB,EAAC77E,QAAQ67E,YAAW77E,QAAQ67E;MAC3Ep+D,gBAAgBC,eAAeD;;AAKzC;IAoBQ,4BAAMm/D,CACZC,wBACAx/B,QACAr9C,UAAgD,CAAC;KAEjD,OAAOge,cAAcL,SACnB,4CACA3d,UACAwT,MAAOkK;MACL,MAAMlU,WAAWmrC,qBAKTp7C,KAAK6kF,eAAe/pB,YAAY;OACpCn5D,aAAa8E,QAAQ9E;OACrBokD,OAAOu9B;OACPx/B;OACAC,aAAat9C,QAAQs9C;OACrB7/B,gBAAgBC,eAAeD;WAI7Bq/D,kBAAe,gCAChBtzE,WAAQ;OACX42D,WAAW52D,SAAS42D;OACpB7gB,OAAO/1C,SAAS+1C,MAAMphD,KAAKshB;;QACzB,IAAIwd,WAAW;QAIf,OAHqC,OAAxB,UAAT,KAAAxd,KAAKyhB,cAAI,uBAAEwQ,WAAW1yC,YACxBi+B,WAAWxd,KAAKyhB,KAAKwQ,WAAW,GAAG9vC;QAE9B,OAAP,yBAAY6d,OAAI;SAAEyhB,MAAMyQ,OAAOlyB,KAAKyhB;SAAOjE;;AAAQ;;MAGvD,OAAO6/C;AAAe;AAG5B;IAkBe,uBAAAC,CAAwB,0BAAD;yDACpCF,wBACAx/B,QACAr9C,UAAgD,CAAC;MAEjD,IAAIwJ;MACJ,IAAM6zC,eAAqBxgD,MAAXwgD,QACd;OACE7zC,iBAAW,QAAMjQ,KAAKqjF,uBAAuBC,wBAAwBx/B,QAAQr9C;OAC7EwJ,SAAS+1C,QAAQ/1C,SAAS+1C,SAAS,IACnClC,SAAS7zC,SAASg0C,+BAClB,QAAMh0C;eACC6zC;AAEb;;IAWe,oBAAA2/B,CAAqB;yDAClCH,wBACA78E,UAAgD,CAAC;;;OAGjD,KAA4B,IAI3B,IAJ2B,4BAAAzG,KAAKwjF,wBAC/BF,wBAFEx/B,WAIFr9C,aACD,qDAAE;QAJyB;QAAjB,MAAM6zC,UAAO;cAKtB,eAAO,+BAAAA,QAAQ0L;AACjB;;;;;;;;;;;;AACF;;IAiFO,eAAA09B,CACLJ,wBACA78E,UAAwC,CAAC;KAGzC,MAAMk9E,qBAAkB,kBACnBl9E,UAGCu1E,OAAOh8E,KAAKyjF,qBAAqBH,wBAAwBK;KAC/D,OAAO;MAILh4E,MAAI,MACKqwE,KAAKrwE;MAKd,CAAC3C,OAAO2U;OACN,OAAO3d;AACT;MAIAi8E,QAAQ,CAAClhE,WAAyB,CAAC,MAC1B/a,KAAKwjF,wBAAwBF,wBAAwBvoE,SAASkpC,mBAAmB,OAAF;OACpFF,aAAahpC,SAASgpC;SACnB4/B;;AAIX;IAce,YAAAzB,CAAa;yDAC1Bp+B,QACAr9C,UAA+C,CAAC;MAEhD,IAAIm/E;MACJ,IAAM9hC,eAAqBxgD,MAAXwgD,QACd;OACE8hC,sCAAgC,QAAM5lF,KAAKs6D,sBAAsBxW,QAAQr9C;OACzEm/E,8BAA8B5hC,iBAC5B4hC,8BAA8B5hC,kBAAkB;OAClDF,SAAS8hC,8BAA8B3hC,+BACvC,cAAM,QAAM2hC;eACL9hC;AAEb;;IAOe,SAAAs+B;yDACb37E,UAA+C,CAAC;;;OAGhD,KAA4B,IAAkC,IAAlC,4BAAAzG,KAAKkiF,aAD7Bp+B,WACkDr9C,aAAQ,qDAAE;QAApC;QAAjB,MAAM6zC,UAAO;cACtB,eAAO,+BAAAA,QAAQ0J;AACjB;;;;;;;;;;;;AACF;;IA4EO,cAAA6hC,CACLp/E,UAAwC,CAAC;KAElB,OAAnBA,QAAQua,WACVva,QAAQua,cAAS1d;KAGnB,MAAMg/E,UAAuC;KACzC77E,QAAQ+7E,kBACVF,QAAQphF,KAAK,YAEXuF,QAAQg8E,mBACVH,QAAQphF,KAAK;KAEXuF,QAAQq/E,iBACVxD,QAAQphF,KAAK;KAIf,MAAMyiF,qBAAkB,gCACnBl9E,UACC67E,QAAQ78E,SAAS,IAAI;MAAE68E;SAAY,CAAC,IAGpCtG,OAAOh8E,KAAKoiF,UAAUuB;KAC5B,OAAO;MAILh4E,MAAI,MACKqwE,KAAKrwE;MAKd,CAAC3C,OAAO2U;OACN,OAAO3d;AACT;MAIAi8E,QAAQ,CAAClhE,WAAyB,CAAC,MAC1B/a,KAAKkiF,aAAannE,SAASkpC,mBAAmB,OAAF;OACjDF,aAAahpC,SAASgpC;SACnB4/B;;AAIX;IAaO,0BAAMnpB,CACXnV,UACAC,WACA7+C,UAA8C,CAAC;KAE/C,OAAOge,cAAcL,SACnB,0CACA3d,UACAwT,MAAOkK;MACL,MAAMlU,WAAWmrC,qBAKTp7C,KAAK6kF,eAAerqB,qBACxB;OACEnV,UAAU1O,qBAAqB0O,WAAU;OACzCC,WAAW3O,qBAAqB2O,YAAW;SAE7C;OACE3jD,aAAa8E,QAAQ9E;OACrBuiB,gBAAgBC,eAAeD;WAK/B0+C,oBAAoB;OACxBpd,gBAAgBv1C,SAASu1C;OACzBC,gBAAgBx1C,SAASw1C;OACzBC,gBAAgB,IAAI33C,KAAKkC,SAASy1C;OAClCC,iBAAiB,IAAI53C,KAAKkC,SAAS01C;OACnCC,eAAe31C,SAAS21C;OACxBC,eAAe51C,SAAS41C;OACxBx9C,OAAO4H,SAAS5H;;MAalB,OAVS;OACPw+D,WAAW52D,SAAS42D;OACpBx8D,WAAW4F,SAAS5F;OACpB0gD,iBAAiB96C,SAAS86C;OAC1B9xC,SAAShJ,SAASgJ;OAClB29B,MAAM3mC,SAAS2mC;OACfoU,WAAW/6C,SAAS+6C;SACjB4X;AAGK;AAGhB;IASO,kBAAAghB;KACL,OAAO,IAAI/C,gBAAgB7gF,KAAKyJ,KAAKzJ,KAAK6L;AAC5C;IAgBO,qBAAAk6E,CACLzgC,WACAmB,cAAqCo9B,sBAAsB9sE,MAAM,MACjEqsD,gBAAwB,OACxB38D,UAA+C,CAAC;KAEhD,MAAMzG,KAAK2mB,sBAAsB83B,6BAC/B,MAAMzI,WACJ;KAIJ,SAAkB1yC,MAAdgiD,WAAyB;MAC3B,MAAMtuC,MAAM,IAAIjJ;MAChBu3C,YAAY,IAAIv3C,KAAKiJ,IAAI0X,YAAY;AACvC;KAEA,MAAM6qD,MAAM8K,kCAAkC,OAAD;MAEzC59B;MACAnB;MACA8d;MACAD,UAAU8gB,mBAAmBltE,MAAM,KAAKlO;QACrCpC,UAELzG,KAAK2mB,YACL9d;KAEF,OAAO2tC,iBAAiBx2C,KAAKyJ,KAAK8vE;AACpC;IAgBO,uBAAAC,CACLl0B,WACAmB,cAAqCo9B,sBAAsB9sE,MAAM,MACjEqsD,gBAAwB,OACxB38D,UAA+C,CAAC;KAEhD,MAAMzG,KAAK2mB,sBAAsB83B,6BAC/B,MAAMzI,WACJ;KAIJ,SAAkB1yC,MAAdgiD,WAAyB;MAC3B,MAAMtuC,MAAM,IAAIjJ;MAChBu3C,YAAY,IAAIv3C,KAAKiJ,IAAI0X,YAAY;AACvC;KAEA,OAAO61D,0CAA0C,OAAD;MAE5C99B;MACAnB;MACA8d;MACAD,UAAU8gB,mBAAmBltE,MAAM,KAAKlO;QACrCpC,UAELzG,KAAK2mB,YACL82B;AACJ;;IRpxBF,SAAYghC;IACV;AACD,IAFD,CAAYA,iCAAAA,+BAA4B;;;;;;;;;;;;;;;;;;;;;;;;;;;GSpfjC,SAASuH,kBAAkB3kB,SAAS4kB,YAAYC,eAAeC;IAClE,IAAIC;IACJ,MAAM3/E,UAAoG,UAAzF2/E,KAAK/kB,QAAQglB,QAAQt8D,MAAK,CAAC5M,GAAGJ,MAAMI,EAAEmpE,cAAcL,cAAclpE,MAAMkpE,sBAAgC,MAAPG,UAAgB,IAASA,GAAG3/E;IAC9I,OAAOA,WAAWA,QAAQy/E,iBAAiBC,cAAcI,SAAS9/E,QAAQy/E,uBAAkB5iF;AAChG;GACO,SAASkjF,iBAAiBnlB,SAAS4kB,YAAYC,eAAeC;IACjE,IAAIC;IACJ,MAAM3/E,UAAoG,UAAzF2/E,KAAK/kB,QAAQglB,QAAQt8D,MAAK,CAAC5M,GAAGJ,MAAMI,EAAEmpE,cAAcL,cAAclpE,MAAMkpE,sBAAgC,MAAPG,UAAgB,IAASA,GAAG3/E;IAC9I,KAAKA,SACD;IAEJ,MAAMggF,YAAYhgF,QAAQy/E;IAC1B,YAAkB5iF,MAAdmjF,YACOA,YAEJN,gBAAgBA,cAAcI,SAASE,aAAaA;AAC/D;GACO,SAASC,kBAAkBrlB,SAAS6kB,eAAeC;IACtD,MAAM1/E,UAAU46D,QAAQ56D;IACxB,KAAKA,SACD;IAEJ,MAAMggF,YAAYhgF,QAAQy/E;IAC1B,YAAkB5iF,MAAdmjF,YACOA,YAEJN,gBAAgBA,cAAcI,SAASE,aAAaA;AAC/D;GChDO,MAAME;IACT,WAAApmF,CAAYutB,UAAUu4D,SAAS5/E;KAC3BzG,KAAK8tB,WAAWA,UAChB9tB,KAAKqmF,UAAUA,QAAQzhF,KAAImY,KDA5B,SAA6BnT,QAAQy3D;MACxC,IAAI+kB,IAAIQ,IAAIC;MACZ,IAAI1pE,IAAIvT;MASR,OARAuT,EAAEkkD,UAAUA,SACZlkD,EAAEmpE,YAAmC,UAAtBF,KAAKjpE,EAAEmpE,mBAA8B,MAAPF,KAAgBA,MAAK;MAAA,oBAAejpE,EAAE/a,OAEnF+a,EAAE2pE,oBAAoB3pE,EAAE2pE,iBAExB3pE,EAAE4pE,oBAAoB5pE,EAAE4pE;MACxB5pE,EAAE1W,UAA+B,UAApBmgF,KAAKzpE,EAAE1W,iBAA4B,MAAPmgF,KAAgBA,KAAK,CAAC,GAC/DzpE,EAAE6pE,cAAuC,UAAxBH,KAAK1pE,EAAE6pE,qBAAgC,MAAPH,KAAgBA,UAAKvjF;MAC/D6Z;AACX,MCZwC8pE,CAAoBlqE,GAAG/c,SACvDA,KAAKyG,UAAUA,kBAAyCA,UAAU,CAAC;AACvE;;GCHG,MAAMygF,iBAAiBxlF;IAC1B,WAAAnB,CAAY2B,SAAS2N,OAAO,WAAWs3E;KACnChlF,MAAMD,UACNlC,KAAKoC,OAAO,YAEZyB,OAAOqM,eAAelQ,iBAAiBmQ;KACvCnQ,KAAK6P,OAAOA,MACZ7P,KAAKmnF,OAAOA,eAAmCA,OAAO,CAAC;AAC3D;IACA,QAAAt+E;KACI,MAAMu+E,IAAI,EAACpnF,KAAKoC,OAAO,OAAOpC,KAAKkC;KAC/BlC,KAAK6P,SACLu3E,EAAElmF,KAAK,KACPkmF,EAAElmF,KAAK,WAAWlB,KAAK6P,QAEvB7P,KAAKqnF,eAAernF,KAAKimF,cACzBmB,EAAElmF,KAAK,aAAalB,KAAKqnF,cAAc,MAAMrnF,KAAKimF;KAEtD,IAAI9oE,IAAItZ,OAAO4V,QAAQzZ,KAAKmnF;KAC5B,IAAIhqE,EAAE1X,QAAQ;MACV2hF,EAAElmF,KAAK,KACPkmF,EAAElmF,KAAK;MACP,KAAK,KAAKyO,GAAG2N,MAAMH,GACfiqE,EAAElmF,KAAK,KAAKyO,MAAM2N;AAE1B;KACA,OAAO8pE,EAAE3/E,KAAK;AAClB;;OC9BO6/E;GCsBJ,SAASC,gBAAgBC,UAAU/gF;IACtC,KAAKA,SACD,OAAO+gF;IACX,IAAItqE,IAAI,CAAC;IACTw2D,KAAK8T,UAAUtqE,IACfw2D,KAAKjtE,SAASyW;IACd,KAAK,IAAI/N,OAAOtL,OAAOuE,KAAK3B,UAAU;KAClC,IAAIo+B,MAAMp+B,QAAQ0I;KAClB,QAAQA;KACJ,KAAK;MACD+N,EAAEuqE,eAAc,4BAAiBD,SAASC,aAAavqE,EAAEuqE;MACzD;;KACJ,KAAK;MACDvqE,EAAEwqE,iBAAgB,8BAAmBF,SAASE,eAAexqE,EAAEwqE;MAC/D;;KACJ,KAAK;MACDxqE,EAAEiqE,OAAO,CAAC,GACVzT,KAAK8T,SAASL,MAAMjqE,EAAEiqE,OACtBzT,KAAKjtE,QAAQ0gF,MAAMjqE,EAAEiqE;MACrB;;KACJ,KAAK;MACDjqE,EAAEyqE,eAAeH,SAASG,eAAeH,SAASG,aAAa94E,OAAOg2B,OAAOA,IAAIh2B;;AAG7F;IACA,OAAOqO;AACX;GACA,SAASw2D,KAAKx1D,GAAG0pE;IACb,KAAK1pE,GACD;IACJ,IAAImyD,IAAIuX;IACR,KAAK,KAAKj4E,GAAG2N,MAAMzZ,OAAO4V,QAAQyE,IAC1BZ,aAAavP,OACbsiE,EAAE1gE,KAAK,IAAI5B,KAAKuP,EAAEoR,aACblsB,MAAMC,QAAQ6a,KACnB+yD,EAAE1gE,KAAK2N,EAAEzO,WAETwhE,EAAE1gE,KAAK2N;AAEnB;ID5DA,SAAWgqE;IACPA,cAAcA,cAAuB,UAAI,KAAK,WAC9CA,cAAcA,cAAwB,WAAI,KAAK;IAC/CA,cAAcA,cAAwB,WAAI,KAAK;AAClD,IAJD,CAIGA,kBAAkBA,gBAAgB,CAAC;GAS/B,MAAMO;IAaT,WAAAtnF,CAAYunF,oCAAmC;KAC3C9nF,KAAK+nF,SAAST,cAAcU,SAC5BhoF,KAAKioF,WAAW,IAAIr3E,SAAQ,CAACC,SAAS+C;MAClC5T,KAAKkoF,WAAWr3E,SAChB7Q,KAAKmoF,UAAUv0E;AAAM,UAErBk0E,oCACA9nF,KAAKioF,SAAS/zE,OAAMy6B;AAE5B;IAIA,SAAIkhC;KACA,OAAO7vE,KAAK+nF;AAChB;IAIA,WAAI3Y;KACA,OAAOpvE,KAAKioF;AAChB;IAIA,OAAAp3E,CAAQxI;KACJ,IAAIrI,KAAK6vE,UAAUyX,cAAcU,SAC7B,MAAM,IAAItmF,MAAM,kBAAkB4lF,cAActnF,KAAK6vE,OAAO/nE;KAChE9H,KAAKkoF,SAAS7/E,QACdrI,KAAK+nF,SAAST,cAAcc;AAChC;IAIA,MAAAx0E,CAAOwR;KACH,IAAIplB,KAAK6vE,UAAUyX,cAAcU,SAC7B,MAAM,IAAItmF,MAAM,iBAAiB4lF,cAActnF,KAAK6vE,OAAO/nE;KAC/D9H,KAAKmoF,QAAQ/iE,SACbplB,KAAK+nF,SAAST,cAAce;AAChC;IAIA,cAAAC,CAAezjD;KACP7kC,KAAK+nF,WAAWT,cAAcU,WAC9BhoF,KAAK6Q,QAAQg0B;AACrB;IAIA,aAAA0jD,CAAcnjE;KACNplB,KAAK+nF,WAAWT,cAAcU,WAC9BhoF,KAAK4T,OAAOwR;AACpB;;;GE3EG,MAAMojE;IACT,WAAAjoF;KACIP,KAAKyoF,OAAO;MACRC,KAAK;MACL9xD,KAAK;MACLhiB,KAAK;MACL+zE,KAAK;QAET3oF,KAAK4oF,WAAU,GAIf5oF,KAAK6oF,WAAW;MAAE/qE,GAAG;;AACzB;IAEA,MAAAgrE,CAAOt3E;KACH,OAAOxR,KAAK+oF,OAAOv3E,UAAUxR,KAAKyoF,KAAKC;AAC3C;IACA,SAAAM,CAAUx3E;KACN,OAAOxR,KAAK+oF,OAAOv3E,UAAUxR,KAAKyoF,KAAK7xD;AAC3C;IACA,OAAA22C,CAAQ/7D;KACJ,OAAOxR,KAAK+oF,OAAOv3E,UAAUxR,KAAKyoF,KAAK7zE;AAC3C;IACA,UAAAq0E,CAAWz3E;KACP,OAAOxR,KAAK+oF,OAAOv3E,UAAUxR,KAAKyoF,KAAKE;AAC3C;IACA,MAAAI,CAAOv3E,UAAUgxD;KAEb,OADAA,KAAKthE,KAAKsQ,WACH;MACH,IAAIuL,IAAIylD,KAAKlhE,QAAQkQ;MACjBuL,KAAK,KACLylD,KAAKjhE,OAAOwb,GAAG;AAAE;AAE7B;IAEA,QAAAmsE;KACI,KAAK,IAAI9B,KAAKvjF,OAAO8E,OAAO3I,KAAKyoF,OAC7BrB,EAAE7lF,OAAO,GAAG6lF,EAAE3hF;AACtB;IAKA,UAAI0jF;KACA,QAAwB,MAAjBnpF,KAAK4oF;AAChB;IAMA,UAAAQ,CAAWlnF,SAAS+D,OAAOojF;MACvB,GAAAC,OAAA,KAAQpnF,UAAU,IAAI,MAAM+D,QAAQ,IAAI,MAAMojF,WAAW,IAAI,MAAM,GAAG;KAClEnnF,WACAlC,KAAKupF,cAAcrnF,UACnB+D,SACAjG,KAAKwpF,YAAYvjF,QACjBojF,YACArpF,KAAKypF;AACb;IAMA,aAAAF,CAAcrnF;MACV,GAAAonF,OAAA,KAAQtpF,KAAKmpF,QAAQ,qBACrBnpF,KAAK0pF,OAAO;MAAErhF,OAAOnG;MAASkb,OAAM;SACpCpd,KAAKyoF,KAAK7xD,IAAI70B,SAAQqlF,KAAKA,EAAEllF,YAC7BlC,KAAKyoF,KAAKC,IAAI3mF,SAAQqlF,KAAKA,EAAEllF,cAASoB,IAAW;AACrD;IAMA,WAAAkmF,CAAYvjF;MACR,GAAAqjF,OAAA,KAAQtpF,KAAKmpF,QAAQ,qBACrBnpF,KAAK4oF,UAAU3iF,OACfjG,KAAK0pF,OAAOzjF;KACZjG,KAAKyoF,KAAK7zE,IAAI7S,SAAQqlF,KAAKA,EAAEnhF,UAC7BjG,KAAKyoF,KAAKC,IAAI3mF,SAAQqlF,KAAKA,OAAE9jF,GAAW2C,QAAO;KAC/CjG,KAAKkpF;AACT;IAMA,cAAAO;MACI,GAAAH,OAAA,KAAQtpF,KAAKmpF,QAAQ,qBACrBnpF,KAAK4oF,WAAU,GACf5oF,KAAK0pF,OAAO;MAAErhF,OAAO;MAAM+U,OAAM;SACjCpd,KAAKyoF,KAAKE,IAAI5mF,SAAQqlF,KAAKA,OAC3BpnF,KAAKyoF,KAAKC,IAAI3mF,SAAQqlF,KAAKA,OAAE9jF,QAAWA,IAAW;KACnDtD,KAAKkpF;AACT;IAcA,CAAClgF,OAAO2U;KAUJ,QALqB,MAAjB3d,KAAK4oF,UACL5oF,KAAK0pF,OAAO;MAAErhF,OAAO;MAAM+U,OAAM;WACX,MAAjBpd,KAAK4oF,WACV5oF,KAAK0pF,OAAO1pF,KAAK4oF,UAEd;MACHj9E,MAAM;OACF,IAAIkkE,QAAQ7vE,KAAK6oF;QACjB,GAAAS,OAAA,IAAOzZ,OAAO,eAGd,GAAAyZ,OAAA,KAAQzZ,MAAM9gE,GAAG;OAGjB,IAAI46E,QAAQ9Z,MAAM/xD,EAAES;OACpB,OAAIorE,QACQ,WAAWA,QAAS/4E,QAAQC,QAAQ84E,SAAS/4E,QAAQgD,OAAO+1E,UAGxE9Z,MAAM9gE,IAAI,IAAI84E;OACPhY,MAAM9gE,EAAEqgE;AAAO;;AAGlC;IAGA,MAAAsa,CAAOvlF;KACH,IAAI0rE,QAAQ7vE,KAAK6oF;KAEjB,IAAIhZ,MAAM9gE,GAAG;MAET,MAAMA,IAAI8gE,MAAM9gE;OAChB,GAAAu6E,OAAA,IAAOv6E,EAAE8gE,SAASyX,cAAcU,SAAS,6BAExC,WAAW7jF,SAAU4K,EAAE8B,QAAQ1M,UAAU4K,EAAE6E,OAAOzP;aAE5C0rE,MAAM9gE;AACjB,YAII8gE,MAAM/xD,EAAE5c,KAAKiD;AAErB;;GCpKJ,IAAIylF,YAAwC,SAAUpsE,SAASC,YAAYosE,GAAGnsE;IAE1E,OAAO,KAAKmsE,MAAMA,IAAIj5E,WAAU,SAAUC,SAAS+C;KAC/C,SAASk2E,UAAUzhF;MAAS;OAAM0hF,KAAKrsE,UAAU/R,KAAKtD;AAAS,QAAE,OAAO4F;OAAK2F,OAAO3F;AAAI;AAAE;KAC1F,SAAS+7E,SAAS3hF;MAAS;OAAM0hF,KAAKrsE,UAAiB,MAAErV;AAAS,QAAE,OAAO4F;OAAK2F,OAAO3F;AAAI;AAAE;KAC7F,SAAS87E,KAAK5lF;MAJlB,IAAekE;MAIalE,OAAOiZ,OAAOvM,QAAQ1M,OAAOkE,UAJ1CA,QAIyDlE,OAAOkE,OAJhDA,iBAAiBwhF,IAAIxhF,QAAQ,IAAIwhF,GAAE,SAAUh5E;OAAWA,QAAQxI;AAAQ,WAIjB4L,KAAK61E,WAAWE;AAAW;KAC7GD,MAAMrsE,YAAYA,UAAUG,MAAML,SAASC,cAAc,KAAK9R;AAClE;AACJ;GAKO,MAAMs+E;IACT,WAAA1pF,CAAYqJ,QAAQsgF,gBAAgB1+E,SAAS7B,SAASsG,UAAUgD,QAAQk3E;KACpEnqF,KAAK4J,SAASA,QACd5J,KAAKkqF,iBAAiBA,gBACtBlqF,KAAKwL,UAAUA;KACfxL,KAAK2J,UAAUA,SACf3J,KAAKiQ,WAAWA,UAChBjQ,KAAKiT,SAASA,QACdjT,KAAKmqF,WAAWA;AACpB;IAKA,IAAAl2E,CAAKm2E,aAAaC;KACd,OAAOrqF,KAAKsqF,kBAAkBr2E,MAAK5L,SAAS+hF,cAAcx5E,QAAQC,QAAQu5E,YAAY/hF,UAAUA,SAAO+c,UAAUilE,aAAaz5E,QAAQC,QAAQw5E,WAAWjlE,WAAWxU,QAAQgD,OAAOwR;AACvL;IACA,eAAAklE;KACI,OAAOV,UAAU5pF,WAAM,QAAQ,IAAQ;MACnC,KAAK2J,SAASsG,UAAUgD,QAAQk3E,kBAAkBv5E,QAAQoD,IAAI,EAAChU,KAAK2J,SAAS3J,KAAKiQ,UAAUjQ,KAAKiT,QAAQjT,KAAKmqF;MAC9G,OAAO;OACHvgF,QAAQ5J,KAAK4J;OACbsgF,gBAAgBlqF,KAAKkqF;OACrB1+E,SAASxL,KAAKwL;OACd7B;OACAsG;OACAgD;OACAk3E;;AAER;AACJ;;GC3CJ,IAAI,gCAAwC,SAAU3sE,SAASC,YAAYosE,GAAGnsE;IAE1E,OAAO,KAAKmsE,MAAMA,IAAIj5E,WAAU,SAAUC,SAAS+C;KAC/C,SAASk2E,UAAUzhF;MAAS;OAAM0hF,KAAKrsE,UAAU/R,KAAKtD;AAAS,QAAE,OAAO4F;OAAK2F,OAAO3F;AAAI;AAAE;KAC1F,SAAS+7E,SAAS3hF;MAAS;OAAM0hF,KAAKrsE,UAAiB,MAAErV;AAAS,QAAE,OAAO4F;OAAK2F,OAAO3F;AAAI;AAAE;KAC7F,SAAS87E,KAAK5lF;MAJlB,IAAekE;MAIalE,OAAOiZ,OAAOvM,QAAQ1M,OAAOkE,UAJ1CA,QAIyDlE,OAAOkE,OAJhDA,iBAAiBwhF,IAAIxhF,QAAQ,IAAIwhF,GAAE,SAAUh5E;OAAWA,QAAQxI;AAAQ,WAIjB4L,KAAK61E,WAAWE;AAAW;KAC7GD,MAAMrsE,YAAYA,UAAUG,MAAML,SAASC,cAAc,KAAK9R;AAClE;AACJ;GAKO,MAAM4+E;IACT,WAAAhqF,CAAYqJ,QAAQsgF,gBAAgB1+E,SAAS7B,SAASsG,UAAUgD,QAAQk3E;KACpEnqF,KAAK4J,SAASA,QACd5J,KAAKkqF,iBAAiBA,gBACtBlqF,KAAKwL,UAAUA;KACfxL,KAAK2J,UAAUA,SACf3J,KAAKk3B,YAAYjnB,UACjBjQ,KAAKiT,SAASA,QACdjT,KAAKmqF,WAAWA;AACpB;IAOA,IAAAl2E,CAAKm2E,aAAaC;KACd,OAAOrqF,KAAKsqF,kBAAkBr2E,MAAK5L,SAAS+hF,cAAcx5E,QAAQC,QAAQu5E,YAAY/hF,UAAUA,SAAO+c,UAAUilE,aAAaz5E,QAAQC,QAAQw5E,WAAWjlE,WAAWxU,QAAQgD,OAAOwR;AACvL;IACA,eAAAklE;KACI,OAAO,8BAAUtqF,WAAM,QAAQ,IAAQ;MACnC,KAAK2J,SAASsJ,QAAQk3E,kBAAkBv5E,QAAQoD,IAAI,EAAChU,KAAK2J,SAAS3J,KAAKiT,QAAQjT,KAAKmqF;MACrF,OAAO;OACHvgF,QAAQ5J,KAAK4J;OACbsgF,gBAAgBlqF,KAAKkqF;OACrB1+E,SAASxL,KAAKwL;OACd7B;OACAsJ;OACAk3E;;AAER;AACJ;;GC5CJ,IAAI,gCAAwC,SAAU3sE,SAASC,YAAYosE,GAAGnsE;IAE1E,OAAO,KAAKmsE,MAAMA,IAAIj5E,WAAU,SAAUC,SAAS+C;KAC/C,SAASk2E,UAAUzhF;MAAS;OAAM0hF,KAAKrsE,UAAU/R,KAAKtD;AAAS,QAAE,OAAO4F;OAAK2F,OAAO3F;AAAI;AAAE;KAC1F,SAAS+7E,SAAS3hF;MAAS;OAAM0hF,KAAKrsE,UAAiB,MAAErV;AAAS,QAAE,OAAO4F;OAAK2F,OAAO3F;AAAI;AAAE;KAC7F,SAAS87E,KAAK5lF;MAJlB,IAAekE;MAIalE,OAAOiZ,OAAOvM,QAAQ1M,OAAOkE,UAJ1CA,QAIyDlE,OAAOkE,OAJhDA,iBAAiBwhF,IAAIxhF,QAAQ,IAAIwhF,GAAE,SAAUh5E;OAAWA,QAAQxI;AAAQ,WAIjB4L,KAAK61E,WAAWE;AAAW;KAC7GD,MAAMrsE,YAAYA,UAAUG,MAAML,SAASC,cAAc,KAAK9R;AAClE;AACJ;GAMO,MAAM6+E;IACT,WAAAjqF,CAAYqJ,QAAQsgF,gBAAgB1+E,SAAS7B,SAASsG,UAAUgD,QAAQk3E;KACpEnqF,KAAK4J,SAASA,QACd5J,KAAKkqF,iBAAiBA,gBACtBlqF,KAAKyqF,WAAWj/E;KAChBxL,KAAK2J,UAAUA,SACf3J,KAAKiQ,WAAWA,UAChBjQ,KAAKiT,SAASA,QACdjT,KAAKmqF,WAAWA;AACpB;IAMA,IAAAl2E,CAAKm2E,aAAaC;KACd,OAAOrqF,KAAKsqF,kBAAkBr2E,MAAK5L,SAAS+hF,cAAcx5E,QAAQC,QAAQu5E,YAAY/hF,UAAUA,SAAO+c,UAAUilE,aAAaz5E,QAAQC,QAAQw5E,WAAWjlE,WAAWxU,QAAQgD,OAAOwR;AACvL;IACA,eAAAklE;KACI,OAAO,8BAAUtqF,WAAM,QAAQ,IAAQ;MACnC,KAAK2J,SAASsG,UAAUgD,QAAQk3E,kBAAkBv5E,QAAQoD,IAAI,EAAChU,KAAK2J,SAAS3J,KAAKiQ,UAAUjQ,KAAKiT,QAAQjT,KAAKmqF;MAC9G,OAAO;OACHvgF,QAAQ5J,KAAK4J;OACbsgF,gBAAgBlqF,KAAKkqF;OACrBvgF;OACAsG;OACAgD;OACAk3E;;AAER;AACJ;;GC5CJ,IAAI,gCAAwC,SAAU3sE,SAASC,YAAYosE,GAAGnsE;IAE1E,OAAO,KAAKmsE,MAAMA,IAAIj5E,WAAU,SAAUC,SAAS+C;KAC/C,SAASk2E,UAAUzhF;MAAS;OAAM0hF,KAAKrsE,UAAU/R,KAAKtD;AAAS,QAAE,OAAO4F;OAAK2F,OAAO3F;AAAI;AAAE;KAC1F,SAAS+7E,SAAS3hF;MAAS;OAAM0hF,KAAKrsE,UAAiB,MAAErV;AAAS,QAAE,OAAO4F;OAAK2F,OAAO3F;AAAI;AAAE;KAC7F,SAAS87E,KAAK5lF;MAJlB,IAAekE;MAIalE,OAAOiZ,OAAOvM,QAAQ1M,OAAOkE,UAJ1CA,QAIyDlE,OAAOkE,OAJhDA,iBAAiBwhF,IAAIxhF,QAAQ,IAAIwhF,GAAE,SAAUh5E;OAAWA,QAAQxI;AAAQ,WAIjB4L,KAAK61E,WAAWE;AAAW;KAC7GD,MAAMrsE,YAAYA,UAAUG,MAAML,SAASC,cAAc,KAAK9R;AAClE;AACJ;GAMO,MAAM++E;IACT,WAAAnqF,CAAYqJ,QAAQsgF,gBAAgB1+E,SAAS7B,SAASsG,UAAUgD,QAAQk3E;KACpEnqF,KAAK4J,SAASA,QACd5J,KAAKkqF,iBAAiBA,gBACtBlqF,KAAKyqF,WAAWj/E;KAChBxL,KAAK2J,UAAUA,SACf3J,KAAKk3B,YAAYjnB,UACjBjQ,KAAKiT,SAASA,QACdjT,KAAKmqF,WAAWA;AACpB;IAMA,IAAAl2E,CAAKm2E,aAAaC;KACd,OAAOrqF,KAAKsqF,kBAAkBr2E,MAAK5L,SAAS+hF,cAAcx5E,QAAQC,QAAQu5E,YAAY/hF,UAAUA,SAAO+c,UAAUilE,aAAaz5E,QAAQC,QAAQw5E,WAAWjlE,WAAWxU,QAAQgD,OAAOwR;AACvL;IACA,eAAAklE;KACI,OAAO,8BAAUtqF,WAAM,QAAQ,IAAQ;MACnC,KAAK2J,SAASsJ,QAAQk3E,kBAAkBv5E,QAAQoD,IAAI,EAAChU,KAAK2J,SAAS3J,KAAKiT,QAAQjT,KAAKmqF;MACrF,OAAO;OACHvgF,QAAQ5J,KAAK4J;OACbsgF,gBAAgBlqF,KAAKkqF;OACrBvgF;OACAsJ;OACAk3E;;AAER;AACJ;;GC3CJ,IAAI,yBAAwC,SAAU3sE,SAASC,YAAYosE,GAAGnsE;IAE1E,OAAO,KAAKmsE,MAAMA,IAAIj5E,WAAU,SAAUC,SAAS+C;KAC/C,SAASk2E,UAAUzhF;MAAS;OAAM0hF,KAAKrsE,UAAU/R,KAAKtD;AAAS,QAAE,OAAO4F;OAAK2F,OAAO3F;AAAI;AAAE;KAC1F,SAAS+7E,SAAS3hF;MAAS;OAAM0hF,KAAKrsE,UAAiB,MAAErV;AAAS,QAAE,OAAO4F;OAAK2F,OAAO3F;AAAI;AAAE;KAC7F,SAAS87E,KAAK5lF;MAJlB,IAAekE;MAIalE,OAAOiZ,OAAOvM,QAAQ1M,OAAOkE,UAJ1CA,QAIyDlE,OAAOkE,OAJhDA,iBAAiBwhF,IAAIxhF,QAAQ,IAAIwhF,GAAE,SAAUh5E;OAAWA,QAAQxI;AAAQ,WAIjB4L,KAAK61E,WAAWE;AAAW;KAC7GD,MAAMrsE,YAAYA,UAAUG,MAAML,SAASC,cAAc,KAAK9R;AAClE;AACJ;GAYO,MAAMg/E;IAIT,WAAApqF,CAAY8rC;KAKRrsC,KAAK4qF,8BAA6B,GAClC5qF,KAAK6qF,cAAc,IACnB7qF,KAAK8qF,gBAAgB;KACrB9qF,KAAK+qF,uBAAuB,IAC5B/qF,KAAKgrF,qBAAqB,IAC1BhrF,KAAKqsC,OAAOA,eAAmCA,OAAO,CAAC;AAC3D;IAIA,gBAAI4+C;KACA,OAAIjrF,KAAKkrF,qBAAqBC,kBACnBnrF,KAAKkrF,UAAUE,OAEQ,mBAAlBprF,KAAKkrF,YACV,EAAClrF,KAAKkrF,UAAUG,WAEpB;AACX;IAIA,gBAAIC;KACA,OAAItrF,KAAKkrF,qBAAqBC,kBACnBnrF,KAAKkrF,UAAUzZ,YAEQ,mBAAlBzxE,KAAKkrF;AAIzB;IAEA,cAAAK;KACI,IAAInF;KACJ,MAAMz8E,UAAuC,UAA5By8E,KAAKpmF,KAAKqsC,KAAK1iC,iBAA4B,MAAPy8E,KAAgBA,KAAKuE,cAAca;KACxF,OAAO7hF,mBAAmBu9E,WACpBt2E,QAAQgD,OAAOjK,WACfiH,QAAQC,QAAQlH;AAC1B;IAEA,qBAAA8hF,CAAsB7hF;KAClB,IAAI5J,KAAKqsC,KAAKp8B,oBAAoBi3E,UAC9B,OAAOt2E,QAAQgD,OAAO5T,KAAKqsC,KAAKp8B;KAEpC,IAAImO;KAYJ,OAXI5b,MAAMC,QAAQzC,KAAKqsC,KAAKp8B,cACxB,GAAAq5E,OAAA,IAAOtpF,KAAKqsC,KAAKp8B,SAASxK,SAAS;KACnC2Y,IAAIpe,KAAKqsC,KAAKp8B,SAAS,MAGvBmO,SAD4B9a,MAAvBtD,KAAKqsC,KAAKp8B,WACXjQ,KAAKqsC,KAAKp8B,WAGVrG,OAAO8hF,EAAE1/E;MAEjB,GAAAs9E,OAAA,IAAO1/E,OAAO8hF,EAAEC,GAAGvtE,KACZxN,QAAQC,QAAQuN;AAC3B;IAUA,eAAAwtE,CAAgBhiF,QAAQ8G,QAAQ9N;KAC5B,OAAO,uBAAU5C,WAAM,QAAQ,IAAQ;MAEnC,MAAM6rF,WAAW;MACjB,SAA2BvoF,MAAvBtD,KAAKqsC,KAAKp8B,UACV47E,SAAS3qF,KAAK0I,OAAO8hF,EAAE1/E,gBAEtB,IAAIxJ,MAAMC,QAAQzC,KAAKqsC,KAAKp8B,WAC7B,KAAK,IAAI2mB,OAAO52B,KAAKqsC,KAAKp8B,WACtB;MAAAq5E,OAAA,IAAO1/E,OAAO8hF,EAAEC,GAAG/0D,OACnBi1D,SAAS3qF,KAAK01B,WAGX52B,KAAKqsC,KAAKp8B,oBAAoBi3E,cACrC;MAAAoC,OAAA,IAAO1/E,OAAO8hF,EAAEC,GAAG3rF,KAAKqsC,KAAKp8B,YAC7B47E,SAAS3qF,KAAKlB,KAAKqsC,KAAKp8B;MAI5B;aACUmsC,MAAMp8C,KAAK8qF,eAAeloF,MAA1Bw5C,MAAiC94C;AAC3C,QACA,OAAO2C;OAEH,YADAyK,OAAO84E,YAAYvjF;AAEvB;MAEA,IAAIjG,KAAKqsC,KAAKp8B,oBAAoBi3E,UAC9Bx2E,OAAO84E,YAAYxpF,KAAKqsC,KAAKp8B,gBADjC;OAKA,KAAK,IAAI2mB,OAAOi1D,UAAU;QACtBn7E,OAAO64E,cAAc3yD;QAGrB;eACUwlB,MAAMp8C,KAAK+qF,sBAAsBnoF,MAAjCw5C,MAAwC94C;AAClD,UACA,OAAO2C;SAEH,YADAyK,OAAO84E,YAAYvjF;AAEvB;AACJ;OAEIjG,KAAKqsC,KAAKp5B,kBAAkBi0E,WAC5Bx2E,OAAO84E,YAAYxpF,KAAKqsC,KAAKp5B,UAI7BjT,KAAKqsC,KAAK89C,oBAAoBjD,WAC9Bx2E,OAAO84E,YAAYxpF,KAAKqsC,KAAK89C,YAIjCz5E,OAAO+4E;AAzBP;AA0BJ;AACJ;IAEA,aAAAqC;KACI,IAAI1F;KACJ,MAAMnzE,SAAqC,UAA3BmzE,KAAKpmF,KAAKqsC,KAAKp5B,gBAA2B,MAAPmzE,KAAgBA,KAAKuE,cAAcoB;KACtF,OAAO94E,kBAAkBi0E,WACnBt2E,QAAQgD,OAAOX,UACfrC,QAAQC,QAAQoC;AAC1B;IAEA,eAAA+4E;KACI,IAAI5F;KACJ,MAAM+D,WAAyC,UAA7B/D,KAAKpmF,KAAKqsC,KAAK89C,kBAA6B,MAAP/D,KAAgBA,KAAKuE,cAAcsB;KAC1F,OAAO9B,oBAAoBjD,WACrBt2E,QAAQgD,OAAOu2E,YACfv5E,QAAQC,QAAQs5E;AAC1B;IACA,qBAAA+B,IAAyB9c;KACrB,IAAIpvE,KAAK4qF,4BACL,KAAK,IAAI77E,KAAKqgE,SACVrgE,EAAEmF,OAAM;AAIpB;IACA,YAAAi4E,CAAa1lF;KACT,OAAO8gF,gBAAgB,CAAC,GAAG9gF;AAC/B;IACA,KAAA2lF,CAAMxiF,QAAQkE,OAAOrH;KACjB,IAAI2/E;KACJ,MAAM8D,iBAAyC,UAAvB9D,KAAK3/E,QAAQ0gF,cAAyB,MAAPf,KAAgBA,KAAK,CAAC,GAAGiG,iBAAiBrsF,KAAKurF,iBACjGt3E,KAAKmoC,MAAMp8C,KAAK6qF,aAAapkF,QAAQ7D,SAAS0pF,kBAAkBD,eAChEn4E,OAAMy6B,UAEN16B,KAAKmoC,MAAMp8C,KAAK8qF,eAAerkF,QAAQ7D,QACvCqR,MAAK06B,KAAK3uC,KAAKyrF,sBAAsB7hF,WAAU2iF,gBAAgBD,gBAC/Dp4E,OAAMy6B,UAEN16B,KAAKmoC,MAAMp8C,KAAKgrF,oBAAoBvkF,QAAQ7D,QAC5CqR,MAAK06B,KAAK3uC,KAAK8rF,mBAAkBU,kBAAkBF,gBACnDp4E,OAAMy6B,UAEN16B,KAAKmoC,MAAMp8C,KAAKgrF,oBAAoBvkF,QAAQ7D,QAC5CqR,MAAK06B,KAAK3uC,KAAKgsF;KAGpB,OAFAhsF,KAAKksF,sBAAsBK,eAAeC,kBAC1CxsF,KAAKkrF,YAAY;MAAEG,QAAQv9E;QACpB,IAAIm8E,UAAUrgF,QAAQsgF,gBAAgBp8E,OAAOu+E,gBAAgBC,iBAAiBC,eAAeC;AACxG;IACA,eAAA1F,CAAgBl9E,QAAQkE,OAAOrH;KAC3B,IAAI2/E;KACJ,MAAM8D,iBAAyC,UAAvB9D,KAAK3/E,QAAQ0gF,cAAyB,MAAPf,KAAgBA,KAAK,CAAC,GAAGiG,iBAAiBrsF,KAAKurF,iBACjGt3E,KAAKmoC,MAAMp8C,KAAK6qF,aAAapkF,QAAQ7D,SAAS6pF,eAAe,IAAIjE,2BAA6BkE,8BAA8BL,eAC5Hp4E,KAAKmoC,MAAMp8C,KAAK8qF,eAAerkF,QAAQ7D,QACvCsR,OAAM,WAEND,MAAK,MAAMjU,KAAK4rF,gBAAgBhiF,QAAQ6iF,cAAchmF,QAAQ7D,SAC9DqR,KAAKmoC,MAAMp8C,KAAKgrF,oBAAoBvkF,QAAQ7D,SAAS2pF,gBAAgBG,4BACrEz4E,MAAK,MAAMjU,KAAK8rF,mBAAkBU,kBAAkBE,4BACpDz4E,MAAK,MAAMjU,KAAKgsF;KAGrB,OAFAhsF,KAAKksF,sBAAsBK,eAAeC,kBAC1CxsF,KAAKkrF,YAAY;MAAEG,QAAQv9E;QACpB,IAAIy8E,oBAAoB3gF,QAAQsgF,gBAAgBp8E,OAAOu+E,gBAAgBI,cAAcF,eAAeC;AAC/G;IACA,eAAAzF,CAAgBn9E,QAAQnD;KACpB,IAAI2/E;KACJ,MAAM8D,iBAAyC,UAAvB9D,KAAK3/E,QAAQ0gF,cAAyB,MAAPf,KAAgBA,KAAK,CAAC,GAAGiG,iBAAiBrsF,KAAKurF,iBACjGt3E,KAAKmoC,MAAMp8C,KAAK6qF,aAAapkF,QAAQ7D,SAAS0pF,kBAAkBD,eAChEn4E,OAAMy6B,UAEN16B,KAAKmoC,MAAMp8C,KAAK8qF,eAAerkF,QAAQ7D,QACvCqR,MAAK06B,KAAK3uC,KAAKyrF,sBAAsB7hF,WAAU2iF,gBAAgBD,gBAC/Dp4E,OAAMy6B,UAEN16B,KAAKmoC,MAAMp8C,KAAKgrF,oBAAoBvkF,QAAQ7D,QAC5CqR,MAAK06B,KAAK3uC,KAAK8rF,mBAAkBU,kBAAkBF,gBACnDp4E,OAAMy6B,UAEN16B,KAAKmoC,MAAMp8C,KAAKgrF,oBAAoBvkF,QAAQ7D,QAC5CqR,MAAK06B,KAAK3uC,KAAKgsF;KAGpB,OAFAhsF,KAAKksF,sBAAsBK,eAAeC,kBAC1CxsF,KAAKkrF,YAAY,IAAIC,gBAAgBnrF,KAAKqsC,MAAM5lC,QAAQ7D;KACjD,IAAI4nF,oBAAoB5gF,QAAQsgF,gBAAgBlqF,KAAKkrF,WAAWmB,gBAAgBC,iBAAiBC,eAAeC;AAC3H;IACA,MAAAG,CAAO/iF,QAAQnD;KACX,IAAI2/E;KACJ,MAAM8D,iBAAyC,UAAvB9D,KAAK3/E,QAAQ0gF,cAAyB,MAAPf,KAAgBA,KAAK,CAAC,GAAGiG,iBAAiBrsF,KAAKurF,iBACjGt3E,KAAKmoC,MAAMp8C,KAAK6qF,aAAapkF,QAAQ7D,SAAS6pF,eAAe,IAAIjE,2BAA6BkE,8BAA8BL,eAC5Hp4E,KAAKmoC,MAAMp8C,KAAK8qF,eAAerkF,QAAQ7D,QACvCsR,OAAM,WAEND,MAAK,MAAMjU,KAAK4rF,gBAAgBhiF,QAAQ6iF,cAAchmF,QAAQ7D,SAC9DqR,KAAKmoC,MAAMp8C,KAAKgrF,oBAAoBvkF,QAAQ7D,SAAS2pF,gBAAgBG,4BACrEz4E,MAAK,MAAMjU,KAAK8rF,mBAAkBU,kBAAkBE,4BACpDz4E,MAAK,MAAMjU,KAAKgsF;KAGrB,OAFAhsF,KAAKksF,sBAAsBK,eAAeC,kBAC1CxsF,KAAKkrF,YAAY,IAAIC,gBAAgBnrF,KAAKqsC,MAAM5lC,QAAQ7D;KACjD,IAAI8nF,oBAAoB9gF,QAAQsgF,gBAAgBlqF,KAAKkrF,WAAWmB,gBAAgBI,cAAcF,eAAeC;AACxH;;GAWJ,SAASpwC,MAAMt5C,IAAIF;IACf,OAAQ0a,KAAM,IAAI1M,SAAQ,CAACC,SAAS+C;KAChC,IAAIhR,qBAAqC,IAASA,MAAMlC,SACpDkT,OAAO,IAAIszE,SAAS,eAAe,oBAElC;MACD,MAAM5gC,KAAKtjD,YAAW,MAAM6N,QAAQyM,KAAIxa;MACpCF,SACAA,MAAM7B,iBAAiB,UAAS6rF;OAC5B95E,aAAawzC,KACb1yC,OAAO,IAAIszE,SAAS,eAAe;AAAa;AAG5D;AAAA;AAER;GAxBAyD,cAAca,iBAAiB;IAC3BqB,gBAAgB;MAEpBlC,cAAcoB,gBAAgB;IAC1Bl8E,MAAM;IAAMi9E,QAAQ;MAExBnC,cAAcsB,kBAAkB;IAC5Bc,iBAAiB;;GAkBrB,MAAM5B;IACF,WAAA5qF,CAAY8rC,MAAMzpC;KACd5C,KAAKgtF,cAAa,GAClBhtF,KAAKitF,QAAQ,IACbjtF,KAAKqsC,OAAOA,MACZrsC,KAAK4C,QAAQA;AACjB;IACA,QAAIwoF;KACA,OAAOprF,KAAKitF;AAChB;IACA,aAAIxb;KACA,OAAOzxE,KAAKgtF;AAChB;IACA,IAAAE,CAAKhrF;KACD,IAAIlC,KAAKqsC,KAAK8gD,wBAAwBjG,UAClC,OAAOt2E,QAAQgD,OAAO5T,KAAKqsC,KAAK8gD;KAEpC,MAAMC,eAAqC9pF,MAA3BtD,KAAKqsC,KAAK8gD,eACpB,KACAntF,KAAKqsC,KAAK8gD;KAChB,OAAOv8E,QAAQC,aAAQvN,GAClB2Q,MAAK;MACNjU,KAAKitF,MAAM/rF,KAAKgB;AAAQ,SAEvB+R,KAAKmoC,MAAMgxC,SAASptF,KAAK4C;AAClC;IACA,QAAAymF;KACI,IAAIrpF,KAAKqsC,KAAKghD,yBAAyBnG,UACnC,OAAOt2E,QAAQgD,OAAO5T,KAAKqsC,KAAKghD;KAEpC,MAAMD,eAAsC9pF,MAA5BtD,KAAKqsC,KAAKghD,gBACpB,KACArtF,KAAKqsC,KAAKghD;KAChB,OAAOz8E,QAAQC,aAAQvN,GAClB2Q,MAAK;MACNjU,KAAKgtF,cAAa;AAAI,SAErB/4E,KAAKmoC,MAAMgxC,SAASptF,KAAK4C;AAClC;;GCrTG,SAAS0qF,eAAen4C,MAAMo4C,WAAW3jF,QAAQnD,SAASqH;IAC7D,IAAIs4E,IAAIQ,IAAIC,IAAI2G;IAChB,IAAY,WAARr4C,MAAiB;KACjB,IAAIs4C,OAAO,CAACC,KAAKC,KAAKC,QAAQL,UAAUnB,MAAMsB,KAAKC,KAAKC;KACxD,KAAK,MAAMC,SAAyC,UAA/BzH,KAAK3/E,QAAQkhF,sBAAiC,MAAPvB,KAAgBA,KAAK,IAAIh7E,QAAO2R,KAAKA,EAAE+wE,iBAAgBjsD,WAAW;MAC1H,MAAMl2B,OAAO8hF;MACbA,OAAO,CAACC,KAAKC,KAAKC,QAAQC,KAAKC,eAAeniF,MAAM+hF,KAAKC,KAAKC;AAClE;KACA,OAAOH,KAAK7jF,QAAQkE,OAAOrH;AAC/B;IACA,IAAY,qBAAR0uC,MAA2B;KAC3B,IAAIs4C,OAAO,CAACC,KAAKC,KAAKC,QAAQL,UAAUzG,gBAAgB4G,KAAKC,KAAKC;KAClE,KAAK,MAAMC,SAAyC,UAA/BjH,KAAKngF,QAAQkhF,sBAAiC,MAAPf,KAAgBA,KAAK,IAAIx7E,QAAO2R,KAAKA,EAAEgxE,2BAA0BlsD,WAAW;MACpI,MAAMl2B,OAAO8hF;MACbA,OAAO,CAACC,KAAKC,KAAKC,QAAQC,KAAKE,yBAAyBpiF,MAAM+hF,KAAKC,KAAKC;AAC5E;KACA,OAAOH,KAAK7jF,QAAQkE,OAAOrH;AAC/B;IACA,IAAY,qBAAR0uC,MAA2B;KAC3B,IAAIs4C,OAAO,CAACC,KAAKE,QAAQL,UAAUxG,gBAAgB2G,KAAKE;KACxD,KAAK,MAAMC,SAAyC,UAA/BhH,KAAKpgF,QAAQkhF,sBAAiC,MAAPd,KAAgBA,KAAK,IAAIz7E,QAAO2R,KAAKA,EAAEixE,2BAA0BnsD,WAAW;MACpI,MAAMl2B,OAAO8hF;MACbA,OAAO,CAACC,KAAKE,QAAQC,KAAKG,yBAAyBriF,MAAM+hF,KAAKE;AAClE;KACA,OAAOH,KAAK7jF,QAAQnD;AACxB;IACA,IAAY,YAAR0uC,MAAkB;KAClB,IAAIs4C,OAAO,CAACC,KAAKE,QAAQL,UAAUZ,OAAOe,KAAKE;KAC/C,KAAK,MAAMC,SAAyC,UAA/BL,KAAK/mF,QAAQkhF,sBAAiC,MAAP6F,KAAgBA,KAAK,IAAIpiF,QAAO2R,KAAKA,EAAEkxE,kBAAiBpsD,WAAW;MAC3H,MAAMl2B,OAAO8hF;MACbA,OAAO,CAACC,KAAKE,QAAQC,KAAKI,gBAAgBtiF,MAAM+hF,KAAKE;AACzD;KACA,OAAOH,KAAK7jF,QAAQnD;AACxB;KACA,GAAA6iF,OAAA,IAAYn0C;AAChB;GAIO,SAAS+4C,uBAAuBX,WAAW3jF,QAAQkE,OAAOrH;IAC7D,OAAO6mF,eAAe,SAASC,WAAW3jF,QAAQnD,SAASqH;AAC/D;GAIO,SAASqgF,iCAAiCZ,WAAW3jF,QAAQkE,OAAOrH;IACvE,OAAO6mF,eAAe,mBAAmBC,WAAW3jF,QAAQnD,SAASqH;AACzE;GAIO,SAASsgF,iCAAiCb,WAAW3jF,QAAQnD;IAChE,OAAO6mF,eAAe,mBAAmBC,WAAW3jF,QAAQnD;AAChE;GAIO,SAAS4nF,iCAAiCd,WAAW3jF,QAAQnD;IAChE,OAAO6mF,eAAe,UAAUC,WAAW3jF,QAAQnD;AACvD;GCjEO,MAAM6nF;IACT,WAAA/tF,CAAYqJ,QAAQD,SAAS4kF,UAAUC,uBAAuBzC,gBAAgB;KAAEl8E,MAAM;KAAMi9E,QAAQ;;KAChG9sF,KAAKyuF,cAAa,GAClBzuF,KAAK0uF,aAAa,IAClB1uF,KAAK4J,SAASA,QACd5J,KAAK2J,UAAUA;KACf3J,KAAKuuF,WAAWA,UAChBvuF,KAAKmqF,WAAW,CAAC,GACjBnqF,KAAK2uF,UAAUH;KACfxuF,KAAKiT,SAAS84E;AAClB;IAOA,eAAA6C;KACI,KAAK5uF,KAAKyuF,YAAY;MAClBzuF,KAAKyuF,cAAa;MAClB,KAAK,IAAIrH,KAAKpnF,KAAK0uF,YACftH;AAER;AACJ;IAIA,mBAAAyH,CAAoBxiD;KAChBrsC,KAAK2uF,QAAQtiD;AACjB;IAUA,aAAIyiD;KACA,OAAO9uF,KAAKyuF;AAChB;IAIA,QAAAM,CAASv9E;KACL,MAAM41E,IAAIpnF,KAAK0uF;KAEf,OADAtH,EAAElmF,KAAKsQ,WACA;MACH,IAAIuL,IAAIqqE,EAAE9lF,QAAQkQ;MACduL,KAAK,KACLqqE,EAAE7lF,OAAOwb,GAAG;AAAE;AAE1B;;;;;GCnDG,SAASusE,OAAO0F,WAAWp4D;IAC9B,KAAKo4D,WACD,MAAM,IAAIttF,MAAMk1B;AAExB;GAIO,SAASq4D,YAAY5mF,OAAOuuB;IAC/B,MAAM,IAAIl1B,MAAMk1B,cAAiCA,MAAM,wBAAwBvuB;AACnF;;;;;;;;GACA,MAAM6mF,cAAc,sBAAwBC,eAAe,sBAAwBC,aAAa,YAAYC,YAAY,YAAYC,aAAa;GAC1I,SAASC,YAAYC;IACxB,IAAmB,mBAARA,KACP,MAAM,IAAI9tF,MAAM,4BAA4B8tF;IAChD,KAAKh8E,OAAO8qE,UAAUkR,QAAQA,MAAMH,aAAaG,MAAMF,WACnD,MAAM,IAAI5tF,MAAM,qBAAqB8tF;AAC7C;GACO,SAASC,aAAaD;IACzB,IAAmB,mBAARA,KACP,MAAM,IAAI9tF,MAAM,6BAA6B8tF;IACjD,KAAKh8E,OAAO8qE,UAAUkR,QAAQA,MAAMJ,cAAcI,MAAM,GACpD,MAAM,IAAI9tF,MAAM,sBAAsB8tF;AAC9C;GACO,SAASE,cAAcF;IAC1B,IAAmB,mBAARA,KACP,MAAM,IAAI9tF,MAAM,8BAA8B8tF;IAClD,IAAKh8E,OAAOyD,SAASu4E,SAEjBA,MAAMN,eAAeM,MAAML,cAC3B,MAAM,IAAIztF,MAAM,uBAAuB8tF;AAC/C;;;;GC3BO,IAAIG,qBAsDAC;GAXJ,SAASC,mBAAmB3xE,GAAGC;IAClC,OAAOta,OAAOC,OAAOD,OAAOC,OAAO,CAAC,GAAGoa,IAAIC;AAC/C;;;;;OA5CA,SAAWwxE;IAKPA,oBAAoBG,SAAS9mF,OAAOmZ,IAAI,wBAKxCwtE,oBAAoBI,SAAS,CAACjiE,UAAU5rB,SAAS8tF,SAASC,UAAU5jD;MAChDs/C,GAAGzpF,WAAWA,QAAQytF,oBAAoBG,UAAU5tF,QAAQytF,oBAAoBG,UAAU,IAChG5uF,KAAK;MAAEgvF,IAAIF;MAASC;MAAU5jD;;AAAO,OAMnDsjD,oBAAoBQ,UAAU,CAACriE,UAAU5rB,SAASkuF;KAC9C,KAAK,KAAI,IAAI,UAAU,SAAYT,oBAAoBntB,KAAKtgE,UACxDkuF,OAAOnuB,IAAIiuB,IAAID,UAAUI,IAAIhkD;AAAK,OAM1CsjD,oBAAoBntB,OAAO,CAACtgE,SAAS8tF;KACjC,IAAIrE,GAAGzpF,UAAU;MACb,IAAI8R,MAAM9R,QAAQytF,oBAAoBG;MACtC,OAAOE,UAAUh8E,IAAI5I,QAAOklF,MAAMA,GAAGJ,MAAMF,YAAWh8E;AAC1D;KACA,OAAO;AAAE,OAKb27E,oBAAoBY,OAAO,CAACruF,SAAS8tF,YAAYL,oBAAoBntB,KAAKtgE,SAAS8tF,SAASluF,OAAO,GAAG;IACtG,MAAM6pF,KAAMzpF,WAAYA,WAAWM,MAAMC,QAAQP,QAAQytF,oBAAoBG;AAChF,IAtCD,CAsCGH,wBAAwBA,sBAAsB,CAAC,KAgBlD,SAAWC;IAIPA,SAASA,SAAiB,SAAI,KAAK,UAKnCA,SAASA,SAAgB,QAAI,KAAK;IAQlCA,SAASA,SAA0B,kBAAI,KAAK,mBAK5CA,SAASA,SAAqB,aAAI,KAAK;IAKvCA,SAASA,SAAmB,WAAI,KAAK,YAKrCA,SAASA,SAAgB,QAAI,KAAK;AACrC,IAjCD,CAiCGA,aAAaA,WAAW,CAAC;;;;GC3FrB,SAASY,gBAAgBnoF;IAC5B,IAAIuU,WAAWvU;IACf,IAAS,YAALuU,GAAe;KACf,IAAIpa,MAAMC,QAAQ4F,QACd,OAAO;KACX,IAAc,SAAVA,OACA,OAAO;AACf;IACA,OAAOuU;AACX;GAIO,SAAS6zE,aAAapoF;IACzB,OAAiB,SAAVA,SAAkC,mBAATA,UAAsB7F,MAAMC,QAAQ4F;AACxE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GClBA,IAAIqoF,WAAW,mEAAmE/rF,MAAM,KAEpFgsF,WAAW;GACf,KAAK,IAAI5zE,IAAI,GAAGA,IAAI2zE,SAASjrF,QAAQsX,KACjC4zE,SAASD,SAAS3zE,GAAGsgC,WAAW,MAAMtgC;GAenC,SAAS6zE,aAAaC;IAEzB,IAAIC,KAAwB,IAAnBD,UAAUprF,SAAa;IAGO,OAAnCorF,UAAUA,UAAUprF,SAAS,KAC7BqrF,MAAM,IACkC,OAAnCD,UAAUA,UAAUprF,SAAS,OAClCqrF,MAAM;IACV,IAEA3yE,GAFI8oD,QAAQ,IAAIznD,WAAWsxE,KAAKC,UAAU,GAC1CC,WAAW,GAEXjiF,IAAI;IAEJ,KAAK,IAAIgO,IAAI,GAAGA,IAAI8zE,UAAUprF,QAAQsX,KAAK;KAEvC,IADAoB,IAAIwyE,SAASE,UAAUxzC,WAAWtgC,UACxBzZ,MAAN6a,GAEA,QAAQ0yE,UAAU9zE;KACd,KAAK;MACDi0E,WAAW;;KACf,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;MACD;;KACJ;MACI,MAAMtvF,MAAM;;KAGxB,QAAQsvF;KACJ,KAAK;MACDjiF,IAAIoP,GACJ6yE,WAAW;MACX;;KACJ,KAAK;MACD/pB,MAAM8pB,aAAahiF,KAAK,KAAS,KAAJoP,MAAW,GACxCpP,IAAIoP,GACJ6yE,WAAW;MACX;;KACJ,KAAK;MACD/pB,MAAM8pB,cAAkB,KAAJhiF,MAAW,KAAS,KAAJoP,MAAW,GAC/CpP,IAAIoP,GACJ6yE,WAAW;MACX;;KACJ,KAAK;MACD/pB,MAAM8pB,cAAkB,IAAJhiF,MAAU,IAAIoP,GAClC6yE,WAAW;;AAGvB;IACA,IAAgB,KAAZA,UACA,MAAMtvF,MAAM;IAChB,OAAOulE,MAAMgqB,SAAS,GAAGF;AAC7B;GAMO,SAASG,aAAajqB;IACzB,IACA9oD,GADIgzE,SAAS,IAAIH,WAAW,GAE5BjiF,IAAI;IACJ,KAAK,IAAIgO,IAAI,GAAGA,IAAIkqD,MAAMxhE,QAAQsX,KAE9B,QADAoB,IAAI8oD,MAAMlqD,IACFi0E;IACJ,KAAK;KACDG,UAAUT,SAASvyE,KAAK,IACxBpP,KAAS,IAAJoP,MAAU,GACf6yE,WAAW;KACX;;IACJ,KAAK;KACDG,UAAUT,SAAS3hF,IAAIoP,KAAK,IAC5BpP,KAAS,KAAJoP,MAAW,GAChB6yE,WAAW;KACX;;IACJ,KAAK;KACDG,UAAUT,SAAS3hF,IAAIoP,KAAK,IAC5BgzE,UAAUT,SAAa,KAAJvyE,IACnB6yE,WAAW;;IAWvB,OANIA,aACAG,UAAUT,SAAS3hF,IACnBoiF,UAAU,KACM,KAAZH,aACAG,UAAU;IAEXA;AACX;GAzGAR,SAAS,IAAItzC,WAAW,MAAMqzC,SAASpvF,QAAQ,MAC/CqvF,SAAS,IAAItzC,WAAW,MAAMqzC,SAASpvF,QAAQ;GCkB/C,MAAM8vF,gBAAiB9/E,SAAUhJ,OAAO+oF,aAAaxzE,MAAMvV,QAAQgJ;GAa5D,SAASggF,SAASrqB;IACrB,IAAIA,MAAMxhE,SAAS,GACf,OAAO;IACX,IAEAmX,GAFIo4D,MAAM,GACV96D,QAAQ,IAAI5I,QAAQ,IAAIyL,IAAI,GAExBkS,MAAMg4C,MAAMxhE;IAChB,MAAOuvE,MAAM/lD,OACTrS,IAAIqqD,MAAM+N,QACNp4D,IAAI,MACJtL,MAAMyL,OAAOH,IACRA,IAAI,OAAOA,IAAI,MACpBtL,MAAMyL,QAAY,KAAJH,MAAW,IAAmB,KAAfqqD,MAAM+N,SAC9Bp4D,IAAI,OAAOA,IAAI,OACpBA,MAAU,IAAJA,MAAU,MAAqB,KAAfqqD,MAAM+N,WAAgB,MAAqB,KAAf/N,MAAM+N,WAAgB,IAAmB,KAAf/N,MAAM+N,UAAe;IACjG1jE,MAAMyL,OAAO,SAAUH,KAAK,KAC5BtL,MAAMyL,OAAO,SAAc,OAAJH,MAGvBtL,MAAMyL,QAAY,KAAJH,MAAW,MAAqB,KAAfqqD,MAAM+N,WAAgB,IAAmB,KAAf/N,MAAM+N;IAC/Dj4D,IAAI,SACJ7C,MAAMhZ,KAAKkwF,cAAc9/E,SACzByL,IAAI;IAGZ,OAAI7C,MAAMzU,UACFsX,KACA7C,MAAMhZ,KAAKkwF,cAAc9/E,MAAMxP,MAAM,GAAGib,MACrC7C,MAAMzS,KAAK,OAEf2pF,cAAc9/E,MAAMxP,MAAM,GAAGib;AACxC;;GC3BO,SAASw0E;IACZ,IAAIC,UAAU,GACVC,WAAW;IACf,KAAK,IAAIlzE,QAAQ,GAAGA,QAAQ,IAAIA,SAAS,GAAG;KACxC,IAAIJ,IAAIne,KAAKuyE,IAAIvyE,KAAKg1E;KAEtB,IADAwc,YAAgB,MAAJrzE,MAAaI,SAChB,MAAJJ,IAED,OADAne,KAAK0xF,gBACE,EAACF,SAASC;AAEzB;IACA,IAAIE,aAAa3xF,KAAKuyE,IAAIvyE,KAAKg1E;IAK/B,IAHAwc,YAAyB,KAAbG,eAAsB,IAElCF,YAAyB,MAAbE,eAAsB,KAChB,MAAbA,aAED,OADA3xF,KAAK0xF;IACE,EAACF,SAASC;IAErB,KAAK,IAAIlzE,QAAQ,GAAGA,SAAS,IAAIA,SAAS,GAAG;KACzC,IAAIJ,IAAIne,KAAKuyE,IAAIvyE,KAAKg1E;KAEtB,IADAyc,aAAiB,MAAJtzE,MAAaI,SACjB,MAAJJ,IAED,OADAne,KAAK0xF,gBACE,EAACF,SAASC;AAEzB;IACA,MAAM,IAAI/vF,MAAM;AACpB;GAQO,SAASkwF,cAAcC,IAAIC,IAAI7qB;IAClC,KAAK,IAAIlqD,IAAI,GAAGA,IAAI,IAAIA,KAAQ,GAAG;KAC/B,MAAMwB,QAAQszE,OAAO90E,GACf0vD,YAAaluD,UAAU,KAAM,KAAW,KAANuzE,KAClC1qB,OAA0C,OAAlCqF,UAAkB,MAARluD,QAAeA;KAEvC,IADA0oD,MAAM/lE,KAAKkmE,QACNqF,SACD;AAER;IACA,MAAMslB,YAAcF,OAAO,KAAM,MAAe,IAALC,OAAc,GACnDE,iBAAiBF,MAAM;IAE7B,IADA7qB,MAAM/lE,KAAoD,OAA9C8wF,cAA0B,MAAZD,YAAmBA,aACxCC,aAAL;KAGA,KAAK,IAAIj1E,IAAI,GAAGA,IAAI,IAAIA,KAAQ,GAAG;MAC/B,MAAMwB,QAAQuzE,OAAO/0E,GACf0vD,YAAaluD,UAAU,KAAM,IAC7B6oD,OAA0C,OAAlCqF,UAAkB,MAARluD,QAAeA;MAEvC,IADA0oD,MAAM/lE,KAAKkmE,QACNqF,SACD;AAER;KACAxF,MAAM/lE,KAAM4wF,OAAO,KAAM;AAVzB;AAWJ;GAaO,SAASG,gBAAgBC;IAE5B,IAAIC,QAAkB,OAAVD,IAAI;IACZC,UACAD,MAAMA,IAAIpwF,MAAM;IAKpB,IAAI0vF,UAAU,GACVC,WAAW;IACf,SAASW,YAAYC,OAAO1/E;KAExB,MAAM2/E,WAAW9+E,OAAO0+E,IAAIpwF,MAAMuwF,OAAO1/E;KACzC8+E,YANS,KAOTD,UAPS,MAOCA,UAAiBc,UAEvBd,WA5BW,eA6BXC,YAAwBD,UA7Bb,aA6ByC;KACpDA,WA9BW;AAgCnB;IAKA,OAJAY,aAAa,KAAK,KAClBA,aAAa,KAAK,KAClBA,aAAa,KAAK,IAClBA,aAAa;IACN,EAACD,OAAOX,SAASC;AAC5B;GAMO,SAASc,cAAcC,SAASC;IAGnC,IAAKA,aAAa,KAAM,SACpB,OAAO,MAhDQ,aAgDeA,YAAYD,YAAY;IAW1D,IACIE,OAASF,YAAY,KAAOC,YAAY,OAAQ,IAAK,UACrDE,OAAQF,YAAY,KAAM,OAI1BG,UANgB,WAAVJ,WAMgB,UAANE,MAAyB,UAAPC,MAClCE,SAASH,MAAc,UAAPC,MAChBG,SAAiB,IAAPH,MAEVnlD,OAAO;IAUX,SAASulD,eAAeC,UAAUC;KAC9B,IAAIC,UAAUF,WAAW1qF,OAAO0qF,YAAY;KAC5C,OAAIC,mBACO,UAAUnxF,MAAMoxF,QAAQztF,UAAUytF,UAEtCA;AACX;IACA,OAhBIN,UAAUplD,SACVqlD,UAAUr9E,KAAKQ,MAAM48E,SAASplD,OAC9BolD,UAAUplD;IAEVqlD,UAAUrlD,SACVslD,UAAUt9E,KAAKQ,MAAM68E,SAASrlD,OAC9BqlD,UAAUrlD,OAUPulD,eAAeD,QAA8B,KAChDC,eAAeF,QAA8BC,UAG7CC,eAAeH,QAA8B;AACrD;GAQO,SAASO,cAAc9qF,OAAO4+D;IACjC,IAAI5+D,SAAS,GAAG;KAEZ,MAAOA,QAAQ,OACX4+D,MAAM/lE,KAAc,MAARmH,QAAgB,MAC5BA,WAAkB;KAEtB4+D,MAAM/lE,KAAKmH;AACf,WACK;KACD,KAAK,IAAI0U,IAAI,GAAGA,IAAI,GAAGA,KACnBkqD,MAAM/lE,KAAa,MAARmH,QAAc,MACzBA,UAAiB;KAErB4+D,MAAM/lE,KAAK;AACf;AACJ;GAMO,SAASkyF;IACZ,IAAIj1E,IAAIne,KAAKuyE,IAAIvyE,KAAKg1E,QAClB7wE,SAAa,MAAJga;IACb,MAAS,MAAJA,IAED,OADAne,KAAK0xF,gBACEvtF;IAIX,IAFAga,IAAIne,KAAKuyE,IAAIvyE,KAAKg1E,QAClB7wE,WAAe,MAAJga,MAAa,KACf,MAAJA,IAED,OADAne,KAAK0xF;IACEvtF;IAIX,IAFAga,IAAIne,KAAKuyE,IAAIvyE,KAAKg1E,QAClB7wE,WAAe,MAAJga,MAAa,MACf,MAAJA,IAED,OADAne,KAAK0xF;IACEvtF;IAIX,IAFAga,IAAIne,KAAKuyE,IAAIvyE,KAAKg1E,QAClB7wE,WAAe,MAAJga,MAAa,MACf,MAAJA,IAED,OADAne,KAAK0xF;IACEvtF;IAGXga,IAAIne,KAAKuyE,IAAIvyE,KAAKg1E,QAClB7wE,WAAe,KAAJga,MAAa;IACxB,KAAK,IAAImqD,YAAY,GAAS,MAAJnqD,KAAoBmqD,YAAY,IAAIA,aAC1DnqD,IAAIne,KAAKuyE,IAAIvyE,KAAKg1E;IACtB,IAAS,MAAJ72D,GACD,MAAM,IAAIzc,MAAM;IAGpB,OAFA1B,KAAK0xF,gBAEEvtF,WAAW;AACtB;GCvQA,IAAIkvF;GAkBJ,SAASC,SAASC;IACd,KAAKA,IACD,MAAM,IAAI7xF,MAAM;AACxB;IApBO;IACH,MAAM8xF,KAAK,IAAIvrB,SAAS,IAAInzD,YAAY,KAClC2+E,UAA2BnwF,MAAtB8F,WAAWsqF,UACW,qBAAnBF,GAAGG,eACiB,qBAApBH,GAAGI,gBACgB,qBAAnBJ,GAAGK,eACiB,qBAApBL,GAAGM;IACjBT,KAAKI,KAAK;KACNM,KAAKL,OAAO;KACZM,KAAKN,OAAO;KACZO,MAAMP,OAAO;KACbQ,MAAMR,OAAO;KACbS,GAAGT;KACHU,GAAGZ;aACHlwF;AACR,IACA+wF;GAMA,MAAMC,iBAAiB;GAKvB,MAAMC;IAIF,WAAAh0F,CAAYsxF,IAAIC;KACZ9xF,KAAK6xF,KAAU,IAALA,IACV7xF,KAAK8xF,KAAU,IAALA;AACd;IAIA,MAAA0C;KACI,OAAkB,KAAXx0F,KAAK6xF,MAAsB,KAAX7xF,KAAK8xF;AAChC;IAIA,QAAA1kD;KACI,IAAIjpC,SArBW,aAqBFnE,KAAK8xF,MAAuB9xF,KAAK6xF,OAAO;KACrD,KAAKr+E,OAAOihF,cAActwF,SACtB,MAAM,IAAIzC,MAAM;KACpB,OAAOyC;AACX;;GAMG,MAAMuwF,gBAAgBH;IAIzB,WAAO/hF,CAAKnK;KACR,IAAIgrF,IAEA,eAAehrF;KACX,KAAK;MACD,IAAa,OAATA,OACA,OAAOrI,KAAK20F;MAChB,IAAa,MAATtsF,OACA,MAAM,IAAI3G,MAAM;MACpB2G,QAAQgrF,GAAGc,EAAE9rF;;KACjB,KAAK;MACD,IAAc,MAAVA,OACA,OAAOrI,KAAK20F;MAChBtsF,QAAQgrF,GAAGc,EAAE9rF;;KACjB,KAAK;MACD,KAAKA,OACD,OAAOrI,KAAK20F;MAChB,IAAItsF,QAAQgrF,GAAGY,MACX,MAAM,IAAIvyF,MAAM;MACpB,IAAI2G,QAAQgrF,GAAGa,MACX,MAAM,IAAIxyF,MAAM;MAEpB,OADA2xF,GAAGe,EAAEN,aAAa,GAAGzrF,QAAO,IACrB,IAAIqsF,QAAQrB,GAAGe,EAAEQ,SAAS,IAAG,IAAOvB,GAAGe,EAAEQ,SAAS,IAAG;YAGpE,eAAevsF;KACX,KAAK;MACD,IAAa,OAATA,OACA,OAAOrI,KAAK20F;MAEhB,IADAtsF,QAAQA,MAAMvD,SACTwvF,eAAehvF,KAAK+C,QACrB,MAAM,IAAI3G,MAAM;MACpB,KAAKywF,OAAON,IAAIC,MAAMG,gBAAgB5pF;MACtC,IAAI8pF,OACA,MAAM,IAAIzwF,MAAM;MACpB,OAAO,IAAIgzF,QAAQ7C,IAAIC;;KAC3B,KAAK;MACD,IAAa,KAATzpF,OACA,OAAOrI,KAAK20F;MAChB,KAAKnhF,OAAOihF,cAAcpsF,QACtB,MAAM,IAAI3G,MAAM;MACpB,IAAI2G,QAAQ,GACR,MAAM,IAAI3G,MAAM;MACpB,OAAO,IAAIgzF,QAAQrsF,OAAOA,QA9EvB;;KAgFf,MAAM,IAAI3G,MAAM,0BAA0B2G;AAC9C;IAIA,QAAAQ;KACI,OAAOwqF,KAAKrzF,KAAK60F,WAAWhsF,aAAa0pF,cAAcvyF,KAAK6xF,IAAI7xF,KAAK8xF;AACzE;IAIA,QAAA+C;KAII,OAHAvB,SAASD,KACTA,GAAGe,EAAEU,SAAS,GAAG90F,KAAK6xF,KAAI,IAC1BwB,GAAGe,EAAEU,SAAS,GAAG90F,KAAK8xF,KAAI;KACnBuB,GAAGe,EAAER,aAAa,IAAG;AAChC;;GAKJc,QAAQC,OAAO,IAAID,QAAQ,GAAG;GAKvB,MAAMK,eAAeR;IAIxB,WAAO/hF,CAAKnK;KACR,IAAIgrF,IAEA,eAAehrF;KACX,KAAK;MACD,IAAa,OAATA,OACA,OAAOrI,KAAK20F;MAChB,IAAa,MAATtsF,OACA,MAAM,IAAI3G,MAAM;MACpB2G,QAAQgrF,GAAGc,EAAE9rF;;KACjB,KAAK;MACD,IAAc,MAAVA,OACA,OAAOrI,KAAK20F;MAChBtsF,QAAQgrF,GAAGc,EAAE9rF;;KACjB,KAAK;MACD,KAAKA,OACD,OAAOrI,KAAK20F;MAChB,IAAItsF,QAAQgrF,GAAGU,KACX,MAAM,IAAIryF,MAAM;MACpB,IAAI2G,QAAQgrF,GAAGW,KACX,MAAM,IAAItyF,MAAM;MAEpB,OADA2xF,GAAGe,EAAEP,YAAY,GAAGxrF,QAAO,IACpB,IAAI0sF,OAAO1B,GAAGe,EAAEQ,SAAS,IAAG,IAAOvB,GAAGe,EAAEQ,SAAS,IAAG;YAGnE,eAAevsF;KACX,KAAK;MACD,IAAa,OAATA,OACA,OAAOrI,KAAK20F;MAEhB,IADAtsF,QAAQA,MAAMvD,SACTwvF,eAAehvF,KAAK+C,QACrB,MAAM,IAAI3G,MAAM;MACpB,KAAKywF,OAAON,IAAIC,MAAMG,gBAAgB5pF;MACtC,IAAI8pF;OACA,IAAIL,KA/IN,4BA+I6BA,MAA6B,KAAND,IAC9C,MAAM,IAAInwF,MAAM;aAEnB,IAAIowF,MAlJP,YAmJE,MAAM,IAAIpwF,MAAM;MACpB,IAAIszF,MAAM,IAAID,OAAOlD,IAAIC;MACzB,OAAOK,QAAQ6C,IAAIC,WAAWD;;KAClC,KAAK;MACD,IAAa,KAAT3sF,OACA,OAAOrI,KAAK20F;MAChB,KAAKnhF,OAAOihF,cAAcpsF,QACtB,MAAM,IAAI3G,MAAM;MACpB,OAAO2G,QAAQ,IACT,IAAI0sF,OAAO1sF,OAAOA,QA7JrB,cA8JG,IAAI0sF,QAAQ1sF,QAAQA,QA9JvB,YA8J+C4sF;;KAE9D,MAAM,IAAIvzF,MAAM,0BAA0B2G;AAC9C;IAIA,UAAA6sF;KACI,UArKc,aAqKNl1F,KAAK8xF;AACjB;IAKA,MAAAmD;KACI,IAAInD,MAAM9xF,KAAK8xF,IAAID,KAAK7xF,KAAK6xF;KAK7B,OAJIA,KACAA,KAAW,KAALA,KAENC,MAAM,GACH,IAAIiD,OAAOlD,IAAIC;AAC1B;IAIA,QAAAjpF;KACI,IAAIwqF,IACA,OAAOrzF,KAAK60F,WAAWhsF;KAC3B,IAAI7I,KAAKk1F,cAAc;MACnB,IAAIpmF,IAAI9O,KAAKi1F;MACb,OAAO,MAAM1C,cAAczjF,EAAE+iF,IAAI/iF,EAAEgjF;AACvC;KACA,OAAOS,cAAcvyF,KAAK6xF,IAAI7xF,KAAK8xF;AACvC;IAIA,QAAA+C;KAII,OAHAvB,SAASD,KACTA,GAAGe,EAAEU,SAAS,GAAG90F,KAAK6xF,KAAI,IAC1BwB,GAAGe,EAAEU,SAAS,GAAG90F,KAAK8xF,KAAI;KACnBuB,GAAGe,EAAET,YAAY,IAAG;AAC/B;;GAKJoB,OAAOJ,OAAO,IAAII,OAAO,GAAG;GCpO5B,MAAMI,eAAe;IACjBC,mBAAkB;IAClBC,eAAepuB,SAAS,IAAIquB,aAAaruB;;GAKtC,SAASsuB,kBAAkB9uF;IAC9B,OAAOA,UAAU5C,OAAOC,OAAOD,OAAOC,OAAO,CAAC,GAAGqxF,eAAe1uF,WAAW0uF;AAC/E;GACO,MAAMG;IACT,WAAA/0F,CAAYgyE,KAAKijB;KACbx1F,KAAKy1F,WAAWlE,cAIhBvxF,KAAK01F,SAAStC,cACdpzF,KAAKuyE,MAAMA,KACXvyE,KAAKivB,MAAMsjD,IAAI9sE;KACfzF,KAAKg1E,MAAM,GACXh1E,KAAK21F,OAAO,IAAI1tB,SAASsK,IAAI1+D,QAAQ0+D,IAAIrK,YAAYqK,IAAIrhE;KACzDlR,KAAKw1F,cAAcA,sBAAiDA,cAAc,IAAIhtB,YAAY,SAAS;MACvGwF,QAAO;MACP4nB,YAAW;;AAEnB;IAIA,GAAA3zB;KACI,IAAIA,MAAMjiE,KAAK01F,UAAU1F,UAAU/tB,QAAQ,GAAGguB,WAAiB,IAANhuB;KACzD,IAAI+tB,WAAW,KAAKC,WAAW,KAAKA,WAAW,GAC3C,MAAM,IAAIvuF,MAAM,2BAA2BsuF,UAAU,gBAAgBC;KACzE,OAAO,EAACD,SAASC;AACrB;IAKA,IAAA4F,CAAK5F;KACD,IAAIhnD,QAAQjpC,KAAKg1E;KAEjB,QAAQib;KACJ,KAAK,0BAAS6F;MACV,MAA8B,MAAvB91F,KAAKuyE,IAAIvyE,KAAKg1E;MAGrB;;KACJ,KAAK,0BAAS+gB;MACV/1F,KAAKg1E,OAAO;;KAChB,KAAK,0BAASghB;MACVh2F,KAAKg1E,OAAO;MACZ;;KACJ,KAAK,0BAASihB;MACV,IAAIhnE,MAAMjvB,KAAK01F;MACf11F,KAAKg1E,OAAO/lD;MACZ;;KACJ,KAAK,0BAASinE;MAGV,IAAIt5E;MACJ,OAAQA,IAAI5c,KAAKiiE,MAAM,QAAQ,0BAASk0B,YACpCn2F,KAAK61F,KAAKj5E;MAEd;;KACJ;MACI,MAAM,IAAIlb,MAAM,yBAAyBuuF;;KAGjD,OADAjwF,KAAK0xF,gBACE1xF,KAAKuyE,IAAI0e,SAAShoD,OAAOjpC,KAAKg1E;AACzC;IAIA,YAAA0c;KACI,IAAI1xF,KAAKg1E,MAAMh1E,KAAKivB,KAChB,MAAM,IAAI+mB,WAAW;AAC7B;IAIA,KAAAogD;KACI,OAAuB,IAAhBp2F,KAAK01F;AAChB;IAIA,MAAAW;KACI,IAAIC,MAAMt2F,KAAK01F;KAEf,OAAQY,QAAQ,MAAa,IAANA;AAC3B;IAIA,KAAAC;KACI,OAAO,IAAIxB,UAAU/0F,KAAKy1F;AAC9B;IAIA,MAAAe;KACI,OAAO,IAAI9B,WAAW10F,KAAKy1F;AAC/B;IAIA,MAAAgB;KACI,KAAK5E,IAAIC,MAAM9xF,KAAKy1F,YAEhB94E,MAAW,IAALk1E;KAGV,OAFAA,MAAOA,OAAO,KAAU,IAALC,OAAW,MAAMn1E,GACpCm1E,KAAMA,OAAO,IAAIn1E,GACV,IAAIo4E,OAAOlD,IAAIC;AAC1B;IAIA,IAAA4E;KACI,KAAK7E,IAAIC,MAAM9xF,KAAKy1F;KACpB,OAAc,MAAP5D,MAAmB,MAAPC;AACvB;IAIA,OAAA6E;KACI,OAAO32F,KAAK21F,KAAKiB,WAAW52F,KAAKg1E,OAAO,KAAK,IAAG;AACpD;IAIA,QAAA6hB;KACI,OAAO72F,KAAK21F,KAAKf,UAAU50F,KAAKg1E,OAAO,KAAK,IAAG;AACnD;IAIA,OAAA8hB;KACI,OAAO,IAAIpC,QAAQ10F,KAAK62F,YAAY72F,KAAK62F;AAC7C;IAIA,QAAAE;KACI,OAAO,IAAIhC,OAAO/0F,KAAK62F,YAAY72F,KAAK62F;AAC5C;IAIA,KAAAG;KACI,OAAOh3F,KAAK21F,KAAKxtB,YAAYnoE,KAAKg1E,OAAO,KAAK,IAAG;AACrD;IAIA,MAAAiiB;KACI,OAAOj3F,KAAK21F,KAAKttB,YAAYroE,KAAKg1E,OAAO,KAAK,IAAG;AACrD;IAIA,KAAA/N;KACI,IAAIh4C,MAAMjvB,KAAK01F,UACXzsD,QAAQjpC,KAAKg1E;KAGjB,OAFAh1E,KAAKg1E,OAAO/lD,KACZjvB,KAAK0xF,gBACE1xF,KAAKuyE,IAAI0e,SAAShoD,OAAOA,QAAQha;AAC5C;IAIA,MAAAiY;KACI,OAAOlnC,KAAKw1F,YAAY/sB,OAAOzoE,KAAKinE;AACxC;;;GC7KJ,MAAMiwB,gBAAgB;IAClBC,qBAAoB;IACpBC,eAAe,MAAM,IAAIC;;GAKtB,SAASC,mBAAmB7wF;IAC/B,OAAOA,UAAU5C,OAAOC,OAAOD,OAAOC,OAAO,CAAC,GAAGozF,gBAAgBzwF,WAAWywF;AAChF;GACO,MAAMG;IACT,WAAA92F,CAAYg3F;KAIRv3F,KAAKw3F,QAAQ,IACbx3F,KAAKu3F,cAAcA,sBAAiDA,cAAc,IAAIE;KACtFz3F,KAAK03F,SAAS,IACd13F,KAAKuyE,MAAM;AACf;IAIA,MAAAolB;KACI33F,KAAK03F,OAAOx2F,KAAK,IAAIse,WAAWxf,KAAKuyE;KACrC,IAAItjD,MAAM;KACV,KAAK,IAAIlS,IAAI,GAAGA,IAAI/c,KAAK03F,OAAOjyF,QAAQsX,KACpCkS,OAAOjvB,KAAK03F,OAAO36E,GAAGtX;KAC1B,IAAIwhE,QAAQ,IAAIznD,WAAWyP,MACvBw2C,SAAS;KACb,KAAK,IAAI1oD,IAAI,GAAGA,IAAI/c,KAAK03F,OAAOjyF,QAAQsX,KACpCkqD,MAAMxmE,IAAIT,KAAK03F,OAAO36E,IAAI0oD;KAC1BA,UAAUzlE,KAAK03F,OAAO36E,GAAGtX;KAG7B,OADAzF,KAAK03F,SAAS,IACPzwB;AACX;IAOA,IAAA2wB;KAII,OAHA53F,KAAKw3F,MAAMt2F,KAAK;MAAEw2F,QAAQ13F,KAAK03F;MAAQnlB,KAAKvyE,KAAKuyE;SACjDvyE,KAAK03F,SAAS,IACd13F,KAAKuyE,MAAM,IACJvyE;AACX;IAKA,IAAAyH;KAEI,IAAI6J,QAAQtR,KAAK23F,UAEbE,OAAO73F,KAAKw3F,MAAMvmE;KACtB,KAAK4mE,MACD,MAAM,IAAIn2F,MAAM;KAKpB,OAJA1B,KAAK03F,SAASG,KAAKH,QACnB13F,KAAKuyE,MAAMslB,KAAKtlB,KAEhBvyE,KAAK01F,OAAOpkF,MAAMJ;KACXlR,KAAKqwF,IAAI/+E;AACpB;IAQA,GAAA2wD,CAAI+tB,SAAShuF;KACT,OAAOhC,KAAK01F,QAAQ1F,WAAW,IAAIhuF,UAAU;AACjD;IAIA,GAAAquF,CAAI/+E;KAMA,OALItR,KAAKuyE,IAAI9sE,WACTzF,KAAK03F,OAAOx2F,KAAK,IAAIse,WAAWxf,KAAKuyE,OACrCvyE,KAAKuyE,MAAM;KAEfvyE,KAAK03F,OAAOx2F,KAAKoQ,QACVtR;AACX;IAIA,MAAA01F,CAAOrtF;KAGH,MAFA,GAAAihF,OAAA,IAAajhF,QAENA,QAAQ,OACXrI,KAAKuyE,IAAIrxE,KAAc,MAARmH,QAAgB,MAC/BA,WAAkB;KAGtB,OADArI,KAAKuyE,IAAIrxE,KAAKmH,QACPrI;AACX;IAIA,KAAAo2F,CAAM/tF;KAGF,QAFA,GAAAihF,OAAA,IAAYjhF,QACZ8qF,cAAc9qF,OAAOrI,KAAKuyE,MACnBvyE;AACX;IAIA,IAAA02F,CAAKruF;KAED,OADArI,KAAKuyE,IAAIrxE,KAAKmH,QAAQ,IAAI,IACnBrI;AACX;IAIA,KAAAinE,CAAM5+D;KAEF,OADArI,KAAK01F,OAAOrtF,MAAM6I,aACXlR,KAAKqwF,IAAIhoF;AACpB;IAIA,MAAA6+B,CAAO7+B;KACH,IAAIiJ,QAAQtR,KAAKu3F,YAAYO,OAAOzvF;KAEpC,OADArI,KAAK01F,OAAOpkF,MAAMJ,aACXlR,KAAKqwF,IAAI/+E;AACpB;IAIA,KAAA0lF,CAAM3uF;MACF,GAAAihF,OAAA,IAAcjhF;KACd,IAAIiJ,QAAQ,IAAIkO,WAAW;KAE3B,OADA,IAAIyoD,SAAS32D,MAAMuC,QAAQkkF,WAAW,GAAG1vF,QAAO,IACzCrI,KAAKqwF,IAAI/+E;AACpB;IAIA,MAAA2lF,CAAO5uF;KACH,IAAIiJ,QAAQ,IAAIkO,WAAW;KAE3B,OADA,IAAIyoD,SAAS32D,MAAMuC,QAAQmkF,WAAW,GAAG3vF,QAAO,IACzCrI,KAAKqwF,IAAI/+E;AACpB;IAIA,OAAAqlF,CAAQtuF;MACJ,GAAAihF,OAAA,IAAajhF;KACb,IAAIiJ,QAAQ,IAAIkO,WAAW;KAE3B,OADA,IAAIyoD,SAAS32D,MAAMuC,QAAQokF,UAAU,GAAG5vF,QAAO,IACxCrI,KAAKqwF,IAAI/+E;AACpB;IAIA,QAAAulF,CAASxuF;MACL,GAAAihF,OAAA,IAAYjhF;KACZ,IAAIiJ,QAAQ,IAAIkO,WAAW;KAE3B,OADA,IAAIyoD,SAAS32D,MAAMuC,QAAQihF,SAAS,GAAGzsF,QAAO,IACvCrI,KAAKqwF,IAAI/+E;AACpB;IAIA,MAAA+kF,CAAOhuF;KAKH,QAJA,GAAAihF,OAAA,IAAYjhF,QAGZ8qF,cADA9qF,SAAUA,SAAS,IAAMA,SAAS,QAAS,GACtBrI,KAAKuyE;KACnBvyE;AACX;IAIA,QAAA+2F,CAAS1uF;KACL,IAAIiJ,QAAQ,IAAIkO,WAAW,IACvBm2E,OAAO,IAAI1tB,SAAS32D,MAAMuC,SAC1BqkF,OAAOnD,OAAOviF,KAAKnK;KAGvB,OAFAstF,KAAKb,SAAS,GAAGoD,KAAKrG,KAAI,IAC1B8D,KAAKb,SAAS,GAAGoD,KAAKpG,KAAI,IACnB9xF,KAAKqwF,IAAI/+E;AACpB;IAIA,OAAAwlF,CAAQzuF;KACJ,IAAIiJ,QAAQ,IAAIkO,WAAW,IACvBm2E,OAAO,IAAI1tB,SAAS32D,MAAMuC,SAC1BqkF,OAAOxD,QAAQliF,KAAKnK;KAGxB,OAFAstF,KAAKb,SAAS,GAAGoD,KAAKrG,KAAI,IAC1B8D,KAAKb,SAAS,GAAGoD,KAAKpG,KAAI,IACnB9xF,KAAKqwF,IAAI/+E;AACpB;IAIA,KAAAilF,CAAMluF;KACF,IAAI6vF,OAAOnD,OAAOviF,KAAKnK;KAEvB,OADAupF,cAAcsG,KAAKrG,IAAIqG,KAAKpG,IAAI9xF,KAAKuyE,MAC9BvyE;AACX;IAIA,MAAAy2F,CAAOpuF;KACH,IAAI6vF,OAAOnD,OAAOviF,KAAKnK,QAEvBulC,OAAOsqD,KAAKpG,MAAM;KAElB,OADAF,cAD4BsG,KAAKrG,MAAM,IAAKjkD,OAAasqD,KAAKpG,MAAM,IAAMoG,KAAKrG,OAAO,MAAOjkD,MACvE5tC,KAAKuyE;KACpBvyE;AACX;IAIA,MAAAw2F,CAAOnuF;KACH,IAAI6vF,OAAOxD,QAAQliF,KAAKnK;KAExB,OADAupF,cAAcsG,KAAKrG,IAAIqG,KAAKpG,IAAI9xF,KAAKuyE,MAC9BvyE;AACX;;;GC3NG,MAAMm4F,eAAenvF,OAAOmZ,IAAI;OCA5Bi2E,YAiDAC,UAsCAC;GAoBJ,SAASC,mBAAmBnuB;IAC/B,IAAIgc,IAAIQ,IAAIC,IAAI2G;IAKhB,OAJApjB,MAAMkc,YAAuC,UAA1BF,KAAKhc,MAAMkc,mBAA8B,MAAPF,KAAgBA,MAAK;IAAA,oBAAehc,MAAMhoE,OAC/FgoE,MAAMouB,WAAqC,UAAzB5R,KAAKxc,MAAMouB,kBAA6B,MAAP5R,KAAgBA,MAAK;IAAA,oBAAexc,MAAMhoE,OAC7FgoE,MAAMpkC,SAAiC,UAAvB6gD,KAAKzc,MAAMpkC,gBAA2B,MAAP6gD,KAAgBA,KAAKyR,WAAWG;IAC/EruB,MAAMwjB,MAA2B,UAApBJ,KAAKpjB,MAAMwjB,aAAwB,MAAPJ,KAAgBA,MAAMpjB,MAAMpkC,YAAiBokC,MAAMsuB,SAA8B,aAAdtuB,MAAMj1B;IAC3Gi1B;AACX;GAMO,SAASuuB,iBAAiBC,aAAaz+E,WAAW+rE,eAAeC;IACpE,IAAIC;IACJ,MAAM3/E,UAAmG,UAAxF2/E,KAAKwS,YAAYzuB,OAAOpgD,MAAK,CAAC5M,GAAGJ,MAAMI,EAAEmpE,aAAansE,aAAa4C,KAAK5C,qBAA+B,MAAPisE,UAAgB,IAASA,GAAG3/E;IAC7I,OAAOA,WAAWA,QAAQy/E,iBAAiBC,cAAcI,SAAS9/E,QAAQy/E,uBAAkB5iF;AAChG;GACO,SAASu1F,gBAAgBD,aAAaz+E,WAAW+rE,eAAeC;IACnE,IAAIC;IACJ,MAAM3/E,UAAmG,UAAxF2/E,KAAKwS,YAAYzuB,OAAOpgD,MAAK,CAAC5M,GAAGJ,MAAMI,EAAEmpE,aAAansE,aAAa4C,KAAK5C,qBAA+B,MAAPisE,UAAgB,IAASA,GAAG3/E;IAC7I,KAAKA,SACD;IAEJ,MAAMggF,YAAYhgF,QAAQy/E;IAC1B,YAAkB5iF,MAAdmjF,YACOA,YAEJN,gBAAgBA,cAAcI,SAASE,aAAaA;AAC/D;GACO,SAASqS,kBAAkBF,aAAa1S,eAAeC;IAC1D,MACMM,YADUmS,YAAYnyF,QACFy/E;IAC1B,YAAkB5iF,MAAdmjF,YACOA,YAEJN,gBAAgBA,cAAcI,SAASE,aAAaA;AAC/D;GC3HO,SAASsS,aAAaC;IACzB,IAAkB,mBAAPA,OAA2B,SAARA,QAAiBA,IAAIn8E,eAAe,cAC9D,QAAO;IAEX,eAAem8E,IAAIC;IACf,KAAK;KACD,YAA2B31F,MAAvB01F,IAAIA,IAAIC,cAEsB,KAA3Bp1F,OAAOuE,KAAK4wF,KAAKvzF;;IAC5B,KAAK;KACD,OAAkC,KAA3B5B,OAAOuE,KAAK4wF,KAAKvzF;;IAC5B;KACI,QAAO;;AAEnB;GAIO,SAASyzF,cAAcR,OAAOvjD;IACjC,OAAOujD,MAAMvjD;AACjB;GACO,SAASgkD,cAAcT,OAAOvjD,MAAM9sC;SACf/E,MAApBo1F,MAAMO,oBACCP,MAAMA,MAAMO,YAEvBP,MAAMO,YAAY9jD;SACJ7xC,MAAV+E,UACAqwF,MAAMvjD,QAAQ9sC;AAEtB;GAoBO,SAAS+wF,gBAAgBV;SACJp1F,MAApBo1F,MAAMO,oBACCP,MAAMA,MAAMO,YAEvBP,MAAMO,iBAAY31F;AACtB;GAkBO,SAAS+1F,sBAAsBX;IAClC,SAAwBp1F,MAApBo1F,MAAMO,WAGV,OAAOP,MAAMA,MAAMO;AACvB;IDjGA,SAAWb;IAGPA,WAAWA,WAAmB,SAAI,KAAK,UACvCA,WAAWA,WAAkB,QAAI,KAAK;IAGtCA,WAAWA,WAAkB,QAAI,KAAK,SACtCA,WAAWA,WAAmB,SAAI,KAAK;IAGvCA,WAAWA,WAAkB,QAAI,KAAK,SACtCA,WAAWA,WAAoB,UAAI,KAAK;IACxCA,WAAWA,WAAoB,UAAI,KAAK,WACxCA,WAAWA,WAAiB,OAAI,KAAK;IACrCA,WAAWA,WAAmB,SAAI,KAAK,UAQvCA,WAAWA,WAAkB,QAAI,MAAM;IACvCA,WAAWA,WAAmB,SAAI,MAAM,UAExCA,WAAWA,WAAqB,WAAI,MAAM;IAC1CA,WAAWA,WAAqB,WAAI,MAAM,YAC1CA,WAAWA,WAAmB,SAAI,MAAM;IACxCA,WAAWA,WAAmB,SAAI,MAAM;AAC3C,IA9BD,CA8BGA,eAAeA,aAAa,CAAC,KAmBhC,SAAWC;IAMPA,SAASA,SAAiB,SAAI,KAAK,UAMnCA,SAASA,SAAiB,SAAI,KAAK;IAQnCA,SAASA,SAAiB,SAAI,KAAK;AACtC,IArBD,CAqBGA,aAAaA,WAAW,CAAC,KAiB5B,SAAWC;IAIPA,WAAWA,WAAe,KAAI,KAAK,MAKnCA,WAAWA,WAAmB,SAAI,KAAK;IAKvCA,WAAWA,WAAqB,WAAI,KAAK;AAC5C,IAfD,CAeGA,eAAeA,aAAa,CAAC;GE1GzB,MAAMgB;IACT,WAAA/4F,CAAYwF;KACR,IAAIqgF;KACJpmF,KAAKmqE,SAAgC,UAAtBic,KAAKrgF,KAAKokE,gBAA2B,MAAPic,KAAgBA,KAAK;AACtE;IACA,OAAAtmD;KACI,IAAI9/B,KAAKqsC,MACL;KACJ,MAAMzgC,MAAM,IAAI2tF,QAAQ,IAAIC,SAAS;KACrC,KAAK,IAAIpvB,SAASpqE,KAAKmqE,QACnB,IAAIC,MAAMsuB,OACDc,OAAOjzF,SAAS6jE,MAAMsuB,WACvBc,OAAOt4F,KAAKkpE,MAAMsuB;KAClB9sF,IAAI1K,KAAKkpE,MAAMsuB,QACfa,MAAMr4F,KAAKkpE,MAAMsuB,cAKrB,QADAa,MAAMr4F,KAAKkpE,MAAMkc;KACTlc,MAAMj1B;KACV,KAAK;KACL,KAAK;MACIi1B,MAAMwjB,QAAOxjB,MAAMpkC,UACpBp6B,IAAI1K,KAAKkpE,MAAMkc;MACnB;;KACJ,KAAK;MACGlc,MAAMpkC,UACNp6B,IAAI1K,KAAKkpE,MAAMkc;MACnB;;KACJ,KAAK;MACD16E,IAAI1K,KAAKkpE,MAAMkc;;KAK/BtmF,KAAKqsC,OAAO;MAAEzgC;MAAK2tF;MAAOC,QAAQ31F,OAAO8E,OAAO6wF;;AACpD;IAqBA,EAAA7N,CAAGzpF,SAASu3F,OAAOC,yBAAwB;KACvC,IAAID,QAAQ,GACR,QAAO;KACX,IAAIv3F,mBAA+D,mBAAXA,SACpD,QAAO;KACXlC,KAAK8/B;KACL,IAAI13B,OAAOvE,OAAOuE,KAAKlG,UAAUmqC,OAAOrsC,KAAKqsC;KAE7C,IAAIjkC,KAAK3C,SAAS4mC,KAAKzgC,IAAInG,UAAU4mC,KAAKzgC,IAAI8U,MAAK5R,MAAM1G,KAAK7B,SAASuI,MACnE,QAAO;KACX,KAAK4qF,yBAEGtxF,KAAKsY,MAAK/Q,MAAM08B,KAAKktD,MAAMhzF,SAASoJ,MACpC,QAAO;KAIf,IAAI8pF,QAAQ,GACR,QAAO;KAGX,KAAK,MAAMr3F,QAAQiqC,KAAKmtD,QAAQ;MAC5B,MAAMG,QAAQz3F,QAAQE;MACtB,KAAK22F,aAAaY,QACd,QAAO;MACX,SAAwBr2F,MAApBq2F,MAAMV,WACN;MACJ,MAAM7uB,QAAQpqE,KAAKmqE,OAAOpgD,MAAK9L,KAAKA,EAAEqoE,cAAcqT,MAAMV;MAC1D,KAAK7uB,OACD,QAAO;MACX,KAAKpqE,KAAKoqE,MAAMuvB,MAAMA,MAAMV,YAAY7uB,OAAOsvB,uBAAuBD,QAClE,QAAO;AACf;KAEA,KAAK,MAAMrvB,SAASpqE,KAAKmqE,QACrB,SAAoB7mE,MAAhB8mE,MAAMsuB,UAEL14F,KAAKoqE,MAAMloE,QAAQkoE,MAAMkc,YAAYlc,OAAOsvB,uBAAuBD,QACpE,QAAO;KAEf,QAAO;AACX;IACA,KAAArvB,CAAMolB,KAAKplB,OAAOsvB,uBAAuBD;KACrC,IAAIG,WAAWxvB,MAAMpkC;KACrB,QAAQokC,MAAMj1B;KACV,KAAK;MACD,YAAY7xC,MAARksF,MACOplB,MAAMwjB,MACbgM,WACO55F,KAAK65F,QAAQrK,KAAKplB,MAAM0vB,GAAGL,OAAOrvB,MAAMzjC,KAC5C3mC,KAAK+5F,OAAOvK,KAAKplB,MAAM0vB,GAAG1vB,MAAMzjC;;KAC3C,KAAK;MACD,YAAYrjC,MAARksF,MACOplB,MAAMwjB,MACbgM,WACO55F,KAAK65F,QAAQrK,KAAK4I,WAAW4B,OAAOP,SACxCz5F,KAAK+5F,OAAOvK,KAAK4I,WAAW4B;;KACvC,KAAK;MACD,YAAY12F,MAARksF,QAEAoK,WACO55F,KAAK6rF,SAAS2D,KAAKplB,MAAM0vB,KAAKJ,uBAAuBD,SACzDz5F,KAAKkC,QAAQstF,KAAKplB,MAAM0vB,KAAKJ,uBAAuBD;;KAC/D,KAAK;MACD,IAAkB,mBAAPjK,OAA2B,SAARA,KAC1B,QAAO;MACX,IAAIiK,QAAQ,GACR,QAAO;MACX,KAAKz5F,KAAKi6F,QAAQzK,KAAKplB,MAAM8vB,GAAGT,QAC5B,QAAO;MACX,QAAQrvB,MAAMgqB,EAAEj/C;MACZ,KAAK;OACD,OAAOn1C,KAAK65F,QAAQh2F,OAAO8E,OAAO6mF,MAAMplB,MAAMgqB,EAAE0F,GAAGL,OAAOrvB,MAAMgqB,EAAEztD;;MACtE,KAAK;OACD,OAAO3mC,KAAK65F,QAAQh2F,OAAO8E,OAAO6mF,MAAM4I,WAAW4B,OAAOP;;MAC9D,KAAK;OACD,OAAOz5F,KAAK6rF,SAAShoF,OAAO8E,OAAO6mF,MAAMplB,MAAMgqB,EAAE0F,KAAKJ,uBAAuBD;;;KAI7F,QAAO;AACX;IACA,OAAAv3F,CAAQstF,KAAKxtF,MAAM03F,uBAAuBD;KACtC,OAAIC,wBACO13F,KAAKm4F,aAAa3K,KAAKiK,SAE3Bz3F,KAAK2pF,GAAG6D,KAAKiK;AACxB;IACA,QAAA5N,CAAS2D,KAAKxtF,MAAM03F,uBAAuBD;KACvC,KAAKj3F,MAAMC,QAAQ+sF,MACf,QAAO;KACX,IAAIiK,QAAQ,GACR,QAAO;KACX,IAAIC;MACA,KAAK,IAAI38E,IAAI,GAAGA,IAAIyyE,IAAI/pF,UAAUsX,IAAI08E,OAAO18E,KACzC,KAAK/a,KAAKm4F,aAAa3K,IAAIzyE,IAAI08E,QAAQ,IACnC,QAAO;YAGf,KAAK,IAAI18E,IAAI,GAAGA,IAAIyyE,IAAI/pF,UAAUsX,IAAI08E,OAAO18E,KACzC,KAAK/a,KAAK2pF,GAAG6D,IAAIzyE,IAAI08E,QAAQ,IACzB,QAAO;KAEnB,QAAO;AACX;IACA,MAAAM,CAAOvK,KAAKxtF,MAAMo4F;KACd,IAAIC,iBAAiB7K;KACrB,QAAQxtF;KACJ,KAAKo2F,WAAWkC;KAChB,KAAKlC,WAAWmC;KAChB,KAAKnC,WAAWoC;KAChB,KAAKpC,WAAWqC;KAChB,KAAKrC,WAAWsC;MACZ,QAAQN;MACJ,KAAK/B,SAASsC;OACV,OAAkB,YAAXN;;MACX,KAAKhC,SAASuC;OACV,OAAkB,YAAXP,YAAwB5jF,MAAM+4E;;MACzC;OACI,OAAkB,YAAX6K;;;KAEnB,KAAKjC,WAAWyC;MACZ,OAAkB,aAAXR;;KACX,KAAKjC,WAAWtuB;MACZ,OAAkB,YAAXuwB;;KACX,KAAKjC,WAAWvuB;MACZ,OAAO2lB,eAAehwE;;KAC1B,KAAK44E,WAAWxuB;KAChB,KAAKwuB,WAAWzuB;MACZ,OAAkB,YAAX0wB,YAAwB5jF,MAAM+4E;;KACzC;MAMI,OAAkB,YAAX6K,WAAuB7mF,OAAO8qE,UAAUkR;;AAE3D;IACA,OAAAqK,CAAQrK,KAAKxtF,MAAMy3F,OAAOW;KACtB,KAAK53F,MAAMC,QAAQ+sF,MACf,QAAO;KACX,IAAIiK,QAAQ,GACR,QAAO;KACX,IAAIj3F,MAAMC,QAAQ+sF,MACd,KAAK,IAAIzyE,IAAI,GAAGA,IAAIyyE,IAAI/pF,UAAUsX,IAAI08E,OAAO18E,KACzC,KAAK/c,KAAK+5F,OAAOvK,IAAIzyE,IAAI/a,MAAMo4F,WAC3B,QAAO;KACnB,QAAO;AACX;IACA,OAAAH,CAAQr1F,KAAK5C,MAAMy3F;KACf,IAAIrxF,OAAOvE,OAAOuE,KAAKxD;KACvB,QAAQ5C;KACJ,KAAKo2F,WAAW4B;KAChB,KAAK5B,WAAW0C;KAChB,KAAK1C,WAAW2C;KAChB,KAAK3C,WAAW4C;KAChB,KAAK5C,WAAW6C;MACZ,OAAOj7F,KAAK65F,QAAQzxF,KAAKtG,MAAM,GAAG23F,OAAO70F,KAAI+K,KAAKqS,SAASrS,MAAK3N,MAAMy3F;;KAC1E,KAAKrB,WAAWyC;MACZ,OAAO76F,KAAK65F,QAAQzxF,KAAKtG,MAAM,GAAG23F,OAAO70F,KAAI+K,KAAU,UAALA,KAA0B,WAALA,KAAuBA,KAAI3N,MAAMy3F;;KAC5G;MACI,OAAOz5F,KAAK65F,QAAQzxF,MAAMpG,MAAMy3F,OAAOpB,SAASvuB;;AAE5D;;GCxNG,SAASoxB,sBAAsBhD,MAAMl2F;IACxC,QAAQA;IACJ,KAAKq2F,SAASsC;KACV,OAAOzC,KAAKrD;;IAChB,KAAKwD,SAASuC;KACV,OAAO1C,KAAK9qD;;IAChB;KAGI,OAAO8qD,KAAKrvF;;AAExB;GCRO,MAAMsyF;IACT,WAAA56F,CAAYwF;KACR/F,KAAK+F,OAAOA;AAChB;IACA,OAAA+5B;KACI,IAAIsmD;KACJ,SAAkB9iF,MAAdtD,KAAKo7F,MAAoB;MACzBp7F,KAAKo7F,OAAO,CAAC;MACb,MAAMC,cAA0C,UAA3BjV,KAAKpmF,KAAK+F,KAAKokE,gBAA2B,MAAPic,KAAgBA,KAAK;MAC7E,KAAK,MAAMhc,SAASixB,aAChBr7F,KAAKo7F,KAAKhxB,MAAMhoE,QAAQgoE,OACxBpqE,KAAKo7F,KAAKhxB,MAAMouB,YAAYpuB;MAC5BpqE,KAAKo7F,KAAKhxB,MAAMkc,aAAalc;AAErC;AACJ;IAEA,MAAAkf,CAAO0F,WAAW70E,WAAWmhF;KACzB,KAAKtM,WAAW;MACZ,IAAIuM,OAAO/K,gBAAgB8K;MAG3B,MAFY,YAARC,QAA4B,aAARA,SACpBA,OAAOD,UAAUzyF,aACf,IAAInH,MAAM,qBAAqB65F,YAAYv7F,KAAK+F,KAAK+nB,YAAY3T;AAC3E;AACJ;IAUA,IAAA4E,CAAKjR,OAAO5L,SAASuE;KACjBzG,KAAK8/B;KACL,MAAM07D,gBAAgB;KACtB,KAAK,OAAOC,SAASH,cAAcz3F,OAAO4V,QAAQ3L,QAAQ;MACtD,MAAMs8D,QAAQpqE,KAAKo7F,KAAKK;MACxB,KAAKrxB,OAAO;OACR,KAAK3jE,QAAQi1F,qBACT,MAAM,IAAIh6F,MAAM,qCAAqC1B,KAAK+F,KAAK+nB,wCAAwC2tE;OAC3G;AACJ;MACA,MAAMnV,YAAYlc,MAAMkc;MAExB,IAAIpmD;MACJ,IAAIkqC,MAAMsuB,OAAO;OACb,IAAkB,SAAd4C,cAAsC,WAAflxB,MAAMj1B,QAAoC,gCAAjBi1B,MAAM0vB,IAAI,KAC1D;OAGJ,IAAI0B,cAAcj1F,SAAS6jE,MAAMsuB,QAC7B,MAAM,IAAIh3F,MAAM,wCAAwC0oE,MAAMsuB,aAAa14F,KAAK+F,KAAK+nB;OACzF0tE,cAAct6F,KAAKkpE,MAAMsuB,QACzBx4D,SAASh+B,QAAQkoE,MAAMsuB,SAAS;QAC5BO,WAAW3S;;AAEnB,aAEIpmD,SAASh+B;MAGb,IAAkB,SAAdkoE,MAAMj1B,MAAe;OACrB,IAAkB,SAAdmmD,WACA;OAGJt7F,KAAKspF,OAAOmH,aAAa6K,YAAYlxB,MAAMhoE,MAAMk5F;OAEjD,MAAMK,WAAWz7D,OAAOomD;OAExB,KAAK,OAAOsV,YAAYC,iBAAiBh4F,OAAO4V,QAAQ6hF,YAAY;QAGhE,IAAIz2D;QACJ,QAHA7kC,KAAKspF,OAAwB,SAAjBuS,cAAuBzxB,MAAMhoE,OAAO,cAAc,OAGtDgoE,MAAMgqB,EAAEj/C;QACZ,KAAK;SACDtQ,MAAMulC,MAAMgqB,EAAE0F,IAAIgC,iBAAiBD,cAAcp1F;SACjD;;QACJ,KAAK;SAED,IADAo+B,MAAM7kC,KAAK+7F,KAAK3xB,MAAMgqB,EAAE0F,KAAK+B,cAAczxB,MAAMhoE,MAAMqE,QAAQi1F;UACnD,MAAR72D,KACA;SACJ;;QACJ,KAAK;SACDA,MAAM7kC,KAAK+5F,OAAO8B,cAAczxB,MAAMgqB,EAAE0F,GAAG1vB,MAAMgqB,EAAEztD,GAAGyjC,MAAMhoE;;QAGpEpC,KAAKspF,YAAehmF,MAARuhC,KAAmBulC,MAAMhoE,OAAO,cAAcy5F;QAE1D,IAAI1sF,MAAMysF;QACNxxB,MAAM8vB,KAAK9B,WAAWyC,SACtB1rF,MAAa,UAAPA,OAA8B,WAAPA,OAAyBA,MAC1DA,MAAMnP,KAAK+5F,OAAO5qF,KAAKi7D,MAAM8vB,GAAG7B,SAASvuB,QAAQM,MAAMhoE,MAAMyG;QAC7D8yF,SAASxsF,OAAO01B;AACpB;AACJ,aACK,IAAIulC,MAAMpkC,QAAQ;OACnB,IAAkB,SAAds1D,WACA;OAEJt7F,KAAKspF,OAAO9mF,MAAMC,QAAQ64F,YAAYlxB,MAAMhoE,MAAMk5F;OAElD,MAAMU,WAAW97D,OAAOomD;OAExB,KAAK,MAAM2V,YAAYX,WAAW;QAE9B,IAAIz2D;QACJ,QAFA7kC,KAAKspF,OAAoB,SAAb2S,UAAmB7xB,MAAMhoE,MAAM,OAEnCgoE,MAAMj1B;QACV,KAAK;SACDtQ,MAAMulC,MAAM0vB,IAAIgC,iBAAiBG,UAAUx1F;SAC3C;;QACJ,KAAK;SAED,IADAo+B,MAAM7kC,KAAK+7F,KAAK3xB,MAAM0vB,KAAKmC,UAAU7xB,MAAMhoE,MAAMqE,QAAQi1F;UAC7C,MAAR72D,KACA;SACJ;;QACJ,KAAK;SACDA,MAAM7kC,KAAK+5F,OAAOkC,UAAU7xB,MAAM0vB,GAAG1vB,MAAMzjC,GAAGyjC,MAAMhoE;;QAG5DpC,KAAKspF,YAAehmF,MAARuhC,KAAmBulC,MAAMhoE,MAAMk5F,YAC3CU,SAAS96F,KAAK2jC;AAClB;AACJ,aAEI,QAAQulC,MAAMj1B;MACV,KAAK;OACD,IAAkB,SAAdmmD,aAA4C,2BAAtBlxB,MAAM0vB,IAAIhsE,UAAqC;QACrE9tB,KAAKspF,YAAuBhmF,MAAhB8mE,MAAMsuB,OAAqBtuB,MAAMhoE,OAAO,mBAAmB;QACvE;AACJ;OACA89B,OAAOomD,aAAalc,MAAM0vB,IAAIgC,iBAAiBR,WAAW70F,SAASy5B,OAAOomD;OAC1E;;MACJ,KAAK;OACD,IAAkB,SAAdgV,WACA;OACJ,IAAIz2D,MAAM7kC,KAAK+7F,KAAK3xB,MAAM0vB,KAAKwB,WAAWlxB,MAAMhoE,MAAMqE,QAAQi1F;OAC9D,KAAY,MAAR72D,KACA;OACJ3E,OAAOomD,aAAazhD;OACpB;;MACJ,KAAK;OACD,IAAkB,SAAdy2D,WACA;OACJp7D,OAAOomD,aAAatmF,KAAK+5F,OAAOuB,WAAWlxB,MAAM0vB,GAAG1vB,MAAMzjC,GAAGyjC,MAAMhoE;;AAInF;AACJ;IAMA,IAAA25F,CAAK/5F,MAAMk0B,MAAM/b,WAAWuhF;KAGxB,IAFe,+BAAX15F,KAAK,OACL,GAAAsnF,OAAA,IAAgB,SAATpzD,QAA0B,iBAATA,MAAuB,yBAAyBl2B,KAAK+F,KAAK+nB,YAAY3T,mBAAmBnY,KAAK;KAC7G,SAATk0B,MAEA,OAAO;KACX,eAAeA;KACX,KAAK;MAED,QADA,GAAAozD,OAAA,IAAO91E,OAAO8qE,UAAUpoD,OAAO,yBAAyBl2B,KAAK+F,KAAK+nB,YAAY3T,oDAAoD+b;MAC3HA;;KACX,KAAK;MACD,IAAIgmE,gBAAgBhmE;MAChBl0B,KAAK,MAAMk0B,KAAK1H,UAAU,GAAGxsB,KAAK,GAAGyD,YAAYzD,KAAK,OAEtDk6F,gBAAgBhmE,KAAK1H,UAAUxsB,KAAK,GAAGyD;MAC3C,IAAI02F,aAAan6F,KAAK,GAAGk6F;MACzB,aAA0B,MAAfC,eAA8BT,0BAGzC,GAAApS,OAAA,IAA4B,mBAAd6S,YAAwB,yBAAyBn8F,KAAK+F,KAAK+nB,YAAY3T,mBAAmBnY,KAAK,wBAAwBk0B;MAC9HimE;;MAEf,GAAA7S,OAAA,KAAO,GAAO,yBAAyBtpF,KAAK+F,KAAK+nB,YAAY3T,kDAAkD+b;AACnH;IACA,MAAA6jE,CAAO7jE,MAAMl0B,MAAMo4F,UAAUjgF;KACzB,IAAIlM;KACJ;MACI,QAAQjM;MAGJ,KAAKo2F,WAAWxuB;MAChB,KAAKwuB,WAAWzuB;OACZ,IAAa,SAATzzC,MACA,OAAO;OACX,IAAa,UAATA,MACA,OAAO1iB,OAAO4oF;OAClB,IAAa,eAATlmE,MACA,OAAO1iB,OAAOC;OAClB,IAAa,gBAATyiB,MACA,OAAO1iB,OAAO6oF;OAClB,IAAa,OAATnmE,MAAa;QACbjoB,IAAI;QACJ;AACJ;OACA,IAAmB,mBAARioB,QAAoBA,KAAKpxB,OAAOW,WAAWywB,KAAKzwB,QAAQ;QAC/DwI,IAAI;QACJ;AACJ;OACA,IAAmB,mBAARioB,QAAmC,mBAARA,MAClC;OAEJ,IAAI8gE,QAAQxjF,OAAO0iB;OACnB,IAAI1iB,OAAOiD,MAAMugF,QAAQ;QACrB/oF,IAAI;QACJ;AACJ;OACA,KAAKuF,OAAOyD,SAAS+/E,QAAQ;QAEzB/oF,IAAI;QACJ;AACJ;OAGA,OAFIjM,QAAQo2F,WAAWzuB,UACnB,GAAA2f,OAAA,IAAc0N,QACXA;;MAEX,KAAKoB,WAAW4B;MAChB,KAAK5B,WAAW0C;MAChB,KAAK1C,WAAW2C;MAChB,KAAK3C,WAAW4C;MAChB,KAAK5C,WAAW6C;OACZ,IAAa,SAAT/kE,MACA,OAAO;OACX,IAAIkgE;OAWJ,IAVmB,mBAARlgE,OACPkgE,QAAQlgE,OACM,OAATA,OACLjoB,IAAI,iBACgB,mBAARioB,SACRA,KAAKpxB,OAAOW,WAAWywB,KAAKzwB,SAC5BwI,IAAI,qBAEJmoF,QAAQ5iF,OAAO0iB;YAET5yB,MAAV8yF,OACA;OAKJ,OAJIp0F,QAAQo2F,WAAW6C,UACnB,GAAA3R,OAAA,IAAa8M,UAEb,GAAA9M,OAAA,IAAY8M;OACTA;;MAEX,KAAKgC,WAAWoC;MAChB,KAAKpC,WAAWqC;MAChB,KAAKrC,WAAWsC;OACZ,IAAa,SAATxkE,MACA,OAAOglE,sBAAsBnG,OAAOJ,MAAMyF;OAC9C,IAAmB,mBAARlkE,QAAmC,mBAARA,MAClC;OACJ,OAAOglE,sBAAsBnG,OAAOviF,KAAK0jB,OAAOkkE;;MACpD,KAAKhC,WAAWmC;MAChB,KAAKnC,WAAWkC;OACZ,IAAa,SAATpkE,MACA,OAAOglE,sBAAsBxG,QAAQC,MAAMyF;OAC/C,IAAmB,mBAARlkE,QAAmC,mBAARA,MAClC;OACJ,OAAOglE,sBAAsBxG,QAAQliF,KAAK0jB,OAAOkkE;;MAErD,KAAKhC,WAAWyC;OACZ,IAAa,SAAT3kE,MACA,QAAO;OACX,IAAoB,oBAATA,MACP;OACJ,OAAOA;;MAEX,KAAKkiE,WAAWtuB;OACZ,IAAa,SAAT5zC,MACA,OAAO;OACX,IAAoB,mBAATA,MAAmB;QAC1BjoB,IAAI;QACJ;AACJ;OACA;QACIitB,mBAAmBhF;AACvB,SACA,OAAOjoB;QACHA,IAAI;QACJ;AACJ;OACA,OAAOioB;;MAGX,KAAKkiE,WAAWvuB;OACZ,IAAa,SAAT3zC,QAA0B,OAATA,MACjB,OAAO,IAAI1W,WAAW;OAC1B,IAAoB,mBAAT0W,MACP;OACJ,OAAO06D,aAAa16D;;AAEhC,OACA,OAAOjwB;MACHgI,IAAIhI,MAAM/D;AACd;KACAlC,KAAKspF,QAAO,GAAOnvE,aAAalM,IAAI,QAAQA,IAAI,KAAKioB;AACzD;;GC7SG,MAAMomE;IACT,WAAA/7F,CAAYwF;KACR,IAAIqgF;KACJpmF,KAAKmqE,SAAgC,UAAtBic,KAAKrgF,KAAKokE,gBAA2B,MAAPic,KAAgBA,KAAK;AACtE;IAIA,KAAA9hF,CAAMpC,SAASuE;KACX,MAAMyvB,OAAO,CAAC,GAAG3W,SAASrd;KAC1B,KAAK,MAAMkoE,SAASpqE,KAAKmqE,QAAQ;MAE7B,KAAKC,MAAMsuB,OAAO;OACd,IAAI4C,YAAYt7F,KAAKoqE,MAAMA,OAAO7qD,OAAO6qD,MAAMkc,YAAY7/E;YACzCnD,MAAdg4F,cACAplE,KAAKzvB,QAAQ81F,oBAAoBnyB,MAAMhoE,OAAOgoE,MAAMouB,YAAY8C;OACpE;AACJ;MAEA,MAAM3B,QAAQp6E,OAAO6qD,MAAMsuB;MAC3B,IAAIiB,MAAMV,cAAc7uB,MAAMkc,WAC1B;MACJ,MAAMsH,MAAoB,YAAdxjB,MAAMj1B,QAAkC,UAAdi1B,MAAMj1B,OACtCtxC,OAAOC,OAAOD,OAAOC,OAAO,CAAC,GAAG2C,UAAU;OAAE+1F,oBAAmB;WAAU/1F;MAC/E,IAAI60F,YAAYt7F,KAAKoqE,MAAMA,OAAOuvB,MAAMvvB,MAAMkc,YAAYsH;OAC1D,GAAAtE,OAAA,SAAqBhmF,MAAdg4F,YACPplE,KAAKzvB,QAAQ81F,oBAAoBnyB,MAAMhoE,OAAOgoE,MAAMouB,YAAY8C;AACpE;KACA,OAAOplE;AACX;IACA,KAAAk0C,CAAMA,OAAO/hE,OAAO5B;KAChB,IAAI60F;KACJ,IAAkB,SAAdlxB,MAAMj1B,MAAe;OACrB,GAAAm0C,OAAA,IAAuB,mBAATjhF,SAA+B,SAAVA;MACnC,MAAMo0F,UAAU,CAAC;MACjB,QAAQryB,MAAMgqB,EAAEj/C;MACZ,KAAK;OACD,KAAK,OAAOunD,UAAUC,eAAe94F,OAAO4V,QAAQpR,QAAQ;QACxD,MAAMw8B,MAAM7kC,KAAK+5F,OAAO3vB,MAAMgqB,EAAE0F,GAAG6C,YAAYvyB,MAAMhoE,OAAM,IAAO;SAClE,GAAAknF,OAAA,SAAehmF,MAARuhC,MACP43D,QAAQC,SAAS7zF,cAAcg8B;AACnC;OACA;;MACJ,KAAK;OACD,MAAM+zD,cAAcxuB,MAAMgqB,EAAE0F;OAC5B,KAAK,OAAO4C,UAAUC,eAAe94F,OAAO4V,QAAQpR,QAAQ;QACxD,MAAMw8B,MAAM7kC,KAAKkC,QAAQ02F,aAAa+D,YAAYvyB,MAAMhoE,MAAMqE;SAC9D,GAAA6iF,OAAA,SAAehmF,MAARuhC,MACP43D,QAAQC,SAAS7zF,cAAcg8B;AACnC;OACA;;MACJ,KAAK;OACD,MAAM+3D,WAAWxyB,MAAMgqB,EAAE0F;OACzB,KAAK,OAAO4C,UAAUC,eAAe94F,OAAO4V,QAAQpR,QAAQ;SACxD,GAAAihF,OAAA,SAAsBhmF,MAAfq5F,cAAiD,mBAAdA;QAC1C,MAAM93D,MAAM7kC,KAAK+7F,KAAKa,UAAUD,YAAYvyB,MAAMhoE,OAAM,IAAO,GAAMqE,QAAQo2F;SAC7E,GAAAvT,OAAA,SAAehmF,MAARuhC,MACP43D,QAAQC,SAAS7zF,cAAcg8B;AACnC;;OAGJp+B,QAAQ+1F,qBAAqB34F,OAAOuE,KAAKq0F,SAASh3F,SAAS,OAC3D61F,YAAYmB;AACpB,YACK,IAAIryB,MAAMpkC,QAAQ;OACnB,GAAAsjD,OAAA,IAAO9mF,MAAMC,QAAQ4F;MACrB,MAAMy0F,UAAU;MAChB,QAAQ1yB,MAAMj1B;MACV,KAAK;OACD,KAAK,IAAIp4B,IAAI,GAAGA,IAAI1U,MAAM5C,QAAQsX,KAAK;QACnC,MAAM8nB,MAAM7kC,KAAK+5F,OAAO3vB,MAAM0vB,GAAGzxF,MAAM0U,IAAIqtD,MAAMhoE,MAAMgoE,MAAMwjB,MAAK;SAClE,GAAAtE,OAAA,SAAehmF,MAARuhC,MACPi4D,QAAQ57F,KAAK2jC;AACjB;OACA;;MACJ,KAAK;OACD,MAAM+3D,WAAWxyB,MAAM0vB;OACvB,KAAK,IAAI/8E,IAAI,GAAGA,IAAI1U,MAAM5C,QAAQsX,KAAK;SACnC,GAAAusE,OAAA,SAAoBhmF,MAAb+E,MAAM0U,MAAuC,mBAAZ1U,MAAM0U;QAC9C,MAAM8nB,MAAM7kC,KAAK+7F,KAAKa,UAAUv0F,MAAM0U,IAAIqtD,MAAMhoE,MAAMgoE,MAAMwjB,MAAK,GAAMnnF,QAAQo2F;SAC/E,GAAAvT,OAAA,SAAehmF,MAARuhC,MACPi4D,QAAQ57F,KAAK2jC;AACjB;OACA;;MACJ,KAAK;OACD,MAAM+zD,cAAcxuB,MAAM0vB;OAC1B,KAAK,IAAI/8E,IAAI,GAAGA,IAAI1U,MAAM5C,QAAQsX,KAAK;QACnC,MAAM8nB,MAAM7kC,KAAKkC,QAAQ02F,aAAavwF,MAAM0U,IAAIqtD,MAAMhoE,MAAMqE;SAC5D,GAAA6iF,OAAA,SAAehmF,MAARuhC,MACPi4D,QAAQ57F,KAAK2jC;AACjB;;OAIJp+B,QAAQ+1F,qBAAqBM,QAAQr3F,SAAS,KAAKgB,QAAQ+1F,uBAC3DlB,YAAYwB;AACpB,YAEI,QAAQ1yB,MAAMj1B;KACV,KAAK;MACDmmD,YAAYt7F,KAAK+5F,OAAO3vB,MAAM0vB,GAAGzxF,OAAO+hE,MAAMhoE,MAAMgoE,MAAMwjB,KAAKnnF,QAAQ+1F;MACvE;;KACJ,KAAK;MACDlB,YAAYt7F,KAAK+7F,KAAK3xB,MAAM0vB,KAAKzxF,OAAO+hE,MAAMhoE,MAAMgoE,MAAMwjB,KAAKnnF,QAAQ+1F,mBAAmB/1F,QAAQo2F;MAClG;;KACJ,KAAK;MACDvB,YAAYt7F,KAAKkC,QAAQkoE,MAAM0vB,KAAKzxF,OAAO+hE,MAAMhoE,MAAMqE;;KAInE,OAAO60F;AACX;IAIA,IAAAS,CAAK/5F,MAAMqG,OAAO8R,WAAW4iF,UAAUP,mBAAmBK;KACtD,IAAe,+BAAX76F,KAAK,IACL,OAAQw6F,qBAAsBO,WAAuB,YAAZz5F;KAC7C,SAAcA,MAAV+E;MAIJ,IAAc,MAAVA,SAAgBm0F,qBAAsBO,UAK1C,QAFA,GAAAzT,OAAA,IAAuB,mBAATjhF;OACd,GAAAihF,OAAA,IAAO91E,OAAO8qE,UAAUj2E,SACpBw0F,kBAAkB76F,KAAK,GAAG6a,eAAexU,SAElCA,QACPrG,KAAK,KAEEA,KAAK,KAAKA,KAAK,GAAGqG,SACtBrG,KAAK,GAAGqG;aAdX,GAAAihF,OAAA,IAAOyT;AAef;IACA,OAAA76F,CAAQF,MAAMqG,OAAO8R,WAAW1T;KAC5B,YAAcnD,MAAV+E,QACO5B,QAAQ+1F,oBAAoB,YAAOl5F,IACvCtB,KAAKg7F,kBAAkB30F,OAAO5B;AACzC;IACA,MAAAszF,CAAO/3F,MAAMqG,OAAO8R,WAAW4iF,UAAUP;KACrC,SAAcl5F,MAAV+E,OAEA,aADA,GAAAihF,OAAA,IAAOyT;KAGX,MAAME,KAAKT,qBAAqBO;KAEhC,QAAQ/6F;KAEJ,KAAKo2F,WAAW4B;KAChB,KAAK5B,WAAW2C;KAChB,KAAK3C,WAAW4C;MACZ,OAAc,MAAV3yF,QACO40F,KAAK,SAAI35F,MACpB,GAAAgmF,OAAA,IAAYjhF,QACLA;;KACX,KAAK+vF,WAAW0C;KAChB,KAAK1C,WAAW6C;MACZ,OAAc,MAAV5yF,QACO40F,KAAK,SAAI35F,MACpB,GAAAgmF,OAAA,IAAajhF,QACNA;;KAGX,KAAK+vF,WAAWzuB;OACZ,GAAA2f,OAAA,IAAcjhF;;KAClB,KAAK+vF,WAAWxuB;MACZ,OAAc,MAAVvhE,QACO40F,KAAK,SAAI35F,MACpB,GAAAgmF,OAAA,IAAuB,mBAATjhF;MACVmL,OAAOiD,MAAMpO,SACN,QACPA,UAAUmL,OAAOC,oBACV,aACPpL,UAAUmL,OAAO6oF,oBACV,cACJh0F;;KAEX,KAAK+vF,WAAWtuB;MACZ,OAAc,OAAVzhE,QACO40F,KAAK,UAAK35F,MACrB,GAAAgmF,OAAA,IAAuB,mBAATjhF;MACPA;;KAEX,KAAK+vF,WAAWyC;MACZ,QAAc,MAAVxyF,SACO40F,WAAa35F,MACxB,GAAAgmF,OAAA,IAAuB,oBAATjhF;MACPA;;KAEX,KAAK+vF,WAAWkC;KAChB,KAAKlC,WAAWmC;OACZ,GAAAjR,OAAA,IAAuB,mBAATjhF,SAAqC,mBAATA,SAAqC,mBAATA;MACtE,IAAI60F,QAAQxI,QAAQliF,KAAKnK;MACzB,IAAI60F,MAAM1I,aAAayI,IACnB;MACJ,OAAOC,MAAMr0F;;KAEjB,KAAKuvF,WAAWoC;KAChB,KAAKpC,WAAWqC;KAChB,KAAKrC,WAAWsC;OACZ,GAAApR,OAAA,IAAuB,mBAATjhF,SAAqC,mBAATA,SAAqC,mBAATA;MACtE,IAAI6vF,OAAOnD,OAAOviF,KAAKnK;MACvB,IAAI6vF,KAAK1D,aAAayI,IAClB;MACJ,OAAO/E,KAAKrvF;;KAGhB,KAAKuvF,WAAWvuB;MAEZ,QADA,GAAAyf,OAAA,IAAOjhF,iBAAiBmX,aACnBnX,MAAM6I,aAEJggF,aAAa7oF,SADT40F,KAAK,UAAK35F;;AAGjC;;GC1NG,SAAS65F,wBAAwBn7F,MAAMo4F,WAAW/B,SAASvuB;IAC9D,QAAQ9nE;IACJ,KAAKo2F,WAAWyC;KACZ,QAAO;;IACX,KAAKzC,WAAWkC;IAChB,KAAKlC,WAAWmC;KACZ,OAAOW,sBAAsBxG,QAAQC,MAAMyF;;IAC/C,KAAKhC,WAAWoC;IAChB,KAAKpC,WAAWqC;IAChB,KAAKrC,WAAWsC;KACZ,OAAOQ,sBAAsBnG,OAAOJ,MAAMyF;;IAC9C,KAAKhC,WAAWxuB;IAChB,KAAKwuB,WAAWzuB;KACZ,OAAO;;IACX,KAAKyuB,WAAWvuB;KACZ,OAAO,IAAIrqD,WAAW;;IAC1B,KAAK44E,WAAWtuB;KACZ,OAAO;;IACX;KAMI,OAAO;;AAEnB;GCvBO,MAAMszB;IACT,WAAA78F,CAAYwF;KACR/F,KAAK+F,OAAOA;AAChB;IACA,OAAA+5B;KACI,IAAIsmD;KACJ,KAAKpmF,KAAKq9F,gBAAgB;MACtB,MAAMhC,cAA0C,UAA3BjV,KAAKpmF,KAAK+F,KAAKokE,gBAA2B,MAAPic,KAAgBA,KAAK;MAC7EpmF,KAAKq9F,iBAAiB,IAAIn1F,IAAImzF,YAAYz2F,KAAIwlE,SAAS,EAACA,MAAM8lB,IAAI9lB;AACtE;AACJ;IAUA,IAAArrD,CAAKF,QAAQ3c,SAASuE,SAAShB;KAC3BzF,KAAK8/B;KACL,MAAMntB,WAAiBrP,MAAXmC,SAAuBoZ,OAAOoQ,MAAMpQ,OAAOm2D,MAAMvvE;KAC7D,MAAOoZ,OAAOm2D,MAAMriE,OAAK;MAErB,OAAOq9E,SAASC,YAAYpxE,OAAOojD,OAAOmI,QAAQpqE,KAAKq9F,eAAex8F,IAAImvF;MAC1E,KAAK5lB,OAAO;OACR,IAAIkzB,IAAI72F,QAAQ2uF;OAChB,IAAS,WAALkI,GACA,MAAM,IAAI57F,MAAM,iBAAiBsuF,sBAAsBC,iBAAiBjwF,KAAK+F,KAAK+nB;OACtF,IAAIpP,IAAIG,OAAOg3E,KAAK5F;QACV,MAANqN,OACO,MAANA,IAAa,0BAAoBvN,SAASuN,GAAGt9F,KAAK+F,KAAK+nB,UAAU5rB,SAAS8tF,SAASC,UAAUvxE;OAClG;AACJ;MAEA,IAAIwhB,SAASh+B,SAAS03F,WAAWxvB,MAAMpkC,QAAQsgD,YAAYlc,MAAMkc;MAWjE,QATIlc,MAAMsuB,UACNx4D,SAASA,OAAOkqC,MAAMsuB,QAElBx4D,OAAO+4D,cAAc3S,cACrBpmD,SAASh+B,QAAQkoE,MAAMsuB,SAAS;OAC5BO,WAAW3S;WAIflc,MAAMj1B;MACV,KAAK;MACL,KAAK;OACD,IAAI2kD,IAAkB,UAAd1vB,MAAMj1B,OAAiBijD,WAAW4B,QAAQ5vB,MAAM0vB,GACpDnzD,IAAkB,YAAdyjC,MAAMj1B,OAAmBi1B,MAAMzjC,SAAIrjC;OAC3C,IAAIs2F,UAAU;QACV,IAAIt3D,MAAMpC,OAAOomD;QACjB,IAAI2J,YAAY,0BAASgG,mBAAmB6D,KAAK1B,WAAWtuB,UAAUgwB,KAAK1B,WAAWvuB,OAAO;SACzF,IAAI57D,IAAI4Q,OAAO62E,WAAW72E,OAAOm2D;SACjC,MAAOn2D,OAAOm2D,MAAM/mE,KAChBq0B,IAAIphC,KAAKlB,KAAK+5F,OAAOl7E,QAAQi7E,GAAGnzD;AACxC,eAEIrE,IAAIphC,KAAKlB,KAAK+5F,OAAOl7E,QAAQi7E,GAAGnzD;AACxC,cAEIzG,OAAOomD,aAAatmF,KAAK+5F,OAAOl7E,QAAQi7E,GAAGnzD;OAC/C;;MACJ,KAAK;OACD,IAAIizD,UAAU;QACV,IAAIt3D,MAAMpC,OAAOomD,YACb1vD,MAAMwzC,MAAM0vB,IAAIyD,mBAAmB1+E,QAAQA,OAAO62E,UAAUjvF;QAChE67B,IAAIphC,KAAK01B;AACb,cAEIsJ,OAAOomD,aAAalc,MAAM0vB,IAAIyD,mBAAmB1+E,QAAQA,OAAO62E,UAAUjvF,SAASy5B,OAAOomD;OAC9F;;MACJ,KAAK;OACD,KAAKkX,QAAQC,UAAUz9F,KAAK09F,SAAStzB,OAAOvrD,QAAQpY;OAEpDy5B,OAAOomD,WAAWkX,UAAUC;;AAGxC;AACJ;IAIA,QAAAC,CAAStzB,OAAOvrD,QAAQpY;KACpB,IAEI0I,KACA01B,KAHAp/B,SAASoZ,OAAO62E,UAChB/iF,MAAMkM,OAAOm2D,MAAMvvE;KAGvB,MAAOoZ,OAAOm2D,MAAMriE,OAAK;MACrB,KAAKq9E,SAASC,YAAYpxE,OAAOojD;MACjC,QAAQ+tB;MACJ,KAAK;OAEG7gF,MADAi7D,MAAM8vB,KAAK9B,WAAWyC,OAChBh8E,OAAO63E,OAAO7tF,aAGd7I,KAAK+5F,OAAOl7E,QAAQurD,MAAM8vB,GAAG7B,SAASvuB;OAChD;;MACJ,KAAK;OACD,QAAQM,MAAMgqB,EAAEj/C;OACZ,KAAK;QACDtQ,MAAM7kC,KAAK+5F,OAAOl7E,QAAQurD,MAAMgqB,EAAE0F,GAAG1vB,MAAMgqB,EAAEztD;QAC7C;;OACJ,KAAK;QACD9B,MAAMhmB,OAAOu3E;QACb;;OACJ,KAAK;QACDvxD,MAAMulC,MAAMgqB,EAAE0F,IAAIyD,mBAAmB1+E,QAAQA,OAAO62E,UAAUjvF;;OAGtE;;MACJ;OACI,MAAM,IAAI/E,MAAM,iBAAiBsuF,sBAAsBC,8BAA8BjwF,KAAK+F,KAAK+nB,YAAYs8C,MAAMhoE;;AAE7H;KACA,SAAYkB,MAAR6L,KAAmB;MACnB,IAAIwuF,SAASR,wBAAwB/yB,MAAM8vB;MAC3C/qF,MAAMi7D,MAAM8vB,KAAK9B,WAAWyC,OAAO8C,OAAO90F,aAAa80F;AAC3D;KACA,SAAYr6F,MAARuhC,KACA,QAAQulC,MAAMgqB,EAAEj/C;KACZ,KAAK;MACDtQ,MAAMs4D,wBAAwB/yB,MAAMgqB,EAAE0F,GAAG1vB,MAAMgqB,EAAEztD;MACjD;;KACJ,KAAK;MACD9B,MAAM;MACN;;KACJ,KAAK;MACDA,MAAMulC,MAAMgqB,EAAE0F,IAAI9tF;;KAG9B,OAAO,EAACmD,KAAK01B;AACjB;IACA,MAAAk1D,CAAOl7E,QAAQ7c,MAAMo4F;KACjB,QAAQp4F;KACJ,KAAKo2F,WAAW4B;MACZ,OAAOn7E,OAAOu3E;;KAClB,KAAKgC,WAAWtuB;MACZ,OAAOjrD,OAAOqoB;;KAClB,KAAKkxD,WAAWyC;MACZ,OAAOh8E,OAAO63E;;KAClB,KAAK0B,WAAWxuB;MACZ,OAAO/qD,OAAOo4E;;KAClB,KAAKmB,WAAWzuB;MACZ,OAAO9qD,OAAOm4E;;KAClB,KAAKoB,WAAWoC;MACZ,OAAOU,sBAAsBr8E,OAAO03E,SAAS6D;;KACjD,KAAKhC,WAAWkC;MACZ,OAAOY,sBAAsBr8E,OAAO23E,UAAU4D;;KAClD,KAAKhC,WAAWmC;MACZ,OAAOW,sBAAsBr8E,OAAOi4E,WAAWsD;;KACnD,KAAKhC,WAAW0C;MACZ,OAAOj8E,OAAO83E;;KAClB,KAAKyB,WAAWvuB;MACZ,OAAOhrD,OAAOooD;;KAClB,KAAKmxB,WAAW6C;MACZ,OAAOp8E,OAAO62E;;KAClB,KAAK0C,WAAW2C;MACZ,OAAOl8E,OAAOg4E;;KAClB,KAAKuB,WAAWqC;MACZ,OAAOS,sBAAsBr8E,OAAOk4E,YAAYqD;;KACpD,KAAKhC,WAAW4C;MACZ,OAAOn8E,OAAOw3E;;KAClB,KAAK+B,WAAWsC;MACZ,OAAOQ,sBAAsBr8E,OAAO43E,UAAU2D;;AAE1D;;GCxKG,MAAMwD;IACT,WAAAr9F,CAAYwF;KACR/F,KAAK+F,OAAOA;AAChB;IACA,OAAA+5B;KACI,KAAK9/B,KAAKmqE,QAAQ;MACd,MAAMkxB,cAAcr7F,KAAK+F,KAAKokE,SAASnqE,KAAK+F,KAAKokE,OAAOt7D,WAAW;MACnE7O,KAAKmqE,SAASkxB,YAAYt9C,MAAK,CAAC7/B,GAAGC,MAAMD,EAAEgyE,KAAK/xE,EAAE+xE;AACtD;AACJ;IAIA,KAAA5rF,CAAMpC,SAASkuF,QAAQ3pF;KACnBzG,KAAK8/B;KACL,KAAK,MAAMsqC,SAASpqE,KAAKmqE,QAAQ;MAC7B,IAAI9hE,OACJw1F,aACAjE,WAAWxvB,MAAMpkC,QAAQsgD,YAAYlc,MAAMkc;MAE3C,IAAIlc,MAAMsuB,OAAO;OACb,MAAMiB,QAAQz3F,QAAQkoE,MAAMsuB;OAC5B,IAAIiB,MAAMV,cAAc3S,WACpB;OACJj+E,QAAQsxF,MAAMrT,YACduX,eAAc;AAClB,aAEIx1F,QAAQnG,QAAQokF,YAChBuX,eAAc;MAGlB,QAAQzzB,MAAMj1B;MACV,KAAK;MACL,KAAK;OACD,IAAI2kD,IAAkB,UAAd1vB,MAAMj1B,OAAiBijD,WAAW4B,QAAQ5vB,MAAM0vB;OACxD,IAAIF,UAEA,KADA,GAAAtQ,OAAA,IAAO9mF,MAAMC,QAAQ4F,SACjBuxF,YAAYtB,WAAWwF,QACvB99F,KAAK+9F,OAAO3N,QAAQ0J,GAAG1vB,MAAM8lB,IAAI7nF,aAEjC,KAAK,MAAMuT,QAAQvT,OACfrI,KAAK+5F,OAAO3J,QAAQ0J,GAAG1vB,MAAM8lB,IAAIt0E,OAAM,cAEhCtY,MAAV+E,SACL;OAAAihF,OAAA,IAAOlf,MAAMwjB,OAEb5tF,KAAK+5F,OAAO3J,QAAQ0J,GAAG1vB,MAAM8lB,IAAI7nF,OAAOw1F,eAAezzB,MAAMwjB;OACjE;;MACJ,KAAK;OACD,IAAIgM,UAAU;SACV,GAAAtQ,OAAA,IAAO9mF,MAAMC,QAAQ4F;QACrB,KAAK,MAAMuT,QAAQvT,OACfrI,KAAKkC,QAAQkuF,QAAQ3pF,SAAS2jE,MAAM0vB,KAAK1vB,MAAM8lB,IAAIt0E;AAC3D,cAEI5b,KAAKkC,QAAQkuF,QAAQ3pF,SAAS2jE,MAAM0vB,KAAK1vB,MAAM8lB,IAAI7nF;OAEvD;;MACJ,KAAK;QACD,GAAAihF,OAAA,IAAuB,mBAATjhF,SAA+B,SAAVA;OACnC,KAAK,OAAO8G,KAAK01B,QAAQhhC,OAAO4V,QAAQpR,QACpCrI,KAAK09F,SAAStN,QAAQ3pF,SAAS2jE,OAAOj7D,KAAK01B;;AAG3D;KACA,IAAIy4D,IAAI72F,QAAQ0wF;MACN,MAANmG,OACO,MAANA,IAAa,0BAAoBnN,UAAUmN,GAAGt9F,KAAK+F,KAAK+nB,UAAU5rB,SAASkuF;AACpF;IACA,QAAAsN,CAAStN,QAAQ3pF,SAAS2jE,OAAOj7D,KAAK9G;KAClC+nF,OAAOnuB,IAAImI,MAAM8lB,IAAI,0BAAS+F,kBAC9B7F,OAAOwH;KAGP,IAAIh5D,WAAWzvB;KACf,QAAQi7D,MAAM8vB;KACV,KAAK9B,WAAW4B;KAChB,KAAK5B,WAAW0C;KAChB,KAAK1C,WAAW6C;KAChB,KAAK7C,WAAW2C;KAChB,KAAK3C,WAAW4C;MACZp8D,WAAWprB,OAAOwO,SAAS7S;MAC3B;;KACJ,KAAKipF,WAAWyC;OACZ,GAAAvR,OAAA,IAAc,UAAPn6E,OAAwB,WAAPA,MACxByvB,WAAkB,UAAPzvB;;KAMnB,QAFAnP,KAAK+5F,OAAO3J,QAAQhmB,MAAM8vB,GAAG,GAAGt7D,WAAU,IAElCwrC,MAAMgqB,EAAEj/C;KACZ,KAAK;MACDn1C,KAAK+5F,OAAO3J,QAAQhmB,MAAMgqB,EAAE0F,GAAG,GAAGzxF,QAAO;MACzC;;KACJ,KAAK;MACDrI,KAAK+5F,OAAO3J,QAAQgI,WAAW4B,OAAO,GAAG3xF,QAAO;MAChD;;KACJ,KAAK;MACDrI,KAAKkC,QAAQkuF,QAAQ3pF,SAAS2jE,MAAMgqB,EAAE0F,KAAK,GAAGzxF;;KAGtD+nF,OAAO3oF;AACX;IACA,OAAAvF,CAAQkuF,QAAQ3pF,SAASqK,SAASk/E,SAAS3nF;UACzB/E,MAAV+E,UAEJyI,QAAQktF,oBAAoB31F,OAAO+nF,OAAOnuB,IAAI+tB,SAAS,0BAASiG,iBAAiB2B,QAAQnxF;KACzF2pF,OAAO3oF;AACX;IAIA,MAAAsyF,CAAO3J,QAAQpuF,MAAMguF,SAAS3nF,OAAOw1F;KACjC,KAAK5N,UAAUrmF,QAAQq0F,aAAaj+F,KAAKk+F,WAAWl8F,MAAMqG;KACrD41F,cAAaJ,gBACdzN,OAAOnuB,IAAI+tB,SAASC,WACpBG,OAAOxmF,QAAQvB;AAEvB;IAIA,MAAA01F,CAAO3N,QAAQpuF,MAAMguF,SAAS3nF;KAC1B,KAAKA,MAAM5C,QACP;MACJ,GAAA6jF,OAAA,IAAOtnF,SAASo2F,WAAWvuB,SAAS7nE,SAASo2F,WAAWtuB,SAExDsmB,OAAOnuB,IAAI+tB,SAAS,0BAASiG;KAE7B7F,OAAOwH;KAEP,KAAK,EAAEhuF,UAAW5J,KAAKk+F,WAAWl8F;KAClC,KAAK,IAAI+a,IAAI,GAAGA,IAAI1U,MAAM5C,QAAQsX,KAC9BqzE,OAAOxmF,QAAQvB,MAAM0U;KAEzBqzE,OAAO3oF;AACX;IAWA,UAAAy2F,CAAWl8F,MAAMqG;KACb,IACI8U,GADAP,IAAI,0BAASk5E,QAEb/4E,SAAczZ,MAAV+E,OACJqW,IAAc,MAAVrW;KACR,QAAQrG;KACJ,KAAKo2F,WAAW4B;MACZ78E,IAAI;MACJ;;KACJ,KAAKi7E,WAAWtuB;MACZprD,IAAI3B,MAAM1U,MAAM5C,QAChBmX,IAAI,0BAASq5E,iBACb94E,IAAI;MACJ;;KACJ,KAAKi7E,WAAWyC;MACZn8E,KAAc,MAAVrW,OACJ8U,IAAI;MACJ;;KACJ,KAAKi7E,WAAW6C;MACZ99E,IAAI;MACJ;;KACJ,KAAKi7E,WAAWxuB;MACZhtD,IAAI,0BAASm5E,OACb54E,IAAI;MACJ;;KACJ,KAAKi7E,WAAWzuB;MACZ/sD,IAAI,0BAASo5E,OACb74E,IAAI;MACJ;;KACJ,KAAKi7E,WAAWoC;MACZ97E,IAAI3B,KAAKg4E,OAAOviF,KAAKnK,OAAOmsF,UAC5Br3E,IAAI;MACJ;;KACJ,KAAKi7E,WAAWkC;MACZ57E,IAAI3B,KAAK23E,QAAQliF,KAAKnK,OAAOmsF,UAC7Br3E,IAAI;MACJ;;KACJ,KAAKi7E,WAAWmC;MACZ77E,IAAI3B,KAAK23E,QAAQliF,KAAKnK,OAAOmsF,UAC7B53E,IAAI,0BAASm5E,OACb54E,IAAI;MACJ;;KACJ,KAAKi7E,WAAWvuB;MACZnrD,IAAI3B,MAAM1U,MAAM6I,YAChB0L,IAAI,0BAASq5E,iBACb94E,IAAI;MACJ;;KACJ,KAAKi7E,WAAW0C;MACZl+E,IAAI,0BAASo5E,OACb74E,IAAI;MACJ;;KACJ,KAAKi7E,WAAW2C;MACZn+E,IAAI,0BAASo5E,OACb74E,IAAI;MACJ;;KACJ,KAAKi7E,WAAWqC;MACZ/7E,IAAI3B,KAAKg4E,OAAOviF,KAAKnK,OAAOmsF,UAC5B53E,IAAI,0BAASm5E,OACb54E,IAAI;MACJ;;KACJ,KAAKi7E,WAAW4C;MACZ79E,IAAI;MACJ;;KACJ,KAAKi7E,WAAWsC;MACZh8E,IAAI3B,KAAKg4E,OAAOviF,KAAKnK,OAAOmsF,UAC5Br3E,IAAI;;KAGZ,OAAO,EAACP,GAAGO,GAAGJ,KAAK2B;AACvB;;GC7NG,SAASy/E,iBAAiBn8F;IAW7B,MAAM40B,MAAM50B,KAAKo8F,mBACXv6F,OAAOmI,OAAOhK,KAAKo8F,oBACnBv6F,OAAOkM,eAAe,CAAC,GAAGooF,cAAc;KAAE9vF,OAAOrG;;IACvD,KAAK,IAAIooE,SAASpoE,KAAKmoE,QAAQ;KAC3B,IAAI/nE,OAAOgoE,MAAMkc;KACjB,KAAIlc,MAAMwjB,KAEV,IAAIxjB,MAAMsuB,OACN9hE,IAAIwzC,MAAMsuB,SAAS;MAAEO,gBAAW31F;aAC/B,IAAI8mE,MAAMpkC,QACXpP,IAAIx0B,QAAQ,SAEZ,QAAQgoE,MAAMj1B;KACV,KAAK;MACDve,IAAIx0B,QAAQ+6F,wBAAwB/yB,MAAM0vB,GAAG1vB,MAAMzjC;MACnD;;KACJ,KAAK;MAED/P,IAAIx0B,QAAQ;MACZ;;KACJ,KAAK;MACDw0B,IAAIx0B,QAAQ,CAAC;;AAG7B;IACA,OAAOw0B;AACX;GCrBO,SAASynE,uBAAuBt4F,MAAMm6B,QAAQ3gB;IACjD,IAAI++E,YACYC,QAAhBzwF,QAAQyR;IACR,KAAK,IAAI6qD,SAASrkE,KAAKokE,QAAQ;KAC3B,IAAI/nE,OAAOgoE,MAAMkc;KACjB,IAAIlc,MAAMsuB,OAAO;MACb,MAAMiB,QAAQ7rF,MAAMs8D,MAAMsuB;MAC1B,IAAuEp1F,SAAlEq2F,qBAAqC,IAASA,MAAMV,YACrD;MAKJ,IAHAqF,aAAa3E,MAAMv3F,OACnBm8F,SAASr+D,OAAOkqC,MAAMsuB,QACtB6F,OAAOtF,YAAYU,MAAMV;MACP31F,QAAdg7F,YAAyB;cAClBC,OAAOn8F;OACd;AACJ;AACJ,YAII,IAFAk8F,aAAaxwF,MAAM1L,OACnBm8F,SAASr+D,QACS58B,QAAdg7F,YACA;KAMR,QAHIl0B,MAAMpkC,WACNu4D,OAAOn8F,MAAMqD,SAAS64F,WAAW74F,SAE7B2kE,MAAMj1B;KACV,KAAK;KACL,KAAK;MACD,IAAIi1B,MAAMpkC,QACN,KAAK,IAAIjpB,IAAI,GAAGA,IAAIuhF,WAAW74F,QAAQsX,KACnCwhF,OAAOn8F,MAAM2a,KAAKuhF,WAAWvhF,SAEjCwhF,OAAOn8F,QAAQk8F;MACnB;;KACJ,KAAK;MACD,IAAIxE,IAAI1vB,MAAM0vB;MACd,IAAI1vB,MAAMpkC,QACN,KAAK,IAAIjpB,IAAI,GAAGA,IAAIuhF,WAAW74F,QAAQsX,KACnCwhF,OAAOn8F,MAAM2a,KAAK+8E,EAAE9tF,OAAOsyF,WAAWvhF,eACpBzZ,MAAjBi7F,OAAOn8F,QACZm8F,OAAOn8F,QAAQ03F,EAAE9tF,OAAOsyF,cAExBxE,EAAE0E,aAAaD,OAAOn8F,OAAOk8F;MACjC;;KACJ,KAAK;MAED,QAAQl0B,MAAMgqB,EAAEj/C;MACZ,KAAK;MACL,KAAK;OACDtxC,OAAOC,OAAOy6F,OAAOn8F,OAAOk8F;OAC5B;;MACJ,KAAK;OACD,IAAIxE,IAAI1vB,MAAMgqB,EAAE0F;OAChB,KAAK,IAAInqF,KAAK9L,OAAOuE,KAAKk2F,aACtBC,OAAOn8F,MAAMuN,KAAKmqF,EAAE9tF,OAAOsyF,WAAW3uF;;;AAK9D;AACJ;GC9EO,SAAS8uF,iBAAiB14F,MAAMmY,GAAGC;IACtC,IAAID,MAAMC,GACN,QAAO;IACX,KAAKD,MAAMC,GACP,QAAO;IACX,KAAK,IAAIisD,SAASrkE,KAAKokE,QAAQ;KAC3B,IAAImc,YAAYlc,MAAMkc,WAClBoY,QAAQt0B,MAAMsuB,QAAQx6E,EAAEksD,MAAMsuB,OAAOpS,aAAapoE,EAAEooE,YACpDqY,QAAQv0B,MAAMsuB,QAAQv6E,EAAEisD,MAAMsuB,OAAOpS,aAAanoE,EAAEmoE;KACxD,QAAQlc,MAAMj1B;KACV,KAAK;KACL,KAAK;MACD,IAAIv4B,IAAkB,UAAdwtD,MAAMj1B,OAAiBijD,WAAW4B,QAAQ5vB,MAAM0vB;MACxD,MAAM1vB,MAAMpkC,SACN44D,oBAAoBhiF,GAAG8hF,OAAOC,SAC9BE,YAAYjiF,GAAG8hF,OAAOC,SACxB,QAAO;MACX;;KACJ,KAAK;MACD,MAAsB,aAAhBv0B,MAAMgqB,EAAEj/C,OACR2pD,cAAc10B,MAAMgqB,EAAE0F,KAAKiF,aAAaL,QAAQK,aAAaJ,UAC7DC,oBAAoC,UAAhBx0B,MAAMgqB,EAAEj/C,OAAiBijD,WAAW4B,QAAQ5vB,MAAMgqB,EAAE0F,GAAGiF,aAAaL,QAAQK,aAAaJ,UAC/G,QAAO;MACX;;KACJ,KAAK;MACD,IAAI7E,IAAI1vB,MAAM0vB;MACd,MAAM1vB,MAAMpkC,SACN84D,cAAchF,GAAG4E,OAAOC,SACxB7E,EAAEkF,OAAON,OAAOC,SAClB,QAAO;;AAGvB;IACA,QAAO;AACX;GACA,MAAMI,eAAel7F,OAAO8E;GAC5B,SAASk2F,YAAY78F,MAAMkc,GAAGC;IAC1B,IAAID,MAAMC,GACN,QAAO;IACX,IAAInc,SAASo2F,WAAWvuB,OACpB,QAAO;IACX,IAAIo1B,KAAK/gF,GACLghF,KAAK/gF;IACT,IAAI8gF,GAAGx5F,WAAWy5F,GAAGz5F,QACjB,QAAO;IACX,KAAK,IAAIsX,IAAI,GAAGA,IAAIkiF,GAAGx5F,QAAQsX,KAC3B,IAAIkiF,GAAGliF,MAAMmiF,GAAGniF,IACZ,QAAO;IACf,QAAO;AACX;GACA,SAAS6hF,oBAAoB58F,MAAMkc,GAAGC;IAClC,IAAID,EAAEzY,WAAW0Y,EAAE1Y,QACf,QAAO;IACX,KAAK,IAAIsX,IAAI,GAAGA,IAAImB,EAAEzY,QAAQsX,KAC1B,KAAK8hF,YAAY78F,MAAMkc,EAAEnB,IAAIoB,EAAEpB,KAC3B,QAAO;IACf,QAAO;AACX;GACA,SAAS+hF,cAAc98F,MAAMkc,GAAGC;IAC5B,IAAID,EAAEzY,WAAW0Y,EAAE1Y,QACf,QAAO;IACX,KAAK,IAAIsX,IAAI,GAAGA,IAAImB,EAAEzY,QAAQsX,KAC1B,KAAK/a,KAAKg9F,OAAO9gF,EAAEnB,IAAIoB,EAAEpB,KACrB,QAAO;IACf,QAAO;AACX;GC1DA,MAAMoiF,kBAAkBt7F,OAAOu7F,0BAA0Bv7F,OAAOw7F,eAAe,CAAC;GAKzE,MAAMC;IACT,WAAA/+F,CAAY6B,MAAM+nE,QAAQ1jE;KACtBzG,KAAKu/F,oBAAoB,IACzBv/F,KAAK8tB,WAAW1rB,MAChBpC,KAAKmqE,SAASA,OAAOvlE,IAAI2zF;KACzBv4F,KAAKyG,UAAUA,kBAAyCA,UAAU,CAAC,GACnEzG,KAAKo+F,mBAAmBv6F,OAAOmI,OAAO,MAAMnI,OAAOC,OAAOD,OAAOC,OAAO,CAAC,GAAGq7F,kBAAkB;MAAE,CAAChH,eAAe;OAAE9vF,OAAOrI;;UACzHA,KAAKw/F,eAAe,IAAIlG,oBAAoBt5F,OAC5CA,KAAKy/F,gBAAgB,IAAItE,qBAAqBn7F;KAC9CA,KAAK0/F,gBAAgB,IAAIpD,qBAAqBt8F,OAC9CA,KAAK2/F,eAAe,IAAIvC,uBAAuBp9F;KAC/CA,KAAK4/F,eAAe,IAAIhC,uBAAuB59F;AACnD;IACA,MAAAgM,CAAO3D;KACH,IAAInG,UAAUi8F,iBAAiBn+F;KAI/B,YAHcsD,MAAV+E,SACAg2F,uBAAuBr+F,MAAMkC,SAASmG,QAEnCnG;AACX;IAMA,KAAA6J,CAAM7J;KACF,IAAIwxE,OAAO1zE,KAAKgM;KAEhB,OADAqyF,uBAAuBr+F,MAAM0zE,MAAMxxE,UAC5BwxE;AACX;IAOA,MAAAsrB,CAAO9gF,GAAGC;KACN,OAAOsgF,iBAAiBz+F,MAAMke,GAAGC;AACrC;IAKA,EAAAwtE,CAAG6D,KAAKiK,QAAQz5F,KAAKu/F;KACjB,OAAOv/F,KAAKw/F,aAAa7T,GAAG6D,KAAKiK,QAAO;AAC5C;IAKA,YAAAU,CAAa3K,KAAKiK,QAAQz5F,KAAKu/F;KAC3B,OAAOv/F,KAAKw/F,aAAa7T,GAAG6D,KAAKiK,QAAO;AAC5C;IAIA,YAAA+E,CAAat+D,QAAQ3gB;KACjB8+E,uBAAuBr+F,MAAMkgC,QAAQ3gB;AACzC;IAIA,UAAAsgF,CAAWxzD,MAAM5lC;KACb,IAAImnF,MAAM2H,kBAAkB9uF;KAC5B,OAAOzG,KAAKu9F,mBAAmB3P,IAAIyH,cAAchpD,OAAOA,KAAKn7B,YAAY08E;AAC7E;IAIA,QAAArH,CAASrwD,MAAMzvB;KACX,OAAOzG,KAAK87F,iBAAiB5lE,OAAM,4BAAgBzvB;AACvD;IAKA,cAAAq5F,CAAe5pE,MAAMzvB;KACjB,IAAI4B,QAAQS,KAAKiO,MAAMmf;KACvB,OAAOl2B,KAAKumF,SAASl+E,OAAO5B;AAChC;IAIA,MAAAg5B,CAAOv9B,SAASuE;KACZ,OAAOzG,KAAKg9F,kBAAkB96F,UAAS,4BAAiBuE;AAC5D;IAKA,YAAAs5F,CAAa79F,SAASuE;KAClB,IAAI2/E;KACJ,IAAI/9E,QAAQrI,KAAKy/B,OAAOv9B,SAASuE;KACjC,OAAOqC,KAAKC,UAAUV,OAAO,MAAwF,UAAjF+9E,KAAK3/E,uBAAyC,IAASA,QAAQu5F,sBAAiC,MAAP5Z,KAAgBA,KAAK;AACtJ;IAIA,QAAA6Z,CAAS/9F,SAASuE;KACd,IAAImnF,MAAM0J,mBAAmB7wF;KAC7B,OAAOzG,KAAKg+F,oBAAoB97F,SAAS0rF,IAAIwJ,iBAAiBxJ,KAAK+J;AACvE;IASA,gBAAAmE,CAAiB5lE,MAAMzvB,SAASy5B;KAC5B,IAAa,SAAThK,QAAgC,mBAARA,SAAqB1zB,MAAMC,QAAQyzB,OAAO;MAClE,IAAIh0B,UAAUg+B,iBAAuCA,SAASlgC,KAAKgM;MAEnE,OADAhM,KAAKy/F,cAAc1gF,KAAKmX,MAAMh0B,SAASuE,UAChCvE;AACX;KACA,MAAM,IAAIR,MAAM,2BAA2B1B,KAAK8tB,sBAAsB0iE,gBAAgBt6D;AAC1F;IAOA,iBAAA8mE,CAAkB96F,SAASuE;KACvB,OAAOzG,KAAK0/F,cAAcp7F,MAAMpC,SAASuE;AAC7C;IAQA,mBAAAu3F,CAAoB97F,SAASkuF,QAAQ3pF;KAEjC,OADAzG,KAAK4/F,aAAat7F,MAAMpC,SAASkuF,QAAQ3pF,UAClC2pF;AACX;IASA,kBAAAmN,CAAmB1+E,QAAQpZ,QAAQgB,SAASy5B;KACxC,IAAIh+B,UAAUg+B,iBAAuCA,SAASlgC,KAAKgM;KAEnE,OADAhM,KAAK2/F,aAAa5gF,KAAKF,QAAQ3c,SAASuE,SAAShB,SAC1CvD;AACX;;GClKG,SAASg+F,oBAAoBtpE;IAChC,OAA4B,QAArBA,IAAIuhE;AACf;GCDO,SAASgI,aAAa3Q;IACzB,IAAkB,mBAAPA,OAA2B,SAARA,KAC1B,QAAO;IAEX,KAAKA,IAAI3yE,eAAe,IACpB,QAAO;IAEX,KAAK,IAAIlN,KAAK9L,OAAOuE,KAAKonF,MAAM;KAC5B,IAAIrhD,MAAMnsB,SAASrS;KACnB,IAAK6D,OAAOiD,MAAM03B,MASb;MAED,IAAIA,MAAMqhD,IAAI7/E;MACd,SAAYrM,MAAR6qC,KACA,QAAO;MAEX,IAAmB,mBAARA,KACP,QAAO;MAEX,SAAiB7qC,MAAbksF,IAAIrhD,MACJ,QAAO;AACf,YApBwB;MAEpB,IAAIiyD,MAAM5Q,IAAIrhD;MACd,SAAY7qC,MAAR88F,KACA,QAAO;MAEX,IAAI5Q,IAAI4Q,SAASjyD,KACb,QAAO;AACf;AAaJ;IACA,QAAO;AACX;GAWO,SAASkyD,eAAeC;IAC3B,KAAKH,aAAaG,aACd,MAAM,IAAI5+F,MAAM;IACpB,IAAIiH,SAAS;IACb,KAAK,KAAKvG,MAAMm+F,WAAW18F,OAAO4V,QAAQ6mF,aACjB,mBAAVC,UACP53F,OAAOzH,KAAK;KAAEkB;KAAMm+F;;IAC5B,OAAO53F;AACX;GAOO,SAAS63F,cAAcF;IAC1B,OAAOD,eAAeC,YAAY17F,KAAIigC,OAAOA,IAAIziC;AACrD;GAOO,SAASq+F,gBAAgBH;IAC5B,OAAOD,eAAeC,YACjB17F,KAAIigC,OAAOA,IAAI07D,SACfn1F,QAAO,CAAC+iC,KAAK9sC,OAAOihC,QAAQA,IAAIhhC,QAAQ6sC,QAAQ9sC;AACzD;;;;;;;;;GC/EA,MAAM61F,gBAAgB;IAClBsF,oBAAmB;IACnBK,gBAAe;IACfN,oBAAmB;IACnByD,cAAc;MACf7K,eAAe;IACduG,sBAAqB;;GAKlB,SAASgF,gBAAgBj6F;IAC5B,OAAOA,UAAU5C,OAAOC,OAAOD,OAAOC,OAAO,CAAC,GAAGqxF,eAAe1uF,WAAW0uF;AAC/E;GAIO,SAASwL,iBAAiBl6F;IAC7B,OAAOA,UAAU5C,OAAOC,OAAOD,OAAOC,OAAO,CAAC,GAAGozF,gBAAgBzwF,WAAWywF;AAChF;GAIO,SAAS0J,iBAAiB1iF,GAAGC;IAChC,IAAIioE,IAAIQ;IACR,IAAIvW,IAAIxsE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,GAAGoa,IAAIC;IAE5C,OADAkyD,EAAEwwB,eAAe,KAAqE,UAA/Dza,KAAKloE,iBAA6B,IAASA,EAAE2iF,sBAAiC,MAAPza,KAAgBA,KAAK,OAAyE,UAA/DQ,KAAKzoE,iBAA6B,IAASA,EAAE0iF,sBAAiC,MAAPja,KAAgBA,KAAK;IAClNvW;AACX;;;;GCtBO,SAASywB,eAAeC;IAC3B,IAAIC,WAAU;IACd,MAAMC,KAAK;IACX,KAAK,IAAIlkF,IAAI,GAAGA,IAAIgkF,UAAUt7F,QAAQsX,KAAK;KACvC,IAAIpR,OAAOo1F,UAAU/sE,OAAOjX;KAChB,OAARpR,OACAq1F,WAAU,IAEL,KAAK17F,KAAKqG,SACfs1F,GAAG//F,KAAKyK,OACRq1F,WAAU,KAELA,WACLC,GAAG//F,KAAKyK,KAAK4gC;KACby0D,WAAU,KAEA,KAALjkF,IACLkkF,GAAG//F,KAAKyK,KAAK7D,iBAGbm5F,GAAG//F,KAAKyK;AAEhB;IACA,OAAOs1F,GAAGx5F,KAAK;AACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GC9BA,sDACA;GAOO,eAAe,SAAS;IAC9B,IAAI,SAAS;IACb,MAAM,SAAmB;IACzB,WAAW,MAAM,SAAS,QACzB,UAAU,MAAM,QAChB,OAAO,KAAK;IAEb,OAAO,OAAO,OAAO,QAAQ;AAC9B;GARA,6BAWA,eAAO,eAAoB;IAC1B,MACM,aADY,SAAS,SACX,SAAS;IACzB;KACC,OAAO,KAAK,MAAM;MACjB,OAAO;KACR,MAAM,MAAM;KAEZ,MADA,IAAI,WAAW,YAAY,QACrB;;AAER,MAEA,uBACC,KACA,OAA6B;IAE7B,MACM,QADsB,mBAAR,MAAmB,MAAM,IAAI,MAC/B,WAAW,YAAY,QAAQ,MAAM,QACtD,KACA,OAEK,UAAU,IAAI,SAA8B,CAAC,SAAS;KAC3D,IACE,KAAK,YAAY,SACjB,KAAK,SAAS,QACd;AAAwB;IAG3B,OADA,IAAI,OAAO,QAAQ,KAAK,KAAK,UACtB;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;G1OhDA,qDAEA,gDACA;GAGA;GAeA,MAAM,WAAW,OAAO;GAQxB,MAAsB,cAAc,KAAK;IAOxC,YAAY;KACX,MAAM,OACN,KAAK,YAAY;AAClB;IAUA,iBAAiB;KAChB,IAAI,SAAS;MAIZ,IAA+C,oBAAnC,QAAgB,gBAC3B,OAAO,QAAQ;MAMhB,IAAgC,mBAArB,QAAQ,UAClB,OAA4B,aAArB,QAAQ;;KAOjB,OAAM,SAAY,IAAI;KACtB,OAAqB,mBAAV,SACJ,MACL,MAAM,MACN,MACC,MAC6B,MAA7B,EAAE,QAAQ,kBACoB,MAA9B,EAAE,QAAQ;AAEd;IAQQ,iBAAiB;KAIxB,IAAI,KAAK,eAAe,SAAY,KAAK,oBAAoB,OAC5D,OAAO;KAKH,KAAK,QAAQ,UAEjB,KAAK,QAAQ,QAAQ;KAEtB,MAAM,aAAa,IAAI,IAAI,OAAO;MAAE,WAAU;;KAI9C,OAHC,KAAK,QAAQ,MAAuB,KAAK,aAE1C,KAAK,oBACE;AACR;IAEQ,iBAAiB,MAAc;KACtC,KAAK,KAAK,QAAQ,SAAoB,SAAX,QAC1B;KAED,MAAM,UAAU,KAAK,QAAQ,OACvB,QAAQ,QAAQ,QAAQ;MACf,MAAX,UACH,QAAQ,OAAO,OAAO,IAEtB,KAAK,oBACkB,MAAnB,QAAQ,iBAEJ,KAAK,QAAQ;AAGvB;IAIA,QAAQ;KAKP,QAHmC,oBAA3B,QAAQ,iBACZ,QAAQ,iBACR,KAAK,iBAAiB,YAGlB,cAAW,UAAU,QAAQ,KAAK,MAAM,WAGzC,MAAM,QAAQ;AACtB;IAEA,aACC,KACA,SACA;KAEA,MAAM,cAAc;SAChB;MACH,gBAAgB,KAAK,iBAAiB;QAEjC,OAAO,KAAK,QAAQ,cACpB,aAAa,KAAK,iBAAiB;KACzC,QAAQ,UACN,MAAK,MAAM,KAAK,QAAQ,KAAK,eAC7B,MACC;MAEA,IADA,KAAK,iBAAiB,MAAM,aACxB,kBAAkB,KAAK,OAC1B;OAEC,OAAO,OAAO,WAAW,KAAK;QAC7B,OAAO;OACR,OAAO,GAAG;;MAGZ,KAAK,UAAU,gBAAgB,QAE/B,MAAM,aAAa,KAAK,SAAS;AAAG,UAEpC;MACA,KAAK,iBAAiB,MAAM,aAC5B,GAAG;AAAI;AAGX;IAEA;KACC,MAAM,SAAS,KAAK,UAAU;KAE9B,IADA,KAAK,UAAU,qBAAgB,IAC1B,QACJ,MAAM,IAAI,MACT;KAGF,OAAO;AACR;IAEA,eAAI;KACH,OACC,KAAK,UAAU,gBACI,aAAlB,KAAK,WAAwB,MAAM;AAEtC;IAEA,eAAI,CAAY;KACX,KAAK,cACR,KAAK,UAAU,cAAc;AAE/B;IAEA,YAAI;KACH,OACC,KAAK,UAAU,aACd,KAAK,qBAAqB,WAAW;AAExC;IAEA,YAAI,CAAS;KACR,KAAK,cACR,KAAK,UAAU,WAAW;AAE5B;;GApLD;;;;G2O3BA,SAASy5F,SAAShjF,GAAGC,GAAG4Q;IAClB7Q,aAAajZ,WAAQiZ,IAAIijF,WAAWjjF,GAAG6Q,OACvC5Q,aAAalZ,WAAQkZ,IAAIgjF,WAAWhjF,GAAG4Q;IAE3C,IAAI3Q,IAAI44C,MAAM94C,GAAGC,GAAG4Q;IAEpB,OAAO3Q,KAAK;KACV6qB,OAAO7qB,EAAE;KACTzL,KAAKyL,EAAE;KACPgjF,KAAKryE,IAAIjtB,MAAM,GAAGsc,EAAE;KACpB1U,MAAMqlB,IAAIjtB,MAAMsc,EAAE,KAAKF,EAAEzY,QAAQ2Y,EAAE;KACnCijF,MAAMtyE,IAAIjtB,MAAMsc,EAAE,KAAKD,EAAE1Y;;AAE7B;GAEA,SAAS07F,WAAWG,KAAKvyE;IACvB,IAAI5R,IAAI4R,IAAIvO,MAAM8gF;IAClB,OAAOnkF,IAAIA,EAAE,KAAK;AACpB;GAGA,SAAS65C,MAAM94C,GAAGC,GAAG4Q;IACnB,IAAIwyE,MAAMC,KAAKC,MAAMC,OAAOv9F,QACxBw9F,KAAK5yE,IAAIztB,QAAQ4c,IACjBq1E,KAAKxkE,IAAIztB,QAAQ6c,GAAGwjF,KAAK,IACzB5kF,IAAI4kF;IAER,IAAIA,MAAM,KAAKpO,KAAK,GAAG;KACrB,IAAGr1E,MAAIC,GACL,OAAO,EAACwjF,IAAIpO;KAKd,KAHAgO,OAAO,IACPE,OAAO1yE,IAAItpB,QAEJsX,KAAK,MAAM5Y,UACZ4Y,KAAK4kF,MACPJ,KAAKrgG,KAAK6b;KACV4kF,KAAK5yE,IAAIztB,QAAQ4c,GAAGnB,IAAI,MACA,KAAfwkF,KAAK97F,SACdtB,SAAS,EAAEo9F,KAAKtwE,OAAOsiE,SAEvBiO,MAAMD,KAAKtwE,SACDwwE,SACRA,OAAOD;KACPE,QAAQnO,KAGVA,KAAKxkE,IAAIztB,QAAQ6c,GAAGpB,IAAI,KAG1BA,IAAI4kF,KAAKpO,MAAMoO,MAAM,IAAIA,KAAKpO;KAG5BgO,KAAK97F,WACPtB,SAAS,EAAEs9F,MAAMC;AAErB;IAEA,OAAOv9F;AACT;GA5DAtE,OAAOD,UAAUshG,UAqBjBA,SAASlqC,QAAQA;;;GCtBjB,IAAI4qC,YAAY,oBAAQ,OACpBV,WAAW,oBAAQ;GAEvBrhG,OAAOD,UA6DP,SAAmBmvB;IACjB,KAAKA,KACH,OAAO;IAQgB,SAArBA,IAAI7pB,OAAO,GAAG,OAChB6pB,MAAM,WAAWA,IAAI7pB,OAAO;IAG9B,OAAO28F,OA7DT,SAAsB9yE;KACpB,OAAOA,IAAIpqB,MAAM,QAAQ8C,KAAKq6F,UACnBn9F,MAAM,OAAO8C,KAAKs6F,SAClBp9F,MAAM,OAAO8C,KAAKu6F,UAClBr9F,MAAM,OAAO8C,KAAKw6F,UAClBt9F,MAAM,OAAO8C,KAAKy6F;AAC/B,KAuDgBC,CAAapzE,OAAM,GAAMnqB,IAAIw9F;AAC7C;GA1EA,IAAIN,WAAW,YAAUtsF,KAAKS,WAAS,MACnC8rF,UAAU,WAASvsF,KAAKS,WAAS,MACjC+rF,WAAW,YAAUxsF,KAAKS,WAAS,MACnCgsF,WAAW,YAAUzsF,KAAKS,WAAS,MACnCisF,YAAY,aAAW1sF,KAAKS,WAAS;GAEzC,SAASosF,QAAQtzE;IACf,OAAO/M,SAAS+M,KAAK,OAAOA,MACxB/M,SAAS+M,KAAK,MACdA,IAAIsuB,WAAW;AACrB;GAUA,SAAS+kD,eAAerzE;IACtB,OAAOA,IAAIpqB,MAAMm9F,UAAUr6F,KAAK,MACrB9C,MAAMo9F,SAASt6F,KAAK,KACpB9C,MAAMq9F,UAAUv6F,KAAK,KACrB9C,MAAMs9F,UAAUx6F,KAAK,KACrB9C,MAAMu9F,WAAWz6F,KAAK;AACnC;GAMA,SAAS66F,gBAAgBvzE;IACvB,KAAKA,KACH,OAAO,EAAC;IAEV,IAAI7U,QAAQ,IACRiD,IAAI+jF,SAAS,KAAK,KAAKnyE;IAE3B,KAAK5R,GACH,OAAO4R,IAAIpqB,MAAM;IAEnB,IAAIy8F,MAAMjkF,EAAEikF,KACR13F,OAAOyT,EAAEzT,MACT23F,OAAOlkF,EAAEkkF,MACTtyF,IAAIqyF,IAAIz8F,MAAM;IAElBoK,EAAEA,EAAEtJ,SAAO,MAAM,MAAMiE,OAAO;IAC9B,IAAI64F,YAAYD,gBAAgBjB;IAQhC,OAPIA,KAAK57F,WACPsJ,EAAEA,EAAEtJ,SAAO,MAAM88F,UAAUhkF,SAC3BxP,EAAE7N,KAAK2c,MAAM9O,GAAGwzF;IAGlBroF,MAAMhZ,KAAK2c,MAAM3D,OAAOnL,IAEjBmL;AACT;GAuBA,SAASsoF,QAAQzzE;IACf,OAAO,MAAMA,MAAM;AACrB;GACA,SAAS0zE,SAASC;IAChB,OAAO,SAASp9F,KAAKo9F;AACvB;GAEA,SAASC,IAAI5lF,GAAG6lF;IACd,OAAO7lF,KAAK6lF;AACd;GACA,SAASC,IAAI9lF,GAAG6lF;IACd,OAAO7lF,KAAK6lF;AACd;GAEA,SAASf,OAAO9yE,KAAK+zE;IACnB,IAAIC,aAAa,IAEb5lF,IAAI+jF,SAAS,KAAK,KAAKnyE;IAC3B,KAAK5R,KAAK,MAAM7X,KAAK6X,EAAEikF,MAAM,OAAO,EAACryE;IAErC,IAaIjgB,GAbAk0F,oBAAoB,iCAAiC19F,KAAK6X,EAAEzT,OAC5Du5F,kBAAkB,uCAAuC39F,KAAK6X,EAAEzT,OAChEw5F,aAAaF,qBAAqBC,iBAClCE,YAAYhmF,EAAEzT,KAAKpI,QAAQ,QAAQ;IACvC,KAAK4hG,eAAeC,WAElB,OAAIhmF,EAAEkkF,KAAK7gF,MAAM,WAERqhF,OADP9yE,MAAM5R,EAAEikF,MAAM,MAAMjkF,EAAEzT,OAAOs4F,WAAW7kF,EAAEkkF,QAGrC,EAACtyE;IAIV,IAAIm0E,YACFp0F,IAAIqO,EAAEzT,KAAK/E,MAAM,cAGjB,IAAiB,OADjBmK,IAAIwzF,gBAAgBnlF,EAAEzT,OAChBjE,UAGa,OADjBqJ,IAAI+yF,OAAO/yF,EAAE,KAAI,GAAOlK,IAAI49F,UACtB/8F,QAIJ,QAHI47F,OAAOlkF,EAAEkkF,KAAK57F,SACdo8F,OAAO1kF,EAAEkkF,OAAM,KACf,EAAC,MACOz8F,KAAI,SAASmK;KACvB,OAAOoO,EAAEikF,MAAMtyF,EAAE,KAAKC;AACxB;IASN,IAKIq0F,GALAhC,MAAMjkF,EAAEikF,KACRC,OAAOlkF,EAAEkkF,KAAK57F,SACdo8F,OAAO1kF,EAAEkkF,OAAM,KACf,EAAC;IAIL,IAAI6B,YAAY;KACd,IAAIzmF,IAAI4lF,QAAQvzF,EAAE,KACd8zF,IAAIP,QAAQvzF,EAAE,KACdu0F,QAAQ7tF,KAAKK,IAAI/G,EAAE,GAAGrJ,QAAQqJ,EAAE,GAAGrJ,SACnC69F,OAAmB,KAAZx0F,EAAErJ,SACT+P,KAAK+tF,IAAIlB,QAAQvzF,EAAE,OACnB,GACAxJ,OAAOq9F;KACGC,IAAInmF,MAEhB6mF,SAAS,GACTh+F,OAAOu9F;KAET,IAAIW,MAAM10F,EAAE4R,KAAK+hF;KAEjBW,IAAI;KAEJ,KAAK,IAAIrmF,IAAIN,GAAGnX,KAAKyX,GAAG6lF,IAAI7lF,KAAKumF,MAAM;MACrC,IAAIjzB;MACJ,IAAI4yB,iBAEQ,UADV5yB,IAAI/nE,OAAO+oF,aAAat0E,QAEtBszD,IAAI,UAGN,IADAA,IAAI/nE,OAAOyU;MACPymF,KAAK;OACP,IAAIC,OAAOJ,QAAQhzB,EAAE5qE;OACrB,IAAIg+F,OAAO,GAAG;QACZ,IAAIC,IAAI,IAAIlhG,MAAMihG,OAAO,GAAGh8F,KAAK;QAE/B4oE,IADEtzD,IAAI,IACF,MAAM2mF,IAAIrzB,EAAEvuE,MAAM,KAElB4hG,IAAIrzB;AACZ;AACF;MAEF+yB,EAAEliG,KAAKmvE;AACT;AACF,WACE+yB,IAAIxB,UAAU9yF,IAAG,SAAS4zF;KAAM,OAAOb,OAAOa,KAAI;AAAO;IAG3D,KAAK,IAAIj8D,IAAI,GAAGA,IAAI28D,EAAE39F,QAAQghC,KAC5B,KAAK,IAAI92B,IAAI,GAAGA,IAAI0xF,KAAK57F,QAAQkK,KAAK;KACpC,IAAIg0F,YAAYvC,MAAMgC,EAAE38D,KAAK46D,KAAK1xF;OAC7BmzF,SAASI,cAAcS,cAC1BZ,WAAW7hG,KAAKyiG;AACpB;IAGF,OAAOZ;AACT;;;GCvMAljG,OAAOD,UAAU,SAAUgkG,IAAIC;IAE3B,KADA,IAAIjxF,MAAM,IACDmK,IAAI,GAAGA,IAAI6mF,GAAGn+F,QAAQsX,KAAK;KAChC,IAAIN,IAAIonF,GAAGD,GAAG7mF,IAAIA;KACdta,QAAQga,KAAI7J,IAAI1R,KAAK2c,MAAMjL,KAAK6J,KAC/B7J,IAAI1R,KAAKub;AAClB;IACA,OAAO7J;AACX;GAEA,IAAInQ,UAAUD,MAAMC,WAAW,SAAUmhG;IACrC,OAA8C,qBAAvC//F,OAAOsM,UAAUtH,SAAShH,KAAK+hG;AAC1C;;;;GCVA/jG,OAAOD,UAAU,CAACkkG,MAAMC,OAAO5gG,QAAQ4gG;IACtC,MAAM/iF,SAAS8iF,KAAK9+F,WAAW,OAAO,KAAsB,MAAhB8+F,KAAKr+F,SAAe,MAAM,MAChEk4B,WAAWomE,KAAKziG,QAAQ0f,SAAS8iF,OACjCE,qBAAqBD,KAAKziG,QAAQ;IACxC,QAAqB,MAAdq8B,cAA4C,MAAxBqmE,sBAA6BrmE,WAAWqmE;AAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;G9ONvF,qDACA,+CAEA,sDACA,sCACA,0CACA,mCAGM,SAAQ;GAAA,iBAAY;GAiC1B,MAAa,uBAA2C;IAOvD,YAAY,OAAkB;KAC7B,MAAM,OACN,KAAK,QAAyB,mBAAV,QAAqB,IAAI,UAAI,SAAS;KAC1D,KAAK,eAAe,MAAM,WAAW,IACrC,MAAM,4CAA4C,KAAK,MAAM;KAG7D,MAAM,QAAQ,KAAK,MAAM,YAAY,KAAK,MAAM,MAAM,QACrD,YACA,KAEK,OAAO,KAAK,MAAM,OACrB,SAAS,KAAK,MAAM,MAAM,MACF,aAAxB,KAAK,MAAM,WACX,MACA;KACH,KAAK,cAAc;SACd,OAAO,KAAK,MAAM,aAAa;MACnC;MACA;;AAEF;IAEA,WAAW,KAAkC;KAC5C,IAAI,UAAU,MACd,KAAK,gBAAgB,KAAK,OAE1B,MAAM,WAAW,KAAK;AACvB;IAEA,gBACC,KACA;KAEA,OAAM,SAAY,MAGZ,OAAO,GAFI,KAAK,iBAAiB,WAAW,YACjC,IAAI,UAAU,WAAW,eAEpC,MAAM,IAAI,UAAI,IAAI,MAAM;KACZ,OAAd,KAAK,SACR,IAAI,OAAO,OAAO,KAAK,QAKxB,IAAI,OAAO,OAAO;KAIlB,MAAM,UACwB,qBAAtB,KAAK,eACT,KAAK,iBACL;SAAK,KAAK;;KACd,IAAI,MAAM,YAAY,MAAM,UAAU;MACrC,MAAM,OAAO,GAAG,mBACf,MAAM,aACF,mBAAmB,MAAM;MAC9B,QAAQ,yBAAyB,SAAS,OAAO,KAChD,MACC,SAAS;;KAGP,QAAQ,wBACZ,QAAQ,sBAAsB,KAAK,YAChC,eACA;KAEJ,KAAK,MAAM,QAAQ,OAAO,KAAK,UAAU;MACxC,MAAM,QAAQ,QAAQ;MAClB,SACH,IAAI,UAAU,MAAM;;AAGvB;IAEA,aAAM,CACL,KACA;KAWA,IAAI,OACA,cAeA;KAeJ,OAxCA,IAAI,UAAU,MAET,IAAI,KAAK,SAAS,UACtB,KAAK,gBAAgB,KAAK;KAQ3B,MAAM,uDACN,IAAI;KACA,IAAI,cAAc,IAAI,WAAW,SAAS,MAC7C,MACC;KAED,QAAQ,IAAI,WAAW,GAAG,MAC1B,eAAe,MAAM,QAAQ,cAAc,GAC3C,IAAI,WAAW,GAAG,OACjB,IAAI,UAAU,MAAM,UAAU;KAC/B,MAAM,qBAAqB,IAAI,WAAW,GAAG,QAKlB,aAAxB,KAAK,MAAM,YACd,MAAM,6BAA6B,KAAK;KACxC,SAAS,IAAI,QAAQ,KAAK,iBAE1B,MAAM,6BAA6B,KAAK;KACxC,SAAS,IAAI,QAAQ,KAAK,sBAOrB,kBAAK,QAAQ;KAEZ;AACR;;GAGD,SAAS,KACR,QACG;IAIH,MAAM,MAAM;IAGZ,IAAI;IACJ,KAAK,OAAO,KACN,KAAK,SAAS,SAClB,IAAI,OAAO,IAAI;IAGjB,OAAO;AACR;GAjJQ,2BAAY,EAAC,QAAQ,WADhB;;;G+OpCbpkG,QAAQqkG,aA8IR,SAAoB5/F;IAQnB,IAPAA,KAAK,MAAMrE,KAAKkkG,YAAY,OAAO,MAClClkG,KAAK+D,aACJ/D,KAAKkkG,YAAY,QAAQ,OAC1B7/F,KAAK,MACJrE,KAAKkkG,YAAY,QAAQ,OAC1B,MAAMrkG,OAAOD,QAAQukG,SAASnkG,KAAK8W;KAE/B9W,KAAKkkG,WACT;IAGD,MAAM7zB,IAAI,YAAYrwE,KAAKokG;IAC3B//F,KAAK9C,OAAO,GAAG,GAAG8uE,GAAG;IAKrB,IAAIhvE,QAAQ,GACRgjG,QAAQ;IACZhgG,KAAK,GAAGU,QAAQ,gBAAeyb;KAChB,SAAVA,UAGJnf,SACc,SAAVmf,UAGH6jF,QAAQhjG;AACT,SAGDgD,KAAK9C,OAAO8iG,OAAO,GAAGh0B;AACvB,MA9KAzwE,QAAQ0kG,OAgMR,SAAc9/F;IACb;KACKA,aACH5E,QAAQ2kG,QAAQC,QAAQ,SAAShgG,cAEjC5E,QAAQ2kG,QAAQE,WAAW;AAE7B,MAAE,OAAOx+F,QAGT;AACD,MA1MArG,QAAQ8kG,OAkNR;IACC,IAAItmF;IACJ;KACCA,IAAIxe,QAAQ2kG,QAAQI,QAAQ;AAC7B,MAAE,OAAO1+F,QAGT;KAGKmY,KAAwB,sBAAZjb,WAA2B,SAASA,YACpDib,IAAIjb,QAAQC,IAAIC;IAGjB,OAAO+a;AACR,MAhOAxe,QAAQskG,YAyGR;IAIC,IAAsB,sBAAXtrF,UAA0BA,OAAOzV,YAAoC,eAAxByV,OAAOzV,QAAQnB,QAAuB4W,OAAOzV,QAAQyhG,SAC5G,QAAO;IAIR,IAAyB,sBAAdvrF,aAA6BA,UAAUsL,aAAatL,UAAUsL,UAAU7c,cAAc0Y,MAAM,0BACtG,QAAO;IAGR,IAAIrD;IAKJ,OAA4B,sBAAbtE,YAA4BA,SAASgsF,mBAAmBhsF,SAASgsF,gBAAgBC,SAASjsF,SAASgsF,gBAAgBC,MAAMC,oBAEpH,sBAAXnsF,UAA0BA,OAAOpR,YAAYoR,OAAOpR,QAAQw9F,WAAYpsF,OAAOpR,QAAQy9F,aAAarsF,OAAOpR,QAAQ28E,UAGrG,sBAAd9qE,aAA6BA,UAAUsL,cAAcxH,IAAI9D,UAAUsL,UAAU7c,cAAc0Y,MAAM,sBAAsBwB,SAAS7E,EAAE,IAAI,OAAO,MAE/H,sBAAd9D,aAA6BA,UAAUsL,aAAatL,UAAUsL,UAAU7c,cAAc0Y,MAAM;AACtG,MAlIA5gB,QAAQ2kG,UA4OR;IACC;KAGC,OAAOW;AACR,MAAE,OAAOj/F,QAGT;AACD,IArPkBk/F,IAClBvlG,QAAQ8F,UAAU;IACjB,IAAI0/F,UAAS;IAEb,OAAO;KACDA,WACJA,UAAS,GACT59F,QAAQ69F,KAAK;AACd;AAED,KATiB,IAelBzlG,QAAQ0lG,SAAS,EAChB,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA;GAyFD1lG,QAAQwE,MAAMoD,QAAQR,SAASQ,QAAQpD,OAAO,QAAS,IAkEvDvE,OAAOD,UAAU,oBAAQ,KAAR,CAAoBA;GAErC,OAAM,cAAeC,OAAOD;GAM5B2lG,WAAW9+D,IAAI,SAAUnpB;IACxB;KACC,OAAOxU,KAAKC,UAAUuU;AACvB,MAAE,OAAOrX;KACR,OAAO,iCAAiCA,MAAM/D;AAC/C;AACD;;;GCoBArC,OAAOD,UA7RP,SAAewD;IAqDd,SAASoiG,YAAYzhG;KACpB,IAAI0hG,UAEAC,iBACAC,cAFAC,iBAAiB;KAIrB,SAAS5+F,SAAS3C;MAEjB,KAAK2C,MAAM/C,SACV;MAGD,MAAM6U,OAAO9R,OAGP6mF,OAAOr6E,OAAO,IAAIzF,OAClBjL,KAAK+qF,QAAQ4X,YAAY5X;MAC/B/0E,KAAKhC,OAAOhU,IACZgW,KAAK++E,OAAO4N,UACZ3sF,KAAK+0E,OAAOA,MACZ4X,WAAW5X,MAEXxpF,KAAK,KAAKmhG,YAAYK,OAAOxhG,KAAK;MAEX,mBAAZA,KAAK,MAEfA,KAAKu4B,QAAQ;MAId,IAAIv7B,QAAQ;MACZgD,KAAK,KAAKA,KAAK,GAAGU,QAAQ,kBAAiB,CAACyb,OAAO7H;OAElD,IAAc,SAAV6H,OACH,OAAO;OAERnf;OACA,MAAMykG,YAAYN,YAAYD,WAAW5sF;OACzC,IAAyB,qBAAdmtF,WAA0B;QACpC,MAAMjhE,MAAMxgC,KAAKhD;QACjBmf,QAAQslF,UAAUjkG,KAAKiX,MAAM+rB,MAG7BxgC,KAAK9C,OAAOF,OAAO,IACnBA;AACD;OACA,OAAOmf;AAAK,WAIbglF,YAAYvB,WAAWpiG,KAAKiX,MAAMzU;OAEpByU,KAAK1U,OAAOohG,YAAYphG,KAChCyZ,MAAM/E,MAAMzU;AACnB;KAgCA,OA9BA2C,MAAMjD,YAAYA,WAClBiD,MAAMk9F,YAAYsB,YAAYtB,aAC9Bl9F,MAAMo9F,QAAQoB,YAAYO,YAAYhiG;KACtCiD,MAAMrB,SAASA,QACfqB,MAAMtB,UAAU8/F,YAAY9/F,SAE5B7B,OAAOkM,eAAe/I,OAAO,WAAW;MACvCgJ,aAAY;MACZg2F,eAAc;MACdnlG,KAAK,MACmB,SAAnB+kG,iBACIA,kBAEJF,oBAAoBF,YAAYhhG,eACnCkhG,kBAAkBF,YAAYhhG;MAC9BmhG,eAAeH,YAAYvhG,QAAQF,aAG7B4hG;MAERllG,KAAK6c;OACJsoF,iBAAiBtoF;AAAC;SAKY,qBAArBkoF,YAAYS,QACtBT,YAAYS,KAAKj/F,QAGXA;AACR;IAEA,SAASrB,OAAO5B,WAAWi4B;KAC1B,MAAMkqE,WAAWV,YAAYxlG,KAAK+D,kBAAkC,MAAdi4B,YAA4B,MAAMA,aAAaj4B;KAErG,OADAmiG,SAAS9hG,MAAMpE,KAAKoE,KACb8hG;AACR;IAuCA,SAASC,gBAAgB32F,QAAQ42F;KAChC,IAAIC,cAAc,GACdC,gBAAgB,GAChBC,aAAa,GACbC,aAAa;KAEjB,MAAOH,cAAc72F,OAAO/J,UAC3B,IAAI6gG,gBAAgBF,SAAS3gG,WAAW2gG,SAASE,mBAAmB92F,OAAO62F,gBAA4C,QAA5BD,SAASE,iBAEnE,QAA5BF,SAASE,kBACZC,YAAYD;KACZE,aAAaH,aACbC,oBAEAD,eACAC,uBAEK;MAAA,KAAmB,MAAfC,WAMV,QAAO;MAJPD,gBAAgBC,YAAY,GAC5BC,cACAH,cAAcG;AAGf;KAID,MAAOF,gBAAgBF,SAAS3gG,UAAsC,QAA5B2gG,SAASE,kBAClDA;KAGD,OAAOA,kBAAkBF,SAAS3gG;AACnC;IAgEA,OAzRA+/F,YAAYx+F,QAAQw+F,aACpBA,YAAY7tE,UAAU6tE,aACtBA,YAAYK,SAsQZ,SAAgBhhE;KACf,IAAIA,eAAenjC,OAClB,OAAOmjC,IAAI2yD,SAAS3yD,IAAI3iC;KAEzB,OAAO2iC;AACR,OA1QA2gE,YAAYthG,UA8NZ;KACC,MAAMM,aAAa,KACfghG,YAAYiB,UACZjB,YAAYkB,MAAM9hG,KAAIb,aAAa,MAAMA,cAC3C0D,KAAK;KAEP,OADA+9F,YAAY7hG,OAAO,KACZa;AACR,OApOAghG,YAAY7hG,SAsJZ,SAAgBa;KACfghG,YAAYlB,KAAK9/F,aACjBghG,YAAYhhG,aAAaA,YAEzBghG,YAAYiB,QAAQ;KACpBjB,YAAYkB,QAAQ;KAEpB,MAAM/hG,SAA+B,mBAAfH,aAA0BA,aAAa,IAC3DM,OACAC,QAAQ,KAAK,KACbJ,MAAM,KACNyG,OAAOjE;KAET,KAAK,MAAMtC,MAAMF,OACF,QAAVE,GAAG,KACN2gG,YAAYkB,MAAMxlG,KAAK2D,GAAG/C,MAAM,MAEhC0jG,YAAYiB,MAAMvlG,KAAK2D;AAG1B,OAzKA2gG,YAAYvhG,UA4OZ,SAAiB7B;KAChB,KAAK,MAAMyzF,QAAQ2P,YAAYkB,OAC9B,IAAIP,gBAAgB/jG,MAAMyzF,OACzB,QAAO;KAIT,KAAK,MAAMhxF,MAAM2gG,YAAYiB,OAC5B,IAAIN,gBAAgB/jG,MAAMyC,KACzB,QAAO;KAIT,QAAO;AACR,OAzPA2gG,YAAYrB,WAAW,oBAAQ,OAC/BqB,YAAY9/F,UA4QZ;KACC8B,QAAQ69F,KAAK;AACd,OA5QAxhG,OAAOuE,KAAKhF,KAAKrB,SAAQoN;KACxBq2F,YAAYr2F,OAAO/L,IAAI+L;AAAI,SAO5Bq2F,YAAYiB,QAAQ,IACpBjB,YAAYkB,QAAQ,IAOpBlB,YAAYD,aAAa,CAAC;IAkB1BC,YAAYO,cAVZ,SAAqBhiG;KACpB,IAAI4iG,OAAO;KAEX,KAAK,IAAI5pF,IAAI,GAAGA,IAAIhZ,UAAU0B,QAAQsX,KACrC4pF,QAASA,QAAQ,KAAKA,OAAQ5iG,UAAUs5C,WAAWtgC;KACnD4pF,QAAQ;KAGT,OAAOnB,YAAYF,OAAO9vF,KAAK+tF,IAAIoD,QAAQnB,YAAYF,OAAO7/F;AAC/D,OA6OA+/F,YAAY7hG,OAAO6hG,YAAYd,SAExBc;AACR;;;GC5RuB,sBAAZriG,WAA4C,eAAjBA,QAAQnB,SAA2C,MAApBmB,QAAQyjG,WAAoBzjG,QAAQyhG,SACxG/kG,OAAOD,UAAU,oBAAjB,QAEAC,OAAOD,UAAU,oBAAjB;;;GCJD,MAAMinG,MAAM,oBAAQ,OACdC,OAAO,oBAAQ;GAMrBlnG,QAAQqmG,OA2NR,SAAcj/F;IACbA,MAAM+/F,cAAc,CAAC;IAErB,MAAM3+F,OAAOvE,OAAOuE,KAAKxI,QAAQmnG;IACjC,KAAK,IAAIhqF,IAAI,GAAGA,IAAI3U,KAAK3C,QAAQsX,KAChC/V,MAAM+/F,YAAY3+F,KAAK2U,MAAMnd,QAAQmnG,YAAY3+F,KAAK2U;AAExD,MAjOAnd,QAAQwE,MAoLR,YAAgBC;IACf,OAAOlB,QAAQ6jG,OAAO1iG,MAAMwiG,KAAKG,kBAAkBrnG,QAAQmnG,gBAAgB1iG,QAAQ;AACpF,MArLAzE,QAAQqkG,aAyJR,SAAoB5/F;IACnB,OAAON,WAAW3B,MAAI,aAAepC;IAErC,IAAIkkG,WAAW;KACd,MAAM7zB,IAAIrwE,KAAKokG,OACT8C,YAAY,SAAc72B,IAAI,IAAIA,IAAI,SAASA,IAC/CrvD,SAAS,KAAKkmF,eAAe9kG;KAEnCiC,KAAK,KAAK2c,SAAS3c,KAAK,GAAGM,MAAM,MAAM8C,KAAK,OAAOuZ,SACnD3c,KAAKnD,KAAKgmG,YAAY,OAAOrnG,OAAOD,QAAQukG,SAASnkG,KAAK8W,QAAQ;AACnE,WACCzS,KAAK,KAIP;KACC,IAAIzE,QAAQmnG,YAAYI,UACvB,OAAO;KAER,QAAO,IAAIp5F,MAAOwgB,gBAAgB;AACnC,KATY64E,KAAYhlG,OAAO,MAAMiC,KAAK;AAE1C,MArKAzE,QAAQ0kG,OA4LR,SAAc9/F;IACTA,aACHrB,QAAQC,IAAIC,QAAQmB,oBAIbrB,QAAQC,IAAIC;AAErB,MAnMAzD,QAAQ8kG,OA4MR;IACC,OAAOvhG,QAAQC,IAAIC;AACpB,MA7MAzD,QAAQskG,YA0IR;IACC,OAAO,YAAYtkG,QAAQmnG,cAC1B5/F,QAAQvH,QAAQmnG,YAAYzB,UAC5BuB,IAAIQ,OAAOlkG,QAAQ6jG,OAAOM;AAC5B,MA7IA1nG,QAAQ8F,UAAUohG,KAAKS,WACtB,WACA;GAOD3nG,QAAQ0lG,SAAS,EAAC,GAAG,GAAG,GAAG,GAAG,GAAG;GAEjC;IAGC,MAAMkC,gBAAgB,oBAAQ;IAE1BA,kBAAkBA,cAAcR,UAAUQ,eAAelhG,SAAS,MACrE1G,QAAQ0lG,SAAS,EAChB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA;AAGH,KAAE,OAAOr/F,QAET;GAQArG,QAAQmnG,cAAcljG,OAAOuE,KAAKjF,QAAQC,KAAKgI,QAAO+D,OAC9C,WAAW7J,KAAK6J,OACrB0vB,QAAO,CAAC5vB,KAAKE;IAEf,MAAMykB,OAAOzkB,IACXqf,UAAU,GACV1mB,cACA/C,QAAQ,cAAa,CAAC4pC,GAAGh/B,MAClBA,EAAE48B;IAIX,IAAI1H,MAAM1hC,QAAQC,IAAI+L;IAYtB,OAVC01B,QADG,2BAA2Bv/B,KAAKu/B,SAEzB,6BAA6Bv/B,KAAKu/B,SAE1B,WAARA,MACJ,OAEArxB,OAAOqxB;IAGd51B,IAAI2kB,QAAQiR,KACL51B;AAAG,OACR,CAAC,IA2FJpP,OAAOD,UAAU,oBAAQ,KAAR,CAAoBA;GAErC,OAAM,cAAeC,OAAOD;GAM5B2lG,WAAWroF,IAAI,SAAUI;IAExB,OADAtd,KAAK+mG,YAAYzB,SAAStlG,KAAKkkG,WACxB4C,KAAKz4F,QAAQiP,GAAGtd,KAAK+mG,aAC1BpiG,MAAM,MACNC,KAAImqB,OAAOA,IAAIjqB,SACf2C,KAAK;AACR,MAMA89F,WAAW7Z,IAAI,SAAUpuE;IAExB,OADAtd,KAAK+mG,YAAYzB,SAAStlG,KAAKkkG,WACxB4C,KAAKz4F,QAAQiP,GAAGtd,KAAK+mG;AAC7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GlPtQA,qDACA,+CAEA,uDACA,sDACA,0CACA,mCACA,oDAGM,SAAQ;GAAA,iBAAY,sBAEpB,6BAGL,gBAGwB,MAAvB,QAAQ,cACR,QAAQ,SACP,IAAI,KAAK,QAAQ,QAEX;OACH;IACH,YAAY,QAAQ;OAGf;GAkCR,MAAa,wBAA4C;IAOxD,YAAY,OAAkB;KAC7B,MAAM,OACN,KAAK,UAAU;MAAE,WAAM;QACvB,KAAK,QAAyB,mBAAV,QAAqB,IAAI,UAAI,SAAS,OAC1D,KAAK,eAAe,MAAM,WAAW;KACrC,MAAM,6CAA6C,KAAK,MAAM;KAG9D,MAAM,QAAQ,KAAK,MAAM,YAAY,KAAK,MAAM,MAAM,QACrD,YACA,KAEK,OAAO,KAAK,MAAM,OACrB,SAAS,KAAK,MAAM,MAAM,MACF,aAAxB,KAAK,MAAM,WACX,MACA;KACH,KAAK,cAAc;MAElB,eAAe,EAAC;SACZ,OAAO,KAAK,MAAM,aAAa;MACnC;MACA;;AAEF;IAMA,aAAM,CACL,KACA;KAEA,OAAM,SAAY;KAElB,KAAK,KAAK,MACT,MAAM,IAAI,UAAU;KAIrB,IAAI;KACmB,aAAnB,MAAM,YACT,MAAM,6BAA6B,KAAK;KACxC,SAAS,IAAI,QAAQ,2BAA2B,KAAK,kBAErD,MAAM,6BAA6B,KAAK;KACxC,SAAS,IAAI,QAAQ,KAAK;KAG3B,MAAM,UACwB,qBAAtB,KAAK,eACT,KAAK,iBACL;SAAK,KAAK;QACR,OAAO,IAAI,OAAO,KAAK,QAAQ,IAAI,KAAK,UAAU,KAAK;KAC7D,IAAI,UAAU,WAAW,QAAQ,KAAK;KAGtC,IAAI,MAAM,YAAY,MAAM,UAAU;MACrC,MAAM,OAAO,GAAG,mBACf,MAAM,aACF,mBAAmB,MAAM;MAC9B,QAAQ,yBAAyB,SAAS,OAAO,KAChD,MACC,SAAS;;KAGZ,QAAQ,OAAO,GAAG,QAAQ,KAAK,QAE1B,QAAQ,wBACZ,QAAQ,sBAAsB,KAAK,YAChC,eACA;KAEJ,KAAK,MAAM,QAAQ,OAAO,KAAK,UAC9B,WAAW,GAAG,SAAS,QAAQ;KAGhC,MAAM,wBAAuB,8CAAmB;KAEhD,OAAO,MAAM,GAAG;KAEhB,OAAM,SAAS,kBAAqB;KAIpC,IAHA,IAAI,KAAK,gBAAgB,UACzB,KAAK,KAAK,gBAAgB,SAAS;KAER,QAAvB,QAAQ,YAGX,OAFA,IAAI,KAAK,UAAU,SAEf,KAAK,kBAGR,MAAM;KACC,IAAI,QAAQ;SACf,KACF,2BAA2B,OAC3B,QACA,QACA;MAED;WAIK;KAcR,OAAO;KAEP,MAAM,aAAa,IAAI,IAAI,OAAO;MAAE,WAAU;;KAe9C,OAdA,WAAW,YAAW,GAGtB,IAAI,KAAK,WAAW;MACnB,MAAM,+CACN,qBAAO,EAAE,cAAc,UAAU;MAKjC,EAAE,KAAK,WACP,EAAE,KAAK;AAAK,UAGN;AACR;;GAGD,SAAS,OAAO;IACf,OAAO;AACR;GAEA,SAAS,KACR,QACG;IAIH,MAAM,MAAM;IAGZ,IAAI;IACJ,KAAK,OAAO,KACN,KAAK,SAAS,SAClB,IAAI,OAAO,IAAI;IAGjB,OAAO;AACR;GArKQ,4BAAY,EAAC,QAAQ,WADhB;;;;;;;;;;;;GmP7Db,MAIM,SAAQ,GAJd,2CAIc,SAAY;GAQ1B,sCACC;IAEA,OAAO,IAAI,SAAQ,CAAC,SAAS;KAK5B,IAAI,gBAAgB;KACpB,MAAM,UAAoB;KAE1B,SAAS;MACR,MAAM,IAAI,OAAO;MACb,IA0BL,SAAgB;OACf,QAAQ,KAAK,IACb,iBAAiB,EAAE;OAEnB,MAAM,WAAW,OAAO,OAAO,SAAS,gBAClC,eAAe,SAAS,QAAQ;OAEtC,KAAsB,MAAlB,cAIH,OAFA,MAAM;YACN;OAID,MAAM,cAAc,SAClB,MAAM,GAAG,cACT,SAAS,SACT,MAAM,SACF,YAAY,YAAY;OAC9B,KAAK,WAEJ,OADA,OAAO,WACA,OACN,IAAI,MAAM;OAGZ,MAAM,iBAAiB,UAAU,MAAM,MACjC,cAAc,eAAe,IAC7B,aAAa,eAAe,MAAM,GAAG,KAAK,MAC1C,UAA+B;OACrC,KAAK,MAAM,UAAU,aAAa;QACjC,KAAK,QAAQ;QACb,MAAM,aAAa,OAAO,QAAQ;QAClC,KAAoB,MAAhB,YAEH,OADA,OAAO,WACA,OACN,IAAI,MACH,gDAAgD;QAInD,MAAM,MAAM,OAAO,MAAM,GAAG,YAAY,eAClC,QAAQ,OAAO,MAAM,aAAa,GAAG,aACrC,UAAU,QAAQ;QACD,mBAAZ,UACV,QAAQ,OAAO,EAAC,SAAS,UACf,MAAM,QAAQ,WACxB,QAAQ,KAAK,SAEb,QAAQ,OAAO;;OAGjB,MAAM,oCAAoC,WAAW,UACrD,WACA,QAAQ;QACP,SAAS;SACR;SACA;SACA;;QAED;;AAEF,OAvFQ,CAAO,KACT,OAAO,KAAK,YAAY;AAC9B;KAEA,SAAS;MACR,OAAO,eAAe,OAAO,QAC7B,OAAO,eAAe,SAAS,UAC/B,OAAO,eAAe,YAAY;AACnC;KAEA,SAAS;MACR,WACA,MAAM,UACN,OACC,IAAI,MACH;AAGH;KAEA,SAAS,QAAQ;MAChB,WACA,MAAM,cAAc,MACpB,OAAO;AACR;KAiEA,OAAO,GAAG,SAAS,UACnB,OAAO,GAAG,OAAO,QAEjB;AAAM;AAER;;;GCjHAnnG,QAAQqkG,aA8IR,SAAoB5/F;IAQnB,IAPAA,KAAK,MAAMrE,KAAKkkG,YAAY,OAAO,MAClClkG,KAAK+D,aACJ/D,KAAKkkG,YAAY,QAAQ,OAC1B7/F,KAAK,MACJrE,KAAKkkG,YAAY,QAAQ,OAC1B,MAAMrkG,OAAOD,QAAQukG,SAASnkG,KAAK8W;KAE/B9W,KAAKkkG,WACT;IAGD,MAAM7zB,IAAI,YAAYrwE,KAAKokG;IAC3B//F,KAAK9C,OAAO,GAAG,GAAG8uE,GAAG;IAKrB,IAAIhvE,QAAQ,GACRgjG,QAAQ;IACZhgG,KAAK,GAAGU,QAAQ,gBAAeyb;KAChB,SAAVA,UAGJnf,SACc,SAAVmf,UAGH6jF,QAAQhjG;AACT,SAGDgD,KAAK9C,OAAO8iG,OAAO,GAAGh0B;AACvB,MA9KAzwE,QAAQ0kG,OAgMR,SAAc9/F;IACb;KACKA,aACH5E,QAAQ2kG,QAAQC,QAAQ,SAAShgG,cAEjC5E,QAAQ2kG,QAAQE,WAAW;AAE7B,MAAE,OAAOx+F,QAGT;AACD,MA1MArG,QAAQ8kG,OAkNR;IACC,IAAItmF;IACJ;KACCA,IAAIxe,QAAQ2kG,QAAQI,QAAQ;AAC7B,MAAE,OAAO1+F,QAGT;KAGKmY,KAAwB,sBAAZjb,WAA2B,SAASA,YACpDib,IAAIjb,QAAQC,IAAIC;IAGjB,OAAO+a;AACR,MAhOAxe,QAAQskG,YAyGR;IAIC,IAAsB,sBAAXtrF,UAA0BA,OAAOzV,YAAoC,eAAxByV,OAAOzV,QAAQnB,QAAuB4W,OAAOzV,QAAQyhG,SAC5G,QAAO;IAIR,IAAyB,sBAAdvrF,aAA6BA,UAAUsL,aAAatL,UAAUsL,UAAU7c,cAAc0Y,MAAM,0BACtG,QAAO;IAGR,IAAIrD;IAKJ,OAA4B,sBAAbtE,YAA4BA,SAASgsF,mBAAmBhsF,SAASgsF,gBAAgBC,SAASjsF,SAASgsF,gBAAgBC,MAAMC,oBAEpH,sBAAXnsF,UAA0BA,OAAOpR,YAAYoR,OAAOpR,QAAQw9F,WAAYpsF,OAAOpR,QAAQy9F,aAAarsF,OAAOpR,QAAQ28E,UAGrG,sBAAd9qE,aAA6BA,UAAUsL,cAAcxH,IAAI9D,UAAUsL,UAAU7c,cAAc0Y,MAAM,sBAAsBwB,SAAS7E,EAAE,IAAI,OAAO,MAE/H,sBAAd9D,aAA6BA,UAAUsL,aAAatL,UAAUsL,UAAU7c,cAAc0Y,MAAM;AACtG,MAlIA5gB,QAAQ2kG,UA4OR;IACC;KAGC,OAAOW;AACR,MAAE,OAAOj/F,QAGT;AACD,IArPkBk/F,IAClBvlG,QAAQ8F,UAAU;IACjB,IAAI0/F,UAAS;IAEb,OAAO;KACDA,WACJA,UAAS,GACT59F,QAAQ69F,KAAK;AACd;AAED,KATiB,IAelBzlG,QAAQ0lG,SAAS,EAChB,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA;GAyFD1lG,QAAQwE,MAAMoD,QAAQR,SAASQ,QAAQpD,OAAO,QAAS,IAkEvDvE,OAAOD,UAAU,oBAAQ,KAAR,CAAoBA;GAErC,OAAM,cAAeC,OAAOD;GAM5B2lG,WAAW9+D,IAAI,SAAUnpB;IACxB;KACC,OAAOxU,KAAKC,UAAUuU;AACvB,MAAE,OAAOrX;KACR,OAAO,iCAAiCA,MAAM/D;AAC/C;AACD;;;GCoBArC,OAAOD,UA7RP,SAAewD;IAqDd,SAASoiG,YAAYzhG;KACpB,IAAI0hG,UAEAC,iBACAC,cAFAC,iBAAiB;KAIrB,SAAS5+F,SAAS3C;MAEjB,KAAK2C,MAAM/C,SACV;MAGD,MAAM6U,OAAO9R,OAGP6mF,OAAOr6E,OAAO,IAAIzF,OAClBjL,KAAK+qF,QAAQ4X,YAAY5X;MAC/B/0E,KAAKhC,OAAOhU,IACZgW,KAAK++E,OAAO4N,UACZ3sF,KAAK+0E,OAAOA,MACZ4X,WAAW5X,MAEXxpF,KAAK,KAAKmhG,YAAYK,OAAOxhG,KAAK;MAEX,mBAAZA,KAAK,MAEfA,KAAKu4B,QAAQ;MAId,IAAIv7B,QAAQ;MACZgD,KAAK,KAAKA,KAAK,GAAGU,QAAQ,kBAAiB,CAACyb,OAAO7H;OAElD,IAAc,SAAV6H,OACH,OAAO;OAERnf;OACA,MAAMykG,YAAYN,YAAYD,WAAW5sF;OACzC,IAAyB,qBAAdmtF,WAA0B;QACpC,MAAMjhE,MAAMxgC,KAAKhD;QACjBmf,QAAQslF,UAAUjkG,KAAKiX,MAAM+rB,MAG7BxgC,KAAK9C,OAAOF,OAAO,IACnBA;AACD;OACA,OAAOmf;AAAK,WAIbglF,YAAYvB,WAAWpiG,KAAKiX,MAAMzU;OAEpByU,KAAK1U,OAAOohG,YAAYphG,KAChCyZ,MAAM/E,MAAMzU;AACnB;KAgCA,OA9BA2C,MAAMjD,YAAYA,WAClBiD,MAAMk9F,YAAYsB,YAAYtB,aAC9Bl9F,MAAMo9F,QAAQoB,YAAYO,YAAYhiG;KACtCiD,MAAMrB,SAASA,QACfqB,MAAMtB,UAAU8/F,YAAY9/F,SAE5B7B,OAAOkM,eAAe/I,OAAO,WAAW;MACvCgJ,aAAY;MACZg2F,eAAc;MACdnlG,KAAK,MACmB,SAAnB+kG,iBACIA,kBAEJF,oBAAoBF,YAAYhhG,eACnCkhG,kBAAkBF,YAAYhhG;MAC9BmhG,eAAeH,YAAYvhG,QAAQF,aAG7B4hG;MAERllG,KAAK6c;OACJsoF,iBAAiBtoF;AAAC;SAKY,qBAArBkoF,YAAYS,QACtBT,YAAYS,KAAKj/F,QAGXA;AACR;IAEA,SAASrB,OAAO5B,WAAWi4B;KAC1B,MAAMkqE,WAAWV,YAAYxlG,KAAK+D,kBAAkC,MAAdi4B,YAA4B,MAAMA,aAAaj4B;KAErG,OADAmiG,SAAS9hG,MAAMpE,KAAKoE,KACb8hG;AACR;IAuCA,SAASC,gBAAgB32F,QAAQ42F;KAChC,IAAIC,cAAc,GACdC,gBAAgB,GAChBC,aAAa,GACbC,aAAa;KAEjB,MAAOH,cAAc72F,OAAO/J,UAC3B,IAAI6gG,gBAAgBF,SAAS3gG,WAAW2gG,SAASE,mBAAmB92F,OAAO62F,gBAA4C,QAA5BD,SAASE,iBAEnE,QAA5BF,SAASE,kBACZC,YAAYD;KACZE,aAAaH,aACbC,oBAEAD,eACAC,uBAEK;MAAA,KAAmB,MAAfC,WAMV,QAAO;MAJPD,gBAAgBC,YAAY,GAC5BC,cACAH,cAAcG;AAGf;KAID,MAAOF,gBAAgBF,SAAS3gG,UAAsC,QAA5B2gG,SAASE,kBAClDA;KAGD,OAAOA,kBAAkBF,SAAS3gG;AACnC;IAgEA,OAzRA+/F,YAAYx+F,QAAQw+F,aACpBA,YAAY7tE,UAAU6tE,aACtBA,YAAYK,SAsQZ,SAAgBhhE;KACf,IAAIA,eAAenjC,OAClB,OAAOmjC,IAAI2yD,SAAS3yD,IAAI3iC;KAEzB,OAAO2iC;AACR,OA1QA2gE,YAAYthG,UA8NZ;KACC,MAAMM,aAAa,KACfghG,YAAYiB,UACZjB,YAAYkB,MAAM9hG,KAAIb,aAAa,MAAMA,cAC3C0D,KAAK;KAEP,OADA+9F,YAAY7hG,OAAO,KACZa;AACR,OApOAghG,YAAY7hG,SAsJZ,SAAgBa;KACfghG,YAAYlB,KAAK9/F,aACjBghG,YAAYhhG,aAAaA,YAEzBghG,YAAYiB,QAAQ;KACpBjB,YAAYkB,QAAQ;KAEpB,MAAM/hG,SAA+B,mBAAfH,aAA0BA,aAAa,IAC3DM,OACAC,QAAQ,KAAK,KACbJ,MAAM,KACNyG,OAAOjE;KAET,KAAK,MAAMtC,MAAMF,OACF,QAAVE,GAAG,KACN2gG,YAAYkB,MAAMxlG,KAAK2D,GAAG/C,MAAM,MAEhC0jG,YAAYiB,MAAMvlG,KAAK2D;AAG1B,OAzKA2gG,YAAYvhG,UA4OZ,SAAiB7B;KAChB,KAAK,MAAMyzF,QAAQ2P,YAAYkB,OAC9B,IAAIP,gBAAgB/jG,MAAMyzF,OACzB,QAAO;KAIT,KAAK,MAAMhxF,MAAM2gG,YAAYiB,OAC5B,IAAIN,gBAAgB/jG,MAAMyC,KACzB,QAAO;KAIT,QAAO;AACR,OAzPA2gG,YAAYrB,WAAW,oBAAQ,OAC/BqB,YAAY9/F,UA4QZ;KACC8B,QAAQ69F,KAAK;AACd,OA5QAxhG,OAAOuE,KAAKhF,KAAKrB,SAAQoN;KACxBq2F,YAAYr2F,OAAO/L,IAAI+L;AAAI,SAO5Bq2F,YAAYiB,QAAQ,IACpBjB,YAAYkB,QAAQ,IAOpBlB,YAAYD,aAAa,CAAC;IAkB1BC,YAAYO,cAVZ,SAAqBhiG;KACpB,IAAI4iG,OAAO;KAEX,KAAK,IAAI5pF,IAAI,GAAGA,IAAIhZ,UAAU0B,QAAQsX,KACrC4pF,QAASA,QAAQ,KAAKA,OAAQ5iG,UAAUs5C,WAAWtgC;KACnD4pF,QAAQ;KAGT,OAAOnB,YAAYF,OAAO9vF,KAAK+tF,IAAIoD,QAAQnB,YAAYF,OAAO7/F;AAC/D,OA6OA+/F,YAAY7hG,OAAO6hG,YAAYd,SAExBc;AACR;;;GC5RuB,sBAAZriG,WAA4C,eAAjBA,QAAQnB,SAA2C,MAApBmB,QAAQyjG,WAAoBzjG,QAAQyhG,SACxG/kG,OAAOD,UAAU,oBAAjB,QAEAC,OAAOD,UAAU,oBAAjB;;;GCJD,MAAMinG,MAAM,oBAAQ,OACdC,OAAO,oBAAQ;GAMrBlnG,QAAQqmG,OA2NR,SAAcj/F;IACbA,MAAM+/F,cAAc,CAAC;IAErB,MAAM3+F,OAAOvE,OAAOuE,KAAKxI,QAAQmnG;IACjC,KAAK,IAAIhqF,IAAI,GAAGA,IAAI3U,KAAK3C,QAAQsX,KAChC/V,MAAM+/F,YAAY3+F,KAAK2U,MAAMnd,QAAQmnG,YAAY3+F,KAAK2U;AAExD,MAjOAnd,QAAQwE,MAoLR,YAAgBC;IACf,OAAOlB,QAAQ6jG,OAAO1iG,MAAMwiG,KAAKG,kBAAkBrnG,QAAQmnG,gBAAgB1iG,QAAQ;AACpF,MArLAzE,QAAQqkG,aAyJR,SAAoB5/F;IACnB,OAAON,WAAW3B,MAAI,aAAepC;IAErC,IAAIkkG,WAAW;KACd,MAAM7zB,IAAIrwE,KAAKokG,OACT8C,YAAY,SAAc72B,IAAI,IAAIA,IAAI,SAASA,IAC/CrvD,SAAS,KAAKkmF,eAAe9kG;KAEnCiC,KAAK,KAAK2c,SAAS3c,KAAK,GAAGM,MAAM,MAAM8C,KAAK,OAAOuZ,SACnD3c,KAAKnD,KAAKgmG,YAAY,OAAOrnG,OAAOD,QAAQukG,SAASnkG,KAAK8W,QAAQ;AACnE,WACCzS,KAAK,KAIP;KACC,IAAIzE,QAAQmnG,YAAYI,UACvB,OAAO;KAER,QAAO,IAAIp5F,MAAOwgB,gBAAgB;AACnC,KATY64E,KAAYhlG,OAAO,MAAMiC,KAAK;AAE1C,MArKAzE,QAAQ0kG,OA4LR,SAAc9/F;IACTA,aACHrB,QAAQC,IAAIC,QAAQmB,oBAIbrB,QAAQC,IAAIC;AAErB,MAnMAzD,QAAQ8kG,OA4MR;IACC,OAAOvhG,QAAQC,IAAIC;AACpB,MA7MAzD,QAAQskG,YA0IR;IACC,OAAO,YAAYtkG,QAAQmnG,cAC1B5/F,QAAQvH,QAAQmnG,YAAYzB,UAC5BuB,IAAIQ,OAAOlkG,QAAQ6jG,OAAOM;AAC5B,MA7IA1nG,QAAQ8F,UAAUohG,KAAKS,WACtB,WACA;GAOD3nG,QAAQ0lG,SAAS,EAAC,GAAG,GAAG,GAAG,GAAG,GAAG;GAEjC;IAGC,MAAMkC,gBAAgB,oBAAQ;IAE1BA,kBAAkBA,cAAcR,UAAUQ,eAAelhG,SAAS,MACrE1G,QAAQ0lG,SAAS,EAChB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA;AAGH,KAAE,OAAOr/F,QAET;GAQArG,QAAQmnG,cAAcljG,OAAOuE,KAAKjF,QAAQC,KAAKgI,QAAO+D,OAC9C,WAAW7J,KAAK6J,OACrB0vB,QAAO,CAAC5vB,KAAKE;IAEf,MAAMykB,OAAOzkB,IACXqf,UAAU,GACV1mB,cACA/C,QAAQ,cAAa,CAAC4pC,GAAGh/B,MAClBA,EAAE48B;IAIX,IAAI1H,MAAM1hC,QAAQC,IAAI+L;IAYtB,OAVC01B,QADG,2BAA2Bv/B,KAAKu/B,SAEzB,6BAA6Bv/B,KAAKu/B,SAE1B,WAARA,MACJ,OAEArxB,OAAOqxB;IAGd51B,IAAI2kB,QAAQiR,KACL51B;AAAG,OACR,CAAC,IA2FJpP,OAAOD,UAAU,oBAAQ,KAAR,CAAoBA;GAErC,OAAM,cAAeC,OAAOD;GAM5B2lG,WAAWroF,IAAI,SAAUI;IAExB,OADAtd,KAAK+mG,YAAYzB,SAAStlG,KAAKkkG,WACxB4C,KAAKz4F,QAAQiP,GAAGtd,KAAK+mG,aAC1BpiG,MAAM,MACNC,KAAImqB,OAAOA,IAAIjqB,SACf2C,KAAK;AACR,MAMA89F,WAAW7Z,IAAI,SAAUpuE;IAExB,OADAtd,KAAK+mG,YAAYzB,SAAStlG,KAAKkkG,WACxB4C,KAAKz4F,QAAQiP,GAAGtd,KAAK+mG;AAC7B;;;;GCpQAljG,OAAOkM,eAAenQ,SAAS,cAAc;IAC3CyI,QAAO;OAETzI,QAAQ6nG,KAAK7nG,QAAQ8nG,sBAAiB;GAEtC,IAEgCz4F,KAF5B04F,OAE4B14F,MAFC,oBAAQ,UAGzBA,IAAI24F,aAAa34F,MAAM;IACnC0oB,SAAS1oB;;GAWb,MAAMy4F;IACJ,WAAAnnG,IAAe8D;KACbrE,KAAK6nG,OAAO,CAAC,GAETxjG,KAAKoB,UACPzF,KAAKynG,GAAG5pF,MAAM7d,MAAMqE;AAExB;IAEA,QAAAyjG,CAASr/D;KACP,IAAIA,QAA8B,MAAtBA,KAAKnnC,QAAQ,MAAY;MAEnC,IAAIymG,qBAAqB,EAAC,KAAK,MAAKnjG,KAAIojG,OAC/Bv/D,KAAKnnC,QAAQ0mG,OACnB58F,QAAO/J,SACDA,SAAS,KAEd4mG,aAAazyF,KAAKG,OAAOoyF,qBACzB54F,MAAMs5B,KAAKja,UAAU,GAAGy5E,YAAYnjG,QACpCuD,QAAQogC,KAAKja,UAAUy5E,aAAa,GAAGnjG;MAE3C,IAAI9E,KAAK6nG,KAAKhrF,eAAe1N,MAE3B,IAAI3M,MAAMC,QAAQzC,KAAK6nG,KAAK14F,OAE1BnP,KAAK6nG,KAAK14F,KAAKjO,KAAKmH,aACf;OAEL,IAAI6/F,WAAWloG,KAAK6nG,KAAK14F;OACzBnP,KAAK6nG,KAAK14F,OAAO,EAAC+4F,UAAU7/F;AAC9B,aACK;OAEL,MAAM8/F,eAAe9/F,MAAMtD,QAAQ,MAAM,OACxCA,QAAQ,QAAQ,KAChBA,QAAQ,QAAQ;OAEjB/E,KAAK6nG,KAAK14F,OAAOi5F,SAASt/F,KAAKiO,MAAM,MAAMoxF,eAAe;AAC5D;AACF;AACF;IAEA,OAAAE,CAAQpvB;KACN,IAEIlQ,QAFO4+B,IAAIhwE,QAAQ2wE,aAAarvB,MAAM,SAEzBt0E,MAAM,UACnB4jG,KAAKvoG;KAET,KAAK,IAAI+c,IAAI,GAAGA,IAAIgsD,MAAMtjE,QAAQsX,KAAK;MACrC,IAAI0rB,OAAOsgC,MAAMhsD;MAEjB,MAA2C,SAApC0rB,KAAKja,UAAUia,KAAKhjC,SAAS,MAAa;OAC/CgjC,OAAOA,KAAK3mC,MAAM,IAAI,IAEtB2mC,QADesgC,MAAMhsD,IAAI,GACFjY,QACvBiY;AACF;MAEAwrF,GAAGT,SAASr/D;AACd;AACF;IAEA,EAAAg/D,IAAMpjG;KACJ,KAAK,IAAI0Y,IAAI,GAAGA,IAAI1Y,KAAKoB,QAAQsX,KAC/B/c,KAAKqoG,QAAQhkG,KAAK0Y;AAEtB;IAEA,GAAAlc,CAAIsO,KAAKye;KACP,IAAI5tB,KAAK6nG,KAAKhrF,eAAe1N,MAAM;MACjC,IAAI3M,MAAMC,QAAQzC,KAAK6nG,KAAK14F,OAAO;OACjC,IAAIq5F,MAAM;OAEV,KAAK,IAAIzrF,IAAI,GAAGA,IAAI/c,KAAK6nG,KAAK14F,KAAK1J,QAAQsX,KACzCyrF,IAAIzrF,KAAK/c,KAAKyoG,YAAYzoG,KAAK6nG,KAAK14F,KAAK4N;OAG3C,OAAOyrF;AACT;MACE,YAAiC,MAAnBxoG,KAAK6nG,KAAK14F,OAAuB,KAAKnP,KAAKyoG,YAAYzoG,KAAK6nG,KAAK14F;AAEnF;KAEA,OAAOye;AACT;IAEA,OAAA86E,CAAQv5F,KAAKye;KACX,IAAI5tB,KAAK6nG,KAAKhrF,eAAe1N,MAAM;MACjC,IAAI3M,MAAMC,QAAQzC,KAAK6nG,KAAK14F,OAAO;OACjC,IAAIw5F,KAAK3oG,KAAK6nG,KAAK14F,KAAK1J;OACxB,OAAOzF,KAAKyoG,YAAYzoG,KAAK6nG,KAAK14F,KAAKw5F,KAAK;AAC9C;MACE,YAAiC,MAAnB3oG,KAAK6nG,KAAK14F,OAAuB,KAAKnP,KAAKyoG,YAAYzoG,KAAK6nG,KAAK14F;AAEnF;KAEA,OAAOye;AACT;IAEA,QAAAg7E,CAASz5F,KAAKye;KACZ,OAAI5tB,KAAK6nG,KAAKhrF,eAAe1N,OACvB3M,MAAMC,QAAQzC,KAAK6nG,KAAK14F,QACnBnP,KAAKyoG,YAAYzoG,KAAK6nG,KAAK14F,KAAK,WAEN,MAAnBnP,KAAK6nG,KAAK14F,OAAuB,KAAKnP,KAAKyoG,YAAYzoG,KAAK6nG,KAAK14F,QAI5Eye;AACT;IAEA,MAAAi7E,CAAO15F,KAAK25F;KACV,IAAIjkE,MAAM7kC,KAAK0oG,QAAQv5F;KAEvB,OAAK01B,MAGI7iB,SAAS6iB,KAAK,MAFdikE;AAIX;IAEA,QAAAC,CAAS55F,KAAK65F;KACZ,IAAInkE,MAAM7kC,KAAK0oG,QAAQv5F;KAEvB,OAAK01B,MAGIvR,WAAWuR,OAFXmkE;AAIX;IAEA,UAAAC,CAAW95F,KAAK+5F;KAKd,IAAIrkE,MAAM7kC,KAAK0oG,QAAQv5F;KAEvB,OAAK01B,OALK,eAAev/B,KADN6Y,IASA0mB,UARmB1mB,IAM7B+qF,wBAAuB;KAPhC,IAAmB/qF;AAWrB;IAEA,GAAA1d,CAAI0O,KAAK9G;KACPrI,KAAK6nG,KAAK14F,OAAO9G;AACnB;IAEA,WAAAogG,CAAY9rF;KACV,IAAI4rF,KAAKvoG;KACT,OAAO2c,EAAE5X,QAAQ,SAAS,MAAMA,QAAQ,gCAA+B,SAAUyb;MAC/E,OAAO+nF,GAAGG,QAAQloF,MAAMgO,UAAU,GAAGhO,MAAM/a,SAAS;AACtD;AACF;IAEA,OAAA0jG;KACE,IAAI/gG,OAAO;KAEX,KAAK,IAAI+G,OAAOnP,KAAK6nG,MACnBz/F,KAAKlH,KAAKiO;KAGZ,OAAO/G;AACT;IAEA,eAAAghG,CAAgBC;KACd,IAAIjhG,OAAO;KAEX,KAAK,IAAI+G,OAAOnP,KAAK6nG,OACW,MAA1B14F,IAAIK,OAAO65F,aACbjhG,KAAKlH,KAAKiO;KAId,OAAO/G;AACT;IAEA,KAAAkhG;KACEtpG,KAAK6nG,OAAO,CAAC;AACf;;GAKFjoG,QAAQ8nG,iBAAiBA;GAQzB9nG,QAAQ6nG,KANC,YAAepjG;IACtB,IAAIklG,aAAa,IAAI7B;IAErB,OADA6B,WAAW9B,GAAG5pF,MAAM0rF,YAAYllG,OACzBklG;AACT;;;GCrNA1pG,OAAOD,UAAU4pG,WACjBA,UAAUC,YAAYA;GAEtB,IAAIj1F,OAAQ;IAAc;KAAM,OAAO,oBAAQ;AAAQ,MAAE,OAAOvG,IAAI;AAAC,IAA1D,MAAkE;IAC3E+5F,KAAK;;GAEPwB,UAAUxB,MAAMxzF,KAAKwzF;GAErB,IAAI0B,WAAWF,UAAUE,WAAWD,UAAUC,WAAW,CAAC,GACtD7H,SAAS,oBAAQ,OAEjB8H,UAAU;IACZ,KAAK;KAAEC,MAAM;KAAaC,OAAO;;IACjC,KAAK;KAAED,MAAM;KAAOC,OAAO;;IAC3B,KAAK;KAAED,MAAM;KAAOC,OAAO;;IAC3B,KAAK;KAAED,MAAM;KAAOC,OAAO;;IAC3B,KAAK;KAAED,MAAM;KAAOC,OAAO;;MAoBzBC,aAAqB,kBAIdnlG,MAAM,IAAIk6B,QAAO,SAAUp+B,KAAK4vE;IAEvC,OADA5vE,IAAI4vE,MAAK,GACF5vE;AACT,OAAG,CAAC;GAIN,IAAIspG,aAAa;GAUjB,SAASC,IAAK9rF,GAAGC;IACfA,IAAIA,KAAK,CAAC;IACV,IAAIvB,IAAI,CAAC;IAOT,OANA/Y,OAAOuE,KAAK8V,GAAGnc,SAAQ,SAAU4N;KAC/BiN,EAAEjN,KAAKuO,EAAEvO;AACX,SACA9L,OAAOuE,KAAK+V,GAAGpc,SAAQ,SAAU4N;KAC/BiN,EAAEjN,KAAKwO,EAAExO;AACX,SACOiN;AACT;GA+CA,SAAS4sF,UAAWz6F,GAAGsN,SAAS5V;IAM9B,OALAwjG,mBAAmB5tF,UAEd5V,YAASA,UAAU,CAAC,OAGpBA,QAAQyjG,aAAmC,QAAtB7tF,QAAQ2X,OAAO,OAIlC,IAAIy1E,UAAUptF,SAAS5V,SAAS+Z,MAAMzR;AAC/C;GAEA,SAAS06F,UAAWptF,SAAS5V;IAC3B,MAAMzG,gBAAgBypG,YACpB,OAAO,IAAIA,UAAUptF,SAAS5V;IAGhCwjG,mBAAmB5tF,UAEd5V,YAASA,UAAU,CAAC,IAEzB4V,UAAUA,QAAQvX;IAGb2B,QAAQ0jG,sBAAmC,QAAb31F,KAAKwzF,QACtC3rF,UAAUA,QAAQ1X,MAAM6P,KAAKwzF,KAAKvgG,KAAK;IAGzCzH,KAAKyG,UAAUA,SACfzG,KAAKS,MAAM,IACXT,KAAKqc,UAAUA,SACfrc,KAAKoqG,SAAS;IACdpqG,KAAKi1F,UAAS,GACdj1F,KAAKwrC,WAAU,GACfxrC,KAAKqqG,SAAQ,GACbrqG,KAAKkzF,YAAYzsF,QAAQysF;IAGzBlzF,KAAKsqG;AACP;GA6FA,SAASC,YAAaluF,SAAS5V;IAgB7B,OAfKA,YAEDA,UADEzG,gBAAgBypG,YACRzpG,KAAKyG,UAEL,CAAC,IAIf4V,eAA6B,MAAZA,UACbrc,KAAKqc,UAAUA;IAEnB4tF,mBAAmB5tF,UAIf5V,QAAQ+jG,YAAY,mBAAmBllG,KAAK+W,WAEvC,EAACA,YAGHwlF,OAAOxlF;AAChB;GA5NAmtF,UAAUp+F,SACV,SAAiBiR,SAAS5V;IAExB,OADAA,UAAUA,WAAW,CAAC,GACf,SAAUsI,GAAGgO,GAAGylD;KACrB,OAAOgnC,UAAUz6F,GAAGsN,SAAS5V;AAC/B;AACF,MAcA+iG,UAAUhiB,WAAW,SAAUijB;IAC7B,KAAKA,OAAsB,mBAARA,QAAqB5mG,OAAOuE,KAAKqiG,KAAKhlG,QACvD,OAAO+jG;IAGT,IAAIkB,OAAOlB,WAEPrsF,IAAI,SAAoBpO,GAAGsN,SAAS5V;KACtC,OAAOikG,KAAK37F,GAAGsN,SAAS2tF,IAAIS,KAAKhkG;AACnC;IA6BA,QA3BA0W,EAAEssF,YAAY,SAAoBptF,SAAS5V;KACzC,OAAO,IAAIikG,KAAKjB,UAAUptF,SAAS2tF,IAAIS,KAAKhkG;AAC9C,OACY+gF,WAAW,SAAmB/gF;KACxC,OAAOikG,KAAKljB,SAASwiB,IAAIS,KAAKhkG,UAAUgjG;AAC1C,OAEAtsF,EAAE/R,SAAS,SAAiBiR,SAAS5V;KACnC,OAAOikG,KAAKt/F,OAAOiR,SAAS2tF,IAAIS,KAAKhkG;AACvC,OAEA0W,EAAEqqE,WAAW,SAAmB/gF;KAC9B,OAAOikG,KAAKljB,SAASwiB,IAAIS,KAAKhkG;AAChC,OAEA0W,EAAEwtF,SAAS,SAAiBtuF,SAAS5V;KACnC,OAAOikG,KAAKC,OAAOtuF,SAAS2tF,IAAIS,KAAKhkG;AACvC,OAEA0W,EAAEotF,cAAc,SAAsBluF,SAAS5V;KAC7C,OAAOikG,KAAKH,YAAYluF,SAAS2tF,IAAIS,KAAKhkG;AAC5C,OAEA0W,EAAEqD,QAAQ,SAAUgiD,MAAMnmD,SAAS5V;KACjC,OAAOikG,KAAKlqF,MAAMgiD,MAAMnmD,SAAS2tF,IAAIS,KAAKhkG;AAC5C,OAEO0W;AACT,MAEAssF,UAAUjiB,WAAW,SAAUijB;IAC7B,OAAOjB,UAAUhiB,SAASijB,KAAKhB;AACjC,MA4CAA,UAAUt5F,UAAUnJ,QAAQ,YAAa,GAEzCyiG,UAAUt5F,UAAUm6F,OACpB;IACE,IAAIjuF,UAAUrc,KAAKqc,SACf5V,UAAUzG,KAAKyG;IAGnB,KAAKA,QAAQyjG,aAAmC,QAAtB7tF,QAAQ2X,OAAO,IAEvC,aADAh0B,KAAKwrC,WAAU;IAGjB,KAAKnvB,SAEH,aADArc,KAAKqqG,SAAQ;IAKfrqG,KAAK4qG;IAGL,IAAInqG,MAAMT,KAAK6qG,UAAU7qG,KAAKuqG;IAE1B9jG,QAAQO,UAAOhH,KAAKgH,QAAQ;KAAmBQ,QAAQvB,MAAM4X,MAAMrW,SAAS9E;AAAW;IAE3F1C,KAAKgH,MAAMhH,KAAKqc,SAAS5b,MAOzBA,MAAMT,KAAK8qG,YAAYrqG,IAAImE,KAAI,SAAU+X;KACvC,OAAOA,EAAEhY,MAAMolG;AACjB,SAEA/pG,KAAKgH,MAAMhH,KAAKqc,SAAS5b,MAGzBA,MAAMA,IAAImE,KAAI,SAAU+X,GAAGouF,IAAItqG;KAC7B,OAAOkc,EAAE/X,IAAI5E,KAAK+W,OAAO/W;AAC3B,QAAGA,OAEHA,KAAKgH,MAAMhH,KAAKqc,SAAS5b,MAGzBA,MAAMA,IAAI2K,QAAO,SAAUuR;KACzB,QAA6B,MAAtBA,EAAErb,SAAQ;AACnB,SAEAtB,KAAKgH,MAAMhH,KAAKqc,SAAS5b,MAEzBT,KAAKS,MAAMA;AACb,MAEAgpG,UAAUt5F,UAAUy6F,cACpB;IACE,IAAIvuF,UAAUrc,KAAKqc,SACf44E,UAAS,GACTxuF,UAAUzG,KAAKyG,SACfukG,eAAe;IAEnB,IAAIvkG,QAAQwkG,UAAU;IAEtB,KAAK,IAAIluF,IAAI,GAAGqqE,IAAI/qE,QAAQ5W,QACxBsX,IAAIqqE,KAA2B,QAAtB/qE,QAAQ2X,OAAOjX,IACxBA,KACFk4E,UAAUA;IACV+V;IAGEA,iBAAchrG,KAAKqc,UAAUA,QAAQnX,OAAO8lG;IAChDhrG,KAAKi1F,SAASA;AAChB,MAYAuU,UAAUe,cAAc,SAAUluF,SAAS5V;IACzC,OAAO8jG,YAAYluF,SAAS5V;AAC9B,MAEAgjG,UAAUt5F,UAAUo6F,cAAcA;GA0BlC,IACIN,qBAAqB,SAAU5tF;IACjC,IAAuB,mBAAZA,SACT,MAAM,IAAIzb,UAAU;IAGtB,IAAIyb,QAAQ5W,SANW,OAOrB,MAAM,IAAI7E,UAAU;AAExB;GAaA6oG,UAAUt5F,UAAU4G,QAEpB,SAAgBsF,SAAS6uF;IACvBjB,mBAAmB5tF;IAEnB,IAAI5V,UAAUzG,KAAKyG;IAGnB,IAAgB,SAAZ4V,SAAkB;KACpB,KAAK5V,QAAQ0kG,YACX,OAAOzB;KAEPrtF,UAAU;AACd;IACA,IAAgB,OAAZA,SAAgB,OAAO;IAE3B,IAMI+uF,WANAzhE,KAAK,IACL0hE,aAAa5kG,QAAQ6kG,QACrBC,YAAW,GAEXC,mBAAmB,IACnBC,gBAAgB,IAEhBC,WAAU,GACVC,gBAAgB,GAChBC,cAAc,GAGdC,eAAqC,QAAtBxvF,QAAQ2X,OAAO,KAAa,KAE7CvtB,QAAQqlG,MAAM,mCACd,WACEhzF,OAAO9Y;IAEX,SAAS+rG;KACP,IAAIX,WAAW;MAGb,QAAQA;MACN,KAAK;OACHzhE,MArTCqiE,UAsTDX,YAAW;OACb;;MACA,KAAK;OACH1hE,MA5TE,QA6TF0hE,YAAW;OACb;;MACA;OACE1hE,MAAM,OAAOyhE;;MAGjBtyF,KAAK9R,MAAM,wBAAwBokG,WAAWzhE,KAC9CyhE,aAAY;AACd;AACF;IAEA,KAAK,IAAiC/6B,GAA7BtzD,IAAI,GAAGkS,MAAM5S,QAAQ5W,QACzBsX,IAAIkS,QAASohD,IAAIh0D,QAAQ2X,OAAOjX,KACjCA,KAIF,IAHA/c,KAAKgH,MAAM,gBAAgBqV,SAASU,GAAG4sB,IAAI0mC;IAGvCk7B,YAAYzB,WAAWz5B,IACzB1mC,MAAM,OAAO0mC,GACbk7B,YAAW,QAIb,QAAQl7B;IAEN,KAAK;KAGH,QAAO;;IAGT,KAAK;KACH07B,kBACAR,YAAW;KACb;;IAIA,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;KAKH,IAJAvrG,KAAKgH,MAAM,8BAA8BqV,SAASU,GAAG4sB,IAAI0mC,IAIrDq7B,SAAS;MACX1rG,KAAKgH,MAAM,eACD,QAANqpE,KAAatzD,MAAM6uF,aAAa,MAAGv7B,IAAI,MAC3C1mC,MAAM0mC;MACN;AACF;KAKAv3D,KAAK9R,MAAM,0BAA0BokG,YACrCW,kBACAX,YAAY/6B;KAIR5pE,QAAQwlG,SAAOF;KACrB;;IAEA,KAAK;KACH,IAAIL,SAAS;MACX/hE,MAAM;MACN;AACF;KAEA,KAAKyhE,WAAW;MACdzhE,MAAM;MACN;AACF;KAEA6hE,iBAAiBtqG,KAAK;MACpBc,MAAMopG;MACNniE,OAAOlsB,IAAI;MACXmvF,SAASviE,GAAGlkC;MACZmkG,MAAMD,QAAQyB,WAAWxB;MACzBC,OAAOF,QAAQyB,WAAWvB;SAG5BlgE,MAAoB,QAAdyhE,YAAoB,cAAc,OACxCprG,KAAKgH,MAAM,gBAAgBokG,WAAWzhE;KACtCyhE,aAAY;KACd;;IAEA,KAAK;KACH,IAAIM,YAAYF,iBAAiB/lG,QAAQ;MACvCkkC,MAAM;MACN;AACF;KAEAoiE,kBACAV,YAAW;KACX,IAAIc,KAAKX,iBAAiBv6E;KAG1B0Y,MAAMwiE,GAAGtC,OACO,QAAZsC,GAAGnqG,QACLypG,cAAcvqG,KAAKirG,KAErBA,GAAGC,QAAQziE,GAAGlkC;KAChB;;IAEA,KAAK;KACH,IAAIimG,YAAYF,iBAAiB/lG,UAAU8lG,UAAU;MACnD5hE,MAAM,OACN4hE,YAAW;MACX;AACF;KAEAQ,kBACApiE,MAAM;KACR;;IAGA,KAAK;KAIH,IAFAoiE,kBAEIL,SAAS;MACX/hE,MAAM,OAAO0mC;MACb;AACF;KAEAq7B,WAAU,GACVE,aAAa7uF,GACb4uF,eAAehiE,GAAGlkC,QAClBkkC,MAAM0mC;KACR;;IAEA,KAAK;KAKH,IAAItzD,MAAM6uF,aAAa,MAAMF,SAAS;MACpC/hE,MAAM,OAAO0mC,GACbk7B,YAAW;MACX;AACF;KAWA,IAAIc,KAAKhwF,QAAQmS,UAAUo9E,aAAa,GAAG7uF;KAC3C;MACE9X,OAAO,MAAMonG,KAAK;AACpB,OAAE,OAAOC;MAEP,IAAIC,KAAKvsG,KAAK+W,MAAMs1F,IAAIG;MACxB7iE,KAAKA,GAAGzkC,OAAO,GAAGymG,gBAAgB,QAAQY,GAAG,KAAK,OAClDlB,WAAWA,YAAYkB,GAAG;MAC1Bb,WAAU;MACV;AACF;KAGAL,YAAW,GACXK,WAAU,GACV/hE,MAAM0mC;KACR;;IAEA;KAEE07B,kBAEIR,WAEFA,YAAW,KACFzB,WAAWz5B,MACT,QAANA,KAAaq7B,YAClB/hE,MAAM;KAGRA,MAAM0mC;;IAORq7B,YAKFW,KAAKhwF,QAAQnX,OAAO0mG,aAAa,IACjCW,KAAKvsG,KAAK+W,MAAMs1F,IAAIG;IACpB7iE,KAAKA,GAAGzkC,OAAO,GAAGymG,gBAAgB,QAAQY,GAAG,IAC7ClB,WAAWA,YAAYkB,GAAG;IAS5B,KAAKJ,KAAKX,iBAAiBv6E,OAAOk7E,IAAIA,KAAKX,iBAAiBv6E,OAAO;KACjE,IAAIw8D,OAAO9jD,GAAG7nC,MAAMqqG,GAAGD,UAAUC,GAAGvC,KAAKnkG;KACzCzF,KAAKgH,MAAM,gBAAgB2iC,IAAIwiE,KAE/B1e,OAAOA,KAAK1oF,QAAQ,8BAA6B,SAAU4pC,GAAG89D,IAAIC;MAYhE,OAXKA,OAEHA,KAAK,OASAD,KAAKA,KAAKC,KAAK;AACxB,UAEA1sG,KAAKgH,MAAM,kBAAkBymF,MAAMA,MAAM0e,IAAIxiE;KAC7C,IAAI/sB,IAAgB,QAAZuvF,GAAGnqG,OA/hBJgqG,WAgiBS,QAAZG,GAAGnqG,OAniBC,SAoiBJ,OAAOmqG,GAAGnqG;KAEdqpG,YAAW,GACX1hE,KAAKA,GAAG7nC,MAAM,GAAGqqG,GAAGD,WAAWtvF,IAAI,QAAQ6wE;AAC7C;IAGAse,kBACIR,aAEF5hE,MAAM;IAKR,IAAIgjE,mBAAkB;IACtB,QAAQhjE,GAAG3V,OAAO;IAChB,KAAK;IAAK,KAAK;IAAK,KAAK;KAAK24E,mBAAkB;;IAQlD,KAAK,IAAI79F,IAAI28F,cAAchmG,SAAS,GAAGqJ,KAAK,GAAGA,KAAK;KAClD,IAAI89F,KAAKnB,cAAc38F,IAEnB+9F,WAAWljE,GAAG7nC,MAAM,GAAG8qG,GAAGV,UAC1BY,UAAUnjE,GAAG7nC,MAAM8qG,GAAGV,SAASU,GAAGR,QAAQ,IAC1CW,SAASpjE,GAAG7nC,MAAM8qG,GAAGR,QAAQ,GAAGQ,GAAGR,QACnCY,UAAUrjE,GAAG7nC,MAAM8qG,GAAGR;KAE1BW,UAAUC;KAKV,IAAIC,mBAAmBJ,SAASloG,MAAM,KAAKc,SAAS,GAChDynG,aAAaF;KACjB,KAAKjwF,IAAI,GAAGA,IAAIkwF,kBAAkBlwF,KAChCmwF,aAAaA,WAAWnoG,QAAQ,YAAY;KAI9C,IAAIooG,SAAS;KACG,QAHhBH,UAAUE,eAGYhC,UAAUsB,aAC9BW,SAAS,MAGXxjE,KADYkjE,WAAWC,UAAUE,UAAUG,SAASJ;AAEtD;IAKW,OAAPpjE,MAAa0hE,aACf1hE,KAAK,UAAUA;IAGbgjE,oBACFhjE,KAAKkiE,eAAeliE;IAItB,IAAIuhE,UAAUsB,UACZ,OAAO,EAAC7iE,IAAI0hE;IAMd,KAAKA,UACH,OA0SJ,SAAuB1uF;KACrB,OAAOA,EAAE5X,QAAQ,UAAU;AAC7B,KA5SWqoG,CAAa/wF;IAGtB,IAAIgxF,QAAQ5mG,QAAQ6kG,SAAS,MAAM;IACnC;KACE,IAAIgC,SAAS,IAAIroG,OAAO,MAAM0kC,KAAK,KAAK0jE;AAC1C,MAAE,OAAOf;KAKP,OAAO,IAAIrnG,OAAO;AACpB;IAKA,OAHAqoG,OAAOC,QAAQlxF,SACfixF,OAAOE,OAAO7jE,IAEP2jE;AACT;GA9WA,IAAId,WAAW,CAAC;GAgXhBhD,UAAUmB,SAAS,SAAUtuF,SAAS5V;IACpC,OAAO,IAAIgjG,UAAUptF,SAAS5V,WAAW,CAAC,GAAGkkG;AAC/C,MAEAlB,UAAUt5F,UAAUw6F,SACpB;IACE,IAAI3qG,KAAKoqG,WAA0B,MAAhBpqG,KAAKoqG,QAAkB,OAAOpqG,KAAKoqG;IAQtD,IAAI3pG,MAAMT,KAAKS;IAEf,KAAKA,IAAIgF,QAEP,OADAzF,KAAKoqG,UAAS,GACPpqG,KAAKoqG;IAEd,IAAI3jG,UAAUzG,KAAKyG,SAEfgnG,UAAUhnG,QAAQ0kG,aAppBba,WAqpBLvlG,QAAQqlG,MAhpBG,4CAIE,2BA8oBbuB,QAAQ5mG,QAAQ6kG,SAAS,MAAM,IAE/B3hE,KAAKlpC,IAAImE,KAAI,SAAUyX;KACzB,OAAOA,QAAQzX,KAAI,SAAUmK;MAC3B,OAAQA,MAAM26F,WAAY+D,UACV,mBAAN1+F,IA4PhB,SAAuB4N;OACrB,OAAOA,EAAE5X,QAAQ,4BAA4B;AAC/C,OA9PkC2oG,CAAa3+F,KACvCA,EAAEy+F;AACN,SAAG/lG,KAAK;AACV,QAAGA,KAAK;IAIRkiC,KAAK,SAASA,KAAK,MAGf3pC,KAAKi1F,WAAQtrD,KAAK,SAASA,KAAK;IAEpC;KACE3pC,KAAKoqG,SAAS,IAAInlG,OAAO0kC,IAAI0jE;AAC/B,MAAE,OAAOM;KACP3tG,KAAKoqG,UAAS;AAChB;IACA,OAAOpqG,KAAKoqG;AACd,MAEAZ,UAAUhpF,QAAQ,SAAUgiD,MAAMnmD,SAAS5V;IAEzC,IAAImnG,KAAK,IAAInE,UAAUptF,SADvB5V,UAAUA,WAAW,CAAC;IAQtB,OANA+7D,OAAOA,KAAKp3D,QAAO,SAAU6S;KAC3B,OAAO2vF,GAAGptF,MAAMvC;AAClB,SACI2vF,GAAGnnG,QAAQonG,WAAWrrC,KAAK/8D,UAC7B+8D,KAAKthE,KAAKmb,UAELmmD;AACT,MAEAinC,UAAUt5F,UAAUqQ,QAAQ,SAAgBvC,GAAGi1E;IAK7C,SAJuB,MAAZA,YAAyBA,UAAUlzF,KAAKkzF,UACnDlzF,KAAKgH,MAAM,SAASiX,GAAGje,KAAKqc;IAGxBrc,KAAKwrC,SAAS,QAAO;IACzB,IAAIxrC,KAAKqqG,OAAO,OAAa,OAANpsF;IAEvB,IAAU,QAANA,KAAai1E,SAAS,QAAO;IAEjC,IAAIzsF,UAAUzG,KAAKyG;IAGF,QAAb+N,KAAKwzF,QACP/pF,IAAIA,EAAEtZ,MAAM6P,KAAKwzF,KAAKvgG,KAAK,OAI7BwW,IAAIA,EAAEtZ,MAAMolG;IACZ/pG,KAAKgH,MAAMhH,KAAKqc,SAAS,SAAS4B;IAOlC,IAII6vF,UACA/wF,GALAtc,MAAMT,KAAKS;IAMf,KALAT,KAAKgH,MAAMhH,KAAKqc,SAAS,OAAO5b,MAK3Bsc,IAAIkB,EAAExY,SAAS,GAAGsX,KAAK,OAC1B+wF,WAAW7vF,EAAElB,KADgBA;IAK/B,KAAKA,IAAI,GAAGA,IAAItc,IAAIgF,QAAQsX,KAAK;KAC/B,IAAIV,UAAU5b,IAAIsc,IACdk8D,OAAOh7D;KAKX,IAJIxX,QAAQsnG,aAAgC,MAAnB1xF,QAAQ5W,WAC/BwzE,OAAO,EAAC60B,aAEA9tG,KAAKguG,SAAS/0B,MAAM58D,SAAS62E,UAErC,SAAIzsF,QAAQwnG,eACJjuG,KAAKi1F;AAEjB;IAIA,QAAIxuF,QAAQwnG,cACLjuG,KAAKi1F;AACd,MAOAwU,UAAUt5F,UAAU69F,WAAW,SAAU/0B,MAAM58D,SAAS62E;IACtD,IAAIzsF,UAAUzG,KAAKyG;IAEnBzG,KAAKgH,MAAM,YACT;KAAE,MAAQhH;KAAMi5E;KAAY58D;QAE9Brc,KAAKgH,MAAM,YAAYiyE,KAAKxzE,QAAQ4W,QAAQ5W;IAE5C,KAAK,IAAIyoG,KAAK,GACVC,KAAK,GACLC,KAAKn1B,KAAKxzE,QACV0mG,KAAK9vF,QAAQ5W,QACVyoG,KAAKE,MAAQD,KAAKhC,IACnB+B;IAAMC,MAAM;KAChBnuG,KAAKgH,MAAM;KACX,IA6FIqnG,KA7FAt/F,IAAIsN,QAAQ8xF,KACZlwF,IAAIg7D,KAAKi1B;KAOb,IALAluG,KAAKgH,MAAMqV,SAAStN,GAAGkP,KAKb,MAANlP,GAAa,QAAO;KAExB,IAAIA,MAAM26F,UAAU;MAClB1pG,KAAKgH,MAAM,YAAY,EAACqV,SAAStN,GAAGkP;MAwBpC,IAAIqwF,KAAKJ,IACLK,KAAKJ,KAAK;MACd,IAAII,OAAOpC,IAAI;OAQb,KAPAnsG,KAAKgH,MAAM,kBAOJknG,KAAKE,IAAIF,MACd,IAAiB,QAAbj1B,KAAKi1B,OAA4B,SAAbj1B,KAAKi1B,QACzBznG,QAAQqlG,OAA8B,QAAvB7yB,KAAKi1B,IAAIl6E,OAAO,IAAa,QAAO;OAEzD,QAAO;AACT;MAGA,MAAOs6E,KAAKF,MAAI;OACd,IAAII,YAAYv1B,KAAKq1B;OAKrB,IAHAtuG,KAAKgH,MAAM,oBAAoBiyE,MAAMq1B,IAAIjyF,SAASkyF,IAAIC,YAGlDxuG,KAAKguG,SAAS/0B,KAAKn3E,MAAMwsG,KAAKjyF,QAAQva,MAAMysG,KAAKrb,UAGnD,OAFAlzF,KAAKgH,MAAM,yBAAyBsnG,IAAIF,IAAII;QAErC;OAIP,IAAkB,QAAdA,aAAmC,SAAdA,cACrB/nG,QAAQqlG,OAA+B,QAAxB0C,UAAUx6E,OAAO,IAAa;QAC/Ch0B,KAAKgH,MAAM,iBAAiBiyE,MAAMq1B,IAAIjyF,SAASkyF;QAC/C;AACF;OAGAvuG,KAAKgH,MAAM,6CACXsnG;AAEJ;MAMA,UAAIpb,YAEFlzF,KAAKgH,MAAM,4BAA4BiyE,MAAMq1B,IAAIjyF,SAASkyF;MACtDD,OAAOF;AAGf;KAcA,IARiB,mBAANr/F,KACTs/F,MAAMpwF,MAAMlP,GACZ/O,KAAKgH,MAAM,gBAAgB+H,GAAGkP,GAAGowF,SAEjCA,MAAMpwF,EAAEuC,MAAMzR;KACd/O,KAAKgH,MAAM,iBAAiB+H,GAAGkP,GAAGowF,QAG/BA,KAAK,QAAO;AACnB;IAcA,IAAIH,OAAOE,MAAMD,OAAOhC,IAGtB,QAAO;IACF,IAAI+B,OAAOE,IAIhB,OAAOlb;IACyB,IAAIib,OAAOhC,IAK3C,OAAQ+B,OAAOE,KAAK,KAAoB,OAAbn1B,KAAKi1B;IAKlC,MAAM,IAAIxsG,MAAM;AAClB;;;GCr6BA,IAAIib,IAAI,KACJQ,IAAQ,KAAJR,GACJ8xF,IAAQ,KAAJtxF,GACJuB,IAAQ,KAAJ+vF,GACJC,IAAQ,IAAJhwF,GACJkkF,IAAQ,SAAJlkF;GAqJR,SAASiwF,OAAO7rG,IAAI8rG,OAAO9/F,GAAG1M;IAC5B,IAAIysG,WAAWD,SAAa,MAAJ9/F;IACxB,OAAO0G,KAAKs5F,MAAMhsG,KAAKgM,KAAK,MAAM1M,QAAQysG,WAAW,MAAM;AAC7D;GAxIAhvG,OAAOD,UAAU,SAAUilC,KAAKp+B;IAC9BA,UAAUA,WAAW,CAAC;IACtB,IAAIzE,cAAc6iC;IAClB,IAAa,aAAT7iC,QAAqB6iC,IAAIp/B,SAAS,GACpC,OAkBJ,SAAespB;KAEb,KADAA,MAAMzmB,OAAOymB,MACLtpB,SAAS,KACf;KAEF,IAAI+a,QAAQ,mIAAmIiJ,KAC7IsF;KAEF,KAAKvO,OACH;KAEF,IAAI1R,IAAIwkB,WAAW9S,MAAM;KAEzB,SADYA,MAAM,MAAM,MAAM1Y;KAE5B,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAOgH,IAAI8zF;;KACb,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO9zF,IAAI4/F;;KACb,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO5/F,IAAI4P;;KACb,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO5P,IAAI2/F;;KACb,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO3/F,IAAIqO;;KACb,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAOrO,IAAI6N;;KACb,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO7N;;KACT;MACE;;AAEN,KAzEWiI,CAAM8tB;IACR,IAAa,aAAT7iC,QAAqBiV,SAAS4tB,MACvC,OAAOp+B,QAAQyxF,OA0GnB,SAAiBp1F;KACf,IAAI8rG,QAAQp5F,KAAK+tF,IAAIzgG;KACrB,IAAI8rG,SAASlwF,GACX,OAAOiwF,OAAO7rG,IAAI8rG,OAAOlwF,GAAG;KAE9B,IAAIkwF,SAASH,GACX,OAAOE,OAAO7rG,IAAI8rG,OAAOH,GAAG;KAE9B,IAAIG,SAASzxF,GACX,OAAOwxF,OAAO7rG,IAAI8rG,OAAOzxF,GAAG;KAE9B,IAAIyxF,SAASjyF,GACX,OAAOgyF,OAAO7rG,IAAI8rG,OAAOjyF,GAAG;KAE9B,OAAO7Z,KAAK;AACd,KAzH0BisG,CAAQlqE,OAiFlC,SAAkB/hC;KAChB,IAAI8rG,QAAQp5F,KAAK+tF,IAAIzgG;KACrB,IAAI8rG,SAASlwF,GACX,OAAOlJ,KAAKs5F,MAAMhsG,KAAK4b,KAAK;KAE9B,IAAIkwF,SAASH,GACX,OAAOj5F,KAAKs5F,MAAMhsG,KAAK2rG,KAAK;KAE9B,IAAIG,SAASzxF,GACX,OAAO3H,KAAKs5F,MAAMhsG,KAAKqa,KAAK;KAE9B,IAAIyxF,SAASjyF,GACX,OAAOnH,KAAKs5F,MAAMhsG,KAAK6Z,KAAK;KAE9B,OAAO7Z,KAAK;AACd,KAhGyCksG,CAASnqE;IAEhD,MAAM,IAAInjC,MACR,0DACEoH,KAAKC,UAAU87B;AAErB;;;GCnCA,IAAI79B;GAFJpH,UAAUC,OAAOD,UAAUqvG,QAQzBjoG,QAJqB,mBAAZ7D,WACPA,QAAQC,OACRD,QAAQC,IAAI8rG,cACZ,cAAc5pG,KAAKnC,QAAQC,IAAI8rG,cACzB;IACN,IAAI7qG,OAAO7B,MAAM2N,UAAUrO,MAAMD,KAAKa,WAAW;IACjD2B,KAAKu4B,QAAQ,WACbp1B,QAAQpD,IAAIyZ,MAAMrW,SAASnD;AAC7B,OAEQ,YAAa,GAKvBzE,QAAQuvG,sBAAsB;GAE9B,IAAIr8B,aAAa,KACbpL,mBAAmBl0D,OAAOk0D,oBACD,kBAKzB0nC,wBAAwBt8B,aAAa,GAGrCnpC,KAAK/pC,QAAQ+pC,KAAK,IAClB0lE,SAASzvG,QAAQyvG,SAAS,IAC1BC,MAAM1vG,QAAQ0vG,MAAM,IACpB1yF,IAAIhd,QAAQw+E,SAAS,CAAC,GACtBmxB,IAAI;GAER,SAASC,IAAK1gG;IACZ8N,EAAE9N,KAAKygG;AACT;GAEA,IAQIE,wBAAwB,EAC1B,EAAC,OAAO,KACR,EAAC,OAAO38B,cACR,EAXqB,gBAWFs8B;GAGrB,SAASM,WAAYrnG;IACnB,KAAK,IAAI0U,IAAI,GAAGA,IAAI0yF,sBAAsBhqG,QAAQsX,KAAK;KACrD,IAAIsE,QAAQouF,sBAAsB1yF,GAAG,IACjClH,MAAM45F,sBAAsB1yF,GAAG;KACnC1U,QAAQA,MACL1D,MAAM0c,QAAQ,KAAK5Z,KAAK4Z,QAAQ,QAAQxL,MAAM,KAC9ClR,MAAM0c,QAAQ,KAAK5Z,KAAK4Z,QAAQ,QAAQxL,MAAM;AACnD;IACA,OAAOxN;AACT;GAQAmnG,IAAI,sBACJF,IAAI1yF,EAAE+yF,qBAAqB,eAC3BH,IAAI;GACJF,IAAI1yF,EAAEgzF,0BAA0B,QAMhCJ,IAAI,yBACJF,IAAI1yF,EAAEizF,wBAAwB;GAK9BL,IAAI,gBACJF,IAAI1yF,EAAEkzF,eAAe,MAAMR,IAAI1yF,EAAE+yF,qBAAZ,UACIL,IAAI1yF,EAAE+yF,qBADV,UAEIL,IAAI1yF,EAAE+yF,qBAAqB;GAEpDH,IAAI,qBACJF,IAAI1yF,EAAEmzF,oBAAoB,MAAMT,IAAI1yF,EAAEgzF,0BAAZ,UACIN,IAAI1yF,EAAEgzF,0BADV,UAEIN,IAAI1yF,EAAEgzF,0BAA0B;GAK9DJ,IAAI,yBACJF,IAAI1yF,EAAEozF,wBAAwB,QAAQV,IAAI1yF,EAAE+yF,qBAChB,MAAML,IAAI1yF,EAAEizF,wBAAwB;GAEhEL,IAAI,8BACJF,IAAI1yF,EAAEqzF,6BAA6B,QAAQX,IAAI1yF,EAAEgzF,0BAChB,MAAMN,IAAI1yF,EAAEizF,wBAAwB;GAMrEL,IAAI,eACJF,IAAI1yF,EAAEszF,cAAc,UAAUZ,IAAI1yF,EAAEozF,wBAClB,WAAWV,IAAI1yF,EAAEozF,wBAAwB;GAE3DR,IAAI,oBACJF,IAAI1yF,EAAEuzF,mBAAmB,WAAWb,IAAI1yF,EAAEqzF,6BACnB,WAAWX,IAAI1yF,EAAEqzF,6BAA6B;GAKrET,IAAI,oBACJF,IAAI1yF,EAAEwzF,mBAAmBC,iBAMzBb,IAAI;GACJF,IAAI1yF,EAAE0zF,SAAS,YAAYhB,IAAI1yF,EAAEwzF,mBACpB,WAAWd,IAAI1yF,EAAEwzF,mBAAmB;GAWjDZ,IAAI,SACJA,IAAI,cACJF,IAAI1yF,EAAE2zF,aAAa,OAAOjB,IAAI1yF,EAAEkzF,eACdR,IAAI1yF,EAAEszF,cAAc,MACpBZ,IAAI1yF,EAAE0zF,SAAS;GAEjChB,IAAI1yF,EAAE4zF,QAAQ,MAAMlB,IAAI1yF,EAAE2zF,aAAa,KAKvCf,IAAI,eACJF,IAAI1yF,EAAE6zF,cAAc,aAAanB,IAAI1yF,EAAEmzF,oBACrBT,IAAI1yF,EAAEuzF,mBAAmB,MACzBb,IAAI1yF,EAAE0zF,SAAS;GAEjCd,IAAI,UACJF,IAAI1yF,EAAE8zF,SAAS,MAAMpB,IAAI1yF,EAAE6zF,cAAc,KAEzCjB,IAAI,SACJF,IAAI1yF,EAAE+zF,QAAQ;GAKdnB,IAAI,0BACJF,IAAI1yF,EAAEg0F,yBAAyBtB,IAAI1yF,EAAEgzF,0BAA0B;GAC/DJ,IAAI,qBACJF,IAAI1yF,EAAEi0F,oBAAoBvB,IAAI1yF,EAAE+yF,qBAAqB;GAErDH,IAAI,gBACJF,IAAI1yF,EAAEk0F,eAAe,cAAcxB,IAAI1yF,EAAEi0F,oBAApB,aACUvB,IAAI1yF,EAAEi0F,oBADhB,aAEUvB,IAAI1yF,EAAEi0F,oBAFhB,SAGMvB,IAAI1yF,EAAEszF,cAAc,OAC5BZ,IAAI1yF,EAAE0zF,SAJJ;GAOrBd,IAAI,qBACJF,IAAI1yF,EAAEm0F,oBAAoB,cAAczB,IAAI1yF,EAAEg0F,yBAApB,aACUtB,IAAI1yF,EAAEg0F,yBADhB,aAEUtB,IAAI1yF,EAAEg0F,yBAFhB,SAGMtB,IAAI1yF,EAAEuzF,mBAAmB,OACjCb,IAAI1yF,EAAE0zF,SAJJ;GAO1Bd,IAAI,WACJF,IAAI1yF,EAAEo0F,UAAU,MAAM1B,IAAI1yF,EAAE+zF,QAAQ,SAASrB,IAAI1yF,EAAEk0F,eAAe;GAClEtB,IAAI,gBACJF,IAAI1yF,EAAEq0F,eAAe,MAAM3B,IAAI1yF,EAAE+zF,QAAQ,SAASrB,IAAI1yF,EAAEm0F,oBAAoB;GAI5EvB,IAAI,WACJF,IAAI1yF,EAAEs0F,UAAU;GAKhB1B,IAAI,cACJ7lE,GAAG/sB,EAAEu0F,aAAa,IAAIlsG,OAAOqqG,IAAI1yF,EAAEs0F,SAAS,MAC5C7B,OAAOzyF,EAAEu0F,aAAa,IAAIlsG,OAAOyqG,WAAWJ,IAAI1yF,EAAEs0F,UAAU;GAI5D1B,IAAI,cACJF,IAAI1yF,EAAEw0F,aAAa,WAEnB5B,IAAI,cACJF,IAAI1yF,EAAEy0F,aAAa,WAAW/B,IAAI1yF,EAAEw0F,aAAa;GACjDznE,GAAG/sB,EAAEy0F,aAAa,IAAIpsG,OAAOqqG,IAAI1yF,EAAEy0F,YAAY,MAC/ChC,OAAOzyF,EAAEy0F,aAAa,IAAIpsG,OAAOyqG,WAAWJ,IAAI1yF,EAAEy0F,aAAa;GAG/D7B,IAAI,UACJF,IAAI1yF,EAAE00F,SAAS,MAAMhC,IAAI1yF,EAAEw0F,aAAa9B,IAAI1yF,EAAEk0F,eAAe;GAC7DtB,IAAI,eACJF,IAAI1yF,EAAE20F,cAAc,MAAMjC,IAAI1yF,EAAEw0F,aAAa9B,IAAI1yF,EAAEm0F,oBAAoB;GAIvEvB,IAAI,cACJF,IAAI1yF,EAAE40F,aAAa,WAEnBhC,IAAI,cACJF,IAAI1yF,EAAE60F,aAAa,WAAWnC,IAAI1yF,EAAE40F,aAAa;GACjD7nE,GAAG/sB,EAAE60F,aAAa,IAAIxsG,OAAOqqG,IAAI1yF,EAAE60F,YAAY,MAC/CpC,OAAOzyF,EAAE60F,aAAa,IAAIxsG,OAAOyqG,WAAWJ,IAAI1yF,EAAE60F,aAAa;GAG/DjC,IAAI,UACJF,IAAI1yF,EAAE80F,SAAS,MAAMpC,IAAI1yF,EAAE40F,aAAalC,IAAI1yF,EAAEk0F,eAAe;GAC7DtB,IAAI,eACJF,IAAI1yF,EAAE+0F,cAAc,MAAMrC,IAAI1yF,EAAE40F,aAAalC,IAAI1yF,EAAEm0F,oBAAoB;GAGvEvB,IAAI,oBACJF,IAAI1yF,EAAEg1F,mBAAmB,MAAMtC,IAAI1yF,EAAE+zF,QAAQ,UAAUrB,IAAI1yF,EAAE6zF,cAAc;GAC3EjB,IAAI,eACJF,IAAI1yF,EAAEi1F,cAAc,MAAMvC,IAAI1yF,EAAE+zF,QAAQ,UAAUrB,IAAI1yF,EAAE2zF,aAAa;GAIrEf,IAAI,mBACJF,IAAI1yF,EAAEk1F,kBAAkB,WAAWxC,IAAI1yF,EAAE+zF,QACnB,UAAUrB,IAAI1yF,EAAE6zF,cAAc,MAAMnB,IAAI1yF,EAAEk0F,eAAe;GAG/EnnE,GAAG/sB,EAAEk1F,kBAAkB,IAAI7sG,OAAOqqG,IAAI1yF,EAAEk1F,iBAAiB,MACzDzC,OAAOzyF,EAAEk1F,kBAAkB,IAAI7sG,OAAOyqG,WAAWJ,IAAI1yF,EAAEk1F,kBAAkB;GAOzEtC,IAAI,gBACJF,IAAI1yF,EAAEm1F,eAAe,WAAWzC,IAAI1yF,EAAEk0F,eAAjB,gBAEIxB,IAAI1yF,EAAEk0F,eAFV;GAKrBtB,IAAI,qBACJF,IAAI1yF,EAAEo1F,oBAAoB,WAAW1C,IAAI1yF,EAAEm0F,oBAAjB,gBAEIzB,IAAI1yF,EAAEm0F,oBAFV;GAM1BvB,IAAI,SACJF,IAAI1yF,EAAEq1F,QAAQ;GAId,KAAK,IAAIl1F,IAAI,GAAGA,IAAIwyF,GAAGxyF,KACrB/V,MAAM+V,GAAGuyF,IAAIvyF,KACR4sB,GAAG5sB,OACN4sB,GAAG5sB,KAAK,IAAI9X,OAAOqqG,IAAIvyF;GAQvBsyF,OAAOtyF,KAAK,IAAI9X,OAAOyqG,WAAWJ,IAAIvyF;GAK1C,SAAShG,MAAOkC,SAASxS;IAQvB,IAPKA,WAA8B,mBAAZA,YACrBA,UAAU;KACRyrG,SAASzrG;KACT0rG,oBAAmB;QAInBl5F,mBAAmBg2F,QACrB,OAAOh2F;IAGT,IAAuB,mBAAZA,SACT,OAAO;IAGT,IAAIA,QAAQxT,SAASqtE,YACnB,OAAO;IAIT,MADQrsE,QAAQyrG,QAAQ7C,OAAOzyF,EAAE8zF,SAASrB,OAAOzyF,EAAE4zF,OAC5ClrG,KAAK2T,UACV,OAAO;IAGT;KACE,OAAO,IAAIg2F,OAAOh2F,SAASxS;AAC7B,MAAE,OAAO6lG;KACP,OAAO;AACT;AACF;GAgBA,SAAS2C,OAAQh2F,SAASxS;IAOxB,IANKA,WAA8B,mBAAZA,YACrBA,UAAU;KACRyrG,SAASzrG;KACT0rG,oBAAmB;QAGnBl5F,mBAAmBg2F,QAAQ;KAC7B,IAAIh2F,QAAQi5F,UAAUzrG,QAAQyrG,OAC5B,OAAOj5F;KAEPA,UAAUA,QAAQA;AAEtB,WAAO,IAAuB,mBAAZA,SAChB,MAAM,IAAIrY,UAAU,sBAAsBqY;IAG5C,IAAIA,QAAQxT,SAASqtE,YACnB,MAAM,IAAIlyE,UAAU,4BAA4BkyE,aAAa;IAG/D,MAAM9yE,gBAAgBivG,SACpB,OAAO,IAAIA,OAAOh2F,SAASxS;IAG7BO,MAAM,UAAUiS,SAASxS,UACzBzG,KAAKyG,UAAUA,SACfzG,KAAKkyG,UAAUzrG,QAAQyrG;IAEvB,IAAI/0F,IAAIlE,QAAQnU,OAAO0b,MAAM/Z,QAAQyrG,QAAQ7C,OAAOzyF,EAAE8zF,SAASrB,OAAOzyF,EAAE4zF;IAExE,KAAKrzF,GACH,MAAM,IAAIvc,UAAU,sBAAsBqY;IAU5C,IAPAjZ,KAAKqwF,MAAMp3E,SAGXjZ,KAAKoyG,SAASj1F,EAAE,IAChBnd,KAAKqyG,SAASl1F,EAAE,IAChBnd,KAAKsyG,SAASn1F,EAAE;IAEZnd,KAAKoyG,QAAQ1qC,oBAAoB1nE,KAAKoyG,QAAQ,GAChD,MAAM,IAAIxxG,UAAU;IAGtB,IAAIZ,KAAKqyG,QAAQ3qC,oBAAoB1nE,KAAKqyG,QAAQ,GAChD,MAAM,IAAIzxG,UAAU;IAGtB,IAAIZ,KAAKsyG,QAAQ5qC,oBAAoB1nE,KAAKsyG,QAAQ,GAChD,MAAM,IAAI1xG,UAAU;IAIjBuc,EAAE,KAGLnd,KAAKuyG,aAAap1F,EAAE,GAAGxY,MAAM,KAAKC,KAAI,SAAU0hD;KAC9C,IAAI,WAAWhhD,KAAKghD,KAAK;MACvB,IAAInY,OAAOmY;MACX,IAAInY,OAAO,KAAKA,MAAMu5B,kBACpB,OAAOv5B;AAEX;KACA,OAAOmY;AACT,UAVAtmD,KAAKuyG,aAAa,IAapBvyG,KAAKimC,QAAQ9oB,EAAE,KAAKA,EAAE,GAAGxY,MAAM,OAAO,IACtC3E,KAAK2Y;AACP;GAtHA/Y,QAAQmX,QAAQA,OAiChBnX,QAAQ4yG,QACR,SAAgBv5F,SAASxS;IACvB,IAAI6W,IAAIvG,MAAMkC,SAASxS;IACvB,OAAO6W,IAAIA,EAAErE,UAAU;AACzB,MAEArZ,QAAQ6yG,QACR,SAAgBx5F,SAASxS;IACvB,IAAIkW,IAAI5F,MAAMkC,QAAQnU,OAAOC,QAAQ,UAAU,KAAK0B;IACpD,OAAOkW,IAAIA,EAAE1D,UAAU;AACzB,MAEArZ,QAAQqvG,SAASA,QA2EjBA,OAAO9+F,UAAUwI,SAAS;IAKxB,OAJA3Y,KAAKiZ,UAAUjZ,KAAKoyG,QAAQ,MAAMpyG,KAAKqyG,QAAQ,MAAMryG,KAAKsyG,OACtDtyG,KAAKuyG,WAAW9sG,WAClBzF,KAAKiZ,WAAW,MAAMjZ,KAAKuyG,WAAW9qG,KAAK;IAEtCzH,KAAKiZ;AACd,MAEAg2F,OAAO9+F,UAAUtH,WAAW;IAC1B,OAAO7I,KAAKiZ;AACd,MAEAg2F,OAAO9+F,UAAUuiG,UAAU,SAAUC;IAMnC,OALA3rG,MAAM,kBAAkBhH,KAAKiZ,SAASjZ,KAAKyG,SAASksG,QAC9CA,iBAAiB1D,WACrB0D,QAAQ,IAAI1D,OAAO0D,OAAO3yG,KAAKyG;IAG1BzG,KAAK4yG,YAAYD,UAAU3yG,KAAK6yG,WAAWF;AACpD,MAEA1D,OAAO9+F,UAAUyiG,cAAc,SAAUD;IAKvC,OAJMA,iBAAiB1D,WACrB0D,QAAQ,IAAI1D,OAAO0D,OAAO3yG,KAAKyG,WAG1BqsG,mBAAmB9yG,KAAKoyG,OAAOO,MAAMP,UACrCU,mBAAmB9yG,KAAKqyG,OAAOM,MAAMN,UACrCS,mBAAmB9yG,KAAKsyG,OAAOK,MAAML;AAC9C,MAEArD,OAAO9+F,UAAU0iG,aAAa,SAAUF;IAMtC,IALMA,iBAAiB1D,WACrB0D,QAAQ,IAAI1D,OAAO0D,OAAO3yG,KAAKyG,WAI7BzG,KAAKuyG,WAAW9sG,WAAWktG,MAAMJ,WAAW9sG,QAC9C,QAAQ;IACH,KAAKzF,KAAKuyG,WAAW9sG,UAAUktG,MAAMJ,WAAW9sG,QACrD,OAAO;IACF,KAAKzF,KAAKuyG,WAAW9sG,WAAWktG,MAAMJ,WAAW9sG,QACtD,OAAO;IAGT,IAAIsX,IAAI;IACR,GAAG;KACD,IAAImB,IAAIle,KAAKuyG,WAAWx1F,IACpBoB,IAAIw0F,MAAMJ,WAAWx1F;KAEzB,IADA/V,MAAM,sBAAsB+V,GAAGmB,GAAGC,SACxB7a,MAAN4a,UAAyB5a,MAAN6a,GACrB,OAAO;KACF,SAAU7a,MAAN6a,GACT,OAAO;KACF,SAAU7a,MAAN4a,GACT,QAAQ;KACH,IAAIA,MAAMC,GAGf,OAAO20F,mBAAmB50F,GAAGC;AAEjC,eAAWpB;AACb,MAEAkyF,OAAO9+F,UAAU4iG,eAAe,SAAUJ;IAClCA,iBAAiB1D,WACrB0D,QAAQ,IAAI1D,OAAO0D,OAAO3yG,KAAKyG;IAGjC,IAAIsW,IAAI;IACR,GAAG;KACD,IAAImB,IAAIle,KAAKimC,MAAMlpB,IACfoB,IAAIw0F,MAAM1sE,MAAMlpB;KAEpB,IADA/V,MAAM,sBAAsB+V,GAAGmB,GAAGC,SACxB7a,MAAN4a,UAAyB5a,MAAN6a,GACrB,OAAO;KACF,SAAU7a,MAAN6a,GACT,OAAO;KACF,SAAU7a,MAAN4a,GACT,QAAQ;KACH,IAAIA,MAAMC,GAGf,OAAO20F,mBAAmB50F,GAAGC;AAEjC,eAAWpB;AACb,MAIAkyF,OAAO9+F,UAAU6iG,MAAM,SAAUC,SAAS5vC;IACxC,QAAQ4vC;IACN,KAAK;KACHjzG,KAAKuyG,WAAW9sG,SAAS,GACzBzF,KAAKsyG,QAAQ,GACbtyG,KAAKqyG,QAAQ,GACbryG,KAAKoyG,SACLpyG,KAAKgzG,IAAI,OAAO3vC;KAChB;;IACF,KAAK;KACHrjE,KAAKuyG,WAAW9sG,SAAS,GACzBzF,KAAKsyG,QAAQ,GACbtyG,KAAKqyG,SACLryG,KAAKgzG,IAAI,OAAO3vC;KAChB;;IACF,KAAK;KAIHrjE,KAAKuyG,WAAW9sG,SAAS,GACzBzF,KAAKgzG,IAAI,SAAS3vC,aAClBrjE,KAAKgzG,IAAI,OAAO3vC;KAChB;;IAGF,KAAK;KAC4B,MAA3BrjE,KAAKuyG,WAAW9sG,UAClBzF,KAAKgzG,IAAI,SAAS3vC,aAEpBrjE,KAAKgzG,IAAI,OAAO3vC;KAChB;;IAEF,KAAK;KAKgB,MAAfrjE,KAAKqyG,SACU,MAAfryG,KAAKsyG,SACsB,MAA3BtyG,KAAKuyG,WAAW9sG,UAClBzF,KAAKoyG;KAEPpyG,KAAKqyG,QAAQ,GACbryG,KAAKsyG,QAAQ,GACbtyG,KAAKuyG,aAAa;KAClB;;IACF,KAAK;KAKgB,MAAfvyG,KAAKsyG,SAA0C,MAA3BtyG,KAAKuyG,WAAW9sG,UACtCzF,KAAKqyG,SAEPryG,KAAKsyG,QAAQ;KACbtyG,KAAKuyG,aAAa;KAClB;;IACF,KAAK;KAK4B,MAA3BvyG,KAAKuyG,WAAW9sG,UAClBzF,KAAKsyG,SAEPtyG,KAAKuyG,aAAa;KAClB;;IAGF,KAAK;KACH,IAA+B,MAA3BvyG,KAAKuyG,WAAW9sG,QAClBzF,KAAKuyG,aAAa,EAAC,UACd;MAEL,KADA,IAAIx1F,IAAI/c,KAAKuyG,WAAW9sG,UACfsX,KAAK,KACsB,mBAAvB/c,KAAKuyG,WAAWx1F,OACzB/c,KAAKuyG,WAAWx1F;MAChBA,KAAK;OAGE,MAAPA,KAEF/c,KAAKuyG,WAAWrxG,KAAK;AAEzB;KACImiE,eAGErjE,KAAKuyG,WAAW,OAAOlvC,aACrB5sD,MAAMzW,KAAKuyG,WAAW,QACxBvyG,KAAKuyG,aAAa,EAAClvC,YAAY,OAGjCrjE,KAAKuyG,aAAa,EAAClvC,YAAY;KAGnC;;IAEF;KACE,MAAM,IAAI3hE,MAAM,iCAAiCuxG;;IAIrD,OAFAjzG,KAAK2Y,UACL3Y,KAAKqwF,MAAMrwF,KAAKiZ,SACTjZ;AACT,MAEAJ,QAAQozG,MACR,SAAc/5F,SAASg6F,SAASf,OAAO7uC;IACd,mBAAZ,UACTA,aAAa6uC,OACbA,aAAQ5uG;IAGV;KACE,OAAO,IAAI2rG,OAAOh2F,SAASi5F,OAAOc,IAAIC,SAAS5vC,YAAYpqD;AAC7D,MAAE,OAAOqzF;KACP,OAAO;AACT;AACF,MAEA1sG,QAAQkX,OACR,SAAeo8F,UAAUC;IACvB,IAAIC,GAAGF,UAAUC,WACf,OAAO;IAEP,IAAIE,KAAKt8F,MAAMm8F,WACXI,KAAKv8F,MAAMo8F,WACXnyF,SAAS;IACb,IAAIqyF,GAAGd,WAAW9sG,UAAU6tG,GAAGf,WAAW9sG,QAAQ;KAChDub,SAAS;KACT,IAAIuyF,gBAAgB;AACtB;IACA,KAAK,IAAIpkG,OAAOkkG,IACd,KAAY,YAARlkG,OAA2B,YAARA,OAA2B,YAARA,QACpCkkG,GAAGlkG,SAASmkG,GAAGnkG,MACjB,OAAO6R,SAAS7R;IAItB,OAAOokG;AAEX,MAEA3zG,QAAQkzG,qBAAqBA;GAE7B,IAAIzQ,UAAU;GACd,SAASyQ,mBAAoB50F,GAAGC;IAC9B,IAAIq1F,OAAOnR,QAAQ/8F,KAAK4Y,IACpBu1F,OAAOpR,QAAQ/8F,KAAK6Y;IAOxB,OALIq1F,QAAQC,SACVv1F,KAAKA,GACLC,KAAKA,IAGAD,MAAMC,IAAI,IACZq1F,SAASC,QAAS,IAClBA,SAASD,OAAQ,IAClBt1F,IAAIC,KAAK,IACT;AACN;GAuBA,SAASu0F,QAASx0F,GAAGC,GAAG+zF;IACtB,OAAO,IAAIjD,OAAO/wF,GAAGg0F,OAAOQ,QAAQ,IAAIzD,OAAO9wF,GAAG+zF;AACpD;GAkCA,SAASwB,GAAIx1F,GAAGC,GAAG+zF;IACjB,OAAOQ,QAAQx0F,GAAGC,GAAG+zF,SAAS;AAChC;GAGA,SAASyB,GAAIz1F,GAAGC,GAAG+zF;IACjB,OAAOQ,QAAQx0F,GAAGC,GAAG+zF,SAAS;AAChC;GAGA,SAASkB,GAAIl1F,GAAGC,GAAG+zF;IACjB,OAAgC,MAAzBQ,QAAQx0F,GAAGC,GAAG+zF;AACvB;GAGA,SAAS0B,IAAK11F,GAAGC,GAAG+zF;IAClB,OAAgC,MAAzBQ,QAAQx0F,GAAGC,GAAG+zF;AACvB;GAGA,SAASrP,IAAK3kF,GAAGC,GAAG+zF;IAClB,OAAOQ,QAAQx0F,GAAGC,GAAG+zF,UAAU;AACjC;GAGA,SAASvP,IAAKzkF,GAAGC,GAAG+zF;IAClB,OAAOQ,QAAQx0F,GAAGC,GAAG+zF,UAAU;AACjC;GAGA,SAASvpB,IAAKzqE,GAAG21F,IAAI11F,GAAG+zF;IACtB,QAAQ2B;IACN,KAAK;KAKH,OAJiB,mBAAN31F,MACTA,IAAIA,EAAEjF,UACS,mBAANkF,MACTA,IAAIA,EAAElF;KACDiF,MAAMC;;IAEf,KAAK;KAKH,OAJiB,mBAAND,MACTA,IAAIA,EAAEjF,UACS,mBAANkF,MACTA,IAAIA,EAAElF;KACDiF,MAAMC;;IAEf,KAAK;IACL,KAAK;IACL,KAAK;KACH,OAAOi1F,GAAGl1F,GAAGC,GAAG+zF;;IAElB,KAAK;KACH,OAAO0B,IAAI11F,GAAGC,GAAG+zF;;IAEnB,KAAK;KACH,OAAOwB,GAAGx1F,GAAGC,GAAG+zF;;IAElB,KAAK;KACH,OAAOrP,IAAI3kF,GAAGC,GAAG+zF;;IAEnB,KAAK;KACH,OAAOyB,GAAGz1F,GAAGC,GAAG+zF;;IAElB,KAAK;KACH,OAAOvP,IAAIzkF,GAAGC,GAAG+zF;;IAEnB;KACE,MAAM,IAAItxG,UAAU,uBAAuBizG;;AAEjD;GAGA,SAASC,WAAY1+C,MAAM3uD;IAQzB,IAPKA,WAA8B,mBAAZA,YACrBA,UAAU;KACRyrG,SAASzrG;KACT0rG,oBAAmB;QAInB/8C,gBAAgB0+C,YAAY;KAC9B,IAAI1+C,KAAK88C,YAAYzrG,QAAQyrG,OAC3B,OAAO98C;KAEPA,OAAOA,KAAK/sD;AAEhB;IAEA,MAAMrI,gBAAgB8zG,aACpB,OAAO,IAAIA,WAAW1+C,MAAM3uD;IAG9B2uD,OAAOA,KAAKtwD,OAAOH,MAAM,OAAO8C,KAAK,MACrCT,MAAM,cAAcouD,MAAM3uD,UAC1BzG,KAAKyG,UAAUA;IACfzG,KAAKkyG,UAAUzrG,QAAQyrG,OACvBlyG,KAAK+W,MAAMq+C,OAEPp1D,KAAK+zG,WAAWC,MAClBh0G,KAAKqI,QAAQ,KAEbrI,KAAKqI,QAAQrI,KAAKi0G,WAAWj0G,KAAK+zG,OAAO96F;IAG3CjS,MAAM,QAAQhH;AAChB;GAlKAJ,QAAQs0G,sBACR,SAA8Bh2F,GAAGC;IAC/B,OAAO20F,mBAAmB30F,GAAGD;AAC/B,MAEAte,QAAQwyG,QACR,SAAgBl0F,GAAGg0F;IACjB,OAAO,IAAIjD,OAAO/wF,GAAGg0F,OAAOE;AAC9B,MAEAxyG,QAAQyyG,QACR,SAAgBn0F,GAAGg0F;IACjB,OAAO,IAAIjD,OAAO/wF,GAAGg0F,OAAOG;AAC9B,MAEAzyG,QAAQ0yG,QACR,SAAgBp0F,GAAGg0F;IACjB,OAAO,IAAIjD,OAAO/wF,GAAGg0F,OAAOI;AAC9B,MAEA1yG,QAAQ8yG,UAAUA,SAKlB9yG,QAAQu0G,eACR,SAAuBj2F,GAAGC;IACxB,OAAOu0F,QAAQx0F,GAAGC,IAAG;AACvB,MAEAve,QAAQmzG,eACR,SAAuB70F,GAAGC,GAAG+zF;IAC3B,IAAIkC,WAAW,IAAInF,OAAO/wF,GAAGg0F,QACzBmC,WAAW,IAAIpF,OAAO9wF,GAAG+zF;IAC7B,OAAOkC,SAAS1B,QAAQ2B,aAAaD,SAASrB,aAAasB;AAC7D,MAEAz0G,QAAQ00G,WACR,SAAmBp2F,GAAGC,GAAG+zF;IACvB,OAAOQ,QAAQv0F,GAAGD,GAAGg0F;AACvB,MAEAtyG,QAAQm+C,OACR,SAAeykB,MAAM0vC;IACnB,OAAO1vC,KAAKzkB,MAAK,SAAU7/B,GAAGC;KAC5B,OAAOve,QAAQmzG,aAAa70F,GAAGC,GAAG+zF;AACpC;AACF,MAEAtyG,QAAQ20G,QACR,SAAgB/xC,MAAM0vC;IACpB,OAAO1vC,KAAKzkB,MAAK,SAAU7/B,GAAGC;KAC5B,OAAOve,QAAQmzG,aAAa50F,GAAGD,GAAGg0F;AACpC;AACF,MAEAtyG,QAAQ8zG,KAAKA,IAKb9zG,QAAQ+zG,KAAKA,IAKb/zG,QAAQwzG,KAAKA,IAKbxzG,QAAQg0G,MAAMA,KAKdh0G,QAAQijG,MAAMA;GAKdjjG,QAAQ+iG,MAAMA,KAKd/iG,QAAQ+oF,MAAMA,KA0Cd/oF,QAAQk0G,aAAaA;GAoCrB,IAAIE,MAAM,CAAC;GAiGX,SAASQ,MAAOx9C,OAAOvwD;IAQrB,IAPKA,WAA8B,mBAAZA,YACrBA,UAAU;KACRyrG,SAASzrG;KACT0rG,oBAAmB;QAInBn7C,iBAAiBw9C,OACnB,OAAIx9C,MAAMk7C,YAAYzrG,QAAQyrG,SAC1Bl7C,MAAMm7C,wBAAwB1rG,QAAQ0rG,oBACjCn7C,QAEA,IAAIw9C,MAAMx9C,MAAMq5B,KAAK5pF;IAIhC,IAAIuwD,iBAAiB88C,YACnB,OAAO,IAAIU,MAAMx9C,MAAM3uD,OAAO5B;IAGhC,MAAMzG,gBAAgBw0G,QACpB,OAAO,IAAIA,MAAMx9C,OAAOvwD;IAuB1B,IApBAzG,KAAKyG,UAAUA,SACfzG,KAAKkyG,UAAUzrG,QAAQyrG,OACvBlyG,KAAKmyG,sBAAsB1rG,QAAQ0rG;IAKnCnyG,KAAKqwF,MAAMr5B,MACRlyD,OACAH,MAAM,OACN8C,KAAK,MAGRzH,KAAKS,MAAMT,KAAKqwF,IAAI1rF,MAAM,MAAMC,KAAI,SAAUoyD;KAC5C,OAAOh3D,KAAKy0G,WAAWz9C,MAAMlyD;AAC/B,QAAG9E,MAAMoL,QAAO,SAAUilE;KAExB,OAAOA,EAAE5qE;AACX,UAEKzF,KAAKS,IAAIgF,QACZ,MAAM,IAAI7E,UAAU,2BAA2BZ,KAAKqwF;IAGtDrwF,KAAK2Y;AACP;GA4EA,SAAS+7F,cAAeC,aAAaluG;IAKnC,KAJA,IAAItC,UAAS,GACTywG,uBAAuBD,YAAY7yG,SACnC+yG,iBAAiBD,qBAAqB3jF,OAEnC9sB,UAAUywG,qBAAqBnvG,UACpCtB,SAASywG,qBAAqB5iF,OAAM,SAAU8iF;KAC5C,OAAOD,eAAeE,WAAWD,iBAAiBruG;AACpD,SAEAouG,iBAAiBD,qBAAqB3jF;IAGxC,OAAO9sB;AACT;GA4BA,SAAS6wG,IAAK1uD;IACZ,QAAQA,MAA2B,QAArBA,GAAGx+C,iBAAgC,QAAPw+C;AAC5C;GAsMA,SAAS2uD,cAAeC,IACtB1iG,MAAM2iG,IAAIC,IAAIC,IAAIC,KAAKC,IACvBC,IAAIC,IAAIC,IAAIC,IAAIC,KAAKC;IAuBrB,SArBErjG,OADEwiG,IAAIG,MACC,KACEH,IAAII,MACN,OAAOD,KAAK,SACVH,IAAIK,MACN,OAAOF,KAAK,MAAMC,KAAK,OAEvB,OAAO5iG,QAeD,OAXbgjG,KADER,IAAIS,MACD,KACIT,IAAIU,MACR,QAAQD,KAAK,KAAK,SACdT,IAAIW,MACR,MAAMF,KAAK,QAAQC,KAAK,KAAK,OACzBE,MACJ,OAAOH,KAAK,MAAMC,KAAK,MAAMC,KAAK,MAAMC,MAExC,OAAOJ,KAGW1wG;AAC3B;GAwBA,SAASgxG,QAASr1G,KAAKwY,SAASxS;IAC9B,KAAK,IAAIsW,IAAI,GAAGA,IAAItc,IAAIgF,QAAQsX,KAC9B,KAAKtc,IAAIsc,GAAGzX,KAAK2T,UACf,QAAO;IAIX,IAAIA,QAAQs5F,WAAW9sG,WAAWgB,QAAQ0rG,mBAAmB;KAM3D,KAAKp1F,IAAI,GAAGA,IAAItc,IAAIgF,QAAQsX,KAE1B,IADA/V,MAAMvG,IAAIsc,GAAGg3F,SACTtzG,IAAIsc,GAAGg3F,WAAWC,OAIlBvzG,IAAIsc,GAAGg3F,OAAOxB,WAAW9sG,SAAS,GAAG;MACvC,IAAIswG,UAAUt1G,IAAIsc,GAAGg3F;MACrB,IAAIgC,QAAQ3D,UAAUn5F,QAAQm5F,SAC1B2D,QAAQ1D,UAAUp5F,QAAQo5F,SAC1B0D,QAAQzD,UAAUr5F,QAAQq5F,OAC5B,QAAO;AAEX;KAIF,QAAO;AACT;IAEA,QAAO;AACT;GAGA,SAAS0D,UAAW/8F,SAAS+9C,OAAOvwD;IAClC;KACEuwD,QAAQ,IAAIw9C,MAAMx9C,OAAOvwD;AAC3B,MAAE,OAAO6lG;KACP,QAAO;AACT;IACA,OAAOt1C,MAAM1xD,KAAK2T;AACpB;GA4HA,SAASg9F,QAASh9F,SAAS+9C,OAAOk/C,MAAMzvG;IAItC,IAAI0vG,MAAMC,OAAOC,MAAMjhD,MAAMkhD;IAC7B,QAJAr9F,UAAU,IAAIg2F,OAAOh2F,SAASxS,UAC9BuwD,QAAQ,IAAIw9C,MAAMx9C,OAAOvwD;IAGjByvG;IACN,KAAK;KACHC,OAAOzC,IACP0C,QAAQzT,KACR0T,OAAO1C,IACPv+C,OAAO,KACPkhD,QAAQ;KACR;;IACF,KAAK;KACHH,OAAOxC,IACPyC,QAAQvT,KACRwT,OAAO3C,IACPt+C,OAAO,KACPkhD,QAAQ;KACR;;IACF;KACE,MAAM,IAAI11G,UAAU;;IAIxB,IAAIo1G,UAAU/8F,SAAS+9C,OAAOvwD,UAC5B,QAAO;IAMT,KAAK,IAAIsW,IAAI,GAAGA,IAAIi6C,MAAMv2D,IAAIgF,UAAUsX,GAAG;KACzC,IAAI43F,cAAc39C,MAAMv2D,IAAIsc,IAExB41E,OAAO,MACP4jB,MAAM;KAiBV,IAfA5B,YAAY5yG,SAAQ,SAAUy0G;MACxBA,WAAWzC,WAAWC,QACxBwC,aAAa,IAAI1C,WAAW,aAE9BnhB,OAAOA,QAAQ6jB;MACfD,MAAMA,OAAOC,YACTL,KAAKK,WAAWzC,QAAQphB,KAAKohB,QAAQttG,WACvCksF,OAAO6jB,aACEH,KAAKG,WAAWzC,QAAQwC,IAAIxC,QAAQttG,aAC7C8vG,MAAMC;AAEV,UAII7jB,KAAKshB,aAAa7+C,QAAQu9B,KAAKshB,aAAaqC,OAC9C,QAAO;KAKT,MAAMC,IAAItC,YAAYsC,IAAItC,aAAa7+C,SACnCghD,MAAMn9F,SAASs9F,IAAIxC,SACrB,QAAO;KACF,IAAIwC,IAAItC,aAAaqC,SAASD,KAAKp9F,SAASs9F,IAAIxC,SACrD,QAAO;AAEX;IACA,QAAO;AACT;GA7uBAD,WAAW3jG,UAAU4G,QAAQ,SAAUq+C;IACrC,IAAIh3C,IAAIpe,KAAKyG,QAAQyrG,QAAQ7C,OAAOzyF,EAAEg1F,mBAAmBvC,OAAOzyF,EAAEi1F,aAC9D10F,IAAIi4C,KAAK50C,MAAMpC;IAEnB,KAAKjB,GACH,MAAM,IAAIvc,UAAU,yBAAyBw0D;IAG/Cp1D,KAAKi0G,gBAAoB3wG,MAAT6Z,EAAE,KAAmBA,EAAE,KAAK,IACtB,QAAlBnd,KAAKi0G,aACPj0G,KAAKi0G,WAAW;IAIb92F,EAAE,KAGLnd,KAAK+zG,SAAS,IAAI9E,OAAO9xF,EAAE,IAAInd,KAAKyG,QAAQyrG,SAF5ClyG,KAAK+zG,SAASC;AAIlB,MAEAF,WAAW3jG,UAAUtH,WAAW;IAC9B,OAAO7I,KAAKqI;AACd,MAEAyrG,WAAW3jG,UAAU7K,OAAO,SAAU2T;IAGpC,IAFAjS,MAAM,mBAAmBiS,SAASjZ,KAAKyG,QAAQyrG,QAE3ClyG,KAAK+zG,WAAWC,OAAO/6F,YAAY+6F,KACrC,QAAO;IAGT,IAAuB,mBAAZ/6F,SACT;KACEA,UAAU,IAAIg2F,OAAOh2F,SAASjZ,KAAKyG;AACrC,MAAE,OAAO6lG;KACP,QAAO;AACT;IAGF,OAAO3jB,IAAI1vE,SAASjZ,KAAKi0G,UAAUj0G,KAAK+zG,QAAQ/zG,KAAKyG;AACvD,MAEAqtG,WAAW3jG,UAAU4kG,aAAa,SAAU3/C,MAAM3uD;IAChD,MAAM2uD,gBAAgB0+C,aACpB,MAAM,IAAIlzG,UAAU;IAUtB,IAAI61G;IAEJ,IATKhwG,WAA8B,mBAAZA,YACrBA,UAAU;KACRyrG,SAASzrG;KACT0rG,oBAAmB;QAMD,OAAlBnyG,KAAKi0G,UACP,OAAmB,OAAfj0G,KAAKqI,UAGTouG,WAAW,IAAIjC,MAAMp/C,KAAK/sD,OAAO5B;IAC1BuvG,UAAUh2G,KAAKqI,OAAOouG,UAAUhwG;IAClC,IAAsB,OAAlB2uD,KAAK6+C,UACd,OAAmB,OAAf7+C,KAAK/sD,UAGTouG,WAAW,IAAIjC,MAAMx0G,KAAKqI,OAAO5B;IAC1BuvG,UAAU5gD,KAAK2+C,QAAQ0C,UAAUhwG;IAG1C,IAAIiwG,4BACiB,SAAlB12G,KAAKi0G,YAAuC,QAAlBj0G,KAAKi0G,YACb,SAAlB7+C,KAAK6+C,YAAuC,QAAlB7+C,KAAK6+C,WAC9B0C,4BACiB,SAAlB32G,KAAKi0G,YAAuC,QAAlBj0G,KAAKi0G,YACb,SAAlB7+C,KAAK6+C,YAAuC,QAAlB7+C,KAAK6+C,WAC9B2C,aAAa52G,KAAK+zG,OAAO96F,YAAYm8C,KAAK2+C,OAAO96F,SACjD49F,iCACiB,SAAlB72G,KAAKi0G,YAAuC,SAAlBj0G,KAAKi0G,YACb,SAAlB7+C,KAAK6+C,YAAuC,SAAlB7+C,KAAK6+C,WAC9B6C,6BACFnuB,IAAI3oF,KAAK+zG,QAAQ,KAAK3+C,KAAK2+C,QAAQttG,aACf,SAAlBzG,KAAKi0G,YAAuC,QAAlBj0G,KAAKi0G,cACd,SAAlB7+C,KAAK6+C,YAAuC,QAAlB7+C,KAAK6+C,WAC9B8C,gCACFpuB,IAAI3oF,KAAK+zG,QAAQ,KAAK3+C,KAAK2+C,QAAQttG,aACf,SAAlBzG,KAAKi0G,YAAuC,QAAlBj0G,KAAKi0G,cACd,SAAlB7+C,KAAK6+C,YAAuC,QAAlB7+C,KAAK6+C;IAElC,OAAOyC,2BAA2BC,2BAC/BC,cAAcC,gCACfC,8BAA8BC;AAClC,MAEAn3G,QAAQ40G,QAAQA,OAqDhBA,MAAMrkG,UAAUwI,SAAS;IAIvB,OAHA3Y,KAAKg3D,QAAQh3D,KAAKS,IAAImE,KAAI,SAAUoyG;KAClC,OAAOA,MAAMvvG,KAAK,KAAK3C;AACzB,QAAG2C,KAAK,MAAM3C,QACP9E,KAAKg3D;AACd,MAEAw9C,MAAMrkG,UAAUtH,WAAW;IACzB,OAAO7I,KAAKg3D;AACd,MAEAw9C,MAAMrkG,UAAUskG,aAAa,SAAUz9C;IACrC,IAAIk7C,QAAQlyG,KAAKyG,QAAQyrG,OAErB+E,KAAK/E,QAAQ7C,OAAOzyF,EAAEo1F,oBAAoB3C,OAAOzyF,EAAEm1F;IACvD/6C,QAAQA,MAAMjyD,QAAQkyG,IAAIhC,gBAC1BjuG,MAAM,kBAAkBgwD,QAExBA,QAAQA,MAAMjyD,QAAQsqG,OAAOzyF,EAAEk1F,iBAtuBL;IAuuB1B9qG,MAAM,mBAAmBgwD,OAAOq4C,OAAOzyF,EAAEk1F,kBASzC96C,SAHAA,SAHAA,QAAQA,MAAMjyD,QAAQsqG,OAAOzyF,EAAEy0F,YAhxBV,QAmxBPtsG,QAAQsqG,OAAOzyF,EAAE60F,YAnwBV,QAswBP9sG,MAAM,OAAO8C,KAAK;IAKhC,IAAIyvG,SAAShF,QAAQ7C,OAAOzyF,EAAEg1F,mBAAmBvC,OAAOzyF,EAAEi1F,aACtDpxG,MAAMu2D,MAAMryD,MAAM,KAAKC,KAAI,SAAUwwD;KACvC,OAoEJ,SAA0BA,MAAM3uD;MAU9B,OATAO,MAAM,QAAQouD,MAAM3uD,UACpB2uD,OA6DF,SAAwBA,MAAM3uD;OAC5B,OAAO2uD,KAAKtwD,OAAOH,MAAM,OAAOC,KAAI,SAAUwwD;QAC5C,OAIJ,SAAuBA,MAAM3uD;SAC3BO,MAAM,SAASouD,MAAM3uD;SACrB,IAAI2X,IAAI3X,QAAQyrG,QAAQ7C,OAAOzyF,EAAE+0F,cAActC,OAAOzyF,EAAE80F;SACxD,OAAOt8C,KAAKrwD,QAAQqZ,IAAG,SAAUuwB,GAAGwoE,GAAGh6F,GAAGpO,GAAGw/F;UAE3C,IAAI/F;UA2CJ,OA5CAxhG,MAAM,SAASouD,MAAMzmB,GAAGwoE,GAAGh6F,GAAGpO,GAAGw/F,KAG7ByG,IAAImC,KACN3O,MAAM,KACGwM,IAAI73F,KACbqrF,MAAM,OAAO2O,IAAI,aAAaA,IAAI,KAAK,SAC9BnC,IAAIjmG,KAEXy5F,MADQ,QAAN2O,IACI,OAAOA,IAAI,MAAMh6F,IAAI,SAASg6F,IAAI,QAAQh6F,IAAI,KAAK,OAEnD,OAAOg6F,IAAI,MAAMh6F,IAAI,WAAWg6F,IAAI,KAAK,SAExC5I,MACTvnG,MAAM,mBAAmBunG;UAGrB/F,MAFM,QAAN2O,IACQ,QAANh6F,IACI,OAAOg6F,IAAI,MAAMh6F,IAAI,MAAMpO,IAAI,MAAMw/F,KACrC,OAAO4I,IAAI,MAAMh6F,IAAI,QAAQpO,IAAI,KAEjC,OAAOooG,IAAI,MAAMh6F,IAAI,MAAMpO,IAAI,MAAMw/F,KACrC,OAAO4I,IAAI,QAAQh6F,IAAI,KAAK,OAG9B,OAAOg6F,IAAI,MAAMh6F,IAAI,MAAMpO,IAAI,MAAMw/F,KACrC,SAAS4I,IAAI,KAAK,WAG1BnwG,MAAM;UAGFwhG,MAFM,QAAN2O,IACQ,QAANh6F,IACI,OAAOg6F,IAAI,MAAMh6F,IAAI,MAAMpO,IAC3B,OAAOooG,IAAI,MAAMh6F,IAAI,QAAQpO,IAAI,KAEjC,OAAOooG,IAAI,MAAMh6F,IAAI,MAAMpO,IAC3B,OAAOooG,IAAI,QAAQh6F,IAAI,KAAK,OAG9B,OAAOg6F,IAAI,MAAMh6F,IAAI,MAAMpO,IAC3B,SAASooG,IAAI,KAAK;UAI5BnwG,MAAM,gBAAgBwhG,MACfA;AACT;AACF,SAtDW4O,CAAahiD,MAAM3uD;AAC5B,WAAGgB,KAAK;AACV,OAjES4vG,CAAcjiD,MAAM3uD,UAC3BO,MAAM,SAASouD,OACfA,OAmBF,SAAwBA,MAAM3uD;OAC5B,OAAO2uD,KAAKtwD,OAAOH,MAAM,OAAOC,KAAI,SAAUwwD;QAC5C,OAIJ,SAAuBA,MAAM3uD;SAC3B,IAAI2X,IAAI3X,QAAQyrG,QAAQ7C,OAAOzyF,EAAE20F,cAAclC,OAAOzyF,EAAE00F;SACxD,OAAOl8C,KAAKrwD,QAAQqZ,IAAG,SAAUuwB,GAAGwoE,GAAGh6F,GAAGpO,GAAGw/F;UAE3C,IAAI/F;UAoBJ,OArBAxhG,MAAM,SAASouD,MAAMzmB,GAAGwoE,GAAGh6F,GAAGpO,GAAGw/F,KAG7ByG,IAAImC,KACN3O,MAAM,KACGwM,IAAI73F,KACbqrF,MAAM,OAAO2O,IAAI,aAAaA,IAAI,KAAK,SAC9BnC,IAAIjmG,KAEby5F,MAAM,OAAO2O,IAAI,MAAMh6F,IAAI,SAASg6F,IAAI,QAAQh6F,IAAI,KAAK,OAChDoxF,MACTvnG,MAAM,mBAAmBunG;UACzB/F,MAAM,OAAO2O,IAAI,MAAMh6F,IAAI,MAAMpO,IAAI,MAAMw/F,KACrC,OAAO4I,IAAI,QAAQh6F,IAAI,KAAK,QAGlCqrF,MAAM,OAAO2O,IAAI,MAAMh6F,IAAI,MAAMpO,IAC3B,OAAOooG,IAAI,QAAQh6F,IAAI,KAAK;UAGpCnW,MAAM,gBAAgBwhG,MACfA;AACT;AACF,SA9BW8O,CAAaliD,MAAM3uD;AAC5B,WAAGgB,KAAK;AACV,OAvBS8vG,CAAcniD,MAAM3uD,UAC3BO,MAAM,UAAUouD,OAChBA,OAmHF,SAAyBA,MAAM3uD;OAE7B,OADAO,MAAM,kBAAkBouD,MAAM3uD,UACvB2uD,KAAKzwD,MAAM,OAAOC,KAAI,SAAUwwD;QACrC,OAIJ,SAAwBA,MAAM3uD;SAC5B2uD,OAAOA,KAAKtwD;SACZ,IAAIsZ,IAAI3X,QAAQyrG,QAAQ7C,OAAOzyF,EAAEq0F,eAAe5B,OAAOzyF,EAAEo0F;SACzD,OAAO57C,KAAKrwD,QAAQqZ,IAAG,SAAUoqF,KAAKgP,MAAML,GAAGh6F,GAAGpO,GAAGw/F;UACnDvnG,MAAM,UAAUouD,MAAMozC,KAAKgP,MAAML,GAAGh6F,GAAGpO,GAAGw/F;UAC1C,IAAIkJ,KAAKzC,IAAImC,IACTO,KAAKD,MAAMzC,IAAI73F,IACfw6F,KAAKD,MAAM1C,IAAIjmG,IACf6oG,OAAOD;UA4DX,OA1Da,QAATH,QAAgBI,SAClBJ,OAAO,KAKTjJ,KAAK9nG,QAAQ0rG,oBAAoB,OAAO;UAEpCsF,KAGAjP,MAFW,QAATgP,QAAyB,QAATA,OAEZ,aAGA,MAECA,QAAQI,QAGbF,OACFv6F,IAAI;UAENpO,IAAI,GAES,QAATyoG,QAIFA,OAAO,MACHE,MACFP,KAAKA,IAAI,GACTh6F,IAAI,GACJpO,IAAI,MAEJoO,KAAKA,IAAI;UACTpO,IAAI,MAEY,SAATyoG,SAGTA,OAAO,KACHE,KACFP,KAAKA,IAAI,IAETh6F,KAAKA,IAAI,IAIbqrF,MAAMgP,OAAOL,IAAI,MAAMh6F,IAAI,MAAMpO,IAAIw/F,MAC5BmJ,KACTlP,MAAM,OAAO2O,IAAI,SAAS5I,KAAK,SAAS4I,IAAI,KAAK,SAAS5I,KACjDoJ,OACTnP,MAAM,OAAO2O,IAAI,MAAMh6F,IAAI,OAAOoxF,KAChC,OAAO4I,IAAI,QAAQh6F,IAAI,KAAK,OAAOoxF;UAGvCvnG,MAAM,iBAAiBwhG,MAEhBA;AACT;AACF,SA1EWqP,CAAcziD,MAAM3uD;AAC7B,WAAGgB,KAAK;AACV,OAxHSqwG,CAAe1iD,MAAM3uD,UAC5BO,MAAM,UAAUouD,OAChBA,OAkMF,SAAuBA,MAAM3uD;OAG3B,OAFAO,MAAM,gBAAgBouD,MAAM3uD,UAErB2uD,KAAKtwD,OAAOC,QAAQsqG,OAAOzyF,EAAEq1F,OAAO;AAC7C,OAtMS8F,CAAa3iD,MAAM3uD,UAC1BO,MAAM,SAASouD,OACRA;AACT,MA/EW4iD,CAAgB5iD,MAAMp1D,KAAKyG;AACpC,QAAGzG,MAAMyH,KAAK,KAAK9C,MAAM;IAWzB,OAVI3E,KAAKyG,QAAQyrG,UAEfzxG,MAAMA,IAAI2K,QAAO,SAAUgqD;KACzB,SAASA,KAAK50C,MAAM02F;AACtB,UAEFz2G,MAAMA,IAAImE,KAAI,SAAUwwD;KACtB,OAAO,IAAI0+C,WAAW1+C,MAAMp1D,KAAKyG;AACnC,QAAGzG;AAGL,MAEAw0G,MAAMrkG,UAAU4kG,aAAa,SAAU/9C,OAAOvwD;IAC5C,MAAMuwD,iBAAiBw9C,QACrB,MAAM,IAAI5zG,UAAU;IAGtB,OAAOZ,KAAKS,IAAIigB,MAAK,SAAUu3F;KAC7B,OACEvD,cAAcuD,iBAAiBxxG,YAC/BuwD,MAAMv2D,IAAIigB,MAAK,SAAUw3F;MACvB,OACExD,cAAcwD,kBAAkBzxG,YAChCwxG,gBAAgBjmF,OAAM,SAAUmmF;OAC9B,OAAOD,iBAAiBlmF,OAAM,SAAUomF;QACtC,OAAOD,eAAepD,WAAWqD,iBAAiB3xG;AACpD;AACF;AAEJ;AAEJ;AACF,MAqBA7G,QAAQy4G,gBACR,SAAwBrhD,OAAOvwD;IAC7B,OAAO,IAAI+tG,MAAMx9C,OAAOvwD,SAAShG,IAAImE,KAAI,SAAUwwD;KACjD,OAAOA,KAAKxwD,KAAI,SAAUyrE;MACxB,OAAOA,EAAEhoE;AACX,SAAGZ,KAAK,KAAK3C,OAAOH,MAAM;AAC5B;AACF,MAuPA6vG,MAAMrkG,UAAU7K,OAAO,SAAU2T;IAC/B,KAAKA,SACH,QAAO;IAGT,IAAuB,mBAAZA,SACT;KACEA,UAAU,IAAIg2F,OAAOh2F,SAASjZ,KAAKyG;AACrC,MAAE,OAAO6lG;KACP,QAAO;AACT;IAGF,KAAK,IAAIvvF,IAAI,GAAGA,IAAI/c,KAAKS,IAAIgF,QAAQsX,KACnC,IAAI+4F,QAAQ91G,KAAKS,IAAIsc,IAAI9D,SAASjZ,KAAKyG,UACrC,QAAO;IAGX,QAAO;AACT,MAsCA7G,QAAQo2G,YAAYA,WAUpBp2G,QAAQ04G,gBACR,SAAwBl/F,UAAU49C,OAAOvwD;IACvC,IAAIoP,MAAM,MACN0iG,QAAQ;IACZ;KACE,IAAIC,WAAW,IAAIhE,MAAMx9C,OAAOvwD;AAClC,MAAE,OAAO6lG;KACP,OAAO;AACT;IAWA,OAVAlzF,SAASrX,SAAQ,SAAUub;KACrBk7F,SAASlzG,KAAKgY,OAEXzH,QAA6B,MAAtB0iG,MAAM7F,QAAQp1F,OAGxBi7F,QAAQ,IAAItJ,OADZp5F,MAAMyH,GACkB7W;AAG9B,SACOoP;AACT,MAEAjW,QAAQ64G,gBACR,SAAwBr/F,UAAU49C,OAAOvwD;IACvC,IAAIkP,MAAM,MACN+iG,QAAQ;IACZ;KACE,IAAIF,WAAW,IAAIhE,MAAMx9C,OAAOvwD;AAClC,MAAE,OAAO6lG;KACP,OAAO;AACT;IAWA,OAVAlzF,SAASrX,SAAQ,SAAUub;KACrBk7F,SAASlzG,KAAKgY,OAEX3H,OAA4B,MAArB+iG,MAAMhG,QAAQp1F,OAGxBo7F,QAAQ,IAAIzJ,OADZt5F,MAAM2H,GACkB7W;AAG9B,SACOkP;AACT,MAEA/V,QAAQ+4G,aACR,SAAqB3hD,OAAOk7C;IAC1Bl7C,QAAQ,IAAIw9C,MAAMx9C,OAAOk7C;IAEzB,IAAI0G,SAAS,IAAI3J,OAAO;IACxB,IAAIj4C,MAAM1xD,KAAKszG,SACb,OAAOA;IAIT,IADAA,SAAS,IAAI3J,OAAO,YAChBj4C,MAAM1xD,KAAKszG,SACb,OAAOA;IAGTA,SAAS;IACT,KAAK,IAAI77F,IAAI,GAAGA,IAAIi6C,MAAMv2D,IAAIgF,UAAUsX,GAAG;KACvBi6C,MAAMv2D,IAAIsc,GAEhBhb,SAAQ,SAAUy0G;MAE5B,IAAIqC,UAAU,IAAI5J,OAAOuH,WAAWzC,OAAO96F;MAC3C,QAAQu9F,WAAWvC;MACjB,KAAK;OAC+B,MAA9B4E,QAAQtG,WAAW9sG,SACrBozG,QAAQvG,UAERuG,QAAQtG,WAAWrxG,KAAK;OAE1B23G,QAAQxoB,MAAMwoB,QAAQlgG;;MAExB,KAAK;MACL,KAAK;OACEigG,WAAUlF,GAAGkF,QAAQC,aACxBD,SAASC;OAEX;;MACF,KAAK;MACL,KAAK;OAEH;;MAEF;OACE,MAAM,IAAIn3G,MAAM,2BAA2B80G,WAAWvC;;AAE5D;AACF;IAEA,IAAI2E,UAAU5hD,MAAM1xD,KAAKszG,SACvB,OAAOA;IAGT,OAAO;AACT,MAEAh5G,QAAQk5G,aACR,SAAqB9hD,OAAOvwD;IAC1B;KAGE,OAAO,IAAI+tG,MAAMx9C,OAAOvwD,SAASuwD,SAAS;AAC5C,MAAE,OAAOs1C;KACP,OAAO;AACT;AACF,MAGA1sG,QAAQm5G,MACR,SAAc9/F,SAAS+9C,OAAOvwD;IAC5B,OAAOwvG,QAAQh9F,SAAS+9C,OAAO,KAAKvwD;AACtC,MAGA7G,QAAQo5G,MACR,SAAc//F,SAAS+9C,OAAOvwD;IAC5B,OAAOwvG,QAAQh9F,SAAS+9C,OAAO,KAAKvwD;AACtC,MAEA7G,QAAQq2G,UAAUA,SAsElBr2G,QAAQ2yG,aACR,SAAqBt5F,SAASxS;IAC5B,IAAIwyG,SAASliG,MAAMkC,SAASxS;IAC5B,OAAQwyG,UAAUA,OAAO1G,WAAW9sG,SAAUwzG,OAAO1G,aAAa;AACpE,MAEA3yG,QAAQm1G,aACR,SAAqBmE,IAAIC,IAAI1yG;IAG3B,OAFAyyG,KAAK,IAAI1E,MAAM0E,IAAIzyG,UACnB0yG,KAAK,IAAI3E,MAAM2E,IAAI1yG,UACZyyG,GAAGnE,WAAWoE;AACvB,MAEAv5G,QAAQimG,SACR,SAAiB5sF,SAASxS;IACxB,IAAIwS,mBAAmBg2F,QACrB,OAAOh2F;IAGc,mBAAZA,YACTA,UAAU3Q,OAAO2Q;IAGnB,IAAuB,mBAAZA,SACT,OAAO;IAKT,IAAIuH,QAAQ;IACZ,KAHA/Z,UAAUA,WAAW,CAAC,GAGT2yG,KAEN;KAUL,KADA,IAAIztG,OACIA,OAAO0jG,OAAOzyF,EAAEu0F,WAAW1nF,KAAKxQ,eACpCuH,SAASA,MAAMnf,QAAQmf,MAAM,GAAG/a,WAAWwT,QAAQxT,WAEhD+a,SACD7U,KAAKtK,QAAQsK,KAAK,GAAGlG,WAAW+a,MAAMnf,QAAQmf,MAAM,GAAG/a,WACzD+a,QAAQ7U;KAEV0jG,OAAOzyF,EAAEu0F,WAAW7pE,YAAY37B,KAAKtK,QAAQsK,KAAK,GAAGlG,SAASkG,KAAK,GAAGlG;KAGxE4pG,OAAOzyF,EAAEu0F,WAAW7pE,aAAa;AACnC,WAtBE9mB,QAAQvH,QAAQuH,MAAM6uF,OAAOzyF,EAAEs0F;IAwBjC,IAAc,SAAV1wF,OACF,OAAO;IAGT,OAAOzJ,MAAMyJ,MAAM,KACjB,OAAOA,MAAM,MAAM,OACnB,OAAOA,MAAM,MAAM,MAAM/Z;AAC7B;;;;GCxmDA,SAAS4yG,sBAAsBhxG,OAAOjF,KAAK61E;IAKvC,IASIz4D,OATA84F,WAAW,8EACXC,WAAWlxG,OACXmxG,UAAU;IACVp2G,OACAo2G,QAAQt4G,KAAKkC,MAEb61E,QACAugC,QAAQt4G,KAAK+3E;IAGjB;KAGkB,UADdz4D,QAAQ84F,SAAS7vF,KAAK8vF,cAIlBC,QAAQt4G,KAAKu4G,YAAYj5F,MAAM,IAAIA,MAAM,IAAIA,MAAM;aAExC,SAAVA;IACT,OAAOg5F;AACX;GAKA,SAASC;IAEL,KADA,IAAIp1G,OAAO,IACFq1G,KAAK,GAAGA,KAAKh3G,UAAU+C,QAAQi0G,MACpCr1G,KAAKq1G,MAAMh3G,UAAUg3G;IAEzB,KAAK,IAAI38F,IAAI,GAAGA,IAAI1Y,KAAKoB,QAAQsX,KAAK;KAClC,IAAIyyE,MAAMnrF,KAAK0Y;KACf,IAAmB,mBAARyyE,KACP,OAAOA;AAEf;AACJ;GA1CA5vF,QAAQgoG,cAAa,GA2BrBhoG,QAAiB,UAAIy5G,uBACrBz5G,QAAQy5G,wBAAwBA;;;;GC5BhC,MAAMM,KAAK,oBAAQ,MACb9S,MAAM,oBAAQ,OACd+S,UAAU,oBAAQ,QAElB,OAAQz2G;GAEd,IAAI02G;GAwCJ,SAASrS,cAAcsS,aAAY,aAAY,cAAe,KAAQ,CAAC;IACtE,MAAMC,mBA5BP;KACC,IAAI,iBAAiB32G,KACpB,OAAwB,WAApBA,IAAI42G,cACA,IAGgB,YAApB52G,IAAI42G,cACA,IAG0B,MAA3B52G,IAAI42G,YAAYv0G,SAAe,IAAI+P,KAAKG,IAAInC,OAAOwO,SAAS5e,IAAI42G,aAAa,KAAK;AAE3F,KAgB0BC;SACA32G,MAArBy2G,qBACHF,iBAAiBE;IAGlB,MAAMG,aAAaC,aAAaN,iBAAiBE;IAEjD,IAAmB,MAAfG,YACH,OAAO;IAGR,IAAIC,YAAY;KACf,IAAIP,QAAQ,gBACXA,QAAQ,iBACRA,QAAQ,oBACR,OAAO;KAGR,IAAIA,QAAQ,cACX,OAAO;AAET;IAEA,IAAIE,eAAeM,oBAA8B92G,MAAf42G,YACjC,OAAO;IAGR,MAAMvkG,MAAMukG,cAAc;IAE1B,IAAiB,WAAb92G,IAAIi3G,MACP,OAAO1kG;IAGR,IAAyB,YAArBxS,QAAQm3G,UAAsB;KAGjC,MAAMC,YAAYZ,GAAG1G,UAAUtuG,MAAM;KACrC,OACC6O,OAAO+mG,UAAU,OAAO,MACxB/mG,OAAO+mG,UAAU,OAAO,QAEjB/mG,OAAO+mG,UAAU,OAAO,QAAQ,IAAI,IAGrC;AACR;IAEA,IAAI,QAAQn3G,KACX,OAAI,EAAC,UAAU,YAAY,YAAY,aAAa,kBAAkB,aAAa,UAASsd,MAAKktB,QAAQA,QAAQxqC,SAAwB,eAAhBA,IAAIo3G,UACrH,IAGD7kG;IAGR,IAAI,sBAAsBvS,KACzB,OAAO,gCAAgCkC,KAAKlC,IAAIq3G,oBAAoB,IAAI;IAGzE,IAAsB,gBAAlBr3G,IAAIs3G,WACP,OAAO;IAGR,IAAI,kBAAkBt3G,KAAK;KAC1B,MAAM6V,UAAUzF,OAAOwO,UAAU5e,IAAIu3G,wBAAwB,IAAIh2G,MAAM,KAAK,IAAI;KAEhF,QAAQvB,IAAIw3G;KACX,KAAK;MACJ,OAAO3hG,WAAW,IAAI,IAAI;;KAC3B,KAAK;MACJ,OAAO;;AAGV;IAEA,OAAI,iBAAiB3T,KAAKlC,IAAIi3G,QACtB,IAGJ,8DAA8D/0G,KAAKlC,IAAIi3G,SAIvE,eAAej3G,MAHX,IAODuS;AACR;GAEA,SAASklG,gBAAgBnqG,QAAQjK,UAAU,CAAC;IAM3C,OA9GD,SAAwBH;KACvB,OAAc,MAAVA,SAIG;MACNA;MACAw0G,WAAU;MACVC,QAAQz0G,SAAS;MACjB00G,QAAQ10G,SAAS;;AAEnB,KAmGQ20G,CALOzT,cAAc92F,QAAQ;KACnC0pG,aAAa1pG,UAAUA,OAAOwqG;QAC3Bz0G;;AAIL;GAzIImzG,QAAQ,eACXA,QAAQ,gBACRA,QAAQ,kBACRA,QAAQ,iBACRC,iBAAiB,KACPD,QAAQ,YAClBA,QAAQ,aACRA,QAAQ,iBACRA,QAAQ,qBACRC,iBAAiB;GAkIlBh6G,OAAOD,UAAU;IAChB4nG,eAAeqT;IACfM,QAAQN,gBAAgB;KAACK,OAAOrU,IAAIQ,OAAO;;IAC3CL,QAAQ6T,gBAAgB;KAACK,OAAOrU,IAAIQ,OAAO;;;;;GCtJ5CxnG,OAAOD,UAAU,oBAAjB;;;;GCEU,oBAAQ;GAAlB,IAuPIoH,OAtPAo0G,MAAM,oBAAQ,OACdC,OAAO,oBAAQ,OACfC,QAAQ,oBAAQ,OAChBC,SAAS,oBAAQ,OAEjBzU,QADS,oBAAQ;GACV,oBAAQ;GAsCnB,SAAS0U,eAAe/0G;IACtB,IAAIqS,OAAO9Y;IACX8Y,KAAKrS,UAAUA,WAAW,CAAC,GAC3BqS,KAAK2M,eAAe3M,KAAKrS,QAAQg1G,SAAS,CAAC,GAC3C3iG,KAAK4iG,aAAa5iG,KAAKrS,QAAQi1G,cAAcL,KAAKM,MAAMC;IACxD9iG,KAAK2xE,WAAW,IAChB3xE,KAAK+iG,UAAU,IAEf/iG,KAAK9H,GAAG,SAAQ,SAAgB8qG,QAAQ7gG,MAAMvG,MAAMqnG;KAElD,KADA,IAAIt1G,UAAUu1G,UAAU/gG,MAAMvG,MAAMqnG,eAC3Bh/F,IAAI,GAAGkS,MAAMnW,KAAK2xE,SAAShlF,QAAQsX,IAAIkS,OAAOlS,GAAG;MACxD,IAAIk/F,UAAUnjG,KAAK2xE,SAAS1tE;MAC5B,IAAIk/F,QAAQhhG,SAASxU,QAAQwU,QAAQghG,QAAQvnG,SAASjO,QAAQiO,MAK5D,OAFAoE,KAAK2xE,SAASlpF,OAAOwb,GAAG;WACxBk/F,QAAQzwG,QAAQ0wG,SAASJ;AAG7B;KACAA,OAAOp2G,WACPoT,KAAKqjG,aAAaL;AACpB;AACF;GAuIA,SAASM,mBAAmB31G,SAAS41G;IACnC,IAAIvjG,OAAO9Y;IACXw7G,eAAerrG,UAAUmsG,aAAaz6G,KAAKiX,MAAMrS,UAAS,SAASq1G;KACjE,IAAIS,aAAa91G,QAAQ+E,QAAQgxG,UAAU,SACvCh3F,aAAa2mE,aAAa,CAAC,GAAGrzE,KAAKrS,SAAS;MAC9Cq1G;MACAW,YAAYF,aAAaA,WAAWx3G,QAAQ,QAAQ,MAAM0B,QAAQwU;SAIhEyhG,eAAetB,IAAIuB,QAAQ,GAAGn3F;KAClC1M,KAAK+iG,QAAQ/iG,KAAK+iG,QAAQv6G,QAAQw6G,WAAWY,cAC7CL,GAAGK;AACL;AACF;GAGA,SAASV,UAAU/gG,MAAMvG,MAAMqnG;IAC7B,OAAoB,mBAAT9gG,OACF;KACLA;KACAvG;KACAqnG;QAGG9gG;AACT;GAEA,SAASkxE,aAAajsD;IACpB,KAAK,IAAInjB,IAAI,GAAGkS,MAAMvsB,UAAU+C,QAAQsX,IAAIkS,OAAOlS,GAAG;KACpD,IAAI6/F,YAAYl6G,UAAUqa;KAC1B,IAAyB,mBAAd6/F,WAET,KADA,IAAIx0G,OAAOvE,OAAOuE,KAAKw0G,YACdn2E,IAAI,GAAGo2E,SAASz0G,KAAK3C,QAAQghC,IAAIo2E,UAAUp2E,GAAG;MACrD,IAAI92B,IAAIvH,KAAKq+B;WACQnjC,MAAjBs5G,UAAUjtG,OACZuwB,OAAOvwB,KAAKitG,UAAUjtG;AAE1B;AAEJ;IACA,OAAOuwB;AACT;GA3OAtgC,QAAQk9G,eAMR,SAAsBr2G;IACpB,IAAI4N,QAAQ,IAAImnG,eAAe/0G;IAE/B,OADA4N,MAAM7I,UAAU6vG,KAAK7vG,SACd6I;AACT,MATAzU,QAAQm9G,gBAWR,SAAuBt2G;IACrB,IAAI4N,QAAQ,IAAImnG,eAAe/0G;IAI/B,OAHA4N,MAAM7I,UAAU6vG,KAAK7vG,SACrB6I,MAAMioG,eAAeF,oBACrB/nG,MAAM2oG,cAAc;IACb3oG;AACT,MAhBAzU,QAAQq9G,gBAkBR,SAAuBx2G;IACrB,IAAI4N,QAAQ,IAAImnG,eAAe/0G;IAE/B,OADA4N,MAAM7I,UAAU8vG,MAAM9vG,SACf6I;AACT,MArBAzU,QAAQs9G,iBAuBR,SAAwBz2G;IACtB,IAAI4N,QAAQ,IAAImnG,eAAe/0G;IAI/B,OAHA4N,MAAM7I,UAAU8vG,MAAM9vG,SACtB6I,MAAMioG,eAAeF,oBACrB/nG,MAAM2oG,cAAc;IACb3oG;AACT,MA2BAyyF,KAAKqW,SAAS3B,gBAAgBD,OAAO1pC,eAErC2pC,eAAerrG,UAAUitG,aAAa,SAAoBxxG,KAAKqP,MAAMvG,MAAMqnG;IACzE,IAAIjjG,OAAO9Y,MACPyG,UAAU0lF,aAAa;KAAC3gF,SAASI;OAAMkN,KAAKrS,SAASu1G,UAAU/gG,MAAMvG,MAAMqnG;IAE3EjjG,KAAK+iG,QAAQp2G,UAAUzF,KAAK07G,aAE9B5iG,KAAK2xE,SAASvpF,KAAKuF,WAKrBqS,KAAKwjG,aAAa71G,UAAS,SAASq1G;KAMlC,SAASuB;MACPvkG,KAAK60D,KAAK,QAAQmuC,QAAQr1G;AAC5B;KAEA,SAAS62G,gBAAgB1oG;MACvBkE,KAAKqjG,aAAaL,SAClBA,OAAO/qG,eAAe,QAAQssG,SAC9BvB,OAAO/qG,eAAe,SAASusG;MAC/BxB,OAAO/qG,eAAe,eAAeusG;AACvC;KAdAxB,OAAO9qG,GAAG,QAAQqsG,SAClBvB,OAAO9qG,GAAG,SAASssG,kBACnBxB,OAAO9qG,GAAG,eAAessG;KACzB1xG,IAAIswG,SAASJ;AAYf;AACF,MAEAN,eAAerrG,UAAUmsG,eAAe,SAAsB71G,SAAS41G;IACrE,IAAIvjG,OAAO9Y,MACPu9G,cAAc,CAAC;IACnBzkG,KAAK+iG,QAAQ36G,KAAKq8G;IAElB,IAAIC,iBAAiBrxB,aAAa,CAAC,GAAGrzE,KAAK2M,cAAc;KACvD7b,QAAQ;KACR4K,MAAM/N,QAAQwU,OAAO,MAAMxU,QAAQiO;KACnCL,QAAO;KACP1K,SAAS;MACPsR,MAAMxU,QAAQwU,OAAO,MAAMxU,QAAQiO;;;IAGnCjO,QAAQs1G,iBACVyB,eAAezB,eAAet1G,QAAQs1G,eAEpCyB,eAAeC,cACjBD,eAAe7zG,UAAU6zG,eAAe7zG,WAAW,CAAC;IACpD6zG,eAAe7zG,QAAQ,yBAAyB,WAC5C,IAAI2I,OAAOkrG,eAAeC,WAAW50G,SAAS;IAGpD7B,MAAM;IACN,IAAI02G,aAAa5kG,KAAKtN,QAAQgyG;IAoB9B,SAASG,UAAU/qG,KAAKkpG,QAAQ8B;KAQ5B,IAUI33G;KAdN,OAHAy3G,WAAWG,sBACX/B,OAAO+B,sBAEgB,QAAnBjrG,IAAI9C,cACN9I,MAAM,4DACJ4L,IAAI9C;KACNgsG,OAAOp2G,YACHO,QAAQ,IAAIvE,MAAM,2DACJkR,IAAI9C,aAChBD,OAAO;KACbpJ,QAAQ+E,QAAQmiE,KAAK,SAAS1nE,aAC9B6S,KAAKqjG,aAAaoB,gBAGhBK,KAAKn4G,SAAS,KAChBuB,MAAM;KACN80G,OAAOp2G,YACHO,QAAQ,IAAIvE,MAAM,yCAChBmO,OAAO;KACbpJ,QAAQ+E,QAAQmiE,KAAK,SAAS1nE,aAC9B6S,KAAKqjG,aAAaoB,iBAGpBv2G,MAAM;KACN8R,KAAK+iG,QAAQ/iG,KAAK+iG,QAAQv6G,QAAQi8G,gBAAgBzB,QAC3CO,GAAGP;AACZ;IA9CA4B,WAAWI,+BAA8B,GACzCJ,WAAW/oG,KAAK,aAMhB,SAAoB/B;KAElBA,IAAImrG,WAAU;AAChB,SARAL,WAAW/oG,KAAK,YAUhB,SAAmB/B,KAAKkpG,QAAQ8B;KAE9Bz6G,QAAQ66G,UAAS;MACfL,UAAU/qG,KAAKkpG,QAAQ8B;AACzB;AACF,SAdAF,WAAW/oG,KAAK,WAAWgpG,YAC3BD,WAAW/oG,KAAK,UA4ChB,SAAiBspG;KACfP,WAAWG,sBAEX72G,MAAM,yDACAi3G,MAAM/7G,SAAS+7G,MAAMzmB;KAC3B,IAAIvxF,QAAQ,IAAIvE,MAAM,sDACWu8G,MAAM/7G;KACvC+D,MAAM4J,OAAO,cACbpJ,QAAQ+E,QAAQmiE,KAAK,SAAS1nE,QAC9B6S,KAAKqjG,aAAaoB;AACpB,SArDAG,WAAW/qG;AAsDb,MAEA6oG,eAAerrG,UAAUgsG,eAAe,SAAsBL;IAC5D,IAAI9mC,MAAMh1E,KAAK67G,QAAQv6G,QAAQw6G;IAC/B,KAAa,MAAT9mC,KAAJ;KAGAh1E,KAAK67G,QAAQt6G,OAAOyzE,KAAK;KAEzB,IAAIinC,UAAUj8G,KAAKyqF,SAASlsE;KACxB09F,WAGFj8G,KAAKs8G,aAAaL,UAAS,SAASH;MAClCG,QAAQzwG,QAAQ0wG,SAASJ;AAC3B;AATF;AAWF,MAiDE90G,QADE7D,QAAQC,IAAI8rG,cAAc,aAAa5pG,KAAKnC,QAAQC,IAAI8rG,cAClD;IACN,IAAI7qG,OAAO7B,MAAM2N,UAAUrO,MAAMD,KAAKa;IACf,mBAAZ2B,KAAK,KACdA,KAAK,KAAK,aAAaA,KAAK,KAE5BA,KAAKu4B,QAAQ;IAEfp1B,QAAQvB,MAAM4X,MAAMrW,SAASnD;AAC/B,OAEQ,YAAY,GAEtBzE,QAAQoH,QAAQA;;;;GCrQhB,MAAMk3G,SAAS,oBAAQ,OACjBC,aAAa,oBAAQ,OACrBC,SAAS,oBAAQ,OACjBC,OAAO,oBAAQ,OACfC,eAAe,oBAAQ,OACvB3C,QAAQ,oBAAQ,OAChB7U,OAAO,oBAAQ,QACf,wBAA2BsX,QAC3BG,MAAM,oBAAQ,MACdC,iBAAiB,oBAAQ,OACzBC,aAAa,oBAAQ,OACrBC,YAAY,oBAAQ,MACpBC,WAAW,oBAAQ,OACnBC,aAAa,oBAAQ,OACrBC,aAAa,oBAAQ,OACrBC,eAAe,oBAAQ,QACvB,qBAAqB,uBAA0B,oBAAQ,OACvDC,mBAAmB,oBAAQ,MAC3BC,kBAAkB,oBAAQ,OAC1BC,4BAA4B,oBAAQ;GAE1C,IAAIC;GACJ;IACE,oBAAQ,OACRA,aAAY;AACd,KAAE;IACAA,aAAY;AACd;GAmBA,SAASC,eAAgBtb;IACvB,OAAO,CAACp6F,KAAK+sB,MAAM1lB;KAMjB,IALoB,qBAAT0lB,SACT1lB,UAAU0lB,MACVA,OAAO,QAGJ/sB,OAAuB,mBAARA,OAAmC,mBAARA,SAAsBA,eAAe8F,MAClF,MAAM,IAAI6vG,qBAAqB;KAGjC,IAAY,QAAR5oF,QAAgC,mBAATA,MACzB,MAAM,IAAI4oF,qBAAqB;KAGjC,IAAI5oF,QAAqB,QAAbA,KAAKhiB,MAAc;MAC7B,IAAyB,mBAAdgiB,KAAKhiB,MACd,MAAM,IAAI4qG,qBAAqB;MAGjC,IAAI5qG,OAAOgiB,KAAKhiB;MACXgiB,KAAKhiB,KAAKxP,WAAW,SACxBwP,OAAO,IAAIA,SAGb/K,MAAM,IAAI8F,IAAIu3F,KAAKuY,YAAY51G,KAAK61G,SAAS9qG;AAC/C,YACOgiB,SACHA,OAAsB,mBAAR/sB,MAAmBA,MAAM,CAAC,IAG1CA,MAAMq9F,KAAKyY,SAAS91G;KAGtB,OAAM,OAAO,aAAe+1G,yBAA0BhpF;KAEtD,IAAIniB,OACF,MAAM,IAAI+qG,qBAAqB;KAGjC,OAAOvb,GAAGhiG,KAAK49G,YAAY;SACtBjpF;MACH8oF,QAAQ71G,IAAI61G;MACZ9qG,MAAM/K,IAAI+F,SAAS,GAAG/F,IAAIgL,WAAWhL,IAAI+F,WAAW/F,IAAIgL;MACxD7K,QAAQ4sB,KAAK5sB,WAAW4sB,KAAK9sB,OAAO,QAAQ;QAC3CoH;AAAO;AAEd;GAKA,IArEAjN,OAAOC,OAAOq6G,WAAWhuG,WAAWouG,MAEpC1+G,OAAOD,QAAQu+G,aAAaA;GAC5Bt+G,OAAOD,QAAQs+G,SAASA,QACxBr+G,OAAOD,QAAQy+G,OAAOA,MACtBx+G,OAAOD,QAAQ0+G,eAAeA;GAC9Bz+G,OAAOD,QAAQ+7G,QAAQA,OACvB97G,OAAOD,QAAQi/G,aAAaA,YAC5Bh/G,OAAOD,QAAQk/G,eAAeA;GAE9Bj/G,OAAOD,QAAQm/G,mBAAmBA,kBAClCl/G,OAAOD,QAAQo/G,kBAAkBA;GACjCn/G,OAAOD,QAAQq/G,4BAA4BA,2BAE3Cp/G,OAAOD,QAAQ4+G,iBAAiBA;GAChC3+G,OAAOD,QAAQw+G,SAASA,QAmDxBv+G,OAAOD,QAAQ8/G,sBAAsBA;GACrC7/G,OAAOD,QAAQ4/G,sBAAsBA,qBAEjC1Y,KAAK6Y,YAAY,MAA0B,OAAnB7Y,KAAK6Y,aAAoB7Y,KAAK8Y,aAAa,GAAI;IACzE,IAAIC,YAAY;IAChBhgH,OAAOD,QAAQkgH,QAAQ7lG,eAAsBqpD;KACtCu8C,cACHA,YAAY;KAGd;MACE,aAAaA,aAAan9G;AAC5B,OAAE,OAAOkS;MAKP,MAJmB,mBAARA,OACTlT,MAAMq+G,kBAAkBnrG,KAAK5U,OAGzB4U;AACR;AACF,OACA/U,OAAOD,QAAQogH,UAAU,oBAAzB,eACAngH,OAAOD,QAAQqgH,WAAW,oBAA1B;IACApgH,OAAOD,QAAQsgH,UAAU,oBAAzB,eACArgH,OAAOD,QAAQ2Z,WAAW,oBAA1B;IACA1Z,OAAOD,QAAQugH,OAAO,oBAAtB,YACAtgH,OAAOD,QAAQwgH,aAAa,oBAA5B;IAEA,OAAM,iBAAiB,mBAAsB,oBAAQ;IAErDvgH,OAAOD,QAAQygH,kBAAkBA,iBACjCxgH,OAAOD,QAAQ0gH,kBAAkBA;IAEjC,OAAM,gBAAmB,oBAAQ,QAC3B,cAAiB,oBAAQ;IAI/BzgH,OAAOD,QAAQ2gH,SAAS,IAAIC,aAAaC;AAC3C;GAEA,IAAI3Z,KAAK6Y,aAAa,IAAI;IACxB,OAAM,cAAc,YAAY,eAAe,aAAgB,oBAAQ;IAEvE9/G,OAAOD,QAAQ8gH,eAAeA,cAC9B7gH,OAAOD,QAAQ+gH,aAAaA;IAC5B9gH,OAAOD,QAAQghH,gBAAgBA,eAC/B/gH,OAAOD,QAAQihH,YAAYA;IAE3B,OAAM,eAAe,sBAAyB,oBAAQ;IAEtDhhH,OAAOD,QAAQkhH,gBAAgBA,eAC/BjhH,OAAOD,QAAQmhH,qBAAqBA;AACtC;GAEA,IAAIja,KAAK6Y,aAAa,MAAMT,WAAW;IACrC,OAAM,aAAgB,oBAAQ;IAE9Br/G,OAAOD,QAAQohH,YAAYA;AAC7B;GAEAnhH,OAAOD,QAAQ4L,UAAU2zG,eAAeZ,IAAI/yG,UAC5C3L,OAAOD,QAAQ8Q,SAASyuG,eAAeZ,IAAI7tG;GAC3C7Q,OAAOD,QAAQiM,WAAWszG,eAAeZ,IAAI1yG,WAC7ChM,OAAOD,QAAQ+8G,UAAUwC,eAAeZ,IAAI5B;GAC5C98G,OAAOD,QAAQm+G,UAAUoB,eAAeZ,IAAIR,UAE5Cl+G,OAAOD,QAAQ6+G,aAAaA;GAC5B5+G,OAAOD,QAAQ++G,WAAWA,UAC1B9+G,OAAOD,QAAQ8+G,YAAYA,WAC3B7+G,OAAOD,QAAQg/G,aAAaA;;;;GCpK5B,OAAM,wBAA2B,oBAAQ,QACnC,UAAU,UAAU,QAAQ,UAAU,WAAW,iBAAoB,oBAAQ,OAC7EqC,iBAAiB,oBAAQ,MACzB5C,OAAO,oBAAQ,OACfH,SAAS,oBAAQ,OACjBpX,OAAO,oBAAQ,OACfmY,4BAA4B,oBAAQ,QACpC,SAAS,wBAA2B,oBAAQ,IAAR,IAEpCiC,aAAal4G,OAAO,cACpBm4G,gBAAgBn4G,OAAO,iBACvBo4G,qBAAqBp4G,OAAO,sBAC5Bq4G,mBAAmBr4G,OAAO,oBAC1Bs4G,WAAWt4G,OAAO,YAClBu4G,WAAWv4G,OAAO,YAClBw4G,aAAax4G,OAAO,cACpBy4G,WAAWz4G,OAAO;GAExB,SAAS04G,eAAgBpC,QAAQ9oF;IAC/B,OAAOA,QAA6B,MAArBA,KAAKmrF,cAChB,IAAIzD,OAAOoB,QAAQ9oF,QACnB,IAAI6nF,KAAKiB,QAAQ9oF;AACvB;GA2HA32B,OAAOD,UAzHP,cAAoBqhH;IAClB,WAAA1gH,EAAa,UAAYmhH,gBAAc,kBAAoB,GAAC,YAAcj7G,WAAY,CAAC;KAGrF,IAFAtE,SAEuB,qBAAZxC,SACT,MAAM,IAAIy/G,qBAAqB;KAGjC,IAAe,QAAXzC,WAAsC,qBAAZA,WAA6C,mBAAZA,SAC7D,MAAM,IAAIyC,qBAAqB;KAGjC,KAAK5rG,OAAO8qE,UAAUsjC,oBAAoBA,kBAAkB,GAC1D,MAAM,IAAIxC,qBAAqB;KAG7BzC,WAA8B,qBAAZA,YACpBA,UAAU;SAAKA;SAGjB38G,KAAK6hH,iBAAiBp7G,QAAQkhF,gBAAgBlhF,QAAQkhF,aAAag0B,SAASn5G,MAAMC,QAAQgE,QAAQkhF,aAAag0B,SAC3Gl1G,QAAQkhF,aAAag0B,QACrB,EAACsD,0BAA0B;MAAE2C;WAEjC5hH,KAAKyhH,YAAY;SAAK3a,KAAKgb,UAAUr7G;MAAUk2G;QAC/C38G,KAAKyhH,UAAU95B,eAAelhF,QAAQkhF,eAClC;SAAKlhF,QAAQkhF;cACbrkF,GACJtD,KAAKqhH,oBAAoBO,iBACzB5hH,KAAKuhH,YAAY5hH;KACjBK,KAAK+hH,YAAY,IAAI75G,KACrBlI,KAAKwhH,cAAc,IAAIQ,sBAAuE7yG;MAC5F,MAAM8yG,MAAMjiH,KAAK+hH,UAAUlhH,IAAIsO;WACnB7L,MAAR2+G,YAAqC3+G,MAAhB2+G,IAAIC,WAC3BliH,KAAK+hH,UAAUx5G,OAAO4G;AACxB;KAGF,MAAMkF,QAAQrU;KAEdA,KAAKshH,YAAY,CAAChC,QAAQ6C;MACxB9tG,MAAMs5D,KAAK,SAAS2xC,QAAQ,EAACjrG,UAAU8tG;AAAQ,QAGjDniH,KAAKkhH,cAAc,CAAC5B,QAAQ6C;MAC1B9tG,MAAMs5D,KAAK,WAAW2xC,QAAQ,EAACjrG,UAAU8tG;AAAQ,QAGnDniH,KAAKmhH,iBAAiB,CAAC7B,QAAQ6C,SAASvtG;MACtCP,MAAMs5D,KAAK,cAAc2xC,QAAQ,EAACjrG,UAAU8tG,WAAUvtG;AAAG,QAG3D5U,KAAKohH,sBAAsB,CAAC9B,QAAQ6C,SAASvtG;MAC3CP,MAAMs5D,KAAK,mBAAmB2xC,QAAQ,EAACjrG,UAAU8tG,WAAUvtG;AAAG;AAElE;IAEA,KAAKwtG;KACH,IAAI5Z,MAAM;KACV,KAAK,MAAMyZ,OAAOjiH,KAAK+hH,UAAUp5G,UAAU;MACzC,MAAM2d,SAAS27F,IAAIC;MAEf57F,WACFkiF,OAAOliF,OAAO87F;AAElB;KACA,OAAO5Z;AACT;IAEA,CAAC6Z,WAAY7rF,MAAM1lB;KACjB,IAAI3B;KACJ,KAAIqnB,KAAK8oF,YAAkC,mBAAhB9oF,KAAK8oF,UAAuB9oF,KAAK8oF,kBAAkB/vG,MAG5E,MAAM,IAAI6vG,qBAAqB;KAF/BjwG,MAAM7G,OAAOkuB,KAAK8oF;KAKpB,MAAM2C,MAAMjiH,KAAK+hH,UAAUlhH,IAAIsO;KAE/B,IAAIswG,aAAawC,MAAMA,IAAIC,UAAU;KAYrC,OAXKzC,eACHA,aAAaz/G,KAAKuhH,UAAU/qF,KAAK8oF,QAAQt/G,KAAKyhH,WAC3CzwG,GAAG,SAAShR,KAAKshH,WACjBtwG,GAAG,WAAWhR,KAAKkhH,aACnBlwG,GAAG,cAAchR,KAAKmhH,gBACtBnwG,GAAG,mBAAmBhR,KAAKohH;KAE9BphH,KAAK+hH,UAAUthH,IAAI0O,KAAK,IAAImzG,QAAQ7C,cACpCz/G,KAAKwhH,YAAYe,SAAS9C,YAAYtwG;KAGjCswG,WAAW+C,SAAShsF,MAAM1lB;AACnC;IAEA,OAAO2xG;KACL,MAAMC,gBAAgB;KACtB,KAAK,MAAMT,OAAOjiH,KAAK+hH,UAAUp5G,UAAU;MACzC,MAAM2d,SAAS27F,IAAIC;MAEf57F,UACFo8F,cAAcxhH,KAAKolB,OAAOujF;AAE9B;WAEMj5F,QAAQoD,IAAI0uG;AACpB;IAEA,OAAOC,UAAW/tG;KAChB,MAAMguG,kBAAkB;KACxB,KAAK,MAAMX,OAAOjiH,KAAK+hH,UAAUp5G,UAAU;MACzC,MAAM2d,SAAS27F,IAAIC;MAEf57F,UACFs8F,gBAAgB1hH,KAAKolB,OAAO5gB,QAAQkP;AAExC;WAEMhE,QAAQoD,IAAI4uG;AACpB;;;;GChJF,OAAM,oBAAuB,oBAAQ,QAC/B,uBAA0B,oBAAQ,OAElCC,YAAY75G,OAAO,cACnB85G,UAAU95G,OAAO;GAEvB,SAASpG,MAAOkW;IACVA,KAAKlW,QACPkW,KAAKlW,UAELkW,KAAKy0D,QAAQ,IAAIw1C;AAErB;GAsCAljH,OAAOD,UAAU;IACfojH,WArCF,SAAoBlqG,MAAMlX;KACxBkX,KAAKgqG,WAAW,MAChBhqG,KAAK+pG,aAAa,MAEbjhH,WAIDA,OAAOlB,UACTkC,MAAMkW,SAIRA,KAAKgqG,WAAWlhH;KAChBkX,KAAK+pG,aAAa;MAChBjgH,MAAMkW;AAAI,QAGZmqG,iBAAiBnqG,KAAKgqG,UAAUhqG,KAAK+pG;AACvC;IAmBEK,cAjBF,SAAuBpqG;KAChBA,KAAKgqG,aAIN,yBAAyBhqG,KAAKgqG,WAChChqG,KAAKgqG,SAAS3hH,oBAAoB,SAAS2X,KAAK+pG,cAEhD/pG,KAAKgqG,SAAS/xG,eAAe,SAAS+H,KAAK+pG;KAG7C/pG,KAAKgqG,WAAW,MAChBhqG,KAAK+pG,aAAa;AACpB;;;;;GC9CA,OAAM,iBAAoB,oBAAQ,OAC5B,sBAAsB,qBAAqB,eAAkB,oBAAQ,OACrE/b,OAAO,oBAAQ,QACf,WAAW,gBAAmB,oBAAQ;GAE5C,MAAMqc,uBAAuBC;IAC3B,WAAA7iH,CAAai2B,MAAMhlB;KACjB,KAAKglB,QAAwB,mBAATA,MAClB,MAAM,IAAI4oF,qBAAqB;KAGjC,IAAwB,qBAAb5tG,UACT,MAAM,IAAI4tG,qBAAqB;KAGjC,OAAM,QAAQ,QAAQ,mBAAsB5oF;KAE5C,IAAI50B,UAA+B,qBAAdA,OAAOoP,MAAwD,qBAA5BpP,OAAOb,kBAC7D,MAAM,IAAIq+G,qBAAqB;KAGjCj9G,MAAM,mBAENnC,KAAKqjH,SAASA,UAAU,MACxBrjH,KAAKsjH,kBAAkBA,mBAAmB;KAC1CtjH,KAAKwR,WAAWA,UAChBxR,KAAK4C,QAAQ,MAEbogH,UAAUhjH,MAAM4B;AAClB;IAEA,SAAA+7G,CAAW/6G,OAAO0E;KAChB,KAAKtH,KAAKwR,UACR,MAAM,IAAIuxG;KAGZ/iH,KAAK4C,QAAQA,OACb5C,KAAKsH,UAAUA;AACjB;IAEA,SAAAi8G;KACE,MAAM,IAAIC,YAAY,eAAe;AACvC;IAEA,SAAAC,CAAW3zG,YAAY9H,YAAY8zG;KACjC,OAAM,UAAU,QAAQ,WAAc97G;KAEtCkjH,aAAaljH,OAEbA,KAAKwR,WAAW;KAEhB,IAAI7H,UAAU3B;KAEC,QAAX2B,YACFA,UAAmC,UAAzB3J,KAAKsjH,kBAA4Bxc,KAAK4c,gBAAgB17G,cAAc8+F,KAAK6c,aAAa37G;KAGlGhI,KAAK4jH,gBAAgBpyG,UAAU,MAAM,MAAM;MACzC1B;MACAnG;MACAmyG;MACAuH;MACA/7G;;AAEJ;IAEA,OAAAimE,CAAS34D;KACP,OAAM,UAAU,UAAa5U;KAE7BkjH,aAAaljH,OAETwR,aACFxR,KAAKwR,WAAW,MAChBqyG,gBAAe;MACb7jH,KAAK4jH,gBAAgBpyG,UAAU,MAAMoD,KAAK;OAAEyuG;;AAAQ;AAG1D;;GAwBFxjH,OAAOD,UArBP,SAAS+8G,QAASnmF,MAAMhlB;IACtB,SAAiBlO,MAAbkO,UACF,OAAO,IAAIZ,SAAQ,CAACC,SAAS+C;KAC3B+oG,QAAQ96G,KAAK7B,MAAMw2B,OAAM,CAAC5hB,KAAKy3B,SACtBz3B,MAAMhB,OAAOgB,OAAO/D,QAAQw7B;AACpC;IAIL;KACE,MAAMy3E,iBAAiB,IAAIX,eAAe3sF,MAAMhlB;KAChDxR,KAAKwiH,SAAS;SAAKhsF;MAAM5sB,QAAQ;QAAak6G;AAChD,MAAE,OAAOlvG;KACP,IAAwB,qBAAbpD,UACT,MAAMoD;KAER,MAAMyuG,SAAS7sF,QAAQA,KAAK6sF;KAC5BQ,gBAAe,MAAMryG,SAASoD,KAAK;MAAEyuG;;AACvC;AACF;;;;GCnGA,OAAM,UACI,QACF,eAEJ,oBAAQ,QACN,sBACgB,yBACG,uBAErB,oBAAQ,OACNvc,OAAO,oBAAQ,QACf,iBAAoB,oBAAQ,OAC5B,WAAW,gBAAmB,oBAAQ,OACtCxd,SAAS,oBAAQ,OAEjBy6B,UAAU/6G,OAAO;GAEvB,MAAMg7G,wBAAwB5kG;IAC5B,WAAA7e;KACE4B,MAAM;MAAE8hH,cAAa;SAErBjkH,KAAK+jH,WAAW;AAClB;IAEA,KAAAz9C;KACE,OAAQ,CAACy9C,UAAU7wG,UAAWlT;KAE1BkT,WACFlT,KAAK+jH,WAAW,MAChB7wG;AAEJ;IAEA,QAAAqzD,CAAU3xD,KAAKpD;KACbxR,KAAKsmE,SAEL90D,SAASoD;AACX;;GAGF,MAAMsvG,yBAAyB9kG;IAC7B,WAAA7e,CAAa2S;KACX/Q,MAAM;MAAE8hH,cAAa;SACrBjkH,KAAK+jH,WAAW7wG;AAClB;IAEA,KAAAozD;KACEtmE,KAAK+jH;AACP;IAEA,QAAAx9C,CAAU3xD,KAAKpD;KACRoD,OAAQ5U,KAAKmkH,eAAeC,eAC/BxvG,MAAM,IAAImuG,sBAGZvxG,SAASoD;AACX;;GAGF,MAAMyvG,wBAAwBjB;IAC5B,WAAA7iH,CAAai2B,MAAM1lB;KACjB,KAAK0lB,QAAwB,mBAATA,MAClB,MAAM,IAAI4oF,qBAAqB;KAGjC,IAAuB,qBAAZtuG,SACT,MAAM,IAAIsuG,qBAAqB;KAGjC,OAAM,QAAQ,QAAQ,QAAQ,QAAQ,mBAAsB5oF;KAE5D,IAAI50B,UAA+B,qBAAdA,OAAOoP,MAAwD,qBAA5BpP,OAAOb,kBAC7D,MAAM,IAAIq+G,qBAAqB;KAGjC,IAAe,cAAXx1G,QACF,MAAM,IAAIw1G,qBAAqB;KAGjC,IAAIkF,UAA4B,qBAAXA,QACnB,MAAM,IAAIlF,qBAAqB;KAGjCj9G,MAAM,oBAENnC,KAAKqjH,SAASA,UAAU,MACxBrjH,KAAKsjH,kBAAkBA,mBAAmB;KAC1CtjH,KAAK8Q,UAAUA,SACf9Q,KAAK4C,QAAQ,MACb5C,KAAKsH,UAAU,MACftH,KAAKskH,SAASA,UAAU;KAExBtkH,KAAK4L,OAAM,IAAIo4G,iBAAkBhzG,GAAG,SAAS81F,KAAKyd,MAElDvkH,KAAKwoG,MAAM,IAAIgc,OAAO;MACpBC,oBAAoBjuF,KAAKkuF;MACzBT,cAAa;MACbllG,MAAM;OACJ,OAAM,QAAW/e;OAEb0J,QAAQA,KAAKwJ,UACfxJ,KAAKwJ;AACP;MAEF5O,OAAO,CAACgN,OAAO0iE,UAAUxiE;OACvB,OAAM,OAAUxR;OAEZ4L,IAAI1K,KAAKoQ,OAAO0iE,aAAapoE,IAAIu4G,eAAeQ,YAClDnzG,aAEA5F,IAAIm4G,WAAWvyG;AACjB;MAEF9L,SAAS,CAACkP,KAAKpD;OACb,OAAM,MAAM,KAAK,KAAK,KAAK,SAAYxR;OAElC4U,OAAQ4zF,IAAI2b,eAAeC,eAC9BxvG,MAAM,IAAImuG,sBAGRngH,SAASgS,OACXhS;OAGFkkG,KAAKphG,QAAQgE,MAAMkL,MACnBkyF,KAAKphG,QAAQkG,KAAKgJ,MAClBkyF,KAAKphG,QAAQkN,KAAKgC,MAElBsuG,aAAaljH;OAEbwR,SAASoD;AAAG;QAEb5D,GAAG,cAAa;MACjB,OAAM,OAAUhR;MAGhB4L,IAAI1K,KAAK;AAAI,UAGflB,KAAK4S,MAAM,MAEXowG,UAAUhjH,MAAM4B;AAClB;IAEA,SAAA+7G,CAAW/6G,OAAO0E;KAChB,OAAM,KAAK,OAAUtH;KAIrB,IAFAspF,QAAQ12E,KAAK,+BAET41F,IAAImc,WACN,MAAM,IAAI5B;KAGZ/iH,KAAK4C,QAAQA,OACb5C,KAAKsH,UAAUA;AACjB;IAEA,SAAAi8G,CAAWzzG,YAAY9H,YAAYkL;KACjC,OAAM,QAAQ,SAAS,WAAclT;KAErC,IAAI8P,aAAa,KAAK;MACpB,IAAI9P,KAAKskH,QAAQ;OACf,MAAM36G,UAAmC,UAAzB3J,KAAKsjH,kBAA4Bxc,KAAK4c,gBAAgB17G,cAAc8+F,KAAK6c,aAAa37G;OACtGhI,KAAKskH,OAAO;QAAEx0G;QAAYnG;;AAC5B;MACA;AACF;KAIA,IAAID;KAFJ1J,KAAK4S,MAAM,IAAIsxG,iBAAiBhxG;KAGhC;MACElT,KAAK8Q,UAAU;MACf,MAAMnH,UAAmC,UAAzB3J,KAAKsjH,kBAA4Bxc,KAAK4c,gBAAgB17G,cAAc8+F,KAAK6c,aAAa37G;MACtG0B,OAAO1J,KAAK4jH,gBAAgB9yG,SAAS,MAAM;OACzChB;OACAnG;OACA05G;OACA35G,MAAM1J,KAAK4S;OACXtL;;AAEJ,OAAE,OAAOsN;MAEP,MADA5U,KAAK4S,IAAI5B,GAAG,SAAS81F,KAAKyd,MACpB3vG;AACR;KAEA,KAAKlL,QAA2B,qBAAZA,KAAKsH,IACvB,MAAM,IAAI4zG,wBAAwB;KAGpCl7G,KACGsH,GAAG,SAASM;MACX,OAAM,KAAK,QAAWtR;OAEjBwoG,IAAItnG,KAAKoQ,UAAU5H,KAAKo8D,SAC3Bp8D,KAAKo8D;AACP,SAED90D,GAAG,UAAU4D;MACZ,OAAM,OAAU5U;MAEhB8mG,KAAKphG,QAAQ8iG,KAAK5zF;AAAG,SAEtB5D,GAAG,QAAO;MACT,OAAM,OAAUhR;MAEhBwoG,IAAItnG,KAAK;AAAI,SAEd8P,GAAG,UAAS;MACX,OAAM,OAAUhR;MAEXwoG,IAAI2b,eAAeU,SACtB/d,KAAKphG,QAAQ8iG,KAAK,IAAIua;AACxB,UAGJ/iH,KAAK0J,OAAOA;AACd;IAEA,MAAAo7G,CAAQxzG;KACN,OAAM,OAAUtR;KAChB,OAAO4S,IAAI1R,KAAKoQ;AAClB;IAEA,UAAA23E,CAAYkB;KACV,OAAM,OAAUnqF;KAChB4S,IAAI1R,KAAK;AACX;IAEA,OAAAqsE,CAAS34D;KACP,OAAM,OAAU5U;KAChBA,KAAK8Q,UAAU,MACfg2F,KAAKphG,QAAQ8iG,KAAK5zF;AACpB;;GAaF/U,OAAOD,UAVP,SAAmB42B,MAAM1lB;IACvB;KACE,MAAMi0G,kBAAkB,IAAIV,gBAAgB7tF,MAAM1lB;KAElD,OADA9Q,KAAKwiH,SAAS;SAAKhsF;MAAM9sB,MAAMq7G,gBAAgBn5G;QAAOm5G,kBAC/CA,gBAAgBvc;AACzB,MAAE,OAAO5zF;KACP,QAAO,IAAIowG,aAAct/G,QAAQkP;AACnC;AACF;;;;GCpPA,MAAMwK,WAAW,oBAAQ,QACnB,sBACgB,uBAElB,oBAAQ,OACN0nF,OAAO,oBAAQ,QACf,+BAAkC,oBAAQ,QAC1C,iBAAoB,oBAAQ,OAC5B,WAAW,gBAAmB,oBAAQ;GAE5C,MAAMme,uBAAuB7B;IAC3B,WAAA7iH,CAAai2B,MAAMhlB;KACjB,KAAKglB,QAAwB,mBAATA,MAClB,MAAM,IAAI4oF,qBAAqB;KAGjC,OAAM,QAAQ,QAAQ,QAAQ,MAAM,QAAQ,iBAAiB,cAAc,iBAAoB5oF;KAE/F;MACE,IAAwB,qBAAbhlB,UACT,MAAM,IAAI4tG,qBAAqB;MAGjC,IAAI15C,kBAA2C,mBAAlBA,iBAA8BA,gBAAgB,IACzE,MAAM,IAAI05C,qBAAqB;MAGjC,IAAIx9G,UAA+B,qBAAdA,OAAOoP,MAAwD,qBAA5BpP,OAAOb,kBAC7D,MAAM,IAAIq+G,qBAAqB;MAGjC,IAAe,cAAXx1G,QACF,MAAM,IAAIw1G,qBAAqB;MAGjC,IAAIkF,UAA4B,qBAAXA,QACnB,MAAM,IAAIlF,qBAAqB;MAGjCj9G,MAAM;AACR,OAAE,OAAOyS;MAIP,MAHIkyF,KAAKztE,SAAS3vB,SAChBo9F,KAAKphG,QAAQgE,KAAKsH,GAAG,SAAS81F,KAAKyd,MAAM3vG,MAErCA;AACR;KAEA5U,KAAKsjH,kBAAkBA,mBAAmB,MAC1CtjH,KAAKqjH,SAASA,UAAU,MACxBrjH,KAAKwR,WAAWA;KAChBxR,KAAK4S,MAAM,MACX5S,KAAK4C,QAAQ,MACb5C,KAAK0J,OAAOA,MACZ1J,KAAKmqF,WAAW,CAAC,GACjBnqF,KAAKsH,UAAU;KACftH,KAAKskH,SAASA,UAAU,MACxBtkH,KAAKklH,eAAeA,cACpBllH,KAAK0lE,gBAAgBA;KAEjBohC,KAAKztE,SAAS3vB,SAChBA,KAAKsH,GAAG,UAAU4D;MAChB5U,KAAKutE,QAAQ34D;AAAG,UAIpBouG,UAAUhjH,MAAM4B;AAClB;IAEA,SAAA+7G,CAAW/6G,OAAO0E;KAChB,KAAKtH,KAAKwR,UACR,MAAM,IAAIuxG;KAGZ/iH,KAAK4C,QAAQA,OACb5C,KAAKsH,UAAUA;AACjB;IAEA,SAAAi8G,CAAWzzG,YAAY9H,YAAYkL,QAAQmrE;KACzC,OAAM,UAAU,QAAQ,OAAO,SAAS,iBAAiB,iBAAoBr+E,MAEvE2J,UAA8B,UAApB25G,kBAA4Bxc,KAAK4c,gBAAgB17G,cAAc8+F,KAAK6c,aAAa37G;KAEjG,IAAI8H,aAAa,KAIf,aAHI9P,KAAKskH,UACPtkH,KAAKskH,OAAO;MAAEx0G;MAAYnG;;KAK9B,MACMgQ,eADoC,UAApB2pG,kBAA4Bxc,KAAK6c,aAAa37G,cAAc2B,SAChD,iBAC5BD,OAAO,IAAI0V,SAAS;MAAElM;MAAQtQ;MAAO+W;MAAa+rD;;KAExD1lE,KAAKwR,WAAW,MAChBxR,KAAK4S,MAAMlJ,MACM,SAAb8H,aACExR,KAAKklH,gBAAgBp1G,cAAc,MACrC9P,KAAK4jH,gBAAgBuB,6BAA6B,MAChD;MAAE3zG;MAAU9H;MAAMiQ;MAAa7J;MAAYuuE;MAAe10E;UAG5D3J,KAAK4jH,gBAAgBpyG,UAAU,MAAM,MAAM;MACzC1B;MACAnG;MACAwgF,UAAUnqF,KAAKmqF;MACfk5B;MACA35G;MACApC;;AAIR;IAEA,MAAAw9G,CAAQxzG;KACN,OAAM,OAAUtR;KAChB,OAAO4S,IAAI1R,KAAKoQ;AAClB;IAEA,UAAA23E,CAAYkB;KACV,OAAM,OAAUnqF;KAEhBkjH,aAAaljH,OAEb8mG,KAAK6c,aAAax5B,UAAUnqF,KAAKmqF,WAEjCv3E,IAAI1R,KAAK;AACX;IAEA,OAAAqsE,CAAS34D;KACP,OAAM,KAAK,UAAU,MAAM,UAAa5U;KAExCkjH,aAAaljH,OAETwR,aAEFxR,KAAKwR,WAAW,MAChBqyG,gBAAe;MACb7jH,KAAK4jH,gBAAgBpyG,UAAU,MAAMoD,KAAK;OAAEyuG;;AAAQ,WAIpDzwG,QACF5S,KAAK4S,MAAM,MAEXixG,gBAAe;MACb/c,KAAKphG,QAAQkN,KAAKgC;AAAG,WAIrBlL,SACF1J,KAAK0J,OAAO,MACZo9F,KAAKphG,QAAQgE,MAAMkL;AAEvB;;GAuBF/U,OAAOD,UApBP,SAAS4L,QAASgrB,MAAMhlB;IACtB,SAAiBlO,MAAbkO,UACF,OAAO,IAAIZ,SAAQ,CAACC,SAAS+C;KAC3BpI,QAAQ3J,KAAK7B,MAAMw2B,OAAM,CAAC5hB,KAAKy3B,SACtBz3B,MAAMhB,OAAOgB,OAAO/D,QAAQw7B;AACpC;IAIL;KACErsC,KAAKwiH,SAAShsF,MAAM,IAAIyuF,eAAezuF,MAAMhlB;AAC/C,MAAE,OAAOoD;KACP,IAAwB,qBAAbpD,UACT,MAAMoD;KAER,MAAMyuG,SAAS7sF,QAAQA,KAAK6sF;KAC5BQ,gBAAe,MAAMryG,SAASoD,KAAK;MAAEyuG;;AACvC;AACF,MAGAxjH,OAAOD,QAAQqlH,iBAAiBA;;;;GCjLhC,OAAM,UAAU,eAAkB,oBAAQ,QACpC,sBACgB,yBACG,uBAErB,oBAAQ,OACNne,OAAO,oBAAQ,QACf,+BAAkC,oBAAQ,QAC1C,iBAAoB,oBAAQ,OAC5B,WAAW,gBAAmB,oBAAQ;GAE5C,MAAMse,sBAAsBhC;IAC1B,WAAA7iH,CAAai2B,MAAM72B,SAAS6R;KAC1B,KAAKglB,QAAwB,mBAATA,MAClB,MAAM,IAAI4oF,qBAAqB;KAGjC,OAAM,QAAQ,QAAQ,QAAQ,MAAM,QAAQ,iBAAiB,gBAAmB5oF;KAEhF;MACE,IAAwB,qBAAbhlB,UACT,MAAM,IAAI4tG,qBAAqB;MAGjC,IAAuB,qBAAZz/G,SACT,MAAM,IAAIy/G,qBAAqB;MAGjC,IAAIx9G,UAA+B,qBAAdA,OAAOoP,MAAwD,qBAA5BpP,OAAOb,kBAC7D,MAAM,IAAIq+G,qBAAqB;MAGjC,IAAe,cAAXx1G,QACF,MAAM,IAAIw1G,qBAAqB;MAGjC,IAAIkF,UAA4B,qBAAXA,QACnB,MAAM,IAAIlF,qBAAqB;MAGjCj9G,MAAM;AACR,OAAE,OAAOyS;MAIP,MAHIkyF,KAAKztE,SAAS3vB,SAChBo9F,KAAKphG,QAAQgE,KAAKsH,GAAG,SAAS81F,KAAKyd,MAAM3vG,MAErCA;AACR;KAEA5U,KAAKsjH,kBAAkBA,mBAAmB,MAC1CtjH,KAAKqjH,SAASA,UAAU,MACxBrjH,KAAKL,UAAUA;KACfK,KAAKwR,WAAWA,UAChBxR,KAAK4S,MAAM,MACX5S,KAAK4C,QAAQ,MACb5C,KAAKsH,UAAU;KACftH,KAAKmqF,WAAW,MAChBnqF,KAAK0J,OAAOA,MACZ1J,KAAKskH,SAASA,UAAU,MACxBtkH,KAAKklH,eAAeA,iBAAgB;KAEhCpe,KAAKztE,SAAS3vB,SAChBA,KAAKsH,GAAG,UAAU4D;MAChB5U,KAAKutE,QAAQ34D;AAAG,UAIpBouG,UAAUhjH,MAAM4B;AAClB;IAEA,SAAA+7G,CAAW/6G,OAAO0E;KAChB,KAAKtH,KAAKwR,UACR,MAAM,IAAIuxG;KAGZ/iH,KAAK4C,QAAQA,OACb5C,KAAKsH,UAAUA;AACjB;IAEA,SAAAi8G,CAAWzzG,YAAY9H,YAAYkL,QAAQmrE;KACzC,OAAM,SAAS,QAAQ,SAAS,UAAU,mBAAsBr+E,MAE1D2J,UAA8B,UAApB25G,kBAA4Bxc,KAAK4c,gBAAgB17G,cAAc8+F,KAAK6c,aAAa37G;KAEjG,IAAI8H,aAAa,KAIf,aAHI9P,KAAKskH,UACPtkH,KAAKskH,OAAO;MAAEx0G;MAAYnG;;KAO9B,IAAIiJ;KAEJ,IAJA5S,KAAKL,UAAU,MAIXK,KAAKklH,gBAAgBp1G,cAAc,KAAK;MAC1C,MACM6J,eADoC,UAApB2pG,kBAA4Bxc,KAAK6c,aAAa37G,cAAc2B,SAChD;MAClCiJ,MAAM,IAAIoyG,aAEVhlH,KAAKwR,WAAW,MAChBxR,KAAK4jH,gBAAgBuB,6BAA6B,MAChD;OAAE3zG;OAAU9H,MAAMkJ;OAAK+G;OAAa7J;OAAYuuE;OAAe10E;;AAEnE,YAAO;MACL,IAAgB,SAAZhK,SACF;MAUF,IAPAiT,MAAM5S,KAAK4jH,gBAAgBjkH,SAAS,MAAM;OACxCmQ;OACAnG;OACA05G;OACA/7G;WAICsL,OACoB,qBAAdA,IAAItO,SACQ,qBAAZsO,IAAID,OACO,qBAAXC,IAAI5B,IAEX,MAAM,IAAI4zG,wBAAwB;MAIpCS,SAASzyG,KAAK;OAAEjC,WAAU;UAAUiE;OAClC,OAAM,UAAU,KAAK,QAAQ,UAAU,SAAY5U;OAEnDA,KAAK4S,MAAM,OACPgC,OAAQhC,IAAIjC,YACdm2F,KAAKphG,QAAQkN,KAAKgC,MAGpB5U,KAAKwR,WAAW;OAChBxR,KAAK4jH,gBAAgBpyG,UAAU,MAAMoD,OAAO,MAAM;QAAEyuG;QAAQl5B;WAExDv1E,OACFhS;AACF;AAEJ;KAEAgQ,IAAI5B,GAAG,SAASkC,SAEhBlT,KAAK4S,MAAMA;KAMX,QAAqB,YAJuBtP,MAA1BsP,IAAI0yG,oBAClB1yG,IAAI0yG,oBACJ1yG,IAAI2yG,kBAAkB3yG,IAAI2yG,eAAeC;AAG/C;IAEA,MAAAV,CAAQxzG;KACN,OAAM,OAAUtR;KAEhB,QAAO4S,OAAMA,IAAItO,MAAMgN;AACzB;IAEA,UAAA23E,CAAYkB;KACV,OAAM,OAAUnqF;KAEhBkjH,aAAaljH,OAER4S,QAIL5S,KAAKmqF,WAAW2c,KAAK6c,aAAax5B,WAElCv3E,IAAID;AACN;IAEA,OAAA46D,CAAS34D;KACP,OAAM,KAAK,UAAU,QAAQ,QAAW5U;KAExCkjH,aAAaljH,OAEbA,KAAKL,UAAU,MAEXiT,OACF5S,KAAK4S,MAAM,MACXk0F,KAAKphG,QAAQkN,KAAKgC,QACTpD,aACTxR,KAAKwR,WAAW;KAChBqyG,gBAAe;MACb7jH,KAAK4jH,gBAAgBpyG,UAAU,MAAMoD,KAAK;OAAEyuG;;AAAQ,WAIpD35G,SACF1J,KAAK0J,OAAO,MACZo9F,KAAKphG,QAAQgE,MAAMkL;AAEvB;;GAuBF/U,OAAOD,UApBP,SAAS8Q,OAAQ8lB,MAAM72B,SAAS6R;IAC9B,SAAiBlO,MAAbkO,UACF,OAAO,IAAIZ,SAAQ,CAACC,SAAS+C;KAC3BlD,OAAO7O,KAAK7B,MAAMw2B,MAAM72B,UAAS,CAACiV,KAAKy3B,SAC9Bz3B,MAAMhB,OAAOgB,OAAO/D,QAAQw7B;AACpC;IAIL;KACErsC,KAAKwiH,SAAShsF,MAAM,IAAI4uF,cAAc5uF,MAAM72B,SAAS6R;AACvD,MAAE,OAAOoD;KACP,IAAwB,qBAAbpD,UACT,MAAMoD;KAER,MAAMyuG,SAAS7sF,QAAQA,KAAK6sF;KAC5BQ,gBAAe,MAAMryG,SAASoD,KAAK;MAAEyuG;;AACvC;AACF;;;;GCvNA,OAAM,sBAAsB,qBAAqB,eAAkB,oBAAQ,QACrE,iBAAoB,oBAAQ,MAC5Bvc,OAAO,oBAAQ,QACf,WAAW,gBAAmB,oBAAQ,OACtCxd,SAAS,oBAAQ;GAEvB,MAAMm8B,uBAAuBrC;IAC3B,WAAA7iH,CAAai2B,MAAMhlB;KACjB,KAAKglB,QAAwB,mBAATA,MAClB,MAAM,IAAI4oF,qBAAqB;KAGjC,IAAwB,qBAAb5tG,UACT,MAAM,IAAI4tG,qBAAqB;KAGjC,OAAM,QAAQ,QAAQ,mBAAsB5oF;KAE5C,IAAI50B,UAA+B,qBAAdA,OAAOoP,MAAwD,qBAA5BpP,OAAOb,kBAC7D,MAAM,IAAIq+G,qBAAqB;KAGjCj9G,MAAM,mBAENnC,KAAKsjH,kBAAkBA,mBAAmB,MAC1CtjH,KAAKqjH,SAASA,UAAU;KACxBrjH,KAAKwR,WAAWA,UAChBxR,KAAK4C,QAAQ,MACb5C,KAAKsH,UAAU,MAEf07G,UAAUhjH,MAAM4B;AAClB;IAEA,SAAA+7G,CAAW/6G,OAAO0E;KAChB,KAAKtH,KAAKwR,UACR,MAAM,IAAIuxG;KAGZ/iH,KAAK4C,QAAQA,OACb5C,KAAKsH,UAAU;AACjB;IAEA,SAAAi8G;KACE,MAAM,IAAIC,YAAY,eAAe;AACvC;IAEA,SAAAC,CAAW3zG,YAAY9H,YAAY8zG;KACjC,OAAM,UAAU,QAAQ,WAAc97G;KAEtCspF,OAAOo8B,YAAY51G,YAAY,MAE/BozG,aAAaljH,OAEbA,KAAKwR,WAAW;KAChB,MAAM7H,UAAmC,UAAzB3J,KAAKsjH,kBAA4Bxc,KAAK4c,gBAAgB17G,cAAc8+F,KAAK6c,aAAa37G;KACtGhI,KAAK4jH,gBAAgBpyG,UAAU,MAAM,MAAM;MACzC7H;MACAmyG;MACAuH;MACA/7G;;AAEJ;IAEA,OAAAimE,CAAS34D;KACP,OAAM,UAAU,UAAa5U;KAE7BkjH,aAAaljH,OAETwR,aACFxR,KAAKwR,WAAW,MAChBqyG,gBAAe;MACb7jH,KAAK4jH,gBAAgBpyG,UAAU,MAAMoD,KAAK;OAAEyuG;;AAAQ;AAG1D;;GA4BFxjH,OAAOD,UAzBP,SAASm+G,QAASvnF,MAAMhlB;IACtB,SAAiBlO,MAAbkO,UACF,OAAO,IAAIZ,SAAQ,CAACC,SAAS+C;KAC3BmqG,QAAQl8G,KAAK7B,MAAMw2B,OAAM,CAAC5hB,KAAKy3B,SACtBz3B,MAAMhB,OAAOgB,OAAO/D,QAAQw7B;AACpC;IAIL;KACE,MAAMs5E,iBAAiB,IAAIF,eAAejvF,MAAMhlB;KAChDxR,KAAKwiH,SAAS;SACThsF;MACH5sB,QAAQ4sB,KAAK5sB,UAAU;MACvBm0G,SAASvnF,KAAKpiB,YAAY;QACzBuxG;AACL,MAAE,OAAO/wG;KACP,IAAwB,qBAAbpD,UACT,MAAMoD;KAER,MAAMyuG,SAAS7sF,QAAQA,KAAK6sF;KAC5BQ,gBAAe,MAAMryG,SAASoD,KAAK;MAAEyuG;;AACvC;AACF;;;;GCpGAxjH,OAAOD,QAAQ4L,UAAU,oBAAzB,OACA3L,OAAOD,QAAQ8Q,SAAS,oBAAxB;GACA7Q,OAAOD,QAAQiM,WAAW,oBAA1B,OACAhM,OAAOD,QAAQm+G,UAAU,oBAAzB;GACAl+G,OAAOD,QAAQ+8G,UAAU,oBAAzB;;;;GCFA,MAAMrzB,SAAS,oBAAQ,QACjB,YAAe,oBAAQ,QACvB,qBAAqB,mBAAmB,wBAA2B,oBAAQ,OAC3Ewd,OAAO,oBAAQ,QACf,oBAAoB,eAAkB,oBAAQ;GAEpD,IAAI34E;GAEJ,MAAMy3F,WAAW58G,OAAO,aAClB68G,WAAW78G,OAAO,aAClB88G,QAAQ98G,OAAO,UACf+8G,SAAS/8G,OAAO,UAChBg9G,eAAeh9G,OAAO,iBAEtBi9G,OAAO;GA6Lb,SAASC,WAAYptG;IACnB,OAAOguF,KAAKqf,YAAYrtG,SAP1B,SAAmBA;KAEjB,OAAQA,KAAKgtG,WAAiC,MAAvBhtG,KAAKgtG,OAAOM,UAAoBttG,KAAK8sG;AAC9D,KAImCS,CAASvtG;AAC5C;GAEAmB,eAAeqsG,QAAS51G,QAAQ1O;IAC9B,IAAIkkH,WAAWx1G,SACb,MAAM,IAAI9P,UAAU;IAKtB,OAFA0oF,QAAQ54E,OAAOk1G,YAER,IAAIh1G,SAAQ,CAACC,SAAS+C;KAC3BlD,OAAOk1G,YAAY;MACjB5jH;MACA0O;MACAG;MACA+C;MACAnO,QAAQ;MACRiE,MAAM;QAGRgH,OACGM,GAAG,UAAS,SAAU4D;MACrB2xG,cAAcvmH,KAAK4lH,WAAWhxG;AAChC,SACC5D,GAAG,UAAS;MACiB,SAAxBhR,KAAK4lH,UAAUl8G,QACjB68G,cAAcvmH,KAAK4lH,WAAW,IAAI7C;AAEtC,UAEF5/G,QAAQ66G,SAASwI,cAAc91G,OAAOk1G;AAAS;AAEnD;GAEA,SAASY,aAAcF;IACrB,IAAqB,SAAjBA,QAAQ58G,MACV;IAGF,OAAQy6G,gBAAgBt0C,SAAUy2C,QAAQ51G;IAE1C,KAAK,MAAMY,SAASu+D,MAAMh8D,QACxB4yG,YAAYH,SAASh1G;IAavB,KAVIu+D,MAAMu0C,aACRsC,WAAW1mH,KAAK4lH,aAEhBU,QAAQ51G,OAAOM,GAAG,QAAO;KACvB01G,WAAW1mH,KAAK4lH;AAClB,SAGFU,QAAQ51G,OAAOwC,UAEiB,QAAzBozG,QAAQ51G,OAAOqO;AAGxB;GAEA,SAAS2nG,WAAYJ;IACnB,OAAM,MAAM,MAAM,SAAS,QAAQ,UAAaA;IAEhD;KACE,IAAa,WAATtkH,MACF6O,QAAQ81G,YAAYr0G,OAAOzD,OAAOnF,cAC7B,IAAa,WAAT1H,MACT6O,QAAQ/H,KAAKiO,MAAMzE,OAAOzD,OAAOnF,cAC5B,IAAa,kBAAT1H,MAAwB;MACjC,MAAM4kH,MAAM,IAAIpnG,WAAW/Z;MAE3B,IAAIuvE,MAAM;MACV,KAAK,MAAMzC,OAAO7oE,MAChBk9G,IAAInmH,IAAI8xE,KAAKyC,MACbA,OAAOzC,IAAIrhE;MAGbL,QAAQ+1G,IAAI/yG;AACd,YAAoB,WAAT7R,SACJmsB,SACHA,OAAO,gCAETtd,QAAQ,IAAIsd,KAAKzkB,MAAM;MAAE1H,MAAM0O,OAAOs1G;;KAGxCO,cAAcD;AAChB,MAAE,OAAO1xG;KACPlE,OAAOhL,QAAQkP;AACjB;AACF;GAEA,SAAS6xG,YAAaH,SAASh1G;IAC7Bg1G,QAAQ7gH,UAAU6L,MAAM7L,QACxB6gH,QAAQ58G,KAAKxI,KAAKoQ;AACpB;GAEA,SAASi1G,cAAeD,SAAS1xG;IACV,SAAjB0xG,QAAQ58G,SAIRkL,MACF0xG,QAAQ1yG,OAAOgB,OAEf0xG,QAAQz1G,WAGVy1G,QAAQtkH,OAAO;IACfskH,QAAQ51G,SAAS,MACjB41G,QAAQz1G,UAAU,MAClBy1G,QAAQ1yG,SAAS,MACjB0yG,QAAQ7gH,SAAS;IACjB6gH,QAAQ58G,OAAO;AACjB;GA7SA7J,OAAOD,UAAU,cAA2Bwf;IAC1C,WAAA7e,EAAa,QACL,OACD,cACS,IAAE,gBACA;KAEhB4B,MAAM;MACJ8hH,cAAa;MACbllG,MAAM7L;MACNwyD;SAGF1lE,KAAKmkH,eAAe0C,eAAc,GAElC7mH,KAAK+lH,UAAUnjH,OACf5C,KAAK4lH,YAAY;KACjB5lH,KAAK8lH,SAAS,MACd9lH,KAAKgmH,gBAAgBrsG,aAMrB3Z,KAAK6lH,aAAY;AACnB;IAEA,OAAAngH,CAASkP;KACP,OAAI5U,KAAK2kH,YAEA3kH,QAGJ4U,OAAQ5U,KAAKmkH,eAAeC,eAC/BxvG,MAAM,IAAImuG;KAGRnuG,OACF5U,KAAK+lH,WAGA5jH,MAAMuD,QAAQkP;AACvB;IAEA,IAAA+4D,CAAMif,OAAOvoF;KAQX,OAPW,WAAPuoF,KAEF5sF,KAAKmkH,eAAe0C,eAAc,IAClB,YAAPj6B,OAET5sF,KAAKmkH,eAAe2C,gBAAe;KAE9B3kH,MAAMwrE,KAAKif,OAAOvoF;AAC3B;IAEA,EAAA2M,CAAI47E,OAAOvoF;KAIT,OAHW,WAAPuoF,MAAwB,eAAPA,OACnB5sF,KAAK6lH,aAAY,IAEZ1jH,MAAM6O,GAAG47E,OAAOvoF;AACzB;IAEA,WAAA0iH,CAAan6B,OAAOvoF;KAClB,OAAOrE,KAAKgR,GAAG47E,OAAOvoF;AACxB;IAEA,GAAAq0E,CAAKkU,OAAOvoF;KACV,MAAMmkG,MAAMrmG,MAAMu2E,IAAIkU,OAAOvoF;KAO7B,OANW,WAAPuoF,MAAwB,eAAPA,OACnB5sF,KAAK6lH,YACH7lH,KAAKgnH,cAAc,UAAU,KAC7BhnH,KAAKgnH,cAAc,cAAc;KAG9Bxe;AACT;IAEA,cAAAz3F,CAAgB67E,OAAOvoF;KACrB,OAAOrE,KAAK04E,IAAIkU,OAAOvoF;AACzB;IAEA,IAAAnD,CAAMoQ;KACJ,OAAItR,KAAK4lH,aAAuB,SAAVt0G,SAA0C,MAAxBtR,KAAKinH,kBAC3CR,YAAYzmH,KAAK4lH,WAAWt0G;MACrBtR,KAAK6lH,aAAY1jH,MAAMjB,KAAKoQ,UAE9BnP,MAAMjB,KAAKoQ;AACpB;IAGA,UAAMmlB;KACJ,OAAO6vF,QAAQtmH,MAAM;AACvB;IAGA,UAAMk2B;KACJ,OAAOowF,QAAQtmH,MAAM;AACvB;IAGA,UAAMkmB;KACJ,OAAOogG,QAAQtmH,MAAM;AACvB;IAGA,iBAAMknH;KACJ,OAAOZ,QAAQtmH,MAAM;AACvB;IAGA,cAAM8J;KAEJ,MAAM,IAAIq9G;AACZ;IAGA,YAAIC;KACF,OAAOtgB,KAAKqf,YAAYnmH;AAC1B;IAGA,QAAI0J;KASF,OARK1J,KAAK8lH,WACR9lH,KAAK8lH,SAASuB,mBAAmBrnH,OAC7BA,KAAK4lH,cAEP5lH,KAAK8lH,OAAOhnG;KACZwqE,OAAOtpF,KAAK8lH,OAAOM,WAGhBpmH,KAAK8lH;AACd;IAEA,IAAAwB,CAAM9wF;KACJ,IAAI+wF,QAAQ/wF,QAAQhjB,OAAOyD,SAASuf,KAAK+wF,SAAS/wF,KAAK+wF,QAAQ;KAC/D,MAAM3lH,SAAS40B,QAAQA,KAAK50B;KAE5B,IAAIA,QACF;MACE,IAAsB,mBAAXA,YAAyB,aAAaA,SAC/C,MAAM,IAAIw9G,qBAAqB;MAEjCtY,KAAK0gB,eAAe5lH;AACtB,OAAE,OAAOgT;MACP,OAAOhE,QAAQgD,OAAOgB;AACxB;KAGF,OAAI5U,KAAKmpF,SACAv4E,QAAQC,QAAQ,QAGlB,IAAID,SAAQ,CAACC,SAAS+C;MAC3B,MAAM6zG,wBAAwB7lH,SAC1BklG,KAAKmc,iBAAiBrhH,SAAQ;OAC9B5B,KAAK0F;AAAQ,YAEbugH;MAEJjmH,KACGgR,GAAG,UAAS;OACXy2G,yBACI7lH,UAAUA,OAAOlB,UACnBkT,OAAOhS,OAAOwjB,UAAUvhB,OAAOC,OAAO,IAAIpC,MAAM,8BAA8B;QAAEU,MAAM;aAEtFyO,QAAQ;AAEZ,UACCG,GAAG,SAASi1G,MACZj1G,GAAG,SAAQ,SAAUM;OACpBi2G,SAASj2G,MAAM7L,QACX8hH,SAAS,KACXvnH,KAAK0F;AAET,UACCwN;AAAO;AAEd;;;;GCrMF,MAAMo2E,SAAS,oBAAQ,QACjB,2BAEF,oBAAQ,QACN,eAAkB,oBAAQ;GAyChCzpF,OAAOD,UAAU;IAAEulH,6BAvCnBlrG,gBAA4C,UAAU,MAAM,aAAa,YAAY,eAAe;KAClGqvE,OAAO5/E;KAEP,IAAIguF,SAAS,IACT6vB,QAAQ;KAEZ,WAAW,MAAMj2G,SAAS5H,MAGxB,IAFAguF,OAAOx2F,KAAKoQ,QACZi2G,SAASj2G,MAAM7L,QACX8hH,QAAQ,QAAY;MACtB7vB,SAAS;MACT;AACF;KAGF,IAAmB,QAAf5nF,cAAuB6J,eAAgB+9E,QAA3C;MAKA;OACE,IAAI/9E,YAAY3U,WAAW,qBAAqB;QAC9C,MAAMyoB,UAAU3kB,KAAKiO,MAAM4vG,YAAYr0G,OAAOzD,OAAO6oF;QAErD,YADAv0F,QAAQ66G,SAASxsG,UAAU,IAAIk2G,wBAAwB,wBAAwB53G,aAAauuE,gBAAgB,KAAKA,kBAAkB,MAAMvuE,YAAYnG,SAAS8jB;AAEhK;OAEA,IAAI9T,YAAY3U,WAAW,UAAU;QACnC,MAAMyoB,UAAUk5F,YAAYr0G,OAAOzD,OAAO6oF;QAE1C,YADAv0F,QAAQ66G,SAASxsG,UAAU,IAAIk2G,wBAAwB,wBAAwB53G,aAAauuE,gBAAgB,KAAKA,kBAAkB,MAAMvuE,YAAYnG,SAAS8jB;AAEhK;AACF,QAAE,OAAO7Y,MAET;MAEAzR,QAAQ66G,SAASxsG,UAAU,IAAIk2G,wBAAwB,wBAAwB53G,aAAauuE,gBAAgB,KAAKA,kBAAkB,MAAMvuE,YAAYnG;AAlBrJ,YAFExG,QAAQ66G,SAASxsG,UAAU,IAAIk2G,wBAAwB,wBAAwB53G,aAAauuE,gBAAgB,KAAKA,kBAAkB,MAAMvuE,YAAYnG;AAqBzJ;;;;;GCzCA,OAAM,kCAC4B,wBAE9B,oBAAQ,QACN,UACI,UACA,YACE,YACA,eACG,kBAEX,oBAAQ,MACN00G,OAAO,oBAAQ,QACf,MAAM,iBAAoB,oBAAQ,QAClC,eAAkB,oBAAQ,OAC1BkD,WAAWv4G,OAAO,YAElBy4G,WAAWz4G,OAAO,YAClB2+G,yBAAyB3+G,OAAO,2BAChC4+G,iBAAiB5+G,OAAO,mBACxB6+G,SAAS7+G,OAAO,WAChB8+G,UAAU9+G,OAAO,YACjB++G,sBAAsB/+G,OAAO,wBAC7Bg/G,gBAAgBh/G,OAAO;GAE7B,SAASi/G,yBAA0B/pG,GAAGC;IACpC,OAAU,MAANA,IAAgBD,IACb+pG,yBAAyB9pG,GAAGD,IAAIC;AACzC;GAEA,SAASujG,eAAgBpC,QAAQ9oF;IAC/B,OAAO,IAAI6nF,KAAKiB,QAAQ9oF;AAC1B;GA2JA32B,OAAOD,UAzJP,cAA2BsoH;IACzB,WAAA3nH,CAAa4nH,YAAY,KAAI,UAAYzG,mBAAmBlrF,QAAS,CAAC;KAcpE,IAbAr0B,SAEAnC,KAAKyhH,YAAYjrF,MACjBx2B,KAAK6nH,WAAW,GAChB7nH,KAAK4nH,kBAAkB;KAEvB5nH,KAAK+nH,uBAAuB/nH,KAAKyhH,UAAU2G,sBAAsB,KACjEpoH,KAAKgoH,iBAAiBhoH,KAAKyhH,UAAU4G,gBAAgB;KAEhD7lH,MAAMC,QAAQ0lH,eACjBA,YAAY,EAACA,cAGQ,qBAAZxoH,SACT,MAAM,IAAIy/G,qBAAqB;KAGjCp/G,KAAK6hH,iBAAiBrrF,KAAKmxD,gBAAgBnxD,KAAKmxD,aAAa22B,gBAAgB97G,MAAMC,QAAQ+zB,KAAKmxD,aAAa22B,gBACzG9nF,KAAKmxD,aAAa22B,eAClB;KACJt+G,KAAKuhH,YAAY5hH;KAEjB,KAAK,MAAM2oH,YAAYH,WACrBnoH,KAAKuoH,YAAYD;KAEnBtoH,KAAKwoH;AACP;IAEA,WAAAD,CAAaD;KACX,MAAMG,iBAAiBpJ,YAAYiJ,UAAUhJ;KAE7C,IAAIt/G,KAAK+hH,UAAUh4F,MAAM2+F,QACvBA,KAAKC,MAAMrJ,WAAWmJ,mBACN,MAAhBC,KAAKv/B,WACc,MAAnBu/B,KAAK/D,aAEL,OAAO3kH;KAET,MAAM0oH,OAAO1oH,KAAKuhH,UAAUkH,gBAAgB5kH,OAAOC,OAAO,CAAC,GAAG9D,KAAKyhH;KAEnEzhH,KAAK4oH,YAAYF,OACjBA,KAAK13G,GAAG,YAAW;MACjB03G,KAAKZ,WAAWtyG,KAAKG,IAAI3V,KAAK+nH,sBAAsBW,KAAKZ,WAAW9nH,KAAKgoH;AAAc,UAGzFU,KAAK13G,GAAG,oBAAmB;MACzB03G,KAAKZ,WAAWtyG,KAAKK,IAAI,GAAG6yG,KAAKZ,WAAW9nH,KAAKgoH,iBACjDhoH,KAAKwoH;AAAyB,UAGhCE,KAAK13G,GAAG,eAAc,IAAI3M;MACxB,MAAMuQ,MAAMvQ,KAAK;MACbuQ,OAAoB,qBAAbA,IAAI/E,SAEb64G,KAAKZ,WAAWtyG,KAAKK,IAAI,GAAG6yG,KAAKZ,WAAW9nH,KAAKgoH;MACjDhoH,KAAKwoH;AACP;KAGF,KAAK,MAAMliG,UAAUtmB,KAAK+hH,WACxBz7F,OAAOwhG,WAAW9nH,KAAK+nH;KAKzB,OAFA/nH,KAAKwoH,4BAEExoH;AACT;IAEA,wBAAAwoH;KACExoH,KAAK2nH,0BAA0B3nH,KAAK+hH,UAAUn9G,KAAImK,KAAKA,EAAE+4G,WAAUjpF,OAAOopF,0BAA0B;AACtG;IAEA,cAAAY,CAAgBP;KACd,MAAMG,iBAAiBpJ,YAAYiJ,UAAUhJ,QAEvCoJ,OAAO1oH,KAAK+hH,UAAUh4F,MAAM2+F,QAChCA,KAAKC,MAAMrJ,WAAWmJ,mBACN,MAAhBC,KAAKv/B,WACc,MAAnBu/B,KAAK/D;KAOP,OAJI+D,QACF1oH,KAAK8oH,eAAeJ,OAGf1oH;AACT;IAEA,aAAImoH;KACF,OAAOnoH,KAAK+hH,UACT32G,QAAOq0G,eAAoC,MAAtBA,WAAWt2B,WAA4C,MAAzBs2B,WAAWkF,YAC9D//G,KAAKmK,KAAMA,EAAE45G,MAAMrJ;AACxB;IAEA,CAACyJ;KAIC,IAA8B,MAA1B/oH,KAAK+hH,UAAUt8G,QACjB,MAAM,IAAIujH;KASZ,KANmBhpH,KAAK+hH,UAAUh4F,MAAK01F,eACpCA,WAAWwJ,gBACU,MAAtBxJ,WAAWt2B,WACc,MAAzBs2B,WAAWkF,aAIX;KAKF,IAFuB3kH,KAAK+hH,UAAUn9G,KAAI8jH,QAAQA,KAAKO,cAAapqF,QAAO,CAAC3gB,GAAGC,MAAMD,KAAKC,KAAG,IAG3F;KAGF,IAAI+qG,UAAU,GAEVC,iBAAiBnpH,KAAK+hH,UAAUnoE,WAAU8uE,SAASA,KAAKO;KAE5D,MAAOC,YAAYlpH,KAAK+hH,UAAUt8G,UAAQ;MACxCzF,KAAK6nH,WAAW7nH,KAAK6nH,UAAU,KAAK7nH,KAAK+hH,UAAUt8G;MACnD,MAAMijH,OAAO1oH,KAAK+hH,UAAU/hH,KAAK6nH;MAgBjC,IAbIa,KAAKZ,WAAW9nH,KAAK+hH,UAAUoH,gBAAgBrB,aAAaY,KAAKO,gBACnEE,iBAAiBnpH,KAAK6nH;MAIH,MAAjB7nH,KAAK6nH,YAEP7nH,KAAK4nH,kBAAkB5nH,KAAK4nH,kBAAkB5nH,KAAK2nH;MAE/C3nH,KAAK4nH,mBAAmB,MAC1B5nH,KAAK4nH,kBAAkB5nH,KAAK+nH;MAG5BW,KAAKZ,YAAY9nH,KAAK4nH,oBAAqBc,KAAKO,aAClD,OAAOP;AAEX;KAIA,OAFA1oH,KAAK4nH,kBAAkB5nH,KAAK+hH,UAAUoH,gBAAgBrB,UACtD9nH,KAAK6nH,UAAUsB;KACRnpH,KAAK+hH,UAAUoH;AACxB;;;;;GCxLF,OAAM,cAAiB,oBAAQ,QACzB,WAAaC,aAAaC,kBAAmB,oBAAQ,OACrD,qBAAqB,eAAkB,oBAAQ,QAC/C,gBAAmB,oBAAQ,QAC3B,UAAa,oBAAQ,OACrB,UAAU,iBAAoB,oBAAQ,QACtC,WAAc,oBAAQ,QACtB,QAAQ,UAAU,QAAQ,UAAa,oBAAQ,QAC/C,YAAe,oBAAQ,QACvB,sBAAsB,uBAAuB,gBAAmB,oBAAQ,OACxE//B,SAAS,oBAAQ,QACjB,uBAA0B,oBAAQ;GAgBxC,MAAMggC;IAKJ;IAEA,WAAA/oH;KACMmC,UAAU,OAAO+9G,cACnB8I,OAAOC,sBAGTxpH,MAAK,8BAA+B0C,UAAU;AAChD;IAEA,WAAM8d,CAAOhV,SAAS/E,UAAU,CAAC;KAC/B8iH,OAAOE,WAAWzpH,MAAMspH,QACxBC,OAAOG,oBAAoBhnH,WAAW,GAAG;MAAEqQ,QAAQ;SAEnDvH,UAAU+9G,OAAOI,WAAWC,YAAYp+G,UACxC/E,UAAU8iH,OAAOI,WAAWE,kBAAkBpjH;KAE9C,MAAMsI,UAAU/O,KAAK8pH,SAASt+G,SAAS/E;KAEvC,IAAiB,MAAbsI,EAAEtJ,QAIN,OAAOsJ,EAAE;AACX;IAEA,cAAM+6G,CAAUt+G,eAAUlI,GAAWmD,UAAU,CAAC;KAC9C8iH,OAAOE,WAAWzpH,MAAMspH,aAERhmH,MAAZkI,YAAuBA,UAAU+9G,OAAOI,WAAWC,YAAYp+G;KACnE/E,UAAU8iH,OAAOI,WAAWE,kBAAkBpjH;KAG9C,IAAI2X,IAAI;KAGR,SAAgB9a,MAAZkI,SACF,IAAIA,mBAAmB00G;MAKrB,IAHA9hG,IAAI5S,QAAQu+G,SAGK,UAAb3rG,EAAExU,WAAqBnD,QAAQujH,cACjC,OAAO;YAEmB,mBAAZx+G,YAEhB4S,IAAI,IAAI8hG,QAAQ10G,SAASu+G;KAM7B,MAAM7yF,YAAY;KAGlB,SAAgB5zB,MAAZkI,SAEF,KAAK,MAAMy+G,mBAAmBjqH,MAAK,6BACjCk3B,UAAUh2B,KAAK+oH,gBAAgB,UAE5B;MAEL,MAAMC,mBAAmBlqH,MAAK,WAAYoe,GAAG3X;MAG7C,KAAK,MAAMwjH,mBAAmBC,kBAC5BhzF,UAAUh2B,KAAK+oH,gBAAgB;AAEnC;KAMA,MAAME,eAAe;KAGrB,KAAK,MAAMl6G,YAAYinB,WAAW;MAEhC,MAAM3L,iBAAiB,IAAI00F,SAAShwG,SAASvG,MAAM6V,UAAU,OACvD7V,OAAO6hB,eAAew+F,QAAQrgH;MACpC6hB,eAAew+F,UAAU95G,UACzBsb,eAAew+F,QAAQrgH,OAAOA,MAC9B6hB,eAAe6+F,UAAUC,gBAAgBp6G,SAASq6G;MAClD/+F,eAAe6+F,UAAUG,UAAU,aAEnCJ,aAAajpH,KAAKqqB;AACpB;KAGA,OAAO1nB,OAAO2mH,OAAOL;AACvB;IAEA,SAAM9iH,CAAKmE;KACT+9G,OAAOE,WAAWzpH,MAAMspH,QACxBC,OAAOG,oBAAoBhnH,WAAW,GAAG;MAAEqQ,QAAQ;;KAKnD,MAAM03E,WAAW,EAHjBj/E,UAAU+9G,OAAOI,WAAWC,YAAYp+G,YAMlCi/G,uBAAuBzqH,KAAK0qH,OAAOjgC;KAGzC,aAAaggC;AACf;IAEA,YAAMC,CAAQjgC;KACZ8+B,OAAOE,WAAWzpH,MAAMspH,QACxBC,OAAOG,oBAAoBhnH,WAAW,GAAG;MAAEqQ,QAAQ;SAEnD03E,WAAW8+B,OAAOI,WAAW,yBAAyBl/B;KAGtD,MAAMkgC,mBAAmB,IAGnBC,cAAc;KAGpB,KAAK,MAAMp/G,WAAWi/E,UAAU;MAC9B,IAAuB,mBAAZj/E,SACT;MAIF,MAAM4S,IAAI5S,QAAQu+G;MAGlB,KAAKc,qBAAqBzsG,EAAE3U,QAAqB,UAAb2U,EAAExU,QACpC,MAAM2/G,OAAOnL,OAAOnZ,UAAU;OAC5BlyF,QAAQ;OACR7Q,SAAS;;AAGf;KAIA,MAAM4oH,mBAAmB;KAGzB,KAAK,MAAMt/G,WAAWi/E,UAAU;MAE9B,MAAMrsE,IAAI,IAAI8hG,QAAQ10G,SAASu+G;MAG/B,KAAKc,qBAAqBzsG,EAAE3U,MAC1B,MAAM8/G,OAAOnL,OAAOnZ,UAAU;OAC5BlyF,QAAQ;OACR7Q,SAAS;;MAKbkc,EAAE2sG,YAAY,SACd3sG,EAAE4sG,cAAc,eAGhBJ,YAAY1pH,KAAKkd;MAGjB,MAAMkuE,kBAAkB2+B;MAGxBH,iBAAiB5pH,KAAKgqH,SAAS;OAC7B1/G,SAAS4S;OACTqhG,YAAYD;OACZ,eAAA2L,CAAiBl7G;QAEf,IAAsB,YAAlBA,SAASjO,QAAwC,QAApBiO,SAASgD,UAAkBhD,SAASgD,SAAS,OAAOhD,SAASgD,SAAS,KACrGq5E,gBAAgB14E,OAAO21G,OAAOnL,OAAOnZ,UAAU;SAC7ClyF,QAAQ;SACR7Q,SAAS;kBAEN,IAAI+N,SAASq6G,YAAY/pF,SAAS,SAAS;SAEhD,MAAM6oF,cAAcC,eAAep5G,SAASq6G,YAAYzpH,IAAI;SAG5D,KAAK,MAAMy9F,cAAc8qB,aAEvB,IAAmB,QAAf9qB,YAAoB;UACtBhS,gBAAgB14E,OAAO21G,OAAOnL,OAAOnZ,UAAU;WAC7ClyF,QAAQ;WACR7Q,SAAS;;UAGX,KAAK,MAAMmjB,cAAcylG,kBACvBzlG,WAAWziB;UAGb;AACF;AAEJ;AACF;OACA,wBAAAwoH,CAA0Bn7G;QAEpBA,SAASvP,UACX4rF,gBAAgB14E,OAAO,IAAIy3G,aAAa,WAAW,iBAKrD/+B,gBAAgBz7E,QAAQZ;AAC1B;WAIF06G,iBAAiBzpH,KAAKorF,gBAAgBld;AACxC;KAGA,MAAMrgE,IAAI6B,QAAQoD,IAAI22G,mBAGhBzzF,kBAAkBnoB,GAGlB2iE,aAAa;KAGnB,IAAIrwE,QAAQ;KAGZ,KAAK,MAAM4O,YAAYinB,WAAW;MAGhC,MAAM83C,YAAY;OAChBhtE,MAAM;OACNwJ,SAASo/G,YAAYvpH;OACrB4O;;MAGFyhE,WAAWxwE,KAAK8tE,YAEhB3tE;AACF;KAGA,MAAMiqH,kBAAkBL;KAGxB,IAAIM,YAAY;KAGhB;MACEvrH,MAAK,qBAAsB0xE;AAC7B,OAAE,OAAOzjE;MACPs9G,YAAYt9G;AACd;KAcA,OAXA41G,gBAAe;MAEK,SAAd0H,YACFD,gBAAgBz6G,aAAQvN,KAGxBgoH,gBAAgB13G,OAAO23G;AACzB,UAIKD,gBAAgBl8C;AACzB;IAEA,SAAMo8C,CAAKhgH,SAASyE;KAClBs5G,OAAOE,WAAWzpH,MAAMspH,QACxBC,OAAOG,oBAAoBhnH,WAAW,GAAG;MAAEqQ,QAAQ;SAEnDvH,UAAU+9G,OAAOI,WAAWC,YAAYp+G,UACxCyE,WAAWs5G,OAAOI,WAAW1J,SAAShwG;KAGtC,IAAIw7G,eAAe;KAUnB,IANEA,eADEjgH,mBAAmB00G,UACN10G,QAAQu+G,UAER,IAAI7J,QAAQ10G,SAASu+G;MAIjCc,qBAAqBY,aAAahiH,QAAgC,UAAxBgiH,aAAa7hH,QAC1D,MAAM2/G,OAAOnL,OAAOnZ,UAAU;MAC5BlyF,QAAQ;MACR7Q,SAAS;;KAKb,MAAMwpH,gBAAgBz7G,SAAS85G;KAG/B,IAA6B,QAAzB2B,cAAcz4G,QAChB,MAAMs2G,OAAOnL,OAAOnZ,UAAU;MAC5BlyF,QAAQ;MACR7Q,SAAS;;KAKb,IAAIwpH,cAAcpB,YAAY/pF,SAAS,SAAS;MAE9C,MAAM6oF,cAAcC,eAAeqC,cAAcpB,YAAYzpH,IAAI;MAGjE,KAAK,MAAMy9F,cAAc8qB,aAEvB,IAAmB,QAAf9qB,YACF,MAAMirB,OAAOnL,OAAOnZ,UAAU;OAC5BlyF,QAAQ;OACR7Q,SAAS;;AAIjB;KAGA,IAAIwpH,cAAchiH,SAASy8G,YAAYuF,cAAchiH,KAAKgH,WAAWg7G,cAAchiH,KAAKgH,OAAO01G,SAC7F,MAAMmD,OAAOnL,OAAOnZ,UAAU;MAC5BlyF,QAAQ;MACR7Q,SAAS;;KAKb,MAAMypH,iBAAiBC,cAAcF,gBAG/BG,kBAAkBZ;KAGxB,IAA0B,QAAtBS,cAAchiH,MAAc;MAE9B,MAGMmV,SAHS6sG,cAAchiH,KAAKgH,OAGZoO;MAGtBgtG,aAAajtG,QAAQ5K,KAAK43G,gBAAgBh7G,SAASg7G,gBAAgBj4G;AACrE,YACEi4G,gBAAgBh7G,aAAQvN;KAK1B,MAAMouE,aAAa,IAIb1C,YAAY;MAChBhtE,MAAM;MACNwJ,SAASigH;MACTx7G,UAAU07G;;KAIZj6C,WAAWxwE,KAAK8tE;KAGhB,MAAM/H,cAAc4kD,gBAAgBz8C;KAET,QAAvBu8C,eAAejiH,SACjBiiH,eAAejiH,KAAK6V,SAAS0nD;KAI/B,MAAMqkD,kBAAkBL;KAGxB,IAAIM,YAAY;KAGhB;MACEvrH,MAAK,qBAAsB0xE;AAC7B,OAAE,OAAOzjE;MACPs9G,YAAYt9G;AACd;KAYA,OATA41G,gBAAe;MAEK,SAAd0H,YACFD,gBAAgBz6G,YAEhBy6G,gBAAgB13G,OAAO23G;AACzB,UAGKD,gBAAgBl8C;AACzB;IAEA,YAAM,CAAQ5jE,SAAS/E,UAAU,CAAC;KAChC8iH,OAAOE,WAAWzpH,MAAMspH,QACxBC,OAAOG,oBAAoBhnH,WAAW,GAAG;MAAEqQ,QAAQ;SAEnDvH,UAAU+9G,OAAOI,WAAWC,YAAYp+G,UACxC/E,UAAU8iH,OAAOI,WAAWE,kBAAkBpjH;KAK9C,IAAI2X,IAAI;KAER,IAAI5S,mBAAmB00G;MAGrB,IAFA9hG,IAAI5S,QAAQu+G,SAEK,UAAb3rG,EAAExU,WAAqBnD,QAAQujH,cACjC,QAAO;YAGT1gC,OAA0B,mBAAZ99E,UAEd4S,IAAI,IAAI8hG,QAAQ10G,SAASu+G;KAI3B,MAAMr4C,aAAa,IAGb1C,YAAY;MAChBhtE,MAAM;MACNwJ,SAAS4S;MACT3X;;KAGFirE,WAAWxwE,KAAK8tE;KAEhB,MAAMs8C,kBAAkBL;KAExB,IACIf,kBADAqB,YAAY;KAGhB;MACErB,mBAAmBlqH,MAAK,qBAAsB0xE;AAChD,OAAE,OAAOzjE;MACPs9G,YAAYt9G;AACd;KAUA,OARA41G,gBAAe;MACK,SAAd0H,YACFD,gBAAgBz6G,UAAUq5G,kBAAkBzkH,UAE5C6lH,gBAAgB13G,OAAO23G;AACzB,UAGKD,gBAAgBl8C;AACzB;IAQA,UAAMhnE,CAAMoD,eAAUlI,GAAWmD,UAAU,CAAC;KAC1C8iH,OAAOE,WAAWzpH,MAAMspH,aAERhmH,MAAZkI,YAAuBA,UAAU+9G,OAAOI,WAAWC,YAAYp+G;KACnE/E,UAAU8iH,OAAOI,WAAWE,kBAAkBpjH;KAG9C,IAAI2X,IAAI;KAGR,SAAgB9a,MAAZkI,SAEF,IAAIA,mBAAmB00G;MAKrB,IAHA9hG,IAAI5S,QAAQu+G,SAGK,UAAb3rG,EAAExU,WAAqBnD,QAAQujH,cACjC,OAAO;YAEmB,mBAAZx+G,YAChB4S,IAAI,IAAI8hG,QAAQ10G,SAASu+G;KAK7B,MAAM36C,UAAU67C,yBAIVxgC,WAAW;KAGjB,SAAgBnnF,MAAZkI,SAEF,KAAK,MAAMy+G,mBAAmBjqH,MAAK,6BAEjCyqF,SAASvpF,KAAK+oH,gBAAgB,UAE3B;MAEL,MAAMC,mBAAmBlqH,MAAK,WAAYoe,GAAG3X;MAG7C,KAAK,MAAMwjH,mBAAmBC,kBAE5Bz/B,SAASvpF,KAAK+oH,gBAAgB;AAElC;KAuBA,OApBApG,gBAAe;MAEb,MAAM+G,cAAc;MAGpB,KAAK,MAAMp/G,WAAWi/E,UAAU;OAC9B,MAAMshC,gBAAgB,IAAI7L,QAAQ;OAClC6L,cAAchC,UAAUv+G,SACxBugH,cAAc3B,UAAUC,gBAAgB7+G,QAAQ8+G;OAChDyB,cAAc3B,UAAUG,UAAU,aAClCwB,cAAcC,UAAUxgH,QAAQ8a;OAGhCskG,YAAY1pH,KAAK6qH;AACnB;MAGA38C,QAAQv+D,QAAQhN,OAAO2mH,OAAOI;AAAY,UAGrCx7C,QAAQA;AACjB;IAOA,sBAAuBsC;KAErB,MAAMu6C,QAAQjsH,MAAK,6BAGbksH,cAAc,KAAID,SAGlBE,aAAa,IAGbC,aAAa;KAEnB;MAEE,KAAK,MAAMp9C,aAAa0C,YAAY;OAElC,IAAuB,aAAnB1C,UAAUhtE,QAAwC,UAAnBgtE,UAAUhtE,MAC3C,MAAMunH,OAAOnL,OAAOnZ,UAAU;QAC5BlyF,QAAQ;QACR7Q,SAAS;;OAKb,IAAuB,aAAnB8sE,UAAUhtE,QAA2C,QAAtBgtE,UAAU/+D,UAC3C,MAAMs5G,OAAOnL,OAAOnZ,UAAU;QAC5BlyF,QAAQ;QACR7Q,SAAS;;OAKb,IAAIlC,MAAK,WAAYgvE,UAAUxjE,SAASwjE,UAAUvoE,SAAS0lH,YAAY1mH,QACrE,MAAM,IAAI4lH,aAAa,OAAO;OAIhC,IAAInB;OAGJ,IAAuB,aAAnBl7C,UAAUhtE,MAAmB;QAK/B,IAHAkoH,mBAAmBlqH,MAAK,WAAYgvE,UAAUxjE,SAASwjE,UAAUvoE,UAGjC,MAA5ByjH,iBAAiBzkH,QACnB,OAAO;QAIT,KAAK,MAAMwkH,mBAAmBC,kBAAkB;SAC9C,MAAMmC,MAAMJ,MAAM3qH,QAAQ2oH;SAC1B3gC,QAAgB,MAAT+iC,MAGPJ,MAAM1qH,OAAO8qH,KAAK;AACpB;AACF,cAAO,IAAuB,UAAnBr9C,UAAUhtE,MAAgB;QAEnC,IAA0B,QAAtBgtE,UAAU/+D,UACZ,MAAMs5G,OAAOnL,OAAOnZ,UAAU;SAC5BlyF,QAAQ;SACR7Q,SAAS;;QAKb,MAAMkc,IAAI4wD,UAAUxjE;QAGpB,KAAKq/G,qBAAqBzsG,EAAE3U,MAC1B,MAAM8/G,OAAOnL,OAAOnZ,UAAU;SAC5BlyF,QAAQ;SACR7Q,SAAS;;QAKb,IAAiB,UAAbkc,EAAExU,QACJ,MAAM2/G,OAAOnL,OAAOnZ,UAAU;SAC5BlyF,QAAQ;SACR7Q,SAAS;;QAKb,IAAyB,QAArB8sE,UAAUvoE,SACZ,MAAM8iH,OAAOnL,OAAOnZ,UAAU;SAC5BlyF,QAAQ;SACR7Q,SAAS;;QAKbgoH,mBAAmBlqH,MAAK,WAAYgvE,UAAUxjE;QAG9C,KAAK,MAAMy+G,mBAAmBC,kBAAkB;SAC9C,MAAMmC,MAAMJ,MAAM3qH,QAAQ2oH;SAC1B3gC,QAAgB,MAAT+iC,MAGPJ,MAAM1qH,OAAO8qH,KAAK;AACpB;QAGAJ,MAAM/qH,KAAK,EAAC8tE,UAAUxjE,SAASwjE,UAAU/+D,aAGzCk8G,WAAWjrH,KAAK,EAAC8tE,UAAUxjE,SAASwjE,UAAU/+D;AAChD;OAGAm8G,WAAWlrH,KAAK,EAAC8tE,UAAUxjE,SAASwjE,UAAU/+D;AAChD;MAGA,OAAOm8G;AACT,OAAE,OAAOn+G;MAQP,MANAjO,MAAK,4BAA6ByF,SAAS,GAG3CzF,MAAK,8BAA+BksH;MAG9Bj+G;AACR;AACF;IASA,YAAaq+G,cAAc7lH,SAAS8lH;KAElC,MAAMH,aAAa,IAEb7nB,UAAUgoB,iBAAiBvsH,MAAK;KAEtC,KAAK,MAAMiqH,mBAAmB1lB,SAAS;MACrC,OAAOioB,eAAeC,kBAAkBxC;MACpCjqH,MAAK,yBAA0BssH,cAAcE,eAAeC,gBAAgBhmH,YAC9E2lH,WAAWlrH,KAAK+oH;AAEpB;KAEA,OAAOmC;AACT;IAUA,0BAA2BE,cAAc9gH,SAASyE,WAAW,MAAMxJ;KAKjE,MAAMimH,WAAW,IAAIn9G,IAAI+8G,aAAa7iH,MAEhCkjH,YAAY,IAAIp9G,IAAI/D,QAAQ/B;KAQlC,IANIhD,SAASmmH,iBACXD,UAAUn9G,SAAS,IAEnBk9G,SAASl9G,SAAS,MAGfq9G,UAAUH,UAAUC,YAAW,IAClC,QAAO;KAGT,IACc,QAAZ18G,YACAxJ,SAASqmH,eACR78G,SAASq6G,YAAY/pF,SAAS,SAE/B,QAAO;KAGT,MAAM6oF,cAAcC,eAAep5G,SAASq6G,YAAYzpH,IAAI;KAE5D,KAAK,MAAMy9F,cAAc8qB,aAAa;MACpC,IAAmB,QAAf9qB,YACF,QAAO;MAQT,IALqB9yF,QAAQ8+G,YAAYzpH,IAAIy9F,gBAC1BguB,aAAahC,YAAYzpH,IAAIy9F,aAK9C,QAAO;AAEX;KAEA,QAAO;AACT;;GAGFz6F,OAAOkpH,iBAAiBzD,MAAMn5G,WAAW;IACvC,CAACnH,OAAOgkH,cAAc;KACpB3kH,OAAO;KACP29F,eAAc;;IAEhBxlF,OAAOysG;IACPnD,UAAUmD;IACV5lH,KAAK4lH;IACLvC,QAAQuC;IACRzB,KAAKyB;IACL1kH,QAAQ0kH;IACR7kH,MAAM6kH;;GAGR,MAAMC,6BAA6B,EACjC;IACE/9G,KAAK;IACLg+G,WAAW5D,OAAOI,WAAWyD;IAC7Bx/F,eAAc;MAEhB;IACEze,KAAK;IACLg+G,WAAW5D,OAAOI,WAAWyD;IAC7Bx/F,eAAc;MAEhB;IACEze,KAAK;IACLg+G,WAAW5D,OAAOI,WAAWyD;IAC7Bx/F,eAAc;;GAIlB27F,OAAOI,WAAWE,oBAAoBN,OAAO8D,oBAAoBH;GAEjE3D,OAAOI,WAAW2D,yBAAyB/D,OAAO8D,oBAAoB,KACjEH,4BACH;IACE/9G,KAAK;IACLg+G,WAAW5D,OAAOI,WAAW4D;SAIjChE,OAAOI,WAAW1J,WAAWsJ,OAAOiE,mBAAmBvN,WAEvDsJ,OAAOI,WAAW,2BAA2BJ,OAAOkE,kBAClDlE,OAAOI,WAAWC;GAGpB/pH,OAAOD,UAAU;IACf0pH;;;;;GCl0BF,OAAM,cAAiB,oBAAQ,QACzB,SAAY,oBAAQ,QACpB,UAAa,oBAAQ,OACrB,uBAA0B,oBAAQ;GAExC,MAAM9I;IAKJ,QAAU,IAAIt4G;IAEd,WAAA3H;KACMmC,UAAU,OAAO+9G,cACnB8I,OAAOC;AAEX;IAEA,WAAMhpG,CAAOhV,SAAS/E,UAAU,CAAC;KAQ/B,IAPA8iH,OAAOE,WAAWzpH,MAAMwgH,eACxB+I,OAAOG,oBAAoBhnH,WAAW,GAAG;MAAEqQ,QAAQ;SAEnDvH,UAAU+9G,OAAOI,WAAWC,YAAYp+G,UAIf,SAHzB/E,UAAU8iH,OAAOI,WAAW2D,uBAAuB7mH,UAGvCinH;MAEV,IAAI1tH,MAAK,OAAQW,IAAI8F,QAAQinH,YAAY;OAEvC,MAAMC,YAAY3tH,MAAK,OAAQa,IAAI4F,QAAQinH,YACrCzB,QAAQ,IAAI3C,MAAM7I,YAAYkN;OAEpC,aAAa1B,MAAMzrG,MAAMhV,SAAS/E;AACpC;YAGA,KAAK,MAAMknH,aAAa3tH,MAAK,OAAQ2I,UAAU;MAC7C,MAAMsjH,QAAQ,IAAI3C,MAAM7I,YAAYkN,YAG9B19G,iBAAiBg8G,MAAMzrG,MAAMhV,SAAS/E;MAE5C,SAAiBnD,MAAb2M,UACF,OAAOA;AAEX;AAEJ;IAOA,SAAMtP,CAAK+sH;KAQT,OAPAnE,OAAOE,WAAWzpH,MAAMwgH,eACxB+I,OAAOG,oBAAoBhnH,WAAW,GAAG;MAAEqQ,QAAQ;SAEnD26G,YAAYnE,OAAOI,WAAW4D,UAAUG,YAIjC1tH,MAAK,OAAQW,IAAI+sH;AAC1B;IAOA,UAAM9jB,CAAM8jB;KAOV,IANAnE,OAAOE,WAAWzpH,MAAMwgH,eACxB+I,OAAOG,oBAAoBhnH,WAAW,GAAG;MAAEqQ,QAAQ;SAEnD26G,YAAYnE,OAAOI,WAAW4D,UAAUG,YAGpC1tH,MAAK,OAAQW,IAAI+sH,YAAY;MAI/B,MAAMzB,QAAQjsH,MAAK,OAAQa,IAAI6sH;MAG/B,OAAO,IAAIpE,MAAM7I,YAAYwL;AAC/B;KAGA,MAAMA,QAAQ;KAMd,OAHAjsH,MAAK,OAAQS,IAAIitH,WAAWzB,QAGrB,IAAI3C,MAAM7I,YAAYwL;AAC/B;IAOA,YAAM,CAAQyB;KAMZ,OALAnE,OAAOE,WAAWzpH,MAAMwgH,eACxB+I,OAAOG,oBAAoBhnH,WAAW,GAAG;MAAEqQ,QAAQ;SAEnD26G,YAAYnE,OAAOI,WAAW4D,UAAUG,YAEjC1tH,MAAK,OAAQuI,OAAOmlH;AAC7B;IAMA,UAAMtlH;KACJmhH,OAAOE,WAAWzpH,MAAMwgH;KAMxB,OAAO,KAHMxgH,MAAK,OAAQoI;AAI5B;;GAGFvE,OAAOkpH,iBAAiBvM,aAAarwG,WAAW;IAC9C,CAACnH,OAAOgkH,cAAc;KACpB3kH,OAAO;KACP29F,eAAc;;IAEhBxlF,OAAOysG;IACPtsH,KAAKssH;IACLrjB,MAAMqjB;IACN1kH,QAAQ0kH;IACR7kH,MAAM6kH;OAGRptH,OAAOD,UAAU;IACf4gH;;;;;GC5IF3gH,OAAOD,UAAU;IACf6gH,YAAY;;;;;GCDd,MAAMn3B,SAAS,oBAAQ,QACjB,iBAAoB,oBAAQ,QAC5B,qBAAwB,oBAAQ;GAyCtCzpF,OAAOD,UAAU;IACfitH,WAjCF,SAAoBe,GAAGC,GAAGC,mBAAkB;KAK1C,OAJoBC,cAAcH,GAAGE,qBAEjBC,cAAcF,GAAGC;AAGvC;IA4BE1E,aAtBF,SAAsBr2G;KACpBu2E,OAAkB,SAAXv2E;KAEP,MAAMpK,SAAS;KAEf,KAAK,IAAIN,SAAS0K,OAAOpO,MAAM,MAC7B0D,QAAQA,MAAMvD,QAETuD,MAAM5C,UAECuoH,kBAAkB3lH,UAI9BM,OAAOzH,KAAKmH;KAGd,OAAOM;AACT;;;;;GCrCA,MAAM2gF,SAAS,oBAAQ,OACjB2kC,MAAM,oBAAQ,OACd5S,OAAO,oBAAQ,QACf,YAAe,oBAAQ,OACvBvU,OAAO,oBAAQ,OACfonB,SAAS,oBAAQ,OACjBhO,UAAU,oBAAQ,OAClBe,iBAAiB,oBAAQ,OACzB,mCAC6B,oCACC,sBACd,qBACD,qBACA,sBACC,aACT,oBACO,kBACF,iBACD,8BACa,wBAE1B,oBAAQ,OACNzC,iBAAiB,oBAAQ,QACzB,MACA,QACE,aACK,SACJ,OACF,SACE,UACC,WACC,WACA,UACD,UACA,OACH,UACG,QACF,YACI,aACC,YACD,QACJ,0BACkB,aACb,aACA,aACA,QACL,aACK,SACJ,wBACe,iBACP,sBACK,4BACM,iBACX,cACH,sBACQ,YACV,kBACM,cACJ,UACJ,QACF,UACE,WACC,eACI,eACA,kBACG,kBACA,OAEX,eACQ,oBACK,oBACA,mBACD,sBAEf,oBAAQ;GAGZ,IAAI2P;GACJ;IACEA,QAAQ,oBAAQ;AAClB,KAAE;IAEAA,QAAQ;KAAEC,WAAW,CAAC;;AACxB;GAEA,OACEA,YAAW,wBACa,qBACH,mBACF,qBACE,6BACQ,qBACR,wBAGnBD;GAGJ,IAAIE,wBAAuB;GAE3B,MAAMC,aAAah8G,OAAOtJ,OAAOulH,UAE3BC,iBAAiBxlH,OAAO,mBAExBylH,WAAW,CAAC;GAElB;IACE,MAAMC,qBAAqB,oBAAQ;IACnCD,SAASE,cAAcD,mBAAmBE,QAAQ;IAClDH,SAASI,gBAAgBH,mBAAmBE,QAAQ;IACpDH,SAASK,eAAeJ,mBAAmBE,QAAQ;IACnDH,SAASM,YAAYL,mBAAmBE,QAAQ;AAClD,KAAE;IACAH,SAASE,cAAc;KAAEK,iBAAgB;OACzCP,SAASI,gBAAgB;KAAEG,iBAAgB;OAC3CP,SAASK,eAAe;KAAEE,iBAAgB;OAC1CP,SAASM,YAAY;KAAEC,iBAAgB;;AACzC;GAiTA,SAASC,oBAAqBr6G;IAC5B00E,OAAoB,mCAAb10E,IAAI/E,OAEX7P,KAAKkvH,SAASC,UAAUv6G;IAExB24D,QAAQvtE,KAAKovH,UAAUx6G;AACzB;GAEA,SAASy6G,kBAAmBrtH,MAAM6N,MAAMy2C;IACtC,MAAM1xC,MAAM,IAAI06G,mBAAmB,wCAAwCttH,cAAc6N;IAE9E,MAAPy2C,OACFtmD,KAAKkvH,SAASC,UAAUv6G,KACxB24D,QAAQvtE,KAAKovH,UAAUx6G;AAE3B;GAEA,SAAS26G;IACPzoB,KAAKphG,QAAQ1F,MAAM,IAAIwjH,YAAY,uBACnC1c,KAAKphG,QAAQ1F,KAAKkvH,UAAU,IAAI1L,YAAY;AAC9C;GAEA,SAASgM,cAAe3/G;IACtB,MAAMyW,SAAStmB,KAAKovH,UACdx6G,MAAM,IAAI06G,mBAAmB,6CAA6Cz/G;IAIhF,IAHAyW,OAAO4oG,WAAW,MAClB5oG,OAAOmpG,iBAAiB,MAEpBnpG,OAAOq+F,WAAW;KACpBr7B,OAA0B,MAAnBtpF,KAAK0vH;KAGZ,MAAMjlC,WAAWnkE,OAAOqpG,QAAQpuH,OAAO+kB,OAAOspG;KAC9C,KAAK,IAAI7yG,IAAI,GAAGA,IAAI0tE,SAAShlF,QAAQsX,KAAK;MAExC8yG,aAAa7vH,MADGyqF,SAAS1tE,IACGnI;AAC9B;AACF,WAAO,IAAI0R,OAAO87F,YAAY,GAAG;KAE/B,MAAM52G,UAAU8a,OAAOqpG,QAAQrpG,OAAOspG;KACtCtpG,OAAOqpG,QAAQrpG,OAAOspG,kBAAkB,MAExCC,aAAavpG,QAAQ9a,SAASoJ;AAChC;IAEA0R,OAAOwpG,eAAexpG,OAAOspG,cAE7BtmC,OAA4B,MAArBhjE,OAAO87F,YAEd97F,OAAOqnD,KAAK,cACVrnD,OAAOqiG,OACP,EAACriG,UACD1R;IAGF1B,OAAOoT;AACT;GAEA,MAAM8nG,YAAY,oBAAQ,MACpBnP,4BAA4B,oBAAQ,OACpC8Q,YAAYz9G,OAAOimE,MAAM;GAgE/B,IAAIy3C,iBAAiB,MACjBC,gBA/DJh2G;IACE,MAAMi2G,iBAAiB/sH,QAAQC,IAAI+sH,iBAAiB,oBAAQ,aAA6B7sH;IAEzF,IAAI8sH;IACJ;KACEA,YAAYC,YAAYC,QAAQh+G,OAAOE,KAAK,oBAAQ,MAAiC;AACvF,MAAE,OAAOvE;KAOPmiH,YAAYC,YAAYC,QAAQh+G,OAAOE,KAAK09G,kBAAkB,oBAAQ,OAA4B;AACpG;IAEA,aAAaG,YAAYE,YAAYH,KAAK;KACxChtH,KAAK;MAGHotH,aAAa,CAACzhH,GAAG0hH,IAAIxhG,QAEZ;MAETyhG,gBAAgB,CAAC3hH,GAAG0hH,IAAIxhG;OACtBq6D,OAAOo8B,YAAYiL,cAAcC,KAAK7hH;OACtC,MAAMk6B,QAAQwnF,KAAKI,mBAAmBC,iBAAiB5oD;OACvD,OAAOyoD,cAAcI,SAAS,IAAIzC,WAAWwC,iBAAiBj9G,QAAQo1B,OAAOha,SAAS;AAAA;MAExF+hG,uBAAwBjiH,MACtBu6E,OAAOo8B,YAAYiL,cAAcC,KAAK7hH,IAC/B4hH,cAAcM,oBAAoB;MAE3CC,sBAAsB,CAACniH,GAAG0hH,IAAIxhG;OAC5Bq6D,OAAOo8B,YAAYiL,cAAcC,KAAK7hH;OACtC,MAAMk6B,QAAQwnF,KAAKI,mBAAmBC,iBAAiB5oD;OACvD,OAAOyoD,cAAcQ,cAAc,IAAI7C,WAAWwC,iBAAiBj9G,QAAQo1B,OAAOha,SAAS;AAAA;MAE7FmiG,sBAAsB,CAACriH,GAAG0hH,IAAIxhG;OAC5Bq6D,OAAOo8B,YAAYiL,cAAcC,KAAK7hH;OACtC,MAAMk6B,QAAQwnF,KAAKI,mBAAmBC,iBAAiB5oD;OACvD,OAAOyoD,cAAcU,cAAc,IAAI/C,WAAWwC,iBAAiBj9G,QAAQo1B,OAAOha,SAAS;AAAA;MAE7FqiG,0BAA0B,CAACviH,GAAGe,YAAYiuG,SAASwT,qBACjDjoC,OAAOo8B,YAAYiL,cAAcC,KAAK7hH;MAC/B4hH,cAAca,kBAAkB1hH,YAAY3I,QAAQ42G,UAAU52G,QAAQoqH,qBAAqB;MAEpGE,cAAc,CAAC1iH,GAAG0hH,IAAIxhG;OACpBq6D,OAAOo8B,YAAYiL,cAAcC,KAAK7hH;OACtC,MAAMk6B,QAAQwnF,KAAKI,mBAAmBC,iBAAiB5oD;OACvD,OAAOyoD,cAAce,OAAO,IAAIpD,WAAWwC,iBAAiBj9G,QAAQo1B,OAAOha,SAAS;AAAA;MAEtF0iG,0BAA2B5iH,MACzBu6E,OAAOo8B,YAAYiL,cAAcC,KAAK7hH,IAC/B4hH,cAAciB,uBAAuB;;;AAMpD,IAGoBC;GACpB5B,cAAc/7G;GAEd,IAAIy8G,gBAAgB,MAChBG,mBAAmB,MACnBgB,oBAAoB,GACpBjB,mBAAmB;GAEvB,MAAMkB,kBAAkB,GAElBC,eAAe;GAErB,MAAMC;IACJ,WAAA1xH,CAAa+lB,QAAQw1F,SAAQ;KAC3BxyB,OAAO91E,OAAOyD,SAASqP,OAAO4rG,qBAAqB5rG,OAAO4rG,mBAAmB;KAE7ElyH,KAAKmyH,SAASvyH,SACdI,KAAK4wH,MAAM5wH,KAAKmyH,OAAOC,aAAahE,UAAUiE,KAAKC;KACnDtyH,KAAKsmB,SAASA,QACdtmB,KAAK87G,SAASA,QACd97G,KAAK6C,UAAU,MACf7C,KAAKuyH,eAAe;KACpBvyH,KAAKwyH,cAAc,MACnBxyH,KAAK8P,aAAa,MAClB9P,KAAKyyH,aAAa,IAClBzyH,KAAK+9G,WAAU;KACf/9G,KAAK2J,UAAU,IACf3J,KAAK0yH,cAAc,GACnB1yH,KAAK2yH,iBAAiBrsG,OAAO4rG;KAC7BlyH,KAAKuxH,mBAAkB,GACvBvxH,KAAK4yH,UAAS,GACd5yH,KAAKkT,SAASlT,KAAKkT,OAAO3J,KAAKvJ;KAE/BA,KAAK6yH,YAAY,GAEjB7yH,KAAKiV,YAAY,IACjBjV,KAAKggB,gBAAgB,IACrBhgB,KAAK8yH,aAAa;KAClB9yH,KAAK+yH,kBAAkBzsG,OAAO0sG;AAChC;IAEA,UAAAhwH,CAAYqF,OAAOrG;KACjBhC,KAAKwyH,cAAcxwH,MACfqG,UAAUrI,KAAKuyH,gBACjBrE,OAAOp7G,aAAa9S,KAAK6C;KACrBwF,SACFrI,KAAK6C,UAAUqrH,OAAOlrH,WAAWiwH,iBAAiB5qH,OAAOrI,OAErDA,KAAK6C,QAAQI,SACfjD,KAAK6C,QAAQI,WAGfjD,KAAK6C,UAAU;KAEjB7C,KAAKuyH,eAAelqH,SACXrI,KAAK6C,WAEV7C,KAAK6C,QAAQwkB,WACfrnB,KAAK6C,QAAQwkB;AAGnB;IAEA,MAAAnU;MACMlT,KAAK87G,OAAO6I,aAAc3kH,KAAK4yH,WAInCtpC,OAAmB,QAAZtpF,KAAK4wH,MACZtnC,OAAwB,QAAjBqnC;KAEP3wH,KAAKmyH,OAAOe,cAAclzH,KAAK4wH,MAE/BtnC,OAhEiB,MAgEVtpF,KAAKwyH,cACRxyH,KAAK6C,WAEH7C,KAAK6C,QAAQwkB,WACfrnB,KAAK6C,QAAQwkB;KAIjBrnB,KAAK4yH,UAAS,GACd5yH,KAAKmiE,QAAQniE,KAAK87G,OAAO/8F,UAAUgxG,YACnC/vH,KAAKmzH;AACP;IAEA,QAAAA;KACE,OAAQnzH,KAAK4yH,UAAU5yH,KAAK4wH,OAAK;MAC/B,MAAMt/G,QAAQtR,KAAK87G,OAAO/8F;MAC1B,IAAc,SAAVzN,OACF;MAEFtR,KAAKmiE,QAAQ7wD;AACf;AACF;IAEA,OAAA6wD,CAAS91B;KACPi9C,OAAmB,QAAZtpF,KAAK4wH,MACZtnC,OAAwB,QAAjBqnC,gBACPrnC,QAAQtpF,KAAK4yH;KAEb,OAAM,QAAQ,UAAa5yH;KAEvBqsC,KAAK5mC,SAASqsH,sBACZjB,oBACFsB,OAAOiB,KAAKvC;KAEdiB,oBAAoD,OAAhCt8G,KAAKO,KAAKs2B,KAAK5mC,SAAS,OAC5CorH,mBAAmBsB,OAAOkB,OAAOvB;KAGnC,IAAItyG,WAAW2yG,OAAOmB,OAAOz/G,QAAQg9G,kBAAkBiB,mBAAmBrxH,IAAI4rC;KAM9E;MACE,IAAIm8D;MAEJ;OACEsoB,mBAAmBzkF,MACnBskF,gBAAgB3wH,MAChBwoG,MAAM2pB,OAAOoB,eAAevzH,KAAK4wH,KAAKC,kBAAkBxkF,KAAK5mC;AAE/D,QAAE,OAAOmP;OAEP,MAAMA;AACR,QAAE;OACA+7G,gBAAgB,MAChBG,mBAAmB;AACrB;MAEA,MAAMrrD,SAAS0sD,OAAOqB,qBAAqBxzH,KAAK4wH,OAAOC;MAEvD,IAAIroB,QAAQ4lB,UAAUqF,MAAMC,gBAC1B1zH,KAAKyjH,UAAUp3E,KAAKvqC,MAAM2jE,eACrB,IAAI+iC,QAAQ4lB,UAAUqF,MAAME,QACjC3zH,KAAK4yH,UAAS;MACd9W,OAAOl/E,QAAQyP,KAAKvqC,MAAM2jE,eACrB,IAAI+iC,QAAQ4lB,UAAUqF,MAAMG,IAAI;OACrC,MAAMhD,MAAMuB,OAAO0B,wBAAwB7zH,KAAK4wH;OAChD,IAAI1uH,UAAU;OAEd,IAAI0uH,KAAK;QACP,MAAM3hG,MAAM,IAAIzP,WAAW2yG,OAAOmB,OAAOz/G,QAAQ+8G,KAAKtvH,QAAQ;QAC9DY,UACE,oDACAoQ,OAAOE,KAAK2/G,OAAOmB,OAAOz/G,QAAQ+8G,KAAK3hG,KAAKpmB,aAC5C;AACJ;OACA,MAAM,IAAIirH,gBAAgB5xH,SAASksH,UAAUqF,MAAMjrB,MAAMn8D,KAAKvqC,MAAM2jE;AACtE;AACF,OAAE,OAAO7wD;MACPkyF,KAAKphG,QAAQo2G,QAAQlnG;AACvB;AACF;IAEA,OAAAlP;KACE4jF,OAAmB,QAAZtpF,KAAK4wH,MACZtnC,OAAwB,QAAjBqnC,gBAEP3wH,KAAKmyH,OAAO4B,YAAY/zH,KAAK4wH;KAC7B5wH,KAAK4wH,MAAM,MAEX1C,OAAOp7G,aAAa9S,KAAK6C,UACzB7C,KAAK6C,UAAU,MACf7C,KAAKuyH,eAAe;KACpBvyH,KAAKwyH,cAAc,MAEnBxyH,KAAK4yH,UAAS;AAChB;IAEA,QAAA7B,CAAUx+C;KACRvyE,KAAKyyH,aAAalgD,IAAI1pE;AACxB;IAEA,cAAAooH;KACE,OAAM,QAAQ,UAAajxH;KAG3B,IAAI87G,OAAO6I,WACT,QAAQ;KAIV,OADgBr+F,OAAOqpG,QAAQrpG,OAAOspG,qBACtC,KACU;AAEZ;IAEA,aAAAuB,CAAe5+C;KACb,MAAMtjD,MAAMjvB,KAAK2J,QAAQlE;KAEd,IAANwpB,MAGHjvB,KAAK2J,QAAQslB,MAAM,KAAK3c,OAAOzD,OAAO,EAAC7O,KAAK2J,QAAQslB,MAAM,IAAIsjD,SAF9DvyE,KAAK2J,QAAQzI,KAAKqxE;KAKpBvyE,KAAKg0H,YAAYzhD,IAAI9sE;AACvB;IAEA,aAAA4rH,CAAe9+C;KACb,IAAItjD,MAAMjvB,KAAK2J,QAAQlE;KAEL,KAAbwpB,MAIHjvB,KAAK2J,QAAQslB,MAAM,KAAK3c,OAAOzD,OAAO,EAAC7O,KAAK2J,QAAQslB,MAAM,IAAIsjD,UAH9DvyE,KAAK2J,QAAQzI,KAAKqxE;KAClBtjD,OAAO;KAKT,MAAM9f,MAAMnP,KAAK2J,QAAQslB,MAAM;KACZ,OAAf9f,IAAI1J,UAAkD,iBAAjC0J,IAAItG,WAAWf,gBACtC9H,KAAKiV,aAAas9D,IAAI1pE,aACE,OAAfsG,IAAI1J,UAAkD,iBAAjC0J,IAAItG,WAAWf,gBAC7C9H,KAAK8yH,cAAcvgD,IAAI1pE,aACC,OAAfsG,IAAI1J,UAAkD,qBAAjC0J,IAAItG,WAAWf,kBAC7C9H,KAAKggB,iBAAiBuyD,IAAI1pE;KAG5B7I,KAAKg0H,YAAYzhD,IAAI9sE;AACvB;IAEA,WAAAuuH,CAAa/kG;KACXjvB,KAAK0yH,eAAezjG,KAChBjvB,KAAK0yH,eAAe1yH,KAAK2yH,kBAC3B7rB,KAAKphG,QAAQ1F,KAAK87G,QAAQ,IAAImY;AAElC;IAEA,SAAAxQ,CAAW7F;KACT,OAAM,SAAS,QAAQ,QAAQ,SAAS,cAAiB59G;KAEzDspF,OAAOy0B;KAEP,MAAMvyG,UAAU8a,OAAOqpG,QAAQrpG,OAAOspG;KACtCtmC,OAAO99E,UAEP89E,QAAQwyB,OAAO6I,YACfr7B,OAAOwyB,WAAWx1F,OAAO4oG;KACzB5lC,QAAQtpF,KAAK4yH,SACbtpC,OAAO99E,QAAQuyG,WAA8B,cAAnBvyG,QAAQ5B,SAElC5J,KAAK8P,aAAa;KAClB9P,KAAKyyH,aAAa,IAClBzyH,KAAKuxH,kBAAkB,MAEvBjoC,OAAOtpF,KAAK2J,QAAQlE,SAAS,KAAM;KACnCzF,KAAK2J,UAAU,IACf3J,KAAK0yH,cAAc,GAEnB5W,OAAOl/E,QAAQghF,OAEf9B,OAAOoY,SAASxuH;KAChBo2G,OAAOoY,WAAW,MAElBpY,OAAOsT,WAAW,MAClBtT,OAAOqT,UAAU,MACjBrT,OACG/qG,eAAe,SAASojH,eACxBpjH,eAAe,YAAYqjH,kBAC3BrjH,eAAe,OAAOsjH,aACtBtjH,eAAe,SAASujH;KAE3BhuG,OAAO4oG,WAAW,MAClB5oG,OAAOqpG,QAAQrpG,OAAOspG,kBAAkB,MACxCtpG,OAAOqnD,KAAK,cAAcrnD,OAAOqiG,OAAO,EAACriG,UAAS,IAAIgpG,mBAAmB;KAEzE;MACE9jH,QAAQi4G,UAAU3zG,YAAYnG,SAASmyG;AACzC,OAAE,OAAOlnG;MACPkyF,KAAKphG,QAAQo2G,QAAQlnG;AACvB;KAEA1B,OAAOoT;AACT;IAEA,iBAAAkrG,CAAmB1hH,YAAYiuG,SAASwT;KACtC,OAAM,QAAQ,QAAQ,SAAS,cAAiBvxH;KAGhD,IAAI87G,OAAO6I,WACT,QAAQ;KAGV,MAAMn5G,UAAU8a,OAAOqpG,QAAQrpG,OAAOspG;KAGtC,KAAKpkH,SACH,QAAQ;KAMV,IAHA89E,QAAQtpF,KAAK+9G,UACbz0B,OAAOtpF,KAAK8P,aAAa,MAEN,QAAfA,YAEF,OADAg3F,KAAKphG,QAAQo2G,QAAQ,IAAI0H,YAAY,gBAAgB1c,KAAKytB,cAAczY;MAChE;KAIV,IAAIiC,YAAYvyG,QAAQuyG,SAEtB,OADAjX,KAAKphG,QAAQo2G,QAAQ,IAAI0H,YAAY,eAAe1c,KAAKytB,cAAczY;MAC/D;KAYV,IATAxyB,OAAOo8B,YAAY1lH,KAAKwyH,aAAaT,kBAErC/xH,KAAK8P,aAAaA;KAClB9P,KAAKuxH,kBACHA,mBAEoB,WAAnB/lH,QAAQ5B,WAAsBkyG,OAAO0Y,WAA6C,iBAAlCx0H,KAAK8yH,WAAWhrH;KAG/D9H,KAAK8P,cAAc,KAAK;MAC1B,MAAM2kH,cAAqC,QAAvBjpH,QAAQipH,cACxBjpH,QAAQipH,cACRnuG,OAAOouG;MACX10H,KAAKgD,WAAWyxH,aAxTD;AAyTjB,YAAWz0H,KAAK6C,WAEV7C,KAAK6C,QAAQwkB,WACfrnB,KAAK6C,QAAQwkB;KAIjB,IAAuB,cAAnB7b,QAAQ5B,QAGV,OAFA0/E,OAA4B,MAArBhjE,OAAO87F,YACdpiH,KAAK+9G,WAAU;KACR;KAGT,IAAIA,SAGF,OAFAz0B,OAA4B,MAArBhjE,OAAO87F,YACdpiH,KAAK+9G,WAAU,GACR;KAOT,IAJAz0B,OAAOtpF,KAAK2J,QAAQlE,SAAS,KAAM,IACnCzF,KAAK2J,UAAU,IACf3J,KAAK0yH,cAAc;KAEf1yH,KAAKuxH,mBAAmBjrG,OAAOquG,cAAc;MAC/C,MAAMC,mBAAmB50H,KAAKiV,YAAY6xF,KAAK+tB,sBAAsB70H,KAAKiV,aAAa;MAEvF,IAAwB,QAApB2/G,kBAA0B;OAC5B,MAAM/xH,UAAU2S,KAAKG,IACnBi/G,mBAAmBtuG,OAAOwuG,6BAC1BxuG,OAAOyuG;OAELlyH,WAAW,IACbi5G,OAAO0Y,WAAU,IAEjBluG,OAAO0uG,0BAA0BnyH;AAErC,aACEyjB,OAAO0uG,0BAA0B1uG,OAAO2uG;AAE5C,YAEEnZ,OAAO0Y,WAAU;KAGnB,MAAM1uD,SAA4E,MAApEt6D,QAAQ+3G,UAAUzzG,YAAYnG,SAAS3J,KAAKkT,QAAQu/G;KAElE,OAAIjnH,QAAQ9K,WACF,IAGa,WAAnB8K,QAAQ5B,UAIRkG,aAAa,MAHR,KAOLgsG,OAAOoZ,eACTpZ,OAAOoZ,cAAa;KACpBhiH,OAAOoT,UAGFw/C,QAAQsoD,UAAUqF,MAAME,SAAS;AAC1C;IAEA,MAAAjC,CAAQn/C;KACN,OAAM,QAAQ,QAAQ,YAAY,mBAAsBvyE;KAExD,IAAI87G,OAAO6I,WACT,QAAQ;KAGV,MAAMn5G,UAAU8a,OAAOqpG,QAAQrpG,OAAOspG;KAatC,OAZAtmC,OAAO99E,UAEP89E,OAAOo8B,YAAY1lH,KAAKwyH,aArYP,IAsYbxyH,KAAK6C,WAEH7C,KAAK6C,QAAQwkB,WACfrnB,KAAK6C,QAAQwkB;KAIjBiiE,OAAOx5E,cAAc,MAEjBijH,mBAAmB,KAAK/yH,KAAK6yH,YAAYtgD,IAAI9sE,SAASstH,mBACxDjsB,KAAKphG,QAAQo2G,QAAQ,IAAIqZ;MACjB,MAGVn1H,KAAK6yH,aAAatgD,IAAI9sE,SAEM,MAAxB+F,QAAQs5G,OAAOvyC,OACV67C,UAAUqF,MAAME,cADzB;AAGF;IAEA,iBAAA/B;KACE,OAAM,QAAQ,QAAQ,YAAY,SAAS,SAAS,eAAe,WAAW,mBAAsB5xH;KAEpG,IAAI87G,OAAO6I,eAAe70G,cAAcyhH,kBACtC,QAAQ;KAGV,IAAIxT,SACF;KAGF,MAAMvyG,UAAU8a,OAAOqpG,QAAQrpG,OAAOspG;KAgBtC,OAfAtmC,OAAO99E,UAEP89E,OAAOx5E,cAAc,MAErB9P,KAAK8P,aAAa,MAClB9P,KAAKyyH,aAAa;KAClBzyH,KAAK6yH,YAAY,GACjB7yH,KAAKggB,gBAAgB,IACrBhgB,KAAKiV,YAAY,IACjBjV,KAAK8yH,aAAa;KAElBxpC,OAAOtpF,KAAK2J,QAAQlE,SAAS,KAAM,IACnCzF,KAAK2J,UAAU,IACf3J,KAAK0yH,cAAc,GAEf5iH,aAAa,WAAjB,IAKuB,WAAnBtE,QAAQ5B,UAAqBoW,iBAAiB6yG,cAAc7wG,SAAShC,eAAe,OACtF8mF,KAAKphG,QAAQo2G,QAAQ,IAAIsZ;MACjB,MAGV5pH,QAAQy9E,WAAWt/E,UAEnB2c,OAAOqpG,QAAQrpG,OAAOspG,kBAAkB;KAEpC9T,OAAOuZ,aACT/rC,OAAOo8B,YAAYp/F,OAAO87F,WAAW,IAErCtb,KAAKphG,QAAQo2G,QAAQ,IAAIwT,mBAAmB;KACrClB,UAAUqF,MAAME,UACbpC,kBAGDzV,OAAO0Y,WAAgC,MAArBluG,OAAO87F,aAKlCtb,KAAKphG,QAAQo2G,QAAQ,IAAIwT,mBAAmB;KACrClB,UAAUqF,MAAME,gBACU,MAAxBrtG,OAAOquG,eAIhB11C,aAAa/rE,QAAQoT,UAErBpT,OAAOoT,YAfPwgF,KAAKphG,QAAQo2G,QAAQ,IAAIwT,mBAAmB;KACrClB,UAAUqF,MAAME;AAgB3B;;GAGF,SAASV,gBAAiBqC;IACxB,OAAM,QAAQ,aAAa,UAAaA;IAGpC9C,gBAAgBT,oBACbjW,OAAOuZ,aAAavZ,OAAOwJ,qBAAqBh/F,OAAO87F,YAAY,OACtE94B,QAAQgsC,OAAO1C,QAAQ;IACvB9rB,KAAKphG,QAAQo2G,QAAQ,IAAIyZ,wBAreV,MAueR/C,cACJ8C,OAAO1C,UACV9rB,KAAKphG,QAAQo2G,QAAQ,IAAI0Z,oBAElBhD,gBAAgBR,iBACzB1oC,OAA4B,MAArBhjE,OAAO87F,aAAmB97F,OAAO0uG;IACxCluB,KAAKphG,QAAQo2G,QAAQ,IAAIwT,mBAAmB;AAEhD;GAEA,SAAS8E;IACP,OAAQ,CAACF,UAAUoB,UAAWt1H;IAC1Bs1H,UACFA,OAAOnC;AAEX;GAEA,SAASgB,cAAev/G;IACtB,OAAQ,CAACw6G,UAAU9oG,QAAQ,CAAC4tG,UAAUoB,UAAWt1H;IAEjDspF,OAAoB,mCAAb10E,IAAI/E,OAEsB,SAA7ByW,OAAOmvG,qBAGQ,iBAAb7gH,IAAI/E,SAAyBylH,OAAOxlH,cAAewlH,OAAO/D,mBAOhEvxH,KAAKmvH,UAAUv6G;IAEf24D,QAAQvtE,KAAKovH,UAAUx6G,QAPnB0gH,OAAO1D;AAQb;GAEA,SAASrkD,QAASjnD,QAAQ1R;IACxB,IACuB,MAArB0R,OAAO87F,aACM,mBAAbxtG,IAAI/E,QACS,qBAAb+E,IAAI/E,MACJ;KAIAy5E,OAAOhjE,OAAOwpG,iBAAiBxpG,OAAOspG;KAEtC,MAAMnlC,WAAWnkE,OAAOqpG,QAAQpuH,OAAO+kB,OAAOspG;KAC9C,KAAK,IAAI7yG,IAAI,GAAGA,IAAI0tE,SAAShlF,QAAQsX,KAAK;MAExC8yG,aAAavpG,QADGmkE,SAAS1tE,IACKnI;AAChC;KACA00E,OAAyB,MAAlBhjE,OAAOovG;AAChB;AACF;GAEA,SAASrB;IACP,OAAQ,CAACH,UAAUoB,QAAQ,CAAClG,UAAU9oG,UAAWtmB;IAEhB,SAA7BsmB,OAAOmvG,sBACLH,OAAOxlH,cAAewlH,OAAO/D,kBAOnCzqB,KAAKphG,QAAQ1F,MAAM,IAAIwjH,YAAY,qBAAqB1c,KAAKytB,cAAcv0H,UALvEs1H,OAAO1D;AAMb;GAEA,SAAS0C;IACP,OAAQ,CAAClF,UAAU9oG,QAAQ,CAAC4tG,UAAUoB,UAAWt1H;IAEhB,SAA7BsmB,OAAOmvG,qBAA8BH,WAClCt1H,KAAKmvH,YAAWmG,OAAOxlH,cAAewlH,OAAO/D,mBAEhD+D,OAAO1D;IAGT5xH,KAAKk0H,SAASxuH,WACd1F,KAAKk0H,WAAW;IAGlB,MAAMt/G,MAAM5U,KAAKmvH,WAAW,IAAI3L,YAAY,UAAU1c,KAAKytB,cAAcv0H;IAIzE,IAFAsmB,OAAO4oG,WAAW,MAEd5oG,OAAOq+F,WAAW;KACpBr7B,OAA4B,MAArBhjE,OAAOopG;KAGd,MAAMjlC,WAAWnkE,OAAOqpG,QAAQpuH,OAAO+kB,OAAOspG;KAC9C,KAAK,IAAI7yG,IAAI,GAAGA,IAAI0tE,SAAShlF,QAAQsX,KAAK;MAExC8yG,aAAavpG,QADGmkE,SAAS1tE,IACKnI;AAChC;AACF,WAAO,IAAI0R,OAAO87F,YAAY,KAAkB,mBAAbxtG,IAAI/E,MAAyB;KAE9D,MAAMrE,UAAU8a,OAAOqpG,QAAQrpG,OAAOspG;KACtCtpG,OAAOqpG,QAAQrpG,OAAOspG,kBAAkB,MAExCC,aAAavpG,QAAQ9a,SAASoJ;AAChC;IAEA0R,OAAOwpG,eAAexpG,OAAOspG,cAE7BtmC,OAA4B,MAArBhjE,OAAO87F,YAEd97F,OAAOqnD,KAAK,cAAcrnD,OAAOqiG,OAAO,EAACriG,UAAS1R;IAElD1B,OAAOoT;AACT;GAEArM,eAAe0iG,QAASr2F;IACtBgjE,QAAQhjE,OAAOqvG,eACfrsC,QAAQhjE,OAAO4oG;IAEf,KAAI,MAAM,UAAU,UAAU,QAAW5oG,OAAOqiG;IAGhD,IAAoB,QAAhBp0G,SAAS,IAAY;KACvB,MAAM83G,MAAM93G,SAASjT,QAAQ;KAE7BgoF,QAAgB,MAAT+iC;KACP,MAAMuJ,KAAKrhH,SAASia,UAAU,GAAG69F;KAEjC/iC,OAAO2kC,IAAI4H,KAAKD,MAChBrhH,WAAWqhH;AACb;IAEAtvG,OAAOqvG,gBAAe,GAElBlH,SAASI,cAAcG,kBACzBP,SAASI,cAAciH,QAAQ;KAC7BC,eAAe;MACb96G;MACA1G;MACAH;MACAM;MACA+nG,YAAYn2F,OAAO0vG;MACnBja,cAAcz1F,OAAO2vG;;KAEvBC,WAAW5vG,OAAO6vG;;IAItB;KACE,MAAMra,eAAe,IAAIlrG,SAAQ,CAACC,SAAS+C;MACzC0S,OAAO6vG,YAAY;OACjBl7G;OACA1G;OACAH;OACAM;OACA+nG,YAAYn2F,OAAO0vG;OACnBja,cAAcz1F,OAAO2vG;UACpB,CAACrhH,KAAKknG;OACHlnG,MACFhB,OAAOgB,OAEP/D,QAAQirG;AACV;AACD;KAGH,IAAIx1F,OAAOq+F,WAET,YADA7d,KAAKphG,QAAQo2G,OAAO9qG,GAAG,UAAS,YAAW,IAAIolH;KAIjD9vG,OAAOqvG,gBAAe,GAEtBrsC,OAAOwyB;KAGP,IADqC,SAAxBA,OAAOua,cACV;MACHhI,yBACHA,wBAAuB,GACvBlrH,QAAQmzH,YAAY,kEAAkE;OACpFzmH,MAAM;;MAIV,MAAM0mH,UAAUpI,MAAMxR,QAAQr2F,OAAOqiG,OAAO;OAC1C6N,kBAAkB,MAAM1a;OACxB2a,0BAA0BnwG,OAAOowG,oBAAoBC;;MAGvDrwG,OAAOmvG,oBAAoB,MAC3Bc,QAAQnH,WAAW9oG,QACnBiwG,QAAQrH,WAAWpT;MACnBya,QAAQvlH,GAAG,SAASi+G,sBACpBsH,QAAQvlH,GAAG,cAAcq+G;MACzBkH,QAAQvlH,GAAG,OAAOu+G,oBAClBgH,QAAQvlH,GAAG,UAAUw+G,gBACrB+G,QAAQvlH,GAAG,SAASsjH;MACpBiC,QAAQtzH,SAERqjB,OAAOmpG,iBAAiB8G,SACxBza,OAAO2T,iBAAiB8G;AAC1B,YACOvG,mBACHA,uBAAuBC,eACvBA,gBAAgB;KAGlBnU,OAAO8a,WAAU,GACjB9a,OAAOuZ,aAAY,GACnBvZ,OAAO0Y,WAAU,GACjB1Y,OAAOoZ,cAAa;KACpBpZ,OAAOoY,WAAW,IAAIjC,OAAO3rG,QAAQw1F,QAAQkU;KAG/ClU,OAAO+a,YAAY,GACnB/a,OAAOgb,gBAAgBxwG,OAAOwwG,eAC9Bhb,OAAOsT,WAAW9oG;KAClBw1F,OAAOqT,UAAU,MAEjBrT,OACG9qG,GAAG,SAASmjH,eACZnjH,GAAG,YAAYojH,kBACfpjH,GAAG,OAAOqjH,aACVrjH,GAAG,SAASsjH;KAEfhuG,OAAO4oG,WAAWpT,QAEd2S,SAASM,UAAUC,kBACrBP,SAASM,UAAU+G,QAAQ;MACzBC,eAAe;OACb96G;OACA1G;OACAH;OACAM;OACA+nG,YAAYn2F,OAAO0vG;OACnBja,cAAcz1F,OAAO2vG;;MAEvBC,WAAW5vG,OAAO6vG;MAClBra;SAGJx1F,OAAOqnD,KAAK,WAAWrnD,OAAOqiG,OAAO,EAACriG;AACxC,MAAE,OAAO1R;KACP,IAAI0R,OAAOq+F,WACT;KAoBF,IAjBAr+F,OAAOqvG,gBAAe,GAElBlH,SAASK,aAAaE,kBACxBP,SAASK,aAAagH,QAAQ;MAC5BC,eAAe;OACb96G;OACA1G;OACAH;OACAM;OACA+nG,YAAYn2F,OAAO0vG;OACnBja,cAAcz1F,OAAO2vG;;MAEvBC,WAAW5vG,OAAO6vG;MAClBlwH,OAAO2O;SAIM,mCAAbA,IAAI/E,MAEN,KADAy5E,OAA4B,MAArBhjE,OAAO87F,YACP97F,OAAOopG,YAAY,KAAKppG,OAAOqpG,QAAQrpG,OAAOwpG,cAAcrT,eAAen2F,OAAO0vG,gBAAc;MACrG,MAAMxqH,UAAU8a,OAAOqpG,QAAQrpG,OAAOwpG;MACtCD,aAAavpG,QAAQ9a,SAASoJ;AAChC,YAEA24D,QAAQjnD,QAAQ1R;KAGlB0R,OAAOqnD,KAAK,mBAAmBrnD,OAAOqiG,OAAO,EAACriG,UAAS1R;AACzD;IAEA1B,OAAOoT;AACT;GAEA,SAASywG,UAAWzwG;IAClBA,OAAO2iG,cAAc,GACrB3iG,OAAOqnD,KAAK,SAASrnD,OAAOqiG,OAAO,EAACriG;AACtC;GAEA,SAASpT,OAAQoT,QAAQ0wG;IACG,MAAtB1wG,OAAO2wG,eAIX3wG,OAAO2wG,aAAa,GAYtB,SAAkB3wG,QAAQ0wG;KACxB,SAAa;MACX,IAAI1wG,OAAOq+F,WAET,YADAr7B,OAA4B,MAArBhjE,OAAOopG;MAIhB,IAAIppG,OAAOkoG,oBAAoBloG,OAAOovG,QAGpC,OAFApvG,OAAOkoG,yBACPloG,OAAOkoG,kBAAkB;MAI3B,MAAM1S,SAASx1F,OAAO4oG;MAEtB,IAAIpT,WAAWA,OAAO6I,aAAqC,SAAxB7I,OAAOua,cAWxC,IAVsB,MAAlB/vG,OAAOovG,UACJ5Z,OAAO8a,WAAW9a,OAAO74G,UAC5B64G,OAAO74G;MACP64G,OAAO8a,WAAU,KAEV9a,OAAO8a,WAAW9a,OAAOmG,QAClCnG,OAAOmG,OACPnG,OAAO8a,WAAU;MAGG,MAAlBtwG,OAAOovG,QACL5Z,OAAOoY,SAAS1B,gBAAgBR,gBAClClW,OAAOoY,SAASlxH,WAAWsjB,OAAO0uG,yBAAyBhD,oBAExD,IAAI1rG,OAAO87F,YAAY,KAAKtG,OAAOoY,SAASpkH,aAAa,OAC1DgsG,OAAOoY,SAAS1B,gBAAgBT,iBAAiB;OACnD,MAAMvmH,UAAU8a,OAAOqpG,QAAQrpG,OAAOspG,eAChCsH,iBAA2C,QAA1B1rH,QAAQ0rH,iBAC3B1rH,QAAQ0rH,iBACR5wG,OAAO6wG;OACXrb,OAAOoY,SAASlxH,WAAWk0H,gBAAgBnF;AAC7C;MAIJ,IAAIzrG,OAAO8wG,QACT9wG,OAAO2iG,cAAc,QAChB,IAA2B,MAAvB3iG,OAAO2iG,aAAmB;OAC/B+N,QACF1wG,OAAO2iG,cAAc,GACrB9lH,QAAQ66G,SAAS+Y,WAAWzwG,WAE5BywG,UAAUzwG;OAEZ;AACF;MAEA,IAAyB,MAArBA,OAAOopG,WACT;MAGF,IAAIppG,OAAO87F,cAAc97F,OAAOquG,gBAAgB,IAC9C;MAGF,MAAMnpH,UAAU8a,OAAOqpG,QAAQrpG,OAAOwpG;MAEtC,IAA8B,aAA1BxpG,OAAOqiG,MAAMv0G,YAAyBkS,OAAO0vG,iBAAiBxqH,QAAQixG,YAAY;OACpF,IAAIn2F,OAAO87F,YAAY,GACrB;OAKF,IAFA97F,OAAO0vG,eAAexqH,QAAQixG,YAE1BX,UAAUA,OAAOW,eAAejxG,QAAQixG,YAE1C,YADA3V,KAAKphG,QAAQo2G,QAAQ,IAAIwT,mBAAmB;AAGhD;MAEA,IAAIhpG,OAAOqvG,cACT;MAGF,KAAK7Z,WAAWx1F,OAAOmpG,gBAErB,YADA9S,QAAQr2F;MAIV,IAAIw1F,OAAO6I,aAAa7I,OAAOuZ,aAAavZ,OAAO0Y,WAAW1Y,OAAOoZ,YACnE;MAGF,IAAI5uG,OAAO87F,YAAY,MAAM52G,QAAQ6rH,YAInC;MAGF,IAAI/wG,OAAO87F,YAAY,MAAM52G,QAAQuyG,WAA8B,cAAnBvyG,QAAQ5B,SAItD;MAGF,IAAI0c,OAAO87F,YAAY,KAAuC,MAAlCtb,KAAKz0F,WAAW7G,QAAQ9B,UACjDo9F,KAAKztE,SAAS7tB,QAAQ9B,SAASo9F,KAAKwwB,gBAAgB9rH,QAAQ9B,QAS7D;OAGG8B,QAAQ9K,WAAW4D,MAAMgiB,QAAQ9a,WACpC8a,OAAOwpG,iBAEPxpG,OAAOqpG,QAAQpuH,OAAO+kB,OAAOwpG,cAAc;AAE/C;AACF,KApIEyH,CAAQjxG,QAAQ0wG,OAChB1wG,OAAO2wG,aAAa,GAEhB3wG,OAAOspG,eAAe,QACxBtpG,OAAOqpG,QAAQpuH,OAAO,GAAG+kB,OAAOspG;IAChCtpG,OAAOwpG,gBAAgBxpG,OAAOspG,cAC9BtpG,OAAOspG,eAAe;AAE1B;GA+HA,SAAS4H,wBAAyB5tH;IAChC,OAAkB,UAAXA,UAA+B,WAAXA,UAAgC,cAAXA,UAAmC,YAAXA,UAAiC,cAAXA;AAChG;GAEA,SAAStF,MAAOgiB,QAAQ9a;IACtB,IAAiC,SAA7B8a,OAAOmvG,mBAET,YAkKJ,SAAkBnvG,QAAQiwG,SAAS/qH;KACjC,OAAM,MAAM,QAAQ,MAAM,MAAM,SAAS,gBAAgB,QAAU7B,SAAS8tH,cAAejsH;KAE3F,IAAI7B,SA2BA+G;KA1BgC/G,UAAV,mBAAf8tH,aAAmCvX,QAAQwX,mBAAmBD,WAAW3yH,UACrE2yH;KAEf,IAAI1Z,SAEF,OADA8R,aAAavpG,QAAQ9a,SAAS,IAAI9J,MAAM;MACjC;KAGT;MAEE8J,QAAQmyG,WAAW/oG;OACbpJ,QAAQ9K,WAAW8K,QAAQimE,aAI/Bo+C,aAAavpG,QAAQ9a,SAASoJ,OAAO,IAAImuG;AAAqB;AAElE,OAAE,OAAOnuG;MACPi7G,aAAavpG,QAAQ9a,SAASoJ;AAChC;KAEA,IAAIpJ,QAAQ9K,SACV,QAAO;KAKT,MAAMi3H,UAAUrxG,OAAOowG;KAKvB,IAHA/sH,QAAQiuH,0BAA0B38G,QAAQqL,OAAOuxG,QACjDluH,QAAQmuH,uBAAuBluH;KAEhB,cAAXA,QAwBF,OAvBA2sH,QAAQtU,OAKRvxG,SAAS6lH,QAAQ/qH,QAAQ7B,SAAS;MAAEouH,YAAW;MAAOn2H;SAElD8O,OAAO41C,OAAO51C,OAAOurG,WACvBzwG,QAAQi4G,UAAU,MAAM,MAAM/yG,WAC5BinH,QAAQK,eAEVtnH,OAAOiE,KAAK,UAAS;MACnBnJ,QAAQi4G,UAAU,MAAM,MAAM/yG,WAC5BinH,QAAQK;AAAAA,UAIdtnH,OAAOiE,KAAK,UAAS;MACnBgjH,QAAQK,eAAe,GAEK,MAAxBL,QAAQK,eAAmBzB,QAAQtzH;AAAM,WAGxC;KAMT0G,QAAQsuH,qBAAqBzjH,MAC7B7K,QAAQuuH,uBAAuB;KAW/B,MAAMC,iBACO,UAAXvuH,UACW,WAAXA,UACW,YAAXA;KAGEF,QAA6B,qBAAdA,KAAKqV,QAEtBrV,KAAKqV,KAAK;KAGZ,IAAIiB,gBAAgB8mF,KAAKz0F,WAAW3I;KAEf,QAAjBsW,kBACFA,gBAAgBxU,QAAQwU;KAGJ,MAAlBA,iBAAwBm4G,mBAM1Bn4G,gBAAgB;KAKlB,IAAIw3G,wBAAwB5tH,WAAWoW,gBAAgB,KAA8B,QAAzBxU,QAAQwU,iBAAyBxU,QAAQwU,kBAAkBA,eAAe;MACpI,IAAIsG,OAAO8xG,uBAET,OADAvI,aAAavpG,QAAQ9a,SAAS,IAAI6sH;OAC3B;MAGTl1H,QAAQmzH,YAAY,IAAI+B;AAC1B;KAEqB,QAAjBr4G,kBACFspE,OAAO5/E,MAAM;KACbC,QAAQ2uH,+BAA+B,GAAGt4G;KAG5Cu2G,QAAQtU;KAER,MAAMsW,kBAA6B,UAAX3uH,UAA+B,WAAXA;KACxC4uH,kBACF7uH,QAAQ8uH,uBAAuB,gBAC/B/nH,SAAS6lH,QAAQ/qH,QAAQ7B,SAAS;MAAEouH,WAAWQ;MAAiB32H;SAEhE8O,OAAOiE,KAAK,YAAY+jH,iBAExBhoH,SAAS6lH,QAAQ/qH,QAAQ7B,SAAS;MAChCouH,WAAWQ;MACX32H;SAEF82H;KAiEF,SA7DEf,QAAQK,aAEVtnH,OAAOiE,KAAK,aAAYhL;MACtB,OAAQ,CAACgvH,sBAAsB7oH,eAAe8oH,eAAgBjvH;OAE6B,MAAvF6B,QAAQ+3G,UAAU/vG,OAAO1D,aAAa8oH,aAAaloH,OAAOwC,OAAO3J,KAAKmH,SAAS,OACjFA,OAAOo1D;AACT,UAGFp1D,OAAOiE,KAAK,QAAO;MACjBnJ,QAAQy9E,WAAW;AAAE,UAGvBv4E,OAAOM,GAAG,SAASM;OACa,MAA1B9F,QAAQs5G,OAAOxzG,UACjBZ,OAAOo1D;AACT,UAGFp1D,OAAOiE,KAAK,UAAS;MACnBgjH,QAAQK,eAAe,GAEK,MAAxBL,QAAQK,eACVzB,QAAQtzH;AACV,UAGFyN,OAAOiE,KAAK,UAAS,SAAUC;OACzB0R,OAAOmpG,kBAAmBnpG,OAAOmpG,eAAe9K,aAAc3kH,KAAKmpF,UAAWnpF,KAAK2kH,cACrFgT,QAAQv3G,WAAW;MACnB0mF,KAAKphG,QAAQgL,QAAQkE;AAEzB,UAEAlE,OAAOiE,KAAK,eAAc,CAAC3S,MAAM6N;MAC/B,MAAM+E,MAAM,IAAI06G,mBAAmB,wCAAwCttH,cAAc6N;MACzFggH,aAAavpG,QAAQ9a,SAASoJ,OAE1B0R,OAAOmpG,kBAAmBnpG,OAAOmpG,eAAe9K,aAAc3kH,KAAKmpF,UAAWnpF,KAAK2kH,cACrFgT,QAAQv3G,WAAW;MACnB0mF,KAAKphG,QAAQgL,QAAQkE;AACvB,WAmBK;KAEP,SAAS8jH;MAEFhvH,OAEMo9F,KAAKv0F,SAAS7I,SACvB4/E,OAAOtpE,kBAAkBtW,KAAKwH,YAAY;MAC1CR,OAAOmoH,QACPnoH,OAAOpM,MAAMoF,OACbgH,OAAOooH,UACPpoH,OAAOiC,OACPnH,QAAQutH,WAAWrvH;MACnB8B,QAAQwtH,mBACClyB,KAAKmyB,WAAWvvH,QACE,qBAAhBA,KAAKgH,SACdwoH,cAAc;OACZ5yG;OACA9a;OACAwU;OACAm5G,UAAUzoH;OACVynH;OACAzuH,MAAMA,KAAKgH;OACXorG,QAAQx1F,OAAO4oG;OACfn8G,QAAQ;WAGVqmH,UAAU;OACR1vH;OACA4c;OACA9a;OACAwU;OACAm4G;OACAgB,UAAUzoH;OACVqC,QAAQ;OACR+oG,QAAQx1F,OAAO4oG;WAGVpoB,KAAKztE,SAAS3vB,QACvB2vH,YAAY;OACV3vH;OACA4c;OACA9a;OACAwU;OACAm4G;OACArc,QAAQx1F,OAAO4oG;OACfiK,UAAUzoH;OACVqC,QAAQ;WAED+zF,KAAKwyB,WAAW5vH,QACzBwvH,cAAc;OACZxvH;OACA4c;OACA9a;OACAwU;OACAm4G;OACAplH,QAAQ;OACRomH,UAAUzoH;OACVorG,QAAQx1F,OAAO4oG;WAGjB5lC,QAAO,KAxDP99E,QAAQwtH;AA0DZ;AACF,KAzaIO,CAAQjzG,QAAQA,OAAOmpG,gBAAgBjkH;IAIzC,OAAM,MAAM,QAAQ,MAAM,MAAM,SAAS,SAAS,UAAU,SAAYA,SAWlE2sH,iBACO,UAAXvuH,UACW,WAAXA,UACW,YAAXA;IAGEF,QAA6B,qBAAdA,KAAKqV,QAEtBrV,KAAKqV,KAAK;IAGZ,MAAM1M,aAAay0F,KAAKz0F,WAAW3I;IAEnC,IAAIsW,gBAAgB3N;IAiBpB,IAfsB,SAAlB2N,kBACFA,gBAAgBxU,QAAQwU,gBAGJ,MAAlBA,iBAAwBm4G,mBAM1Bn4G,gBAAgB;IAKdw3G,wBAAwB5tH,WAAWoW,gBAAgB,KAA+B,SAA1BxU,QAAQwU,iBAA0BxU,QAAQwU,kBAAkBA,eAAe;KACrI,IAAIsG,OAAO8xG,uBAET,OADAvI,aAAavpG,QAAQ9a,SAAS,IAAI6sH;MAC3B;KAGTl1H,QAAQmzH,YAAY,IAAI+B;AAC1B;IAEA,MAAMvc,SAASx1F,OAAO4oG;IAEtB;KACE1jH,QAAQmyG,WAAW/oG;MACbpJ,QAAQ9K,WAAW8K,QAAQimE,cAI/Bo+C,aAAavpG,QAAQ9a,SAASoJ,OAAO,IAAImuG;MAEzCjc,KAAKphG,QAAQo2G,QAAQ,IAAIwT,mBAAmB;AAAU;AAE1D,MAAE,OAAO16G;KACPi7G,aAAavpG,QAAQ9a,SAASoJ;AAChC;IAEA,IAAIpJ,QAAQ9K,SACV,QAAO;IAGM,WAAXkJ,WAKFkyG,OAAO0Y,WAAU,KAGfzW,WAAsB,cAAXn0G,YAIbkyG,OAAO0Y,WAAU;IAGN,QAATlrB,UACFwS,OAAO0Y,UAAUlrB,QAGfhjF,OAAOwwG,iBAAiBhb,OAAO+a,eAAevwG,OAAOwwG,kBACvDhb,OAAO0Y,WAAU;IAGfgF,aACF1d,OAAOoZ,cAAa;IAGtB,IAAIniH,SAAS,GAAGnJ,UAAU4K;IA2D1B,OAxDEzB,UADkB,mBAATkI,OACC,SAASA,aAETqL,OAAOmzG;IAGf1b,UACFhrG,UAAU,mCAAmCgrG,gBACpCz3F,OAAOquG,iBAAiB7Y,OAAO0Y,UACxCzhH,UAAU,+BAEVA,UAAU;IAGRpJ,YACFoJ,UAAUpJ,UAGR8kH,SAASE,YAAYK,kBACvBP,SAASE,YAAYmH,QAAQ;KAAEtqH;KAAS7B,SAASoJ;KAAQ+oG;QAItDpyG,QAAuB,MAAf2I,aAQFy0F,KAAKv0F,SAAS7I,SACvB4/E,OAAOtpE,kBAAkBtW,KAAKwH,YAAY;IAE1C4qG,OAAO+c,QACP/c,OAAOx3G,MAAM,GAAGyO,yBAAyBiN,yBAAyB;IAClE87F,OAAOx3G,MAAMoF,OACboyG,OAAOgd,UACPttH,QAAQutH,WAAWrvH,OACnB8B,QAAQwtH;IACHb,mBACHrc,OAAO0Y,WAAU,MAEV1tB,KAAKmyB,WAAWvvH,QACE,qBAAhBA,KAAKgH,SACdwoH,cAAc;KAAExvH,MAAMA,KAAKgH;KAAU4V;KAAQ9a;KAASswG;KAAQ97F;KAAejN;KAAQolH;SAErFiB,UAAU;KAAE1vH;KAAM4c;KAAQ9a;KAASswG;KAAQ97F;KAAejN;KAAQolH;SAE3DrxB,KAAKztE,SAAS3vB,QACvB2vH,YAAY;KAAE3vH;KAAM4c;KAAQ9a;KAASswG;KAAQ97F;KAAejN;KAAQolH;SAC3DrxB,KAAKwyB,WAAW5vH,QACzBwvH,cAAc;KAAExvH;KAAM4c;KAAQ9a;KAASswG;KAAQ97F;KAAejN;KAAQolH;SAEtE7uC,QAAO,MA9Be,MAAlBtpE,gBACF87F,OAAOx3G,MAAM,GAAGyO,mCAAmC,aAEnDu2E,OAAyB,SAAlBtpE,eAAwB;IAC/B87F,OAAOx3G,MAAM,GAAGyO,cAAc,YAEhCvH,QAAQwtH,mBA2BH;AACT;GA0QA,SAASK,aAAa,UAAU,MAAM,QAAQ,SAAS,QAAQ,eAAe,QAAQ;IAGpF,IAFA/vC,OAAyB,MAAlBtpE,iBAA4C,MAArBsG,OAAO87F,WAAiB;IAErB,SAA7B97F,OAAOmvG,mBAA4B;KAErC,MAAMjlH,OAAO3E,SACXnC,MACAyvH,WACCvkH;MACKA,OACFkyF,KAAKphG,QAAQgE,MAAMkL,MACnBkyF,KAAKphG,QAAQyzH,UAAUvkH,QAEvBpJ,QAAQwtH;AACV;KAUJ,SAASU,WAAYpoH;MACnB9F,QAAQutH,WAAWznH;AACrB;KAEA,OAVAd,KAAKQ,GAAG,QAAQ0oH,kBAChBlpH,KAAKmE,KAAK,QAAO;MACfnE,KAAKO,eAAe,QAAQ2oH,aAC5B5yB,KAAKphG,QAAQ8K;AAAI;AAQrB;IAEA,IAAI60G,YAAW;IAEf,MAAMj1B,SAAS,IAAIupC,YAAY;KAAE7d;KAAQtwG;KAASwU;KAAesG;KAAQ6xG;KAAgBplH;QAEnF+xG,SAAS,SAAUxzG;KACvB,KAAI+zG,UAIJ;OACOj1B,OAAO9rF,MAAMgN,UAAUtR,KAAK8lE,SAC/B9lE,KAAK8lE;AAET,OAAE,OAAOlxD;MACPkyF,KAAKphG,QAAQ1F,MAAM4U;AACrB;AACF,OACMglH,UAAU;KACVvU,YAIA37G,KAAKwJ,UACPxJ,KAAKwJ;AAET,OACMsO,UAAU;KACd,IAAI6jG,UACF;KAEF,MAAMzwG,MAAM,IAAImuG;KAChBc,gBAAe,MAAMgW,WAAWjlH;AAClC,OACMilH,aAAa,SAAUjlH;KAC3B,KAAIywG,UAAJ;MAkBA,IAdAA,YAAW,GAEX/7B,OAAOwyB,OAAO6I,aAAc7I,OAAOuZ,aAAa/uG,OAAO87F,aAAa;MAEpEtG,OACGpjC,IAAI,SAASkhD,SACblhD,IAAI,SAASmhD,aAEhBnwH,KACGqH,eAAe,QAAQ+zG,QACvB/zG,eAAe,OAAO8oH,YACtB9oH,eAAe,SAAS8oH,YACxB9oH,eAAe,SAASyQ;OAEtB5M,KACH;OACEw7E,OAAOz9E;AACT,QAAE,OAAO25F;OACP13F,MAAM03F;AACR;MAGFlc,OAAO1qF,QAAQkP,OAEXA,OAAqB,mBAAbA,IAAI/E,QAA2C,YAAhB+E,IAAI1S,UAG7C4kG,KAAKphG,QAAQgE,QAFbo9F,KAAKphG,QAAQgE,MAAMkL;AA3BrB;AA+BF;IAEAlL,KACGsH,GAAG,QAAQ8zG,QACX9zG,GAAG,OAAO6oH,YACV7oH,GAAG,SAAS6oH,YACZ7oH,GAAG,SAASwQ;IAEX9X,KAAKwJ,UACPxJ,KAAKwJ,UAGP4oG,OACG9qG,GAAG,SAAS4oH,SACZ5oH,GAAG,SAAS6oH;AACjB;GAEA5/G,eAAem/G,WAAW,UAAU,MAAM,QAAQ,SAAS,QAAQ,eAAe,QAAQ;IACxF9vC,OAAOtpE,kBAAkBtW,KAAK8D,MAAM;IAEpC,MAAMssH,OAAoC,SAA7BxzG,OAAOmvG;IACpB;KACE,IAAqB,QAAjBz1G,iBAAyBA,kBAAkBtW,KAAK8D,MAClD,MAAM,IAAI6qH;KAGZ,MAAMxkH,SAASvB,OAAOE,WAAW9I,KAAKw9G;KAElC4S,QACFX,SAASN,QACTM,SAAS70H,MAAMuP,SACfslH,SAASL,aAEThd,OAAO+c;KACP/c,OAAOx3G,MAAM,GAAGyO,yBAAyBiN,yBAAyB,WAClE87F,OAAOx3G,MAAMuP;KACbioG,OAAOgd,WAGTttH,QAAQutH,WAAWllH,SACnBrI,QAAQwtH,iBAEHb,mBACHrc,OAAO0Y,WAAU;KAGnBthH,OAAOoT;AACT,MAAE,OAAO1R;KACPkyF,KAAKphG,QAAQo0H,OAAOX,WAAWrd,QAAQlnG;AACzC;AACF;GAEAqF,eAAei/G,eAAe,UAAU,MAAM,QAAQ,SAAS,QAAQ,eAAe,QAAQ;IAC5F5vC,OAAyB,MAAlBtpE,iBAA4C,MAArBsG,OAAO87F,WAAiB;IAEtD,IAAI5wG,WAAW;IACf,SAASooH;KACP,IAAIpoH,UAAU;MACZ,MAAM6qG,KAAK7qG;MACXA,WAAW,MACX6qG;AACF;AACF;IAEA,MAAM0d,eAAe,MAAM,IAAInpH,SAAQ,CAACC,SAAS+C;KAC/C01E,OAAoB,SAAb93E,WAEHsqG,OAAOqT,UACTv7G,OAAOkoG,OAAOqT,WAEd39G,WAAWX;AACb;IAGF,IAAiC,SAA7ByV,OAAOmvG,mBAA4B;KACrC0D,SACGnoH,GAAG,SAAS4oH,SACZ5oH,GAAG,SAAS4oH;KAEf;MAEE,WAAW,MAAMtoH,SAAS5H,MAAM;OAC9B,IAAIoyG,OAAOqT,SACT,MAAMrT,OAAOqT;OAGf,MAAMv8G,MAAMumH,SAAS70H,MAAMgN;OAC3B9F,QAAQutH,WAAWznH,QACdsB,aACGmnH;AAEV;AACF,OAAE,OAAOnlH;MACPukH,SAASzzH,QAAQkP;AACnB,OAAE;MACApJ,QAAQwtH,iBACRG,SAASxmH,OACTwmH,SACGzgD,IAAI,SAASkhD,SACblhD,IAAI,SAASkhD;AAClB;KAEA;AACF;IAEA9d,OACG9qG,GAAG,SAAS4oH,SACZ5oH,GAAG,SAAS4oH;IAEf,MAAMxpC,SAAS,IAAIupC,YAAY;KAAE7d;KAAQtwG;KAASwU;KAAesG;KAAQ6xG;KAAgBplH;;IACzF;KAEE,WAAW,MAAMzB,SAAS5H,MAAM;MAC9B,IAAIoyG,OAAOqT,SACT,MAAMrT,OAAOqT;MAGV/+B,OAAO9rF,MAAMgN,gBACVyoH;AAEV;KAEA3pC,OAAOz9E;AACT,MAAE,OAAOiC;KACPw7E,OAAO1qF,QAAQkP;AACjB,MAAE;KACAknG,OACGpjC,IAAI,SAASkhD,SACblhD,IAAI,SAASkhD;AAClB;AACF;GAEA,MAAMD;IACJ,WAAAp5H,EAAa,QAAQ,SAAS,eAAe,QAAQ,gBAAgB;KACnEP,KAAK87G,SAASA,QACd97G,KAAKwL,UAAUA,SACfxL,KAAKggB,gBAAgBA;KACrBhgB,KAAKsmB,SAASA,QACdtmB,KAAKg6H,eAAe,GACpBh6H,KAAKm4H,iBAAiBA;KACtBn4H,KAAK+S,SAASA,QAEd+oG,OAAOuZ,aAAY;AACrB;IAEA,KAAA/wH,CAAOgN;KACL,OAAM,QAAQ,SAAS,eAAe,QAAQ,cAAc,gBAAgB,UAAatR;KAEzF,IAAI87G,OAAOqT,SACT,MAAMrT,OAAOqT;KAGf,IAAIrT,OAAO6I,WACT,QAAO;KAGT,MAAM11F,MAAM3c,OAAOpB,WAAWI;KAC9B,KAAK2d,KACH,QAAO;KAIT,IAAsB,SAAlBjP,iBAA0Bg6G,eAAe/qG,MAAMjP,eAAe;MAChE,IAAIsG,OAAO8xG,uBACT,MAAM,IAAIC;MAGZl1H,QAAQmzH,YAAY,IAAI+B;AAC1B;KAEAvc,OAAO+c,QAEc,MAAjBmB,iBACG7B,mBACHrc,OAAO0Y,WAAU,IAGG,SAAlBx0G,gBACF87F,OAAOx3G,MAAM,GAAGyO,wCAAwC,YAExD+oG,OAAOx3G,MAAM,GAAGyO,yBAAyBiN,yBAAyB;KAIhD,SAAlBA,iBACF87F,OAAOx3G,MAAM,OAAO2qB,IAAIpmB,SAAS,WAAW;KAG9C7I,KAAKg6H,gBAAgB/qG;KAErB,MAAMu5E,MAAMsT,OAAOx3G,MAAMgN;KAezB,OAbAwqG,OAAOgd,UAEPttH,QAAQutH,WAAWznH,QAEdk3F,OACCsT,OAAOoY,SAASrxH,WAAWi5G,OAAOoY,SAAS1B,gBAAgBT,mBAEzDjW,OAAOoY,SAASrxH,QAAQwkB,WAC1By0F,OAAOoY,SAASrxH,QAAQwkB;KAKvBmhF;AACT;IAEA,GAAA71F;KACE,OAAM,QAAQ,eAAe,QAAQ,cAAc,gBAAgB,QAAQ,WAAc3S;KAKzF,IAJAwL,QAAQwtH,iBAERld,OAAOuZ,aAAY,GAEfvZ,OAAOqT,SACT,MAAMrT,OAAOqT;KAGf,KAAIrT,OAAO6I,WAAX;MAmBA,IAfqB,MAAjBqV,eACE7B,iBAMFrc,OAAOx3G,MAAM,GAAGyO,mCAAmC,YAEnD+oG,OAAOx3G,MAAM,GAAGyO,cAAc,YAEL,SAAlBiN,iBACT87F,OAAOx3G,MAAM,iBAAiB;MAGV,SAAlB0b,iBAA0Bg6G,iBAAiBh6G,eAAe;OAC5D,IAAIsG,OAAO8xG,uBACT,MAAM,IAAIC;OAEVl1H,QAAQmzH,YAAY,IAAI+B;AAE5B;MAEIvc,OAAOoY,SAASrxH,WAAWi5G,OAAOoY,SAAS1B,gBAAgBT,mBAEzDjW,OAAOoY,SAASrxH,QAAQwkB,WAC1By0F,OAAOoY,SAASrxH,QAAQwkB;MAI5BnU,OAAOoT;AAhCP;AAiCF;IAEA,OAAA5gB,CAASkP;KACP,OAAM,QAAQ,UAAa5U;KAE3B87G,OAAOuZ,aAAY,GAEfzgH,QACF00E,OAAOhjE,OAAO87F,aAAa,GAAG;KAC9Btb,KAAKphG,QAAQo2G,QAAQlnG;AAEzB;;GAGF,SAASi7G,aAAcvpG,QAAQ9a,SAASoJ;IACtC;KACEpJ,QAAQ+hE,QAAQ34D,MAChB00E,OAAO99E,QAAQ9K;AACjB,MAAE,OAAOkU;KACP0R,OAAOqnD,KAAK,SAAS/4D;AACvB;AACF;GAEA/U,OAAOD,UA1mEP,cAAqBqhH;IAMnB,WAAA1gH,CAAakJ,MAAK,cACJ,eACC,gBACC,eACD,gBACC,gBACA,aACH,aACA,WACF,kBACO,qBACG,qBACA,2BACM,YACf,YACA,KACP,qBACgB,mBACF,iBACF,SACR,sBACa,cACR,iBACG,kBACC,gCACc,SAEvB,wBAEL,CAAC;KAGH,IAFAtH,cAEkBmB,MAAd2R,WACF,MAAM,IAAImqG,qBAAqB;KAGjC,SAAsB97G,MAAlB22H,eACF,MAAM,IAAI7a,qBAAqB;KAGjC,SAAuB97G,MAAnB42H,gBACF,MAAM,IAAI9a,qBAAqB;KAGjC,SAAoB97G,MAAhB62H,aACF,MAAM,IAAI/a,qBAAqB;KAGjC,SAA4B97G,MAAxB82H,qBACF,MAAM,IAAIhb,qBAAqB;KAGjC,IAAqB,QAAjBib,kBAA0B7mH,OAAOyD,SAASojH,gBAC5C,MAAM,IAAIjb,qBAAqB;KAGjC,IAAkB,QAAdkb,cAA4C,mBAAfA,YAC/B,MAAM,IAAIlb,qBAAqB;KAGjC,IAAsB,QAAlBmb,oBAA4B/mH,OAAOyD,SAASsjH,mBAAmBA,iBAAiB,IAClF,MAAM,IAAInb,qBAAqB;KAGjC,IAAwB,QAApBwV,sBAA8BphH,OAAOyD,SAAS29G,qBAAqBA,oBAAoB,IACzF,MAAM,IAAIxV,qBAAqB;KAGjC,IAA2B,QAAvBob,yBAAiChnH,OAAOyD,SAASujH,wBAAwBA,uBAAuB,IAClG,MAAM,IAAIpb,qBAAqB;KAGjC,IAAiC,QAA7Bqb,8BAAsCjnH,OAAOyD,SAASwjH,4BACxD,MAAM,IAAIrb,qBAAqB;KAGjC,IAAsB,QAAlB8X,oBAA4B1jH,OAAO8qE,UAAU44C,mBAAmBA,iBAAiB,IACnF,MAAM,IAAI9X,qBAAqB;KAGjC,IAAmB,QAAfqV,iBAAyBjhH,OAAO8qE,UAAUm2C,gBAAgBA,cAAc,IAC1E,MAAM,IAAIrV,qBAAqB;KAGjC,IAAe,QAAXzC,WAAsC,qBAAZA,WAA6C,mBAAZA,SAC7D,MAAM,IAAIyC,qBAAqB;KAGjC,IAAuB,QAAnBwC,qBAA6BpuG,OAAO8qE,UAAUsjC,oBAAoBA,kBAAkB,IACtF,MAAM,IAAIxC,qBAAqB;KAGjC,IAA4B,QAAxBsb,0BAAkClnH,OAAO8qE,UAAUo8C,yBAAyBA,uBAAuB,IACrG,MAAM,IAAItb,qBAAqB;KAGjC,IAAoB,QAAhBrD,iBAAiD,mBAAjBA,gBAAwD,MAA3BkS,IAAI4H,KAAK9Z,gBACxE,MAAM,IAAIqD,qBAAqB;KAGjC,IAAuB,QAAnB2T,qBAA6Bv/G,OAAO8qE,UAAUy0C,oBAAoBA,mBAAmB,IACvF,MAAM,IAAI3T,qBAAqB;KAGjC,IACoC,QAAlCub,oCACEnnH,OAAO8qE,UAAUq8C,mCAAmCA,kCAAkC,IAExF,MAAM,IAAIvb,qBAAqB;KAIjC,IAAe,QAAXwb,WAAsC,oBAAZA,SAC5B,MAAM,IAAIxb,qBAAqB;KAGjC,IAA4B,QAAxBuX,yBAAiE,mBAAzBA,wBAAqCA,uBAAuB,IACtG,MAAM,IAAIvX,qBAAqB;KAGV,qBAAZzC,YACTA,UAAU6B,eAAe;SACpBpD;MACHyf;MACAD;MACAN;MACAz3H,SAAS03H;SACLzzB,KAAKg0B,2BAA2BC,mBAAmB;OAAEA;OAAkBJ;eAAmCr3H;SAC3Gq5G;UAIP38G,KAAK6hH,iBAAiBl6B,gBAAgBA,aAAau2B,UAAU17G,MAAMC,QAAQklF,aAAau2B,UACpFv2B,aAAau2B,SACb,EAACe,0BAA0B;MAAE2C;WACjC5hH,KAAK2oH,QAAQ7hB,KAAKuY,YAAY51G,MAC9BzJ,KAAKm2H,cAAcxZ,SACnB38G,KAAKkvH,WAAW;KAChBlvH,KAAK20H,eAA6B,QAAdqG,aAAqBA,aAAa,GACtDh7H,KAAKkyH,mBAAmBmI,iBAAiBhf,KAAKgf;KAC9Cr6H,KAAKi1H,4BAAgD,QAApBL,mBAA2B,MAAMA;KAClE50H,KAAK+0H,wBAA+C,QAAvByF,sBAA8B,MAAQA;KACnEx6H,KAAK80H,8BAA2D,QAA7B2F,4BAAoC,MAAMA;KAC7Ez6H,KAAKg1H,0BAA0Bh1H,KAAKi1H,2BACpCj1H,KAAKg2H,eAAe;KACpBh2H,KAAKi2H,iBAAiC,QAAhBla,eAAuBA,eAAe,MAC5D/7G,KAAKi3H,aAAa;KAClBj3H,KAAKipH,cAAc,GACnBjpH,KAAKy5H,eAAe,SAASz5H,KAAK2oH,MAAMp0G,WAAWvU,KAAK2oH,MAAMj0G,OAAO,IAAI1U,KAAK2oH,MAAMj0G,SAAS;KAC7F1U,KAAK00H,gBAA+B,QAAfD,cAAsBA,cAAc,KACzDz0H,KAAKm3H,mBAAqC,QAAlBD,iBAAyBA,iBAAiB;KAClEl3H,KAAKo4H,wBAA+C,QAAvB6C,uBAAqCA;KAClEj7H,KAAKqhH,oBAAoBO,iBACzB5hH,KAAK82H,gBAAgB4D;KACrB16H,KAAKwuH,kBAAkB,MACvBxuH,KAAKgzH,oBAAoBD,mBAAmB,IAAIA,mBAAmB;KACnE/yH,KAAKy1H,oBAAoB,MAGzBz1H,KAAKyvH,iBAAiB,MACtBzvH,KAAK02H,sBAAuBkE,UAExB;MAEE5C,aAAa;MACbrB,sBAA8C,QAAxBA,uBAA+BA,uBAAuB;SAJ9E,MAMJ32H,KAAK63H,SAAS,GAAG73H,KAAK2oH,MAAMp0G,WAAWvU,KAAK2oH,MAAMj0G,OAAO,IAAI1U,KAAK2oH,MAAMj0G,SAAS;KAWjF1U,KAAK2vH,UAAU,IACf3vH,KAAK4vH,eAAe,GACpB5vH,KAAK8vH,eAAe;AACtB;IAEA,cAAIkL;KACF,OAAOh7H,KAAK20H;AACd;IAEA,cAAIqG,CAAY3yH;KACdrI,KAAK20H,eAAetsH,OACpB6K,OAAOlT,OAAM;AACf;IAEA,KAAK0vH;KACH,OAAO1vH,KAAK2vH,QAAQlqH,SAASzF,KAAK8vH;AACpC;IAEA,KAAK1N;KACH,OAAOpiH,KAAK8vH,eAAe9vH,KAAK4vH;AAClC;IAEA,KAAK8F;KACH,OAAO11H,KAAK2vH,QAAQlqH,SAASzF,KAAK4vH;AACpC;IAEA,KAAKsL;KACH,SAASl7H,KAAKkvH,aAAalvH,KAAK21H,iBAAiB31H,KAAKkvH,SAASvK;AACjE;IAEA,KAAKyS;KACH,MAAMtb,SAAS97G,KAAKkvH;KACpB,OACGpT,WAAWA,OAAO0Y,WAAW1Y,OAAOuZ,aAAavZ,OAAOoZ,eACxDl1H,KAAK01H,WAAW11H,KAAK20H,gBAAgB,MACtC30H,KAAK0vH,YAAY;AAErB;IAGA,CAACyL,UAAW9e;KACVM,QAAQ38G,OACRA,KAAK2U,KAAK,WAAW0nG;AACvB;IAEA,CAACgG,WAAY7rF,MAAM1lB;KACjB,MAAMwuG,SAAS9oF,KAAK8oF,UAAUt/G,KAAK2oH,MAAMrJ,QAEnC9zG,UAAqC,SAA3BxL,KAAKy1H,oBACjBvV,QAAQkb,oBAAoB9b,QAAQ9oF,MAAM1lB,WAC1CovG,QAAQmb,oBAAoB/b,QAAQ9oF,MAAM1lB;KAiB9C,OAfA9Q,KAAK2vH,QAAQzuH,KAAKsK,UACdxL,KAAKi3H,eAEmC,QAAjCnwB,KAAKz0F,WAAW7G,QAAQ9B,SAAiBo9F,KAAKwyB,WAAW9tH,QAAQ9B,SAE1E1J,KAAKi3H,aAAa;KAClB9zH,QAAQ66G,SAAS9qG,QAAQlT,SAEzBkT,OAAOlT,OAAM,KAGXA,KAAKi3H,cAAmC,MAArBj3H,KAAKipH,eAAqBjpH,KAAKo3H,WACpDp3H,KAAKipH,cAAc;KAGdjpH,KAAKipH,cAAc;AAC5B;IAEA,OAAOxG;KAGL,OAAO,IAAI7xG,SAASC;MACb7Q,KAAK01H,SAGR11H,KAAKwuH,kBAAkB39G,UAFvBA,QAAQ;AAGV;AAEJ;IAEA,OAAO8xG,UAAW/tG;KAChB,OAAO,IAAIhE,SAASC;MAClB,MAAM45E,WAAWzqF,KAAK2vH,QAAQpuH,OAAOvB,KAAK8vH;MAC1C,KAAK,IAAI/yG,IAAI,GAAGA,IAAI0tE,SAAShlF,QAAQsX,KAAK;OAExC8yG,aAAa7vH,MADGyqF,SAAS1tE,IACGnI;AAC9B;MAEA,MAAMpD,WAAW;OACXxR,KAAKwuH,oBAEPxuH,KAAKwuH,mBACLxuH,KAAKwuH,kBAAkB,OAEzB39G;AAAQ;MAGiB,QAAvB7Q,KAAKyvH,mBACP3oB,KAAKphG,QAAQ1F,KAAKyvH,gBAAgB76G,MAClC5U,KAAKyvH,iBAAiB;MACtBzvH,KAAK02H,sBAAsB,OAGxB12H,KAAKkvH,WAGRpoB,KAAKphG,QAAQ1F,KAAKkvH,SAASl+G,GAAG,SAASQ,WAAWoD,OAFlDivG,eAAeryG;MAKjB0B,OAAOlT;AAAI;AAEf;;;;;GCraF,OAAM,YAAY,SAAY,oBAAQ;GAEtC,MAAMs7H;IACJ,WAAA/6H,CAAa8H;KACXrI,KAAKqI,QAAQA;AACf;IAEA,KAAA65G;KACE,OAAkC,MAA3BliH,KAAKqI,MAAM6yH,eAA2C,MAAtBl7H,KAAKqI,MAAMqtH,cAC9CpyH,IACAtD,KAAKqI;AACX;;GAGF,MAAMkzH;IACJ,WAAAh7H,CAAai7H;KACXx7H,KAAKw7H,YAAYA;AACnB;IAEA,QAAAjZ,CAAU9C,YAAYtwG;KAChBswG,WAAWzuG,MACbyuG,WAAWzuG,GAAG,eAAc;MACK,MAA3ByuG,WAAWyb,eAA2C,MAAtBzb,WAAWiW,UAC7C11H,KAAKw7H,UAAUrsH;AACjB;AAGN;;GAGFtP,OAAOD,UAAU;IAGf,OAAIuD,QAAQC,IAAIq4H,mBACP;KACLnZ,SAASgZ;KACTtZ,sBAAsBuZ;QAGnB;KACLjZ,SAASoZ,OAAOpZ,WAAWgZ;KAC3BtZ,sBAAsB0Z,OAAO1Z,wBAAwBuZ;;AAEzD;;;;GCvCA17H,OAAOD,UAAU;IACf+7H,uBAN4B;IAO5BC,sBAJ2B;;;;;GCJ7B,OAAM,kBAAqB,oBAAQ,QAC7B,aAAgB,oBAAQ,QACxB,UAAa,oBAAQ,OACrB,WAAc,oBAAQ;GAwF5B,SAAS/a,UAAWl3G,SAASkyH;IAC3BtS,OAAOG,oBAAoBhnH,WAAW,GAAG;KAAEqQ,QAAQ;QAEnDw2G,OAAOE,WAAW9/G,SAASq2G,SAAS;KAAE8b,SAAQ;QAE9CD,SAAStS,OAAOI,WAAWoS,OAAOF;IAEtB9yH,UAAU8yH,WAGpBlyH,QAAQoQ,OAAO,cAAchR,UAAU8yH;AAE3C;GAEAtS,OAAOI,WAAWqS,yBAAyBzS,OAAO8D,oBAAoB,EACpE;IACEF,WAAW5D,OAAO0S,kBAAkB1S,OAAOI,WAAW4D;IACtDp+G,KAAK;IACLye,cAAc;MAEhB;IACEu/F,WAAW5D,OAAO0S,kBAAkB1S,OAAOI,WAAW4D;IACtDp+G,KAAK;IACLye,cAAc;SAIlB27F,OAAOI,WAAWoS,SAASxS,OAAO8D,oBAAoB,EACpD;IACEF,WAAW5D,OAAOI,WAAW4D;IAC7Bp+G,KAAK;MAEP;IACEg+G,WAAW5D,OAAOI,WAAW4D;IAC7Bp+G,KAAK;MAEP;IACEg+G,WAAW5D,OAAO0S,mBAAmB5zH,SACd,mBAAVA,QACFkhH,OAAOI,WAAW,sBAAsBthH,SAG1C,IAAI0F,KAAK1F;IAElB8G,KAAK;IACLye,cAAc;MAEhB;IACEu/F,WAAW5D,OAAO0S,kBAAkB1S,OAAOI,WAAW;IACtDx6G,KAAK;IACLye,cAAc;MAEhB;IACEu/F,WAAW5D,OAAO0S,kBAAkB1S,OAAOI,WAAW4D;IACtDp+G,KAAK;IACLye,cAAc;MAEhB;IACEu/F,WAAW5D,OAAO0S,kBAAkB1S,OAAOI,WAAW4D;IACtDp+G,KAAK;IACLye,cAAc;MAEhB;IACEu/F,WAAW5D,OAAO0S,kBAAkB1S,OAAOI,WAAWyD;IACtDj+G,KAAK;IACLye,cAAc;MAEhB;IACEu/F,WAAW5D,OAAO0S,kBAAkB1S,OAAOI,WAAWyD;IACtDj+G,KAAK;IACLye,cAAc;MAEhB;IACEu/F,WAAW5D,OAAOI,WAAWuS;IAC7B/sH,KAAK;IACLkf,eAAe,EAAC,UAAU,OAAO;MAEnC;IACE8+F,WAAW5D,OAAOkE,kBAAkBlE,OAAOI,WAAW4D;IACtDp+G,KAAK;IACLye,cAAc;SAIlB/tB,OAAOD,UAAU;IACf+gH,YAzJF,SAAqBh3G;KACnB4/G,OAAOG,oBAAoBhnH,WAAW,GAAG;MAAEqQ,QAAQ;SAEnDw2G,OAAOE,WAAW9/G,SAASq2G,SAAS;MAAE8b,SAAQ;;KAE9C,MAAMD,SAASlyH,QAAQ9I,IAAI,WACrBs7H,MAAM,CAAC;KAEb,KAAKN,QACH,OAAOM;KAGT,KAAK,MAAMC,SAASP,OAAOl3H,MAAM,MAAM;MACrC,OAAOvC,SAASiG,SAAS+zH,MAAMz3H,MAAM;MAErCw3H,IAAI/5H,KAAK0C,UAAUuD,MAAMZ,KAAK;AAChC;KAEA,OAAO00H;AACT;IAuIEzb,cA/HF,SAAuB/2G,SAASvH,MAAMi6H;KACpC9S,OAAOG,oBAAoBhnH,WAAW,GAAG;MAAEqQ,QAAQ;SAEnDw2G,OAAOE,WAAW9/G,SAASq2G,SAAS;MAAE8b,SAAQ;SAE9C15H,OAAOmnH,OAAOI,WAAW4D,UAAUnrH,OACnCi6H,aAAa9S,OAAOI,WAAWqS,uBAAuBK;KAItDxb,UAAUl3G,SAAS;MACjBvH;MACAiG,OAAO;MACPi0H,SAAS,IAAIvuH,KAAK;SACfsuH;;AAEP;IAgHEzb,eA1GF,SAAwBj3G;KACtB4/G,OAAOG,oBAAoBhnH,WAAW,GAAG;MAAEqQ,QAAQ;SAEnDw2G,OAAOE,WAAW9/G,SAASq2G,SAAS;MAAE8b,SAAQ;;KAE9C,MAAMS,UAAU5yH,QAAQ6yH;KAExB,OAAKD,UAIEA,QAAQ33H,KAAK43B,QAASigG,eAAejgG,UAHnC;AAIX;IA+FEqkF;;;;;GCnLF,OAAM,sBAAsB,yBAA4B,oBAAQ,QAC1D,sBAAyB,oBAAQ,QACjC,oCAAuC,oBAAQ,OAC/Cv3B,SAAS,oBAAQ;GAoFvB,SAASozC,wBAAyBC,oBAAoBC,sBAAsB,CAAC;IAG3E,IAAkC,MAA9BD,mBAAmBl3H,QACrB,OAAOm3H;IAKTtzC,OAAiC,QAA1BqzC,mBAAmB;IAG1B,IAAIE,WAAW;KAFfF,qBAAqBA,mBAAmB76H,MAAM,IAMvByE,SAAS,QAG9Bs2H,WAAWC,iCACT,KACAH,oBACA;KAAEh/F,UAAU;QAEdg/F,qBAAqBA,mBAAmB76H,MAAM+6H,SAASp3H,YAKvDo3H,WAAWF;IACXA,qBAAqB;IAKvB,IAAII,gBAAgB,IAChBC,iBAAiB;IAGrB,IAAIH,SAASt2H,SAAS,MAAM;KAM1B,MAAMo3B,WAAW;MAAEA,UAAU;;KAE7Bo/F,gBAAgBD,iCACd,KACAD,UACAl/F,WAEFq/F,iBAAiBH,SAAS/6H,MAAM67B,SAASA,WAAW;AACtD,WAKEo/F,gBAAgBF;IAUlB,IALAE,gBAAgBA,cAAcj4H,QAC9Bk4H,iBAAiBA,eAAel4H;IAI5Bk4H,eAAev3H,SAASk2H,uBAC1B,OAAOe,wBAAwBC,oBAAoBC;IAMrD,MAAMK,yBAAyBF,cAAcj1H;IAK7C,IAA+B,cAA3Bm1H,wBAAsC;KAGxC,MAAMC,aAAa,IAAInvH,KAAKivH;KAK5BJ,oBAAoBN,UAAUY;AAChC,WAAO,IAA+B,cAA3BD,wBAAsC;KAO/C,MAAME,WAAWH,eAAe3/E,WAAW;KAE3C,KAAK8/E,WAAW,MAAMA,WAAW,OAA6B,QAAtBH,eAAe,IACrD,OAAON,wBAAwBC,oBAAoBC;KAKrD,KAAK,QAAQt3H,KAAK03H,iBAChB,OAAON,wBAAwBC,oBAAoBC;KAIrD,MAAMQ,eAAe5pH,OAAOwpH;KAiB5BJ,oBAAoBS,SAASD;AAC/B,WAAO,IAA+B,aAA3BH,wBAAqC;KAM9C,IAAIK,eAAeN;KAIK,QAApBM,aAAa,OACfA,eAAeA,aAAax7H,MAAM,KAIpCw7H,eAAeA,aAAax1H;KAI5B80H,oBAAoBW,SAASD;AAC/B,WAAO,IAA+B,WAA3BL,wBAAmC;KAO5C,IAAIO,aAAa;KAGfA,aAF4B,MAA1BR,eAAev3H,UAAsC,QAAtBu3H,eAAe,KAEnC,MAKAA;KAKfJ,oBAAoBpoH,OAAOgpH;AAC7B,WAAO,IAA+B,aAA3BP,wBAMTL,oBAAoBa,UAAS,QACxB,IAA+B,eAA3BR,wBAOTL,oBAAoBc,YAAW,QAC1B,IAA+B,eAA3BT,wBAAuC;KAMhD,IAAIU,cAAc;KAElB,MAAMC,0BAA0BZ,eAAel1H;KAG3C81H,wBAAwBr3H,SAAS,YACnCo3H,cAAc,SAKZC,wBAAwBr3H,SAAS,cACnCo3H,cAAc;KAKZC,wBAAwBr3H,SAAS,WACnCo3H,cAAc,QAMhBf,oBAAoBiB,WAAWF;AACjC,WACEf,oBAAoBkB,aAAa,IAEjClB,oBAAoBkB,SAAS58H,KAAK,GAAG67H,iBAAiBC;IAIxD,OAAON,wBAAwBC,oBAAoBC;AACrD;GAEA/8H,OAAOD,UAAU;IACf68H,gBA7SF,SAAyB1pH;KAIvB,IAAIgrH,mBAAmBhrH,SACrB,OAAO;KAGT,IAAIirH,gBAAgB,IAChBrB,qBAAqB,IACrBv6H,OAAO,IACPiG,QAAQ;KAGZ,IAAI0K,OAAOxM,SAAS,MAAM;MAKxB,MAAMo3B,WAAW;OAAEA,UAAU;;MAE7BqgG,gBAAgBlB,iCAAiC,KAAK/pH,QAAQ4qB,WAC9Dg/F,qBAAqB5pH,OAAOjR,MAAM67B,SAASA;AAC7C,YAMEqgG,gBAAgBjrH;KAMlB,IAAKirH,cAAcz3H,SAAS,MAErB;MAKL,MAAMo3B,WAAW;OAAEA,UAAU;;MAC7Bv7B,OAAO06H,iCACL,KACAkB,eACArgG,WAEFt1B,QAAQ21H,cAAcl8H,MAAM67B,SAASA,WAAW;AAClD,YAbEt1B,QAAQ21H;KAuBV,OANA57H,OAAOA,KAAK0C,QACZuD,QAAQA,MAAMvD,QAKV1C,KAAKqD,SAAS4C,MAAM5C,SAASm2H,uBACxB,OAKF;MACLx5H;MAAMiG;SAAUq0H,wBAAwBC;;AAE5C;IA0OED;;;;;GC1RF,SAASuB,mBAAoB77H;IAC3B,KAAK,MAAM4mC,QAAQ5mC,MAAM;KACvB,MAAMyN,OAAOm5B,KAAKqU,WAAW;KAE7B,IACGxtC,QAAQ,MAAQA,OAAO,OACf,QAATm5B,QACS,QAATA,QACS,QAATA,QACS,QAATA,QACS,QAATA,QACS,QAATA,QACS,QAATA,QACS,QAATA,QACS,SAATA,QACS,QAATA,QACS,QAATA,QACS,QAATA,QACS,QAATA,QACS,QAATA,QACS,QAATA,QACS,QAATA,QACS,QAATA,MAEA,MAAM,IAAItnC,MAAM;AAEpB;AACF;GAUA,SAASw8H,oBAAqB71H;IAC5B,KAAK,MAAM2gC,QAAQ3gC,OAAO;KACxB,MAAMwH,OAAOm5B,KAAKqU,WAAW;KAE7B,IACExtC,OAAO,MACE,OAATA,QACS,OAATA,QACS,OAATA,QACS,OAATA,QACAA,OAAO,KAEP,MAAM,IAAInO,MAAM;AAEpB;AACF;GAMA,SAASy8H,mBAAoB3pH;IAC3B,KAAK,MAAMw0B,QAAQx0B,MAAM;KAGvB,IAFaw0B,KAAKqU,WAAW,KAElB,MAAiB,QAATrU,MACjB,MAAM,IAAItnC,MAAM;AAEpB;AACF;GA0DA,SAAS08H,UAAWxnF;IACE,mBAATA,SACTA,OAAO,IAAI7oC,KAAK6oC;IAqBlB,OAAO,GAlBM,EACX,OAAO,OAAO,OAAO,OACrB,OAAO,OAAO,QAQKA,KAAKynF,iBACdznF,KAAK0nF,aAAaz1H,WAAWyuC,SAAS,GAAG,QANtC,EACb,OAAO,OAAO,OAAO,OAAO,OAAO,OACnC,OAAO,OAAO,OAAO,OAAO,OAAO,QAKhBV,KAAK2nF,kBACb3nF,KAAK4nF,oBACL5nF,KAAK6nF,cAAc51H,WAAWyuC,SAAS,GAAG,QACxCV,KAAK8nF,gBAAgB71H,WAAWyuC,SAAS,GAAG,QAC5CV,KAAK+nF,gBAAgB91H,WAAWyuC,SAAS,GAAG;AAG7D;GAqFAz3C,OAAOD,UAAU;IACfm+H,oBArQF,SAA6B11H;KAC3B,IAAqB,MAAjBA,MAAM5C,QACR,QAAO;KAGT,KAAK,MAAMujC,QAAQ3gC,OAAO;MACxB,MAAMwH,OAAOm5B,KAAKqU,WAAW;MAE7B,IACGxtC,QAAQ,KAAQA,QAAQ,KACxBA,QAAQ,MAAQA,QAAQ,MAChB,QAATA,MAEA,QAAO;AAEX;AACF;IAsPEouH;IACAE;IACAD;IACAE;IACAr1H,WAxEF,SAAoB8yH;KAClB,IAA2B,MAAvBA,OAAOz5H,KAAKqD,QACd,OAAO;KAGTw4H,mBAAmBpC,OAAOz5H,OAC1B87H,oBAAoBrC,OAAOxzH;KAE3B,MAAM8zH,MAAM,EAAC,GAAGN,OAAOz5H,QAAQy5H,OAAOxzH;KAIlCwzH,OAAOz5H,KAAK4C,WAAW,iBACzB62H,OAAO4B,UAAS,IAGd5B,OAAOz5H,KAAK4C,WAAW,eACzB62H,OAAO4B,UAAS;KAChB5B,OAAO0B,SAAS,MAChB1B,OAAOrnH,OAAO,MAGZqnH,OAAO4B,UACTtB,IAAIj7H,KAAK,WAGP26H,OAAO6B,YACTvB,IAAIj7H,KAAK;KAGkB,mBAAlB26H,OAAOwB,YAxCpB,SAA+BA;MAC7B,IAAIA,SAAS,GACX,MAAM,IAAI37H,MAAM;AAEpB,MAqCIk9H,CAAqB/C,OAAOwB,SAC5BlB,IAAIj7H,KAAK,WAAW26H,OAAOwB,YAGzBxB,OAAO0B,YAjIb,SAA+BA;MAC7B,IACEA,OAAOv4H,WAAW,QAClBu4H,OAAOn4H,SAAS,QAChBm4H,OAAOn4H,SAAS,MAEhB,MAAM,IAAI1D,MAAM;AAEpB,MA0HIm9H,CAAqBhD,OAAO0B,SAC5BpB,IAAIj7H,KAAK,UAAU26H,OAAO0B,YAGxB1B,OAAOrnH,SACT2pH,mBAAmBtC,OAAOrnH;KAC1B2nH,IAAIj7H,KAAK,QAAQ26H,OAAOrnH,UAGtBqnH,OAAOS,WAAyC,mBAA9BT,OAAOS,QAAQzzH,cACnCszH,IAAIj7H,KAAK,WAAWk9H,UAAUvC,OAAOS;KAGnCT,OAAOgC,YACT1B,IAAIj7H,KAAK,YAAY26H,OAAOgC;KAG9B,KAAK,MAAM99G,QAAQ87G,OAAOiC,UAAU;MAClC,KAAK/9G,KAAKxZ,SAAS,MACjB,MAAM,IAAI7E,MAAM;MAGlB,OAAOyN,QAAQ9G,SAAS0X,KAAKpb,MAAM;MAEnCw3H,IAAIj7H,KAAK,GAAGiO,IAAIrK,UAAUuD,MAAMZ,KAAK;AACvC;KAEA,OAAO00H,IAAI10H,KAAK;AAClB;;;;;GCtQA,MAAMwmH,MAAM,oBAAQ,OACd3kC,SAAS,oBAAQ,OACjBwd,OAAO,oBAAQ,QACf,sBAAsB,uBAA0B,oBAAQ;GAE9D,IAAIsU,KAOA0jB;GAIFA,eADEpD,OAAO1Z,yBAAyB7+G,QAAQC,IAAIq4H,mBAC/B;IACb,WAAAl7H,CAAas6H;KACX76H,KAAK++H,qBAAqBlE,mBAC1B76H,KAAKg/H,gBAAgB,IAAI92H,KACzBlI,KAAKi/H,mBAAmB,IAAIvD,OAAO1Z,sBAAsB7yG;MACvD,IAAInP,KAAKg/H,cAAcxxH,OAAOxN,KAAK++H,oBACjC;MAGF,MAAM9c,MAAMjiH,KAAKg/H,cAAcn+H,IAAIsO;WACvB7L,MAAR2+G,YAAqC3+G,MAAhB2+G,IAAIC,WAC3BliH,KAAKg/H,cAAcz2H,OAAO4G;AAC5B;AAEJ;IAEA,GAAAtO,CAAKq+H;KACH,MAAMjd,MAAMjiH,KAAKg/H,cAAcn+H,IAAIq+H;KACnC,OAAOjd,MAAMA,IAAIC,UAAU;AAC7B;IAEA,GAAAzhH,CAAKy+H,YAAY3I;KACiB,MAA5Bv2H,KAAK++H,uBAIT/+H,KAAKg/H,cAAcv+H,IAAIy+H,YAAY,IAAI5c,QAAQiU;KAC/Cv2H,KAAKi/H,iBAAiB1c,SAASgU,SAAS2I;AAC1C;OAGa;IACb,WAAA3+H,CAAas6H;KACX76H,KAAK++H,qBAAqBlE,mBAC1B76H,KAAKg/H,gBAAgB,IAAI92H;AAC3B;IAEA,GAAArH,CAAKq+H;KACH,OAAOl/H,KAAKg/H,cAAcn+H,IAAIq+H;AAChC;IAEA,GAAAz+H,CAAKy+H,YAAY3I;KACf,IAAgC,MAA5Bv2H,KAAK++H,oBAAT;MAIA,IAAI/+H,KAAKg/H,cAAcxxH,QAAQxN,KAAK++H,oBAAoB;OAEtD,OAAQ12H,OAAO82H,aAAcn/H,KAAKg/H,cAAc52H,OAAOuD;OACvD3L,KAAKg/H,cAAcz2H,OAAO42H;AAC5B;MAEAn/H,KAAKg/H,cAAcv+H,IAAIy+H,YAAY3I;AARnC;AASF;MAqHJ12H,OAAOD,UAjHP,UAAyB,SAAS,mBAAmB,YAAY,YAAc42B;IAC7E,IAAyB,QAArBqkG,uBAA+BrnH,OAAO8qE,UAAUu8C,sBAAsBA,oBAAoB,IAC5F,MAAM,IAAIzb,qBAAqB;IAGjC,MAAM34G,UAAU;KAAE+N,MAAM8lH;QAAe9jG;OACjC4oG,eAAe,IAAIN,aAAkC,QAArBjE,oBAA4B,MAAMA;IAGxE,OAFAh4H,UAAqB,QAAXA,UAAkB,MAAOA,SACnC+3H,UAAqB,QAAXA,WAAkBA;IACrB,UAAkB,UAAU,MAAM,UAAU,MAAM,YAAY,cAAc,aAAgBppH;KACjG,IAAIsqG;KACJ,IAAiB,aAAb1nG,UAAuB;MACpBgnG,QACHA,MAAM,oBAAQ;MAIhB,MAAM8jB,cAFNziB,aAAaA,cAAch2G,QAAQg2G,cAAc3V,KAAKu4B,cAAcpkH,SAAS,SAE5C1G,UAC3BgiH,UAAU6I,aAAav+H,IAAIq+H,eAAe;MAEhD51C,OAAO41C,aAEPpjB,SAASV,IAAIuB,QAAQ;OACnBj3C,eAAe;UACZj/D;OACHg2G;OACA8Z;OACAxa;OAEAujB,eAAe1E,UAAU,EAAC,YAAY,SAAQ,EAAC;OAC/C9e,QAAQyjB;OACR7qH,MAAMA,QAAQ;OACduG,MAAM1G;UAGRunG,OACG9qG,GAAG,YAAW,SAAUulH;OAEvB6I,aAAa3+H,IAAIy+H,YAAY3I;AAC/B;AACJ,YACEjtC,QAAQi2C,YAAY,8CACpBzjB,SAASmS,IAAItR,QAAQ;MACnBj3C,eAAe;SACZj/D;MACHs1G;MACArnG,MAAMA,QAAQ;MACduG,MAAM1G;;KAKV,IAAyB,QAArB9N,QAAQwO,aAAqBxO,QAAQwO,WAAW;MAClD,MAAMuqH,6BAA0Dl8H,MAAlCmD,QAAQ+4H,wBAAsC,MAAO/4H,QAAQ+4H;MAC3F1jB,OAAO2jB,cAAa,GAAMD;AAC5B;KAEA,MAAME,gBA2BV,SAAuBC,kBAAkB98H;MACvC,KAAKA,SACH,OAAO;MAGT,IAAI+8H,KAAK,MACLC,KAAK;MACT,MAAM9tH,YAAY/O,YAAW;OAE3B48H,KAAK3gD,cAAa;QACS,YAArB97E,QAAQm3G,WAEVulB,KAAK5gD,cAAa,MAAM0gD,uBAExBA;AACF;AACD,UACA98H;MACH,OAAO;OACLiQ,aAAaf,YACb+tH,eAAeF,KACfE,eAAeD;AAAE;AAErB,MAlD0BE,EAAa,MAoDvC,SAA2BjkB;MACzBhV,KAAKphG,QAAQo2G,QAAQ,IAAIkkB;AAC3B,MAtD6CL,CAAiB7jB,UAASj5G;KAuBnE,OArBAi5G,OACGmkB,YAAW,GACXtrH,KAAkB,aAAbP,WAAwB,kBAAkB,YAAW;MAGzD,IAFAsrH,iBAEIluH,UAAU;OACZ,MAAM6qG,KAAK7qG;OACXA,WAAW,MACX6qG,GAAG,MAAMr8G;AACX;AACF,SACCgR,GAAG,UAAS,SAAU4D;MAGrB,IAFA8qH,iBAEIluH,UAAU;OACZ,MAAM6qG,KAAK7qG;OACXA,WAAW,MACX6qG,GAAGznG;AACL;AACF,UAEKknG;AACT;AACF;;;;GC1JA,MAAMokB,6BAA6B,CAAC,GAG9BC,uBAAuB,EAC3B,UACA,mBACA,mBACA,iBACA,oCACA,gCACA,gCACA,+BACA,iCACA,0BACA,kCACA,iCACA,OACA,SACA,WACA,YACA,iBACA,iBACA,mBACA,cACA,uBACA,oBACA,oBACA,kBACA,oBACA,iBACA,2BACA,uCACA,gBACA,UACA,gCACA,8BACA,gCACA,QACA,iBACA,YACA,OACA,QACA,UACA,aACA,WACA,aACA,QACA,QACA,YACA,qBACA,iBACA,YACA,uBACA,cACA,iBACA,QACA,YACA,gBACA,UACA,sBACA,UACA,sBACA,uBACA,OACA,SACA,WACA,mBACA,WACA,eACA,wBACA,4BACA,qBACA,0BACA,yBACA,UACA,iBACA,0BACA,qCACA,cACA,aACA,6BACA,yBACA,MACA,uBACA,WACA,qBACA,WACA,6BACA,cACA,QACA,OACA,oBACA,0BACA,0BACA,mBACA,qCACA,gBACA,oBACA;GAGF,KAAK,IAAIpjH,IAAI,GAAGA,IAAIojH,qBAAqB16H,UAAUsX,GAAG;IACpD,MAAM5N,MAAMgxH,qBAAqBpjH,IAC3BqjH,gBAAgBjxH,IAAIrH;IAC1Bo4H,2BAA2B/wH,OAAO+wH,2BAA2BE,iBAC3DA;AACJ;GAGAv8H,OAAOqM,eAAegwH,4BAA4B,OAElDrgI,OAAOD,UAAU;IACfugI;IACAD;;;;;GClHF,MAAMG,oBAAoB3+H;IACxB,WAAAnB,CAAa2B;KACXC,MAAMD,UACNlC,KAAKoC,OAAO,eACZpC,KAAK6P,OAAO;AACd;;GAGF,MAAMmwH,4BAA4BK;IAChC,WAAA9/H,CAAa2B;KACXC,MAAMD,UACNR,MAAMq+G,kBAAkB//G,MAAMggI,sBAC9BhgI,KAAKoC,OAAO;KACZpC,KAAKkC,UAAUA,WAAW,yBAC1BlC,KAAK6P,OAAO;AACd;;GAGF,MAAM0lH,4BAA4B8K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L,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;MACH,OAAO;;KACT,KAAK;MACH,OAAO;;KACT,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;KACL,KAAK;MA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ACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IAAQ,OAAO;IACnE,OAAO;IAAQ,OAAO;IAAQ,OAAO;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","sources":["webpack://cache-action-entrypoint/webpack/universalModuleDefinition","webpack://cache-action-entrypoint/webpack/runtime/create fake namespace object","webpack://cache-action-entrypoint/../src/cache.ts","webpack://cache-action-entrypoint/../../../../../src/generated/results/api/v1/cache.ts","webpack://cache-action-entrypoint/../../../../../src/generated/results/api/v1/cache.twirp-client.ts","webpack://cache-action-entrypoint/../../../../../src/generated/results/entities/v1/cachemetadata.ts","webpack://cache-action-entrypoint/../../../../../src/generated/results/entities/v1/cachescope.ts","webpack://cache-action-entrypoint/../../src/internal/cacheHttpClient.ts","webpack://cache-action-entrypoint/../../src/internal/cacheUtils.ts","webpack://cache-action-entrypoint/../../src/internal/config.ts","webpack://cache-action-entrypoint/../../src/internal/constants.ts","webpack://cache-action-entrypoint/../../src/internal/downloadUtils.ts","webpack://cache-action-entrypoint/../../src/internal/requestUtils.ts","webpack://cache-action-entrypoint/../../../src/internal/shared/cacheTwirpClient.ts","webpack://cache-action-entrypoint/../../../src/internal/shared/errors.ts","webpack://cache-action-entrypoint/../../../src/internal/shared/user-agent.ts","webpack://cache-action-entrypoint/../../../src/internal/shared/util.ts","webpack://cache-action-entrypoint/../../src/internal/tar.ts","webpack://cache-action-entrypoint/../../src/internal/uploadUtils.ts","webpack://cache-action-entrypoint/../src/options.ts","webpack://cache-action-entrypoint/../src/glob.ts","webpack://cache-action-entrypoint/../src/internal-glob-options-helper.ts","webpack://cache-action-entrypoint/../src/internal-globber.ts","webpack://cache-action-entrypoint/../src/internal-match-kind.ts","webpack://cache-action-entrypoint/../src/internal-path-helper.ts","webpack://cache-action-entrypoint/../src/internal-path.ts","webpack://cache-action-entrypoint/../src/internal-pattern-helper.ts","webpack://cache-action-entrypoint/../src/internal-pattern.ts","webpack://cache-action-entrypoint/../src/internal-search-state.ts","webpack://cache-action-entrypoint/../../node_modules/@actions/cache/node_modules/@azure/abort-controller/src/AbortSignal.ts","webpack://cache-action-entrypoint/../../node_modules/@actions/cache/node_modules/@azure/abort-controller/src/AbortController.ts","webpack://cache-action-entrypoint/../src/command.ts","webpack://cache-action-entrypoint/../src/core.ts","webpack://cache-action-entrypoint/../src/file-command.ts","webpack://cache-action-entrypoint/../src/oidc-utils.ts","webpack://cache-action-entrypoint/../src/path-utils.ts","webpack://cache-action-entrypoint/../src/platform.ts","webpack://cache-action-entrypoint/../src/summary.ts","webpack://cache-action-entrypoint/../src/utils.ts","webpack://cache-action-entrypoint/../src/exec.ts","webpack://cache-action-entrypoint/../src/toolrunner.ts","webpack://cache-action-entrypoint/../src/internal-hash-files.ts","webpack://cache-action-entrypoint/../src/auth.ts","webpack://cache-action-entrypoint/../src/index.ts","webpack://cache-action-entrypoint/../src/proxy.ts","webpack://cache-action-entrypoint/../src/io-util.ts","webpack://cache-action-entrypoint/../src/io.ts","webpack://cache-action-entrypoint/../src/manifest.ts","webpack://cache-action-entrypoint/../src/retry-helper.ts","webpack://cache-action-entrypoint/../src/tool-cache.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/abort-controller/AbortError.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/logger/debug.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/logger/log.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/logger/logger.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/httpHeaders.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/util/uuidUtils.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/pipelineRequest.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/pipeline.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/util/object.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/util/error.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/util/inspect.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/util/sanitizer.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/restError.ts","webpack://cache-action-entrypoint/external node-commonjs \"node:https\"","webpack://cache-action-entrypoint/external node-commonjs \"node:zlib\"","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/log.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/nodeHttpClient.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/defaultHttpClient.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/util/delay.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/util/random.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/util/helpers.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/retryStrategies/throttlingRetryStrategy.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/retryStrategies/exponentialRetryStrategy.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/constants.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/policies/retryPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/util/bytesEncoding.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/util/checkEnvironment.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/policies/formDataPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/policies/proxyPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/util/typeGuards.ts","webpack://cache-action-entrypoint/../../node_modules/tslib/tslib.es6.mjs","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/util/concat.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/policies/multipartPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/pipeline.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/logger/src/index.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/log.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/policies/redirectPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/policies/logPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/policies/logPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/util/userAgent.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/constants.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/util/userAgentPlatform.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/abort-controller/src/AbortError.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-util/src/delay.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-util/src/createAbortablePromise.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-util/src/error.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-util/src/index.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/util/file.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/policies/defaultRetryPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/policies/defaultRetryPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/policies/proxyPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-tracing/src/tracingContext.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-tracing/src/state.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-tracing/src/instrumenter.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-tracing/src/tracingClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/restError.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/policies/tracingPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/util/wrapAbortSignal.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/createPipelineFromOptions.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/policies/agentPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/policies/agentPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/policies/tlsPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/policies/tlsPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@typespec/ts-http-runtime/src/policies/decompressResponsePolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/policies/wrapAbortSignalLikePolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/policies/formDataPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/policies/userAgentPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/policies/setClientRequestIdPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/policies/multipartPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/policies/redirectPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/defaultHttpClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/httpHeaders.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/pipelineRequest.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/policies/retryPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/util/tokenCycler.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-rest-pipeline/src/policies/bearerTokenAuthenticationPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-auth/src/tokenCredential.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/base64.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/interfaces.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/utils.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/serializer.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/state.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/operationHelpers.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/deserializationPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/interfaceHelpers.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/serializationPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/pipeline.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/httpClientCache.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/urlHelpers.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/log.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/serviceClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/authorizeRequestOnTenantChallenge.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http-compat/src/util.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http-compat/src/response.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http-compat/src/extendedClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http-compat/src/policies/disableKeepAlivePolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http-compat/src/policies/requestPolicyFactoryPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","webpack://cache-action-entrypoint/../../node_modules/fast-xml-parser/src/ignoreAttributes.js","webpack://cache-action-entrypoint/../../node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","webpack://cache-action-entrypoint/../../node_modules/fast-xml-parser/src/util.js","webpack://cache-action-entrypoint/../../node_modules/fast-xml-parser/src/validator.js","webpack://cache-action-entrypoint/../../node_modules/fast-xml-parser/src/fxp.js","webpack://cache-action-entrypoint/../../node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","webpack://cache-action-entrypoint/../../node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","webpack://cache-action-entrypoint/../../node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","webpack://cache-action-entrypoint/../../node_modules/strnum/strnum.js","webpack://cache-action-entrypoint/../../node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","webpack://cache-action-entrypoint/../../node_modules/fast-xml-parser/src/xmlparser/node2json.js","webpack://cache-action-entrypoint/../../node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","webpack://cache-action-entrypoint/../../node_modules/@azure/core-xml/src/xml.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-xml/src/xml.common.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/log.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/RequestPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/constants.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/utils.common.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/StorageRetryPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/StorageRetryPolicyFactory.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/CredentialPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/SharedKeyComparator.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/StorageSharedKeyCredentialPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/credentials/Credential.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/credentials/StorageSharedKeyCredential.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/AnonymousCredentialPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/credentials/AnonymousCredential.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/cache.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/StorageRetryPolicyV2.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/StorageSharedKeyCredentialPolicyV2.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/StorageBrowserPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/StorageBrowserPolicyFactory.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/StorageCorrectContentLengthPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/Pipeline.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http-compat/src/httpClientAdapter.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/StorageBrowserPolicyV2.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/models/mappers.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/models/parameters.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/operations/service.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/operations/container.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/operations/blob.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/operations/pageBlob.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/operations/appendBlob.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/operations/blockBlob.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/storageClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/StorageContextClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/StorageClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/tracing.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/BlobSASPermissions.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/ContainerSASPermissions.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/credentials/UserDelegationKeyCredential.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/SasIPRange.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/SASQueryParameters.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/BlobSASSignatureValues.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BlobLeaseClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/RetriableReadableStream.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BlobDownloadResponse.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-internal-avro/src/AvroConstants.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-internal-avro/src/AvroParser.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-internal-avro/src/utils/utils.common.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-internal-avro/src/AvroReader.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-internal-avro/src/AvroReadable.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-internal-avro/src/AvroReadableFromStream.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/BlobQuickQueryStream.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BlobQueryResponse.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/models.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/PageBlobRangeResponse.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-lro/src/logger.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-lro/src/legacy/poller.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/pollers/BlobStartCopyFromUrlPoller.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/Range.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/Batch.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-common/src/BuffersStream.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-common/src/PooledBuffer.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-common/src/BufferScheduler.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/utils.node.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/Clients.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BatchUtils.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BatchResponseParser.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/Mutex.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generatedModels.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BlobBatch.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BlobBatchClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/ContainerClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/AccountSASPermissions.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/AccountSASResourceTypes.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/AccountSASServices.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/AccountSASSignatureValues.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BlobServiceClient.ts","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/reflection-info.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/service-type.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-error.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/deferred.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-options.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-output-stream.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/unary-call.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/server-streaming-call.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/client-streaming-call.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/duplex-streaming-call.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/test-transport.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-interceptor.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime-rpc/build/es2015/server-call-context.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/assert.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/binary-format-contract.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/json-typings.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/base64.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/protobufjs-utf8.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/goog-varint.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/pb-long.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/binary-reader.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/binary-writer.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/message-type-contract.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/oneof.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-type-check.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-long-convert.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-reader.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-writer.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-scalar-default.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-reader.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-writer.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-create.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-merge-partial.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-equals.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/message-type.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/reflection-contains-message-type.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/enum-object.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/json-format-contract.js","webpack://cache-action-entrypoint/../../node_modules/@protobuf-ts/runtime/build/es2015/lower-camel-case.js","webpack://cache-action-entrypoint/../src/helpers.ts","webpack://cache-action-entrypoint/../../node_modules/balanced-match/index.js","webpack://cache-action-entrypoint/../../node_modules/brace-expansion/index.js","webpack://cache-action-entrypoint/../../node_modules/concat-map/index.js","webpack://cache-action-entrypoint/../../node_modules/has-flag/index.js","webpack://cache-action-entrypoint/../../node_modules/http-proxy-agent/node_modules/debug/src/browser.js","webpack://cache-action-entrypoint/../../node_modules/http-proxy-agent/node_modules/debug/src/common.js","webpack://cache-action-entrypoint/../../node_modules/http-proxy-agent/node_modules/debug/src/index.js","webpack://cache-action-entrypoint/../../node_modules/http-proxy-agent/node_modules/debug/src/node.js","webpack://cache-action-entrypoint/../src/parse-proxy-response.ts","webpack://cache-action-entrypoint/../../node_modules/https-proxy-agent/node_modules/debug/src/browser.js","webpack://cache-action-entrypoint/../../node_modules/https-proxy-agent/node_modules/debug/src/common.js","webpack://cache-action-entrypoint/../../node_modules/https-proxy-agent/node_modules/debug/src/index.js","webpack://cache-action-entrypoint/../../node_modules/https-proxy-agent/node_modules/debug/src/node.js","webpack://cache-action-entrypoint/../../node_modules/java-properties/dist-node/index.js","webpack://cache-action-entrypoint/../../node_modules/minimatch/minimatch.js","webpack://cache-action-entrypoint/../../node_modules/ms/index.js","webpack://cache-action-entrypoint/../../node_modules/semver/semver.js","webpack://cache-action-entrypoint/../../node_modules/string-argv/index.js","webpack://cache-action-entrypoint/../../node_modules/supports-color/index.js","webpack://cache-action-entrypoint/../../node_modules/tunnel/index.js","webpack://cache-action-entrypoint/../../node_modules/tunnel/lib/tunnel.js","webpack://cache-action-entrypoint/../../node_modules/undici/index.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/agent.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/api/abort-signal.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/api/api-connect.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/api/api-pipeline.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/api/api-request.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/api/api-stream.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/api/api-upgrade.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/api/index.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/api/readable.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/api/util.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/balanced-pool.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/cache/cache.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/cache/cachestorage.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/cache/symbols.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/cache/util.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/client.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/compat/dispatcher-weakref.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/cookies/constants.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/cookies/index.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/cookies/parse.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/cookies/util.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/core/connect.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/core/constants.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/core/errors.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/core/request.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/core/symbols.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/core/util.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/dispatcher-base.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/dispatcher.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fetch/body.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fetch/constants.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fetch/dataURL.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fetch/file.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fetch/formdata.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fetch/global.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fetch/headers.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fetch/index.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fetch/request.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fetch/response.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fetch/symbols.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fetch/util.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fetch/webidl.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fileapi/encoding.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fileapi/filereader.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fileapi/progressevent.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fileapi/symbols.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/fileapi/util.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/global.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/handler/DecoratorHandler.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/handler/RedirectHandler.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/handler/RetryHandler.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/interceptor/redirectInterceptor.js","webpack://cache-action-entrypoint/../../src/llhttp/constants.ts","webpack://cache-action-entrypoint/../../node_modules/undici/lib/llhttp/llhttp-wasm.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/llhttp/llhttp_simd-wasm.js","webpack://cache-action-entrypoint/../../src/llhttp/utils.ts","webpack://cache-action-entrypoint/../../node_modules/undici/lib/mock/mock-agent.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/mock/mock-client.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/mock/mock-errors.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/mock/mock-interceptor.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/mock/mock-pool.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/mock/mock-symbols.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/mock/mock-utils.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/mock/pending-interceptors-formatter.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/mock/pluralizer.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/node/fixed-queue.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/pool-base.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/pool-stats.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/pool.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/proxy-agent.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/timers.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/websocket/connection.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/websocket/constants.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/websocket/events.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/websocket/frame.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/websocket/receiver.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/websocket/symbols.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/websocket/util.js","webpack://cache-action-entrypoint/../../node_modules/undici/lib/websocket/websocket.js","webpack://cache-action-entrypoint/../../../../cache-action-entrypoint/src/jsMain/kotlin/main.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/Strings.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Collections.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Maps.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Arrays.kt","webpack://cache-action-entrypoint/../../../../cache-proxy/src/jsMain/kotlin/com/github/burrunan/gradle/proxy/CacheProxy.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Result.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines/Continuation.kt","webpack://cache-action-entrypoint/../../../../cache-service-mock/src/jsMain/kotlin/com/github/burrunan/gradle/cache/HttpException.kt","webpack://cache-action-entrypoint/../../../../cache-service-mock/src/jsMain/kotlin/com/github/burrunan/gradle/cache/HttpExtensions.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/jsMain/kotlin/com/github/burrunan/launcher/GradleDistribution.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/jsMain/kotlin/com/github/burrunan/launcher/GradleInstaller.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-js-core/src/jsMain/kotlin/js/objects/unsafeJso.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Standard.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/jsMain/kotlin/com/github/burrunan/launcher/GradleLauncher.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/ExecListeners.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/ExecOptions.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/jsMain/kotlin/com/github/burrunan/launcher/GradleVersion.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/jsMain/kotlin/com/github/burrunan/launcher/LaunchParams.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/jsMain/kotlin/com/github/burrunan/launcher/internal/GradleError.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/jsMain/kotlin/com/github/burrunan/launcher/internal/GradleErrorCollector.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Collections.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/jsMain/kotlin/com/github/burrunan/launcher/internal/GradleOutErrorCollector.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/MutableCollections.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/AnnotationProperties.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/StringBuilder.kt","webpack://cache-action-entrypoint/../../../../hashing/src/jsMain/kotlin/com/github/burrunan/hashing/HashDetails.kt","webpack://cache-action-entrypoint/../../../../hashing/src/jsMain/kotlin/com/github/burrunan/hashing/diff.kt","webpack://cache-action-entrypoint/../../../../hashing/src/jsMain/kotlin/com/github/burrunan/hashing/hashFiles.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/stringJs.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/jsMain/kotlin/com/github/burrunan/gradle/GradleCacheAction.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/jsMain/kotlin/com/github/burrunan/gradle/Parameters.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/jsMain/kotlin/com/github/burrunan/gradle/cache/ActionsTriggerExtensions.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/jsMain/kotlin/com/github/burrunan/gradle/cache/CompositeCache.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/jsMain/kotlin/com/github/burrunan/gradle/cache/DefaultCache.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/jsMain/kotlin/com/github/burrunan/gradle/github/StateExtensions.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/jsMain/kotlin/com/github/burrunan/gradle/cache/LayeredCache.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/jsMain/kotlin/com/github/burrunan/gradle/cache/MetadataFile.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/jsMain/kotlin/com/github/burrunan/gradle/cache/dependenciesCache.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/jsMain/kotlin/com/github/burrunan/gradle/cache/localBuildCache.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/generated/_ArraysJs.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/jsMain/kotlin/com/github/burrunan/gradle/cache/GradleGeneratedJarsCache.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-cache/src/jsMain/kotlin/actions/cache/CacheExtensions.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-cache/src/jsMain/kotlin/actions/cache/RestoreType.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-toolkit/src/jsMain/kotlin/actions/core/ActionFailedException.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-toolkit/src/jsMain/kotlin/actions/core/ActionStage.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-toolkit/src/jsMain/kotlin/actions/core/ActionsEnvironment.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-toolkit/src/jsMain/kotlin/actions/core/LogLevel.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-toolkit/src/jsMain/kotlin/actions/core/ext/InputExtensions.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-toolkit/src/jsMain/kotlin/actions/exec/ExecExtensions.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-toolkit/src/jsMain/kotlin/actions/glob/removeFiles.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/InputOptions.kt","webpack://cache-action-entrypoint/../../../../wrappers/java-properties/src/jsMain/kotlin/javaproperties/parseString.kt","webpack://cache-action-entrypoint/../../../../wrappers/js/src/jsMain/kotlin/com/github/burrunan/formatBytes.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/builtins/Primitives.kt","webpack://cache-action-entrypoint/../../../../wrappers/nodejs/src/jsMain/kotlin/com/github/burrunan/wrappers/nodejs/FsExtensions.kt","webpack://cache-action-entrypoint/../../../../wrappers/nodejs/src/jsMain/kotlin/com/github/burrunan/wrappers/nodejs/StreamExtensions.kt","webpack://cache-action-entrypoint/../../../../wrappers/octokit-webhooks/src/jsMain/kotlin/octokit/ActionsTrigger.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-js-core/src/commonMain/kotlin/js/errors/JsErrorLike.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-js/src/commonMain/kotlin/js/promise/internal/thenToContinuation.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CancellableContinuation.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-js/src/commonMain/kotlin/js/promise/internal/await.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/js/math.polyfills.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/math.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/ArrayBuffer.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/js.arrays/fill.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines/CoroutineContext.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/js-builtin-sources/libraries/stdlib/jvm/builtins/Number.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Sets.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Ranges.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Sequences.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Strings.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Preconditions.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/builtins/Char.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/builtins/Enum.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/builtins/Library.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/BitMask.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/arrays.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/noPackageHacks.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/bitUtils.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/charSequenceJs.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/collectionsHacks.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/compareTo.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/coreRuntime.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/hacks.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/longJs.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/metadataUtils.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/numberConversion.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/unsigned/src/kotlin/UShort.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/primitiveCompanionObjects.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/rangeTo.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/reflectRuntime.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/typeCheckUtils.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/kotlin.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/generated/_DigitChars.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/NumbersJs.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/Unit.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collectionJs.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableCollection.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableList.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableMap.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableSet.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/ArrayFunctions.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/ArrayList.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/ArraySorting.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/HashMap.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/InternalHashMap.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/HashMapEntry.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/HashMapEntryDefault.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/HashSet.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/LinkedHashMap.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/LinkedHashSet.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/coroutines/CoroutineImpl.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/coroutines/InterceptedCoroutine.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/coroutines/SafeContinuationJs.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/coroutines/cancellation/CancellationException.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/coroutines/intrinsics/IntrinsicsJs.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/coroutines/js/internal/EmptyContinuation.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/exceptions.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/reflect/KClassImpl.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/reflect/primitives.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/reflect/reflection.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/sequenceJs.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/StringBuilderJs.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/charJs.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/generated/_WhitespaceChars.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/numberConversions.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/regex.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/stringsCode.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/throwableExtensions.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/generated/_ComparisonsJs.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractCollection.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractList.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractMap.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractSet.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/ArrayDeque.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/IndexedValue.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Iterables.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Iterators.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/PrimitiveIterators.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Sequences.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/comparisons/Comparisons.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines/ContinuationInterceptor.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines/CoroutineContextImpl.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines/intrinsics/Intrinsics.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/enums/EnumEntries.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/internal/progressionUtil.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/ranges/PrimitiveRanges.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/ranges/ProgressionIterators.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/ranges/Progressions.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/Appendable.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/Char.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/Indent.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/StringNumberConversions.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/DeepRecursive.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Lazy.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Tuples.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/HashCode.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/InternalMap.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/coroutineInternalJS.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/MapWithDefault.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Sets.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/math.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/ranges/Ranges.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-web/src/commonMain/generated/web/events/EventTarget.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-web/src/commonMain/kotlin/web/abort/internal/AbortSignal.safeAny.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-web/src/commonMain/kotlin/web/abort/internal/await.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-js/src/commonMain/kotlin/js/promise/PromiseLike.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-web/src/commonMain/kotlin/web/abort/internal/createAbortable.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/711ef0d9c7c28b00/atomicfu/src/commonMain/kotlin/kotlinx/atomicfu/Trace.common.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/711ef0d9c7c28b00/atomicfu/src/jsAndWasmSharedMain/kotlin/kotlinx/atomicfu/AtomicFU.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/AbstractCoroutine.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Builders.common.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CancellableContinuationImpl.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/DispatchedTask.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/711ef0d9c7c28b00/atomicfu/src/commonMain/kotlin/kotlinx/atomicfu/AtomicFU.common.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CompletionState.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CoroutineDispatcher.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CoroutineExceptionHandler.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CoroutineScope.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CoroutineStart.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/EventLoop.common.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/ThreadLocal.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Exceptions.common.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Job.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/JobSupport.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/Concurrent.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/LinkedList.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/MainCoroutineDispatcher.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Supervisor.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Unconfined.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/CoroutineExceptionHandlerImpl.common.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/CoroutineExceptionHandlerImpl.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/DispatchedContinuation.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/ThreadContext.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/Scopes.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/Symbol.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/intrinsics/Cancellable.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/CoroutineContext.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/Window.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/Debug.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/JSDispatcher.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/internal/CoroutineExceptionHandlerImpl.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmJsShared/src/EventLoop.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmJsShared/src/internal/JSDispatcher.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/CoroutineContext.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/Dispatchers.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/Exceptions.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/SchedulerTask.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/StackTraceRecovery.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/Synchronized.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/intrinsics/Undispatched.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/descriptors/SerialDescriptor.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/encoding/Decoding.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/PluginHelperInterfaces.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/SerializationExceptions.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/descriptors/ContextAware.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/descriptors/SerialKinds.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/encoding/AbstractDecoder.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/encoding/AbstractEncoder.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/AbstractPolymorphicSerializer.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/CollectionDescriptors.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/CollectionSerializers.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/ElementMarker.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/InlineClassDescriptor.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/Platform.common.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/PluginGeneratedSerialDescriptor.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/Primitives.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/Tagged.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/modules/SerializersModule.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/modules/SerializersModuleBuilders.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/jsMain/src/kotlinx/serialization/internal/Platform.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/SealedSerializer.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/encoding/Encoding.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/builtins/BuiltinSerializers.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/JsonInternalDependencies.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/PluginExceptions.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/PolymorphicSerializer.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/Json.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/JsonConfiguration.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/JsonElement.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/Composers.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/JsonElementMarker.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/JsonExceptions.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/JsonNamesMap.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/JsonPath.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/JsonTreeReader.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/lexer/AbstractJsonLexer.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/Polymorphic.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/SchemaCache.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/StreamingJsonDecoder.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/StreamingJsonEncoder.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/StringOps.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/CharCode.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/TreeJsonDecoder.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/WriteMode.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/lexer/CommentLexers.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/lexer/StringJsonLexer.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/jsWasmMain/src/kotlinx/serialization/json/JsonSchemaCache.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/jsWasmMain/src/kotlinx/serialization/json/internal/JsonToStringWriterJsWasm.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/jsWasmMain/src/kotlinx/serialization/json/internal/createMapForCache.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/JsonStreams.kt","webpack://cache-action-entrypoint/../../../../../../../../.gradle/daemon/8.14/Z:/BuildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/TreeJsonEncoder.kt","webpack://cache-action-entrypoint/external node-commonjs \"assert\"","webpack://cache-action-entrypoint/external node-commonjs \"async_hooks\"","webpack://cache-action-entrypoint/external node-commonjs \"buffer\"","webpack://cache-action-entrypoint/external node-commonjs \"child_process\"","webpack://cache-action-entrypoint/external node-commonjs \"console\"","webpack://cache-action-entrypoint/external node-commonjs \"crypto\"","webpack://cache-action-entrypoint/external node-commonjs \"diagnostics_channel\"","webpack://cache-action-entrypoint/external node-commonjs \"events\"","webpack://cache-action-entrypoint/external node-commonjs \"fs\"","webpack://cache-action-entrypoint/external node-commonjs \"http\"","webpack://cache-action-entrypoint/external node-commonjs \"http2\"","webpack://cache-action-entrypoint/external node-commonjs \"https\"","webpack://cache-action-entrypoint/external node-commonjs \"net\"","webpack://cache-action-entrypoint/external node-commonjs \"node:crypto\"","webpack://cache-action-entrypoint/external node-commonjs \"node:events\"","webpack://cache-action-entrypoint/external node-commonjs \"node:fs\"","webpack://cache-action-entrypoint/external node-commonjs \"node:fs/promises\"","webpack://cache-action-entrypoint/external node-commonjs \"node:http\"","webpack://cache-action-entrypoint/external node-commonjs \"node:os\"","webpack://cache-action-entrypoint/external node-commonjs \"node:path\"","webpack://cache-action-entrypoint/external node-commonjs \"node:process\"","webpack://cache-action-entrypoint/external node-commonjs \"node:stream\"","webpack://cache-action-entrypoint/external node-commonjs \"node:stream/promises\"","webpack://cache-action-entrypoint/external node-commonjs \"node:url\"","webpack://cache-action-entrypoint/external node-commonjs \"node:util\"","webpack://cache-action-entrypoint/external node-commonjs \"os\"","webpack://cache-action-entrypoint/external node-commonjs \"path\"","webpack://cache-action-entrypoint/external node-commonjs \"perf_hooks\"","webpack://cache-action-entrypoint/external node-commonjs \"querystring\"","webpack://cache-action-entrypoint/external node-commonjs \"stream\"","webpack://cache-action-entrypoint/external node-commonjs \"stream/web\"","webpack://cache-action-entrypoint/external node-commonjs \"string_decoder\"","webpack://cache-action-entrypoint/external node-commonjs \"timers\"","webpack://cache-action-entrypoint/external node-commonjs \"tls\"","webpack://cache-action-entrypoint/external node-commonjs \"tty\"","webpack://cache-action-entrypoint/external node-commonjs \"url\"","webpack://cache-action-entrypoint/external node-commonjs \"util\"","webpack://cache-action-entrypoint/external node-commonjs \"util/types\"","webpack://cache-action-entrypoint/external node-commonjs \"worker_threads\"","webpack://cache-action-entrypoint/external node-commonjs \"zlib\"","webpack://cache-action-entrypoint/../../node_modules/@azure/core-client/src/state-cjs.cts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-tracing/src/state-cjs.cts","webpack://cache-action-entrypoint/../../node_modules/@fastify/busboy/deps/dicer/lib/Dicer.js","webpack://cache-action-entrypoint/../../node_modules/@fastify/busboy/deps/dicer/lib/HeaderParser.js","webpack://cache-action-entrypoint/../../node_modules/@fastify/busboy/deps/dicer/lib/PartStream.js","webpack://cache-action-entrypoint/../../node_modules/@fastify/busboy/deps/streamsearch/sbmh.js","webpack://cache-action-entrypoint/../../node_modules/@fastify/busboy/lib/main.js","webpack://cache-action-entrypoint/../../node_modules/@fastify/busboy/lib/types/multipart.js","webpack://cache-action-entrypoint/../../node_modules/@fastify/busboy/lib/types/urlencoded.js","webpack://cache-action-entrypoint/../../node_modules/@fastify/busboy/lib/utils/Decoder.js","webpack://cache-action-entrypoint/../../node_modules/@fastify/busboy/lib/utils/basename.js","webpack://cache-action-entrypoint/../../node_modules/@fastify/busboy/lib/utils/decodeText.js","webpack://cache-action-entrypoint/../../node_modules/@fastify/busboy/lib/utils/getLimit.js","webpack://cache-action-entrypoint/../../node_modules/@fastify/busboy/lib/utils/parseParams.js","webpack://cache-action-entrypoint/webpack/bootstrap","webpack://cache-action-entrypoint/webpack/runtime/compat get default export","webpack://cache-action-entrypoint/webpack/runtime/define property getters","webpack://cache-action-entrypoint/webpack/runtime/hasOwnProperty shorthand","webpack://cache-action-entrypoint/webpack/runtime/make namespace object","webpack://cache-action-entrypoint/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cache-action-entrypoint\"] = factory();\n\telse\n\t\troot[\"cache-action-entrypoint\"] = factory();\n})(this, () => {\nreturn ","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../shims-public.d.ts\" />\n\ntype AbortEventListener = (this: AbortSignalLike, ev?: any) => any;\n\nconst listenersMap = new WeakMap<AbortSignal, AbortEventListener[]>();\nconst abortedMap = new WeakMap<AbortSignal, boolean>();\n\n/**\n * Allows the request to be aborted upon firing of the \"abort\" event.\n * Compatible with the browser built-in AbortSignal and common polyfills.\n */\nexport interface AbortSignalLike {\n  /**\n   * Indicates if the signal has already been aborted.\n   */\n  readonly aborted: boolean;\n  /**\n   * Add new \"abort\" event listener, only support \"abort\" event.\n   */\n  addEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   */\n  removeEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n}\n\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call AbortSignal.none to create a new AbortSignal instance that cannot be cancelled.\n * Use `AbortSignal.none` when you are required to pass a cancellation token but the operation\n * cannot or will not ever be cancelled.\n *\n * @example\n * Abort without timeout\n * ```ts\n * await doAsyncWork(AbortSignal.none);\n * ```\n */\nexport class AbortSignal implements AbortSignalLike {\n  constructor() {\n    listenersMap.set(this, []);\n    abortedMap.set(this, false);\n  }\n\n  /**\n   * Status of whether aborted or not.\n   *\n   * @readonly\n   */\n  public get aborted(): boolean {\n    if (!abortedMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    return abortedMap.get(this)!;\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will never be aborted.\n   *\n   * @readonly\n   */\n  public static get none(): AbortSignal {\n    return new AbortSignal();\n  }\n\n  /**\n   * onabort event listener.\n   */\n  public onabort: ((ev?: Event) => any) | null = null;\n\n  /**\n   * Added new \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param _type - Only support \"abort\" event\n   * @param listener - The listener to be added\n   */\n  public addEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n    listeners.push(listener);\n  }\n\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param _type - Only support \"abort\" event\n   * @param listener - The listener to be removed\n   */\n  public removeEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Dispatches a synthetic event to the AbortSignal.\n   */\n  dispatchEvent(_event: Event): boolean {\n    throw new Error(\n      \"This is a stub dispatchEvent implementation that should not be used.  It only exists for type-checking purposes.\"\n    );\n  }\n}\n\n/**\n * Helper to trigger an abort event immediately, the onabort and all abort event listeners will be triggered.\n * Will try to trigger abort event for all linked AbortSignal nodes.\n *\n * - If there is a timeout, the timer will be cancelled.\n * - If aborted is true, nothing will happen.\n *\n * @internal\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\nexport function abortSignal(signal: AbortSignal): void {\n  if (signal.aborted) {\n    return;\n  }\n\n  if (signal.onabort) {\n    signal.onabort.call(signal);\n  }\n\n  const listeners = listenersMap.get(signal)!;\n  if (listeners) {\n    // Create a copy of listeners so mutations to the array\n    // (e.g. via removeListener calls) don't affect the listeners\n    // we invoke.\n    listeners.slice().forEach((listener) => {\n      listener.call(signal, { type: \"abort\" });\n    });\n  }\n\n  abortedMap.set(signal, true);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignal, AbortSignalLike, abortSignal } from \"./AbortSignal\";\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n\n/**\n * An AbortController provides an AbortSignal and the associated controls to signal\n * that an asynchronous operation should be aborted.\n *\n * @example\n * Abort an operation when another event fires\n * ```ts\n * const controller = new AbortController();\n * const signal = controller.signal;\n * doAsyncWork(signal);\n * button.addEventListener('click', () => controller.abort());\n * ```\n *\n * @example\n * Share aborter cross multiple operations in 30s\n * ```ts\n * // Upload the same data to 2 different data centers at the same time,\n * // abort another when any of them is finished\n * const controller = AbortController.withTimeout(30 * 1000);\n * doAsyncWork(controller.signal).then(controller.abort);\n * doAsyncWork(controller.signal).then(controller.abort);\n *```\n *\n * @example\n * Cascaded aborting\n * ```ts\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * ```\n */\nexport class AbortController {\n  private _signal: AbortSignal;\n\n  /**\n   * @param parentSignals - The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   */\n  constructor(parentSignals?: AbortSignalLike[]);\n  /**\n   * @param parentSignals - The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   */\n  constructor(...parentSignals: AbortSignalLike[]);\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  constructor(parentSignals?: any) {\n    this._signal = new AbortSignal();\n\n    if (!parentSignals) {\n      return;\n    }\n    // coerce parentSignals into an array\n    if (!Array.isArray(parentSignals)) {\n      // eslint-disable-next-line prefer-rest-params\n      parentSignals = arguments;\n    }\n    for (const parentSignal of parentSignals) {\n      // if the parent signal has already had abort() called,\n      // then call abort on this signal as well.\n      if (parentSignal.aborted) {\n        this.abort();\n      } else {\n        // when the parent signal aborts, this signal should as well.\n        parentSignal.addEventListener(\"abort\", () => {\n          this.abort();\n        });\n      }\n    }\n  }\n\n  /**\n   * The AbortSignal associated with this controller that will signal aborted\n   * when the abort method is called on this controller.\n   *\n   * @readonly\n   */\n  public get signal(): AbortSignal {\n    return this._signal;\n  }\n\n  /**\n   * Signal that any operations passed this controller's associated abort signal\n   * to cancel any remaining work and throw an `AbortError`.\n   */\n  abort(): void {\n    abortSignal(this._signal);\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will abort after the provided ms.\n   * @param ms - Elapsed time in milliseconds to trigger an abort.\n   */\n  public static timeout(ms: number): AbortSignal {\n    const signal = new AbortSignal();\n    const timer = setTimeout(abortSignal, ms, signal);\n    // Prevent the active Timer from keeping the Node.js event loop active.\n    if (typeof timer.unref === \"function\") {\n      timer.unref();\n    }\n    return signal;\n  }\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts snippet:ReadmeSampleAbortError\n * import { AbortError } from \"@typespec/ts-http-runtime\";\n *\n * async function doAsyncWork(options: { abortSignal: AbortSignal }): Promise<void> {\n *   if (options.abortSignal.aborted) {\n *     throw new AbortError();\n *   }\n *\n *   // do async work\n * }\n *\n * const controller = new AbortController();\n * controller.abort();\n *\n * try {\n *   doAsyncWork({ abortSignal: controller.signal });\n * } catch (e) {\n *   if (e instanceof Error && e.name === \"AbortError\") {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { log } from \"./log.js\";\n\n/**\n * A simple mechanism for enabling logging.\n * Intended to mimic the publicly available `debug` package.\n */\nexport interface Debug {\n  /**\n   * Creates a new logger with the given namespace.\n   */\n  (namespace: string): Debugger;\n  /**\n   * The default log method (defaults to console)\n   */\n  log: (...args: any[]) => void;\n  /**\n   * Enables a particular set of namespaces.\n   * To enable multiple separate them with commas, e.g. \"info,debug\".\n   * Supports wildcards, e.g. \"typeSpecRuntime:*\"\n   * Supports skip syntax, e.g. \"typeSpecRuntime:*,-typeSpecRuntime:storage:*\" will enable\n   * everything under typeSpecRuntime except for things under typeSpecRuntime:storage.\n   */\n  enable: (namespaces: string) => void;\n  /**\n   * Checks if a particular namespace is enabled.\n   */\n  enabled: (namespace: string) => boolean;\n  /**\n   * Disables all logging, returns what was previously enabled.\n   */\n  disable: () => string;\n}\n\n/**\n * A log function that can be dynamically enabled and redirected.\n */\nexport interface Debugger {\n  /**\n   * Logs the given arguments to the `log` method.\n   */\n  (...args: any[]): void;\n  /**\n   * True if this logger is active and logging.\n   */\n  enabled: boolean;\n  /**\n   * Used to cleanup/remove this logger.\n   */\n  destroy: () => boolean;\n  /**\n   * The current log method. Can be overridden to redirect output.\n   */\n  log: (...args: any[]) => void;\n  /**\n   * The namespace of this logger.\n   */\n  namespace: string;\n  /**\n   * Extends this logger with a child namespace.\n   * Namespaces are separated with a ':' character.\n   */\n  extend: (namespace: string) => Debugger;\n}\n\nconst debugEnvVariable =\n  (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\n\nlet enabledString: string | undefined;\nlet enabledNamespaces: RegExp[] = [];\nlet skippedNamespaces: RegExp[] = [];\nconst debuggers: Debugger[] = [];\n\nif (debugEnvVariable) {\n  enable(debugEnvVariable);\n}\n\nconst debugObj: Debug = Object.assign(\n  (namespace: string): Debugger => {\n    return createDebugger(namespace);\n  },\n  {\n    enable,\n    enabled,\n    disable,\n    log,\n  },\n);\n\nfunction enable(namespaces: string): void {\n  enabledString = namespaces;\n  enabledNamespaces = [];\n  skippedNamespaces = [];\n  const wildcard = /\\*/g;\n  const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n  for (const ns of namespaceList) {\n    if (ns.startsWith(\"-\")) {\n      skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n    } else {\n      enabledNamespaces.push(new RegExp(`^${ns}$`));\n    }\n  }\n  for (const instance of debuggers) {\n    instance.enabled = enabled(instance.namespace);\n  }\n}\n\nfunction enabled(namespace: string): boolean {\n  if (namespace.endsWith(\"*\")) {\n    return true;\n  }\n\n  for (const skipped of skippedNamespaces) {\n    if (skipped.test(namespace)) {\n      return false;\n    }\n  }\n  for (const enabledNamespace of enabledNamespaces) {\n    if (enabledNamespace.test(namespace)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction disable(): string {\n  const result = enabledString || \"\";\n  enable(\"\");\n  return result;\n}\n\nfunction createDebugger(namespace: string): Debugger {\n  const newDebugger: Debugger = Object.assign(debug, {\n    enabled: enabled(namespace),\n    destroy,\n    log: debugObj.log,\n    namespace,\n    extend,\n  });\n\n  function debug(...args: any[]): void {\n    if (!newDebugger.enabled) {\n      return;\n    }\n    if (args.length > 0) {\n      args[0] = `${namespace} ${args[0]}`;\n    }\n    newDebugger.log(...args);\n  }\n\n  debuggers.push(newDebugger);\n\n  return newDebugger;\n}\n\nfunction destroy(this: Debugger): boolean {\n  const index = debuggers.indexOf(this);\n  if (index >= 0) {\n    debuggers.splice(index, 1);\n    return true;\n  }\n  return false;\n}\n\nfunction extend(this: Debugger, namespace: string): Debugger {\n  const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n  newDebugger.log = this.log;\n  return newDebugger;\n}\n\nexport default debugObj;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { EOL } from \"node:os\";\nimport util from \"node:util\";\nimport * as process from \"node:process\";\n\nexport function log(message: unknown, ...args: any[]): void {\n  process.stderr.write(`${util.format(message, ...args)}${EOL}`);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport debug from \"./debug.js\";\n\nimport type { Debugger } from \"./debug.js\";\nexport type { Debugger };\n\n/**\n * The log levels supported by the logger.\n * The log levels in order of most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport type TypeSpecRuntimeLogLevel = \"verbose\" | \"info\" | \"warning\" | \"error\";\n\n/**\n * A TypeSpecRuntimeClientLogger is a function that can log to an appropriate severity level.\n */\nexport type TypeSpecRuntimeClientLogger = Debugger;\n\n/**\n * Defines the methods available on the SDK-facing logger.\n */\nexport interface TypeSpecRuntimeLogger {\n  /**\n   * Used for failures the program is unlikely to recover from,\n   * such as Out of Memory.\n   */\n  error: Debugger;\n  /**\n   * Used when a function fails to perform its intended task.\n   * Usually this means the function will throw an exception.\n   * Not used for self-healing events (e.g. automatic retry)\n   */\n  warning: Debugger;\n  /**\n   * Used when a function operates normally.\n   */\n  info: Debugger;\n  /**\n   * Used for detailed troubleshooting scenarios. This is\n   * intended for use by developers / system administrators\n   * for diagnosing specific failures.\n   */\n  verbose: Debugger;\n}\n\n/**\n * todo doc\n */\nexport interface LoggerContext {\n  /**\n   * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n   * @param level - The log level to enable for logging.\n   * Options from most verbose to least verbose are:\n   * - verbose\n   * - info\n   * - warning\n   * - error\n   */\n  setLogLevel(logLevel?: TypeSpecRuntimeLogLevel): void;\n\n  /**\n   * Retrieves the currently specified log level.\n   */\n  getLogLevel(): TypeSpecRuntimeLogLevel | undefined;\n\n  /**\n   * Creates a logger for use by the SDKs that inherits from `TypeSpecRuntimeLogger`.\n   * @param namespace - The name of the SDK package.\n   * @hidden\n   */\n  createClientLogger(namespace: string): TypeSpecRuntimeLogger;\n\n  /**\n   * The TypeSpecRuntimeClientLogger provides a mechanism for overriding where logs are output to.\n   * By default, logs are sent to stderr.\n   * Override the `log` method to redirect logs to another location.\n   */\n  logger: TypeSpecRuntimeClientLogger;\n}\n\n/**\n * Option for creating a TypeSpecRuntimeLoggerContext.\n */\nexport interface CreateLoggerContextOptions {\n  /**\n   * The name of the environment variable to check for the log level.\n   */\n  logLevelEnvVarName: string;\n\n  /**\n   * The namespace of the logger.\n   */\n  namespace: string;\n}\n\nconst TYPESPEC_RUNTIME_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\n\ntype DebuggerWithLogLevel = Debugger & { level: TypeSpecRuntimeLogLevel };\n\nconst levelMap = {\n  verbose: 400,\n  info: 300,\n  warning: 200,\n  error: 100,\n};\n\nfunction patchLogMethod(\n  parent: TypeSpecRuntimeClientLogger,\n  child: TypeSpecRuntimeClientLogger | DebuggerWithLogLevel,\n): void {\n  child.log = (...args) => {\n    parent.log(...args);\n  };\n}\n\nfunction isTypeSpecRuntimeLogLevel(level: string): level is TypeSpecRuntimeLogLevel {\n  return TYPESPEC_RUNTIME_LOG_LEVELS.includes(level as any);\n}\n\n/**\n * Creates a logger context base on the provided options.\n * @param options - The options for creating a logger context.\n * @returns The logger context.\n */\nexport function createLoggerContext(options: CreateLoggerContextOptions): LoggerContext {\n  const registeredLoggers = new Set<DebuggerWithLogLevel>();\n  const logLevelFromEnv =\n    (typeof process !== \"undefined\" && process.env && process.env[options.logLevelEnvVarName]) ||\n    undefined;\n\n  let logLevel: TypeSpecRuntimeLogLevel | undefined;\n\n  const clientLogger: TypeSpecRuntimeClientLogger = debug(options.namespace);\n  clientLogger.log = (...args) => {\n    debug.log(...args);\n  };\n\n  if (logLevelFromEnv) {\n    // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n    if (isTypeSpecRuntimeLogLevel(logLevelFromEnv)) {\n      setLogLevel(logLevelFromEnv);\n    } else {\n      console.error(\n        `${options.logLevelEnvVarName} set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${TYPESPEC_RUNTIME_LOG_LEVELS.join(\n          \", \",\n        )}.`,\n      );\n    }\n  }\n\n  function shouldEnable(logger: DebuggerWithLogLevel): boolean {\n    return Boolean(logLevel && levelMap[logger.level] <= levelMap[logLevel]);\n  }\n\n  function createLogger(\n    parent: TypeSpecRuntimeClientLogger,\n    level: TypeSpecRuntimeLogLevel,\n  ): DebuggerWithLogLevel {\n    const logger: DebuggerWithLogLevel = Object.assign(parent.extend(level), {\n      level,\n    });\n\n    patchLogMethod(parent, logger);\n\n    if (shouldEnable(logger)) {\n      const enabledNamespaces = debug.disable();\n      debug.enable(enabledNamespaces + \",\" + logger.namespace);\n    }\n\n    registeredLoggers.add(logger);\n\n    return logger;\n  }\n\n  return {\n    setLogLevel(level?: TypeSpecRuntimeLogLevel): void {\n      if (level && !isTypeSpecRuntimeLogLevel(level)) {\n        throw new Error(\n          `Unknown log level '${level}'. Acceptable values: ${TYPESPEC_RUNTIME_LOG_LEVELS.join(\",\")}`,\n        );\n      }\n      logLevel = level;\n\n      const enabledNamespaces = [];\n      for (const logger of registeredLoggers) {\n        if (shouldEnable(logger)) {\n          enabledNamespaces.push(logger.namespace);\n        }\n      }\n\n      debug.enable(enabledNamespaces.join(\",\"));\n    },\n    getLogLevel(): TypeSpecRuntimeLogLevel | undefined {\n      return logLevel;\n    },\n    createClientLogger(namespace: string): TypeSpecRuntimeLogger {\n      const clientRootLogger: TypeSpecRuntimeClientLogger = clientLogger.extend(namespace);\n      patchLogMethod(clientLogger, clientRootLogger);\n      return {\n        error: createLogger(clientRootLogger, \"error\"),\n        warning: createLogger(clientRootLogger, \"warning\"),\n        info: createLogger(clientRootLogger, \"info\"),\n        verbose: createLogger(clientRootLogger, \"verbose\"),\n      };\n    },\n    logger: clientLogger,\n  };\n}\n\nconst context = createLoggerContext({\n  logLevelEnvVarName: \"TYPESPEC_RUNTIME_LOG_LEVEL\",\n  namespace: \"typeSpecRuntime\",\n});\n\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const TypeSpecRuntimeLogger: TypeSpecRuntimeClientLogger = context.logger;\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function setLogLevel(logLevel?: TypeSpecRuntimeLogLevel): void {\n  context.setLogLevel(logLevel);\n}\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel(): TypeSpecRuntimeLogLevel | undefined {\n  return context.getLogLevel();\n}\n\n/**\n * Creates a logger for use by the SDKs that inherits from `TypeSpecRuntimeLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace: string): TypeSpecRuntimeLogger {\n  return context.createClientLogger(namespace);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpHeaders, RawHttpHeaders, RawHttpHeadersInput } from \"./interfaces.js\";\n\ninterface HeaderEntry {\n  name: string;\n  value: string;\n}\n\nfunction normalizeName(name: string): string {\n  return name.toLowerCase();\n}\n\nfunction* headerIterator(map: Map<string, HeaderEntry>): IterableIterator<[string, string]> {\n  for (const entry of map.values()) {\n    yield [entry.name, entry.value];\n  }\n}\n\nclass HttpHeadersImpl implements HttpHeaders {\n  private readonly _headersMap: Map<string, HeaderEntry>;\n\n  constructor(rawHeaders?: RawHttpHeaders | RawHttpHeadersInput) {\n    this._headersMap = new Map<string, HeaderEntry>();\n    if (rawHeaders) {\n      for (const headerName of Object.keys(rawHeaders)) {\n        this.set(headerName, rawHeaders[headerName]);\n      }\n    }\n  }\n\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param name - The name of the header to set. This value is case-insensitive.\n   * @param value - The value of the header to set.\n   */\n  public set(name: string, value: string | number | boolean): void {\n    this._headersMap.set(normalizeName(name), { name, value: String(value).trim() });\n  }\n\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param name - The name of the header. This value is case-insensitive.\n   */\n  public get(name: string): string | undefined {\n    return this._headersMap.get(normalizeName(name))?.value;\n  }\n\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   * @param name - The name of the header to set. This value is case-insensitive.\n   */\n  public has(name: string): boolean {\n    return this._headersMap.has(normalizeName(name));\n  }\n\n  /**\n   * Remove the header with the provided headerName.\n   * @param name - The name of the header to remove.\n   */\n  public delete(name: string): void {\n    this._headersMap.delete(normalizeName(name));\n  }\n\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   */\n  public toJSON(options: { preserveCase?: boolean } = {}): RawHttpHeaders {\n    const result: RawHttpHeaders = {};\n    if (options.preserveCase) {\n      for (const entry of this._headersMap.values()) {\n        result[entry.name] = entry.value;\n      }\n    } else {\n      for (const [normalizedName, entry] of this._headersMap) {\n        result[normalizedName] = entry.value;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Get the string representation of this HTTP header collection.\n   */\n  public toString(): string {\n    return JSON.stringify(this.toJSON({ preserveCase: true }));\n  }\n\n  /**\n   * Iterate over tuples of header [name, value] pairs.\n   */\n  [Symbol.iterator](): Iterator<[string, string]> {\n    return headerIterator(this._headersMap);\n  }\n}\n\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nexport function createHttpHeaders(rawHeaders?: RawHttpHeadersInput): HttpHeaders {\n  return new HttpHeadersImpl(rawHeaders);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { randomUUID as v4RandomUUID } from \"node:crypto\";\n\ninterface Crypto {\n  randomUUID(): string;\n}\n\ndeclare const globalThis: {\n  crypto: Crypto;\n};\n\n// NOTE: This is a workaround until we can use `globalThis.crypto.randomUUID` in Node.js 19+.\nconst uuidFunction =\n  typeof globalThis?.crypto?.randomUUID === \"function\"\n    ? globalThis.crypto.randomUUID.bind(globalThis.crypto)\n    : v4RandomUUID;\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID(): string {\n  return uuidFunction();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  FormDataMap,\n  HttpHeaders,\n  HttpMethods,\n  MultipartRequestBody,\n  PipelineRequest,\n  ProxySettings,\n  RequestBodyType,\n  TransferProgressEvent,\n} from \"./interfaces.js\";\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { randomUUID } from \"./util/uuidUtils.js\";\n\n/**\n * Settings to initialize a request.\n * Almost equivalent to Partial<PipelineRequest>, but url is mandatory.\n */\nexport interface PipelineRequestOptions {\n  /**\n   * The URL to make the request to.\n   */\n  url: string;\n\n  /**\n   * The HTTP method to use when making the request.\n   */\n  method?: HttpMethods;\n\n  /**\n   * The HTTP headers to use when making the request.\n   */\n  headers?: HttpHeaders;\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   * Defaults to 0, which disables the timeout.\n   */\n  timeout?: number;\n\n  /**\n   * If credentials (cookies) should be sent along during an XHR.\n   * Defaults to false.\n   */\n  withCredentials?: boolean;\n\n  /**\n   * A unique identifier for the request. Used for logging and tracing.\n   */\n  requestId?: string;\n\n  /**\n   * The HTTP body content (if any)\n   */\n  body?: RequestBodyType;\n\n  /**\n   * Body for a multipart request.\n   */\n  multipartBody?: MultipartRequestBody;\n\n  /**\n   * To simulate a browser form post\n   */\n  formData?: FormDataMap;\n\n  /**\n   * A list of response status codes whose corresponding PipelineResponse body should be treated as a stream.\n   */\n  streamResponseStatusCodes?: Set<number>;\n\n  /**\n   * BROWSER ONLY\n   *\n   * A browser only option to enable use of the Streams API. If this option is set and streaming is used\n   * (see `streamResponseStatusCodes`), the response will have a property `browserStream` instead of\n   * `blobBody` which will be undefined.\n   *\n   * Default value is false\n   */\n  enableBrowserStreams?: boolean;\n\n  /**\n   * Proxy configuration.\n   */\n  proxySettings?: ProxySettings;\n\n  /**\n   * If the connection should not be reused.\n   */\n  disableKeepAlive?: boolean;\n\n  /**\n   * Used to abort the request later.\n   */\n  abortSignal?: AbortSignal;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Set to true if the request is sent over HTTP instead of HTTPS */\n  allowInsecureConnection?: boolean;\n\n  /**\n   * Additional options to set on the request. This provides a way to override\n   * existing ones or provide request properties that are not declared.\n   *\n   * For possible valid properties, see\n   *   - NodeJS https.request options:  https://nodejs.org/api/http.html#httprequestoptions-callback\n   *   - Browser RequestInit: https://developer.mozilla.org/en-US/docs/Web/API/RequestInit\n   *\n   * WARNING: Options specified here will override any properties of same names when request is sent by {@link HttpClient}.\n   */\n  requestOverrides?: Record<string, unknown>;\n}\n\nclass PipelineRequestImpl implements PipelineRequest {\n  public url: string;\n  public method: HttpMethods;\n  public headers: HttpHeaders;\n  public timeout: number;\n  public withCredentials: boolean;\n  public body?: RequestBodyType;\n  public multipartBody?: MultipartRequestBody;\n  public formData?: FormDataMap;\n  public streamResponseStatusCodes?: Set<number>;\n  public enableBrowserStreams: boolean;\n\n  public proxySettings?: ProxySettings;\n  public disableKeepAlive: boolean;\n  public abortSignal?: AbortSignal;\n  public requestId: string;\n  public allowInsecureConnection?: boolean;\n  public onUploadProgress?: (progress: TransferProgressEvent) => void;\n  public onDownloadProgress?: (progress: TransferProgressEvent) => void;\n  public requestOverrides?: Record<string, unknown>;\n\n  constructor(options: PipelineRequestOptions) {\n    this.url = options.url;\n    this.body = options.body;\n    this.headers = options.headers ?? createHttpHeaders();\n    this.method = options.method ?? \"GET\";\n    this.timeout = options.timeout ?? 0;\n    this.multipartBody = options.multipartBody;\n    this.formData = options.formData;\n    this.disableKeepAlive = options.disableKeepAlive ?? false;\n    this.proxySettings = options.proxySettings;\n    this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n    this.withCredentials = options.withCredentials ?? false;\n    this.abortSignal = options.abortSignal;\n    this.onUploadProgress = options.onUploadProgress;\n    this.onDownloadProgress = options.onDownloadProgress;\n    this.requestId = options.requestId || randomUUID();\n    this.allowInsecureConnection = options.allowInsecureConnection ?? false;\n    this.enableBrowserStreams = options.enableBrowserStreams ?? false;\n    this.requestOverrides = options.requestOverrides;\n  }\n}\n\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nexport function createPipelineRequest(options: PipelineRequestOptions): PipelineRequest {\n  return new PipelineRequestImpl(options);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient, PipelineRequest, PipelineResponse, SendRequest } from \"./interfaces.js\";\n\n/**\n * Policies are executed in phases.\n * The execution order is:\n * 1. Serialize Phase\n * 2. Policies not in a phase\n * 3. Deserialize Phase\n * 4. Retry Phase\n * 5. Sign Phase\n */\nexport type PipelinePhase = \"Deserialize\" | \"Serialize\" | \"Retry\" | \"Sign\";\n\nconst ValidPhaseNames = new Set<PipelinePhase>([\"Deserialize\", \"Serialize\", \"Retry\", \"Sign\"]);\n\n/**\n * Options when adding a policy to the pipeline.\n * Used to express dependencies on other policies.\n */\nexport interface AddPolicyOptions {\n  /**\n   * Policies that this policy must come before.\n   */\n  beforePolicies?: string[];\n  /**\n   * Policies that this policy must come after.\n   */\n  afterPolicies?: string[];\n  /**\n   * The phase that this policy must come after.\n   */\n  afterPhase?: PipelinePhase;\n  /**\n   * The phase this policy belongs to.\n   */\n  phase?: PipelinePhase;\n}\n\n/**\n * A pipeline policy manipulates a request as it travels through the pipeline.\n * It is conceptually a middleware that is allowed to modify the request before\n * it is made as well as the response when it is received.\n */\nexport interface PipelinePolicy {\n  /**\n   * The policy name. Must be a unique string in the pipeline.\n   */\n  name: string;\n  /**\n   * The main method to implement that manipulates a request/response.\n   * @param request - The request being performed.\n   * @param next - The next policy in the pipeline. Must be called to continue the pipeline.\n   */\n  sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse>;\n}\n\n/**\n * Represents a pipeline for making a HTTP request to a URL.\n * Pipelines can have multiple policies to manage manipulating each request\n * before and after it is made to the server.\n */\nexport interface Pipeline {\n  /**\n   * Add a new policy to the pipeline.\n   * @param policy - A policy that manipulates a request.\n   * @param options - A set of options for when the policy should run.\n   */\n  addPolicy(policy: PipelinePolicy, options?: AddPolicyOptions): void;\n  /**\n   * Remove a policy from the pipeline.\n   * @param options - Options that let you specify which policies to remove.\n   */\n  removePolicy(options: { name?: string; phase?: PipelinePhase }): PipelinePolicy[];\n  /**\n   * Uses the pipeline to make a HTTP request.\n   * @param httpClient - The HttpClient that actually performs the request.\n   * @param request - The request to be made.\n   */\n  sendRequest(httpClient: HttpClient, request: PipelineRequest): Promise<PipelineResponse>;\n  /**\n   * Returns the current set of policies in the pipeline in the order in which\n   * they will be applied to the request. Later in the list is closer to when\n   * the request is performed.\n   */\n  getOrderedPolicies(): PipelinePolicy[];\n  /**\n   * Duplicates this pipeline to allow for modifying an existing one without mutating it.\n   */\n  clone(): Pipeline;\n}\n\ninterface PipelineDescriptor {\n  policy: PipelinePolicy;\n  options: AddPolicyOptions;\n}\n\ninterface PolicyGraphNode {\n  policy: PipelinePolicy;\n  dependsOn: Set<PolicyGraphNode>;\n  dependants: Set<PolicyGraphNode>;\n  afterPhase?: Phase;\n}\n\ninterface Phase {\n  name: PipelinePhase | \"None\";\n  policies: Set<PolicyGraphNode>;\n  hasRun: boolean;\n  hasAfterPolicies: boolean;\n}\n\n/**\n * A private implementation of Pipeline.\n * Do not export this class from the package.\n * @internal\n */\nclass HttpPipeline implements Pipeline {\n  private _policies: PipelineDescriptor[] = [];\n  private _orderedPolicies?: PipelinePolicy[];\n\n  private constructor(policies?: PipelineDescriptor[]) {\n    this._policies = policies?.slice(0) ?? [];\n    this._orderedPolicies = undefined;\n  }\n\n  public addPolicy(policy: PipelinePolicy, options: AddPolicyOptions = {}): void {\n    if (options.phase && options.afterPhase) {\n      throw new Error(\"Policies inside a phase cannot specify afterPhase.\");\n    }\n    if (options.phase && !ValidPhaseNames.has(options.phase)) {\n      throw new Error(`Invalid phase name: ${options.phase}`);\n    }\n    if (options.afterPhase && !ValidPhaseNames.has(options.afterPhase)) {\n      throw new Error(`Invalid afterPhase name: ${options.afterPhase}`);\n    }\n    this._policies.push({\n      policy,\n      options,\n    });\n    this._orderedPolicies = undefined;\n  }\n\n  public removePolicy(options: { name?: string; phase?: string }): PipelinePolicy[] {\n    const removedPolicies: PipelinePolicy[] = [];\n\n    this._policies = this._policies.filter((policyDescriptor) => {\n      if (\n        (options.name && policyDescriptor.policy.name === options.name) ||\n        (options.phase && policyDescriptor.options.phase === options.phase)\n      ) {\n        removedPolicies.push(policyDescriptor.policy);\n        return false;\n      } else {\n        return true;\n      }\n    });\n    this._orderedPolicies = undefined;\n\n    return removedPolicies;\n  }\n\n  public sendRequest(httpClient: HttpClient, request: PipelineRequest): Promise<PipelineResponse> {\n    const policies = this.getOrderedPolicies();\n\n    const pipeline = policies.reduceRight<SendRequest>(\n      (next, policy) => {\n        return (req: PipelineRequest) => {\n          return policy.sendRequest(req, next);\n        };\n      },\n      (req: PipelineRequest) => httpClient.sendRequest(req),\n    );\n\n    return pipeline(request);\n  }\n\n  public getOrderedPolicies(): PipelinePolicy[] {\n    if (!this._orderedPolicies) {\n      this._orderedPolicies = this.orderPolicies();\n    }\n    return this._orderedPolicies;\n  }\n\n  public clone(): Pipeline {\n    return new HttpPipeline(this._policies);\n  }\n\n  public static create(): Pipeline {\n    return new HttpPipeline();\n  }\n\n  private orderPolicies(): PipelinePolicy[] {\n    /**\n     * The goal of this method is to reliably order pipeline policies\n     * based on their declared requirements when they were added.\n     *\n     * Order is first determined by phase:\n     *\n     * 1. Serialize Phase\n     * 2. Policies not in a phase\n     * 3. Deserialize Phase\n     * 4. Retry Phase\n     * 5. Sign Phase\n     *\n     * Within each phase, policies are executed in the order\n     * they were added unless they were specified to execute\n     * before/after other policies or after a particular phase.\n     *\n     * To determine the final order, we will walk the policy list\n     * in phase order multiple times until all dependencies are\n     * satisfied.\n     *\n     * `afterPolicies` are the set of policies that must be\n     * executed before a given policy. This requirement is\n     * considered satisfied when each of the listed policies\n     * have been scheduled.\n     *\n     * `beforePolicies` are the set of policies that must be\n     * executed after a given policy. Since this dependency\n     * can be expressed by converting it into a equivalent\n     * `afterPolicies` declarations, they are normalized\n     * into that form for simplicity.\n     *\n     * An `afterPhase` dependency is considered satisfied when all\n     * policies in that phase have scheduled.\n     *\n     */\n    const result: PipelinePolicy[] = [];\n\n    // Track all policies we know about.\n    const policyMap: Map<string, PolicyGraphNode> = new Map<string, PolicyGraphNode>();\n\n    function createPhase(name: PipelinePhase | \"None\"): Phase {\n      return {\n        name,\n        policies: new Set<PolicyGraphNode>(),\n        hasRun: false,\n        hasAfterPolicies: false,\n      };\n    }\n\n    // Track policies for each phase.\n    const serializePhase = createPhase(\"Serialize\");\n    const noPhase = createPhase(\"None\");\n    const deserializePhase = createPhase(\"Deserialize\");\n    const retryPhase = createPhase(\"Retry\");\n    const signPhase = createPhase(\"Sign\");\n\n    // a list of phases in order\n    const orderedPhases = [serializePhase, noPhase, deserializePhase, retryPhase, signPhase];\n\n    // Small helper function to map phase name to each Phase\n    function getPhase(phase: PipelinePhase | undefined): Phase {\n      if (phase === \"Retry\") {\n        return retryPhase;\n      } else if (phase === \"Serialize\") {\n        return serializePhase;\n      } else if (phase === \"Deserialize\") {\n        return deserializePhase;\n      } else if (phase === \"Sign\") {\n        return signPhase;\n      } else {\n        return noPhase;\n      }\n    }\n\n    // First walk each policy and create a node to track metadata.\n    for (const descriptor of this._policies) {\n      const policy = descriptor.policy;\n      const options = descriptor.options;\n      const policyName = policy.name;\n      if (policyMap.has(policyName)) {\n        throw new Error(\"Duplicate policy names not allowed in pipeline\");\n      }\n      const node: PolicyGraphNode = {\n        policy,\n        dependsOn: new Set<PolicyGraphNode>(),\n        dependants: new Set<PolicyGraphNode>(),\n      };\n      if (options.afterPhase) {\n        node.afterPhase = getPhase(options.afterPhase);\n        node.afterPhase.hasAfterPolicies = true;\n      }\n      policyMap.set(policyName, node);\n      const phase = getPhase(options.phase);\n      phase.policies.add(node);\n    }\n\n    // Now that each policy has a node, connect dependency references.\n    for (const descriptor of this._policies) {\n      const { policy, options } = descriptor;\n      const policyName = policy.name;\n      const node = policyMap.get(policyName);\n      if (!node) {\n        throw new Error(`Missing node for policy ${policyName}`);\n      }\n\n      if (options.afterPolicies) {\n        for (const afterPolicyName of options.afterPolicies) {\n          const afterNode = policyMap.get(afterPolicyName);\n          if (afterNode) {\n            // Linking in both directions helps later\n            // when we want to notify dependants.\n            node.dependsOn.add(afterNode);\n            afterNode.dependants.add(node);\n          }\n        }\n      }\n      if (options.beforePolicies) {\n        for (const beforePolicyName of options.beforePolicies) {\n          const beforeNode = policyMap.get(beforePolicyName);\n          if (beforeNode) {\n            // To execute before another node, make it\n            // depend on the current node.\n            beforeNode.dependsOn.add(node);\n            node.dependants.add(beforeNode);\n          }\n        }\n      }\n    }\n\n    function walkPhase(phase: Phase): void {\n      phase.hasRun = true;\n      // Sets iterate in insertion order\n      for (const node of phase.policies) {\n        if (node.afterPhase && (!node.afterPhase.hasRun || node.afterPhase.policies.size)) {\n          // If this node is waiting on a phase to complete,\n          // we need to skip it for now.\n          // Even if the phase is empty, we should wait for it\n          // to be walked to avoid re-ordering policies.\n          continue;\n        }\n        if (node.dependsOn.size === 0) {\n          // If there's nothing else we're waiting for, we can\n          // add this policy to the result list.\n          result.push(node.policy);\n          // Notify anything that depends on this policy that\n          // the policy has been scheduled.\n          for (const dependant of node.dependants) {\n            dependant.dependsOn.delete(node);\n          }\n          policyMap.delete(node.policy.name);\n          phase.policies.delete(node);\n        }\n      }\n    }\n\n    function walkPhases(): void {\n      for (const phase of orderedPhases) {\n        walkPhase(phase);\n        // if the phase isn't complete\n        if (phase.policies.size > 0 && phase !== noPhase) {\n          if (!noPhase.hasRun) {\n            // Try running noPhase to see if that unblocks this phase next tick.\n            // This can happen if a phase that happens before noPhase\n            // is waiting on a noPhase policy to complete.\n            walkPhase(noPhase);\n          }\n          // Don't proceed to the next phase until this phase finishes.\n          return;\n        }\n\n        if (phase.hasAfterPolicies) {\n          // Run any policies unblocked by this phase\n          walkPhase(noPhase);\n        }\n      }\n    }\n\n    // Iterate until we've put every node in the result list.\n    let iteration = 0;\n    while (policyMap.size > 0) {\n      iteration++;\n      const initialResultLength = result.length;\n      // Keep walking each phase in order until we can order every node.\n      walkPhases();\n      // The result list *should* get at least one larger each time\n      // after the first full pass.\n      // Otherwise, we're going to loop forever.\n      if (result.length <= initialResultLength && iteration > 1) {\n        throw new Error(\"Cannot satisfy policy dependencies due to requirements cycle.\");\n      }\n    }\n\n    return result;\n  }\n}\n\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nexport function createEmptyPipeline(): Pipeline {\n  return HttpPipeline.create();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * A generic shape for a plain JS object.\n */\nexport type UnknownObject = { [s: string]: unknown };\n\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input: unknown): input is UnknownObject {\n  return (\n    typeof input === \"object\" &&\n    input !== null &&\n    !Array.isArray(input) &&\n    !(input instanceof RegExp) &&\n    !(input instanceof Date)\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isObject } from \"./object.js\";\n\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nexport function isError(e: unknown): e is Error {\n  if (isObject(e)) {\n    const hasName = typeof e.name === \"string\";\n    const hasMessage = typeof e.message === \"string\";\n    return hasName && hasMessage;\n  }\n  return false;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { inspect } from \"node:util\";\n\nexport const custom = inspect.custom;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { type UnknownObject, isObject } from \"./object.js\";\n\n/**\n * Sanitizer options\n */\nexport interface SanitizerOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled.\n   * Defaults include a list of well-known safe headers. Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  additionalAllowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n}\n\nconst RedactedString = \"REDACTED\";\n\n// Make sure this list is up-to-date with the one under core/logger/Readme#Keyconcepts\nconst defaultAllowedHeaderNames = [\n  \"x-ms-client-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-useragent\",\n  \"x-ms-correlation-request-id\",\n  \"x-ms-request-id\",\n  \"client-request-id\",\n  \"ms-cv\",\n  \"return-client-request-id\",\n  \"traceparent\",\n\n  \"Access-Control-Allow-Credentials\",\n  \"Access-Control-Allow-Headers\",\n  \"Access-Control-Allow-Methods\",\n  \"Access-Control-Allow-Origin\",\n  \"Access-Control-Expose-Headers\",\n  \"Access-Control-Max-Age\",\n  \"Access-Control-Request-Headers\",\n  \"Access-Control-Request-Method\",\n  \"Origin\",\n\n  \"Accept\",\n  \"Accept-Encoding\",\n  \"Cache-Control\",\n  \"Connection\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"ETag\",\n  \"Expires\",\n  \"If-Match\",\n  \"If-Modified-Since\",\n  \"If-None-Match\",\n  \"If-Unmodified-Since\",\n  \"Last-Modified\",\n  \"Pragma\",\n  \"Request-Id\",\n  \"Retry-After\",\n  \"Server\",\n  \"Transfer-Encoding\",\n  \"User-Agent\",\n  \"WWW-Authenticate\",\n];\n\nconst defaultAllowedQueryParameters: string[] = [\"api-version\"];\n\n/**\n * A utility class to sanitize objects for logging.\n */\nexport class Sanitizer {\n  private allowedHeaderNames: Set<string>;\n  private allowedQueryParameters: Set<string>;\n\n  constructor({\n    additionalAllowedHeaderNames: allowedHeaderNames = [],\n    additionalAllowedQueryParameters: allowedQueryParameters = [],\n  }: SanitizerOptions = {}) {\n    allowedHeaderNames = defaultAllowedHeaderNames.concat(allowedHeaderNames);\n    allowedQueryParameters = defaultAllowedQueryParameters.concat(allowedQueryParameters);\n\n    this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n    this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n  }\n\n  /**\n   * Sanitizes an object for logging.\n   * @param obj - The object to sanitize\n   * @returns - The sanitized object as a string\n   */\n  public sanitize(obj: unknown): string {\n    const seen = new Set<unknown>();\n    return JSON.stringify(\n      obj,\n      (key: string, value: unknown) => {\n        // Ensure Errors include their interesting non-enumerable members\n        if (value instanceof Error) {\n          return {\n            ...value,\n            name: value.name,\n            message: value.message,\n          };\n        }\n\n        if (key === \"headers\") {\n          return this.sanitizeHeaders(value as UnknownObject);\n        } else if (key === \"url\") {\n          return this.sanitizeUrl(value as string);\n        } else if (key === \"query\") {\n          return this.sanitizeQuery(value as UnknownObject);\n        } else if (key === \"body\") {\n          // Don't log the request body\n          return undefined;\n        } else if (key === \"response\") {\n          // Don't log response again\n          return undefined;\n        } else if (key === \"operationSpec\") {\n          // When using sendOperationRequest, the request carries a massive\n          // field with the autorest spec. No need to log it.\n          return undefined;\n        } else if (Array.isArray(value) || isObject(value)) {\n          if (seen.has(value)) {\n            return \"[Circular]\";\n          }\n          seen.add(value);\n        }\n\n        return value;\n      },\n      2,\n    );\n  }\n\n  /**\n   * Sanitizes a URL for logging.\n   * @param value - The URL to sanitize\n   * @returns - The sanitized URL as a string\n   */\n  public sanitizeUrl(value: string): string {\n    if (typeof value !== \"string\" || value === null || value === \"\") {\n      return value;\n    }\n\n    const url = new URL(value);\n\n    if (!url.search) {\n      return value;\n    }\n\n    for (const [key] of url.searchParams) {\n      if (!this.allowedQueryParameters.has(key.toLowerCase())) {\n        url.searchParams.set(key, RedactedString);\n      }\n    }\n\n    return url.toString();\n  }\n\n  private sanitizeHeaders(obj: UnknownObject): UnknownObject {\n    const sanitized: UnknownObject = {};\n    for (const key of Object.keys(obj)) {\n      if (this.allowedHeaderNames.has(key.toLowerCase())) {\n        sanitized[key] = obj[key];\n      } else {\n        sanitized[key] = RedactedString;\n      }\n    }\n    return sanitized;\n  }\n\n  private sanitizeQuery(value: UnknownObject): UnknownObject {\n    if (typeof value !== \"object\" || value === null) {\n      return value;\n    }\n\n    const sanitized: UnknownObject = {};\n\n    for (const k of Object.keys(value)) {\n      if (this.allowedQueryParameters.has(k.toLowerCase())) {\n        sanitized[k] = value[k];\n      } else {\n        sanitized[k] = RedactedString;\n      }\n    }\n\n    return sanitized;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isError } from \"./util/error.js\";\nimport type { PipelineRequest, PipelineResponse } from \"./interfaces.js\";\nimport { custom } from \"./util/inspect.js\";\nimport { Sanitizer } from \"./util/sanitizer.js\";\n\nconst errorSanitizer = new Sanitizer();\n\n/**\n * The options supported by RestError.\n */\nexport interface RestErrorOptions {\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  statusCode?: number;\n  /**\n   * The request that was made.\n   */\n  request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   */\n  response?: PipelineResponse;\n}\n\n/**\n * A custom error type for failed pipeline requests.\n */\nexport class RestError extends Error {\n  /**\n   * Something went wrong when making the request.\n   * This means the actual request failed for some reason,\n   * such as a DNS issue or the connection being lost.\n   */\n  static readonly REQUEST_SEND_ERROR: string = \"REQUEST_SEND_ERROR\";\n  /**\n   * This means that parsing the response from the server failed.\n   * It may have been malformed.\n   */\n  static readonly PARSE_ERROR: string = \"PARSE_ERROR\";\n\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  public code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  public statusCode?: number;\n  /**\n   * The request that was made.\n   * This property is non-enumerable.\n   */\n  public request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   * This property is non-enumerable.\n   */\n  public response?: PipelineResponse;\n  /**\n   * Bonus property set by the throw site.\n   */\n  public details?: unknown;\n\n  constructor(message: string, options: RestErrorOptions = {}) {\n    super(message);\n    this.name = \"RestError\";\n    this.code = options.code;\n    this.statusCode = options.statusCode;\n\n    // The request and response may contain sensitive information in the headers or body.\n    // To help prevent this sensitive information being accidentally logged, the request and response\n    // properties are marked as non-enumerable here. This prevents them showing up in the output of\n    // JSON.stringify and console.log.\n    Object.defineProperty(this, \"request\", { value: options.request, enumerable: false });\n    Object.defineProperty(this, \"response\", { value: options.response, enumerable: false });\n\n    // Logging method for util.inspect in Node\n    Object.defineProperty(this, custom, {\n      value: () => {\n        // Extract non-enumerable properties and add them back. This is OK since in this output the request and\n        // response get sanitized.\n        return `RestError: ${this.message} \\n ${errorSanitizer.sanitize({\n          ...this,\n          request: this.request,\n          response: this.response,\n        })}`;\n      },\n      enumerable: false,\n    });\n\n    Object.setPrototypeOf(this, RestError.prototype);\n  }\n}\n\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nexport function isRestError(e: unknown): e is RestError {\n  if (e instanceof RestError) {\n    return true;\n  }\n  return isError(e) && e.name === \"RestError\";\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:https\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:zlib\");","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createClientLogger } from \"./logger/logger.js\";\nexport const logger = createClientLogger(\"ts-http-runtime\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as http from \"node:http\";\nimport * as https from \"node:https\";\nimport * as zlib from \"node:zlib\";\nimport { Transform } from \"node:stream\";\nimport { AbortError } from \"./abort-controller/AbortError.js\";\nimport type {\n  HttpClient,\n  HttpHeaders,\n  PipelineRequest,\n  PipelineResponse,\n  RequestBodyType,\n  TlsSettings,\n  TransferProgressEvent,\n} from \"./interfaces.js\";\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { RestError } from \"./restError.js\";\nimport type { IncomingMessage } from \"node:http\";\nimport { logger } from \"./log.js\";\nimport { Sanitizer } from \"./util/sanitizer.js\";\n\nconst DEFAULT_TLS_SETTINGS = {};\n\nfunction isReadableStream(body: any): body is NodeJS.ReadableStream {\n  return body && typeof body.pipe === \"function\";\n}\n\nfunction isStreamComplete(stream: NodeJS.ReadableStream): Promise<void> {\n  if (stream.readable === false) {\n    return Promise.resolve();\n  }\n\n  return new Promise((resolve) => {\n    const handler = (): void => {\n      resolve();\n      stream.removeListener(\"close\", handler);\n      stream.removeListener(\"end\", handler);\n      stream.removeListener(\"error\", handler);\n    };\n\n    stream.on(\"close\", handler);\n    stream.on(\"end\", handler);\n    stream.on(\"error\", handler);\n  });\n}\n\nfunction isArrayBuffer(body: any): body is ArrayBuffer | ArrayBufferView {\n  return body && typeof body.byteLength === \"number\";\n}\n\nclass ReportTransform extends Transform {\n  private loadedBytes = 0;\n  private progressCallback: (progress: TransferProgressEvent) => void;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n  _transform(chunk: string | Buffer, _encoding: string, callback: Function): void {\n    this.push(chunk);\n    this.loadedBytes += chunk.length;\n    try {\n      this.progressCallback({ loadedBytes: this.loadedBytes });\n      callback();\n    } catch (e: any) {\n      callback(e);\n    }\n  }\n\n  constructor(progressCallback: (progress: TransferProgressEvent) => void) {\n    super();\n    this.progressCallback = progressCallback;\n  }\n}\n\n/**\n * A HttpClient implementation that uses Node's \"https\" module to send HTTPS requests.\n * @internal\n */\nclass NodeHttpClient implements HttpClient {\n  private cachedHttpAgent?: http.Agent;\n  private cachedHttpsAgents: WeakMap<TlsSettings, https.Agent> = new WeakMap();\n\n  /**\n   * Makes a request over an underlying transport layer and returns the response.\n   * @param request - The request to be made.\n   */\n  public async sendRequest(request: PipelineRequest): Promise<PipelineResponse> {\n    const abortController = new AbortController();\n    let abortListener: ((event: any) => void) | undefined;\n    if (request.abortSignal) {\n      if (request.abortSignal.aborted) {\n        throw new AbortError(\"The operation was aborted. Request has already been canceled.\");\n      }\n\n      abortListener = (event: Event) => {\n        if (event.type === \"abort\") {\n          abortController.abort();\n        }\n      };\n      request.abortSignal.addEventListener(\"abort\", abortListener);\n    }\n\n    let timeoutId: ReturnType<typeof setTimeout> | undefined;\n    if (request.timeout > 0) {\n      timeoutId = setTimeout(() => {\n        const sanitizer = new Sanitizer();\n        logger.info(`request to '${sanitizer.sanitizeUrl(request.url)}' timed out. canceling...`);\n        abortController.abort();\n      }, request.timeout);\n    }\n\n    const acceptEncoding = request.headers.get(\"Accept-Encoding\");\n    const shouldDecompress =\n      acceptEncoding?.includes(\"gzip\") || acceptEncoding?.includes(\"deflate\");\n\n    let body = typeof request.body === \"function\" ? request.body() : request.body;\n    if (body && !request.headers.has(\"Content-Length\")) {\n      const bodyLength = getBodyLength(body);\n      if (bodyLength !== null) {\n        request.headers.set(\"Content-Length\", bodyLength);\n      }\n    }\n\n    let responseStream: NodeJS.ReadableStream | undefined;\n    try {\n      if (body && request.onUploadProgress) {\n        const onUploadProgress = request.onUploadProgress;\n        const uploadReportStream = new ReportTransform(onUploadProgress);\n        uploadReportStream.on(\"error\", (e) => {\n          logger.error(\"Error in upload progress\", e);\n        });\n        if (isReadableStream(body)) {\n          body.pipe(uploadReportStream);\n        } else {\n          uploadReportStream.end(body);\n        }\n\n        body = uploadReportStream;\n      }\n\n      const res = await this.makeRequest(request, abortController, body);\n\n      if (timeoutId !== undefined) {\n        clearTimeout(timeoutId);\n      }\n\n      const headers = getResponseHeaders(res);\n\n      const status = res.statusCode ?? 0;\n      const response: PipelineResponse = {\n        status,\n        headers,\n        request,\n      };\n\n      // Responses to HEAD must not have a body.\n      // If they do return a body, that body must be ignored.\n      if (request.method === \"HEAD\") {\n        // call resume() and not destroy() to avoid closing the socket\n        // and losing keep alive\n        res.resume();\n        return response;\n      }\n\n      responseStream = shouldDecompress ? getDecodedResponseStream(res, headers) : res;\n\n      const onDownloadProgress = request.onDownloadProgress;\n      if (onDownloadProgress) {\n        const downloadReportStream = new ReportTransform(onDownloadProgress);\n        downloadReportStream.on(\"error\", (e) => {\n          logger.error(\"Error in download progress\", e);\n        });\n        responseStream.pipe(downloadReportStream);\n        responseStream = downloadReportStream;\n      }\n\n      if (\n        // Value of POSITIVE_INFINITY in streamResponseStatusCodes is considered as any status code\n        request.streamResponseStatusCodes?.has(Number.POSITIVE_INFINITY) ||\n        request.streamResponseStatusCodes?.has(response.status)\n      ) {\n        response.readableStreamBody = responseStream;\n      } else {\n        response.bodyAsText = await streamToText(responseStream);\n      }\n\n      return response;\n    } finally {\n      // clean up event listener\n      if (request.abortSignal && abortListener) {\n        let uploadStreamDone = Promise.resolve();\n        if (isReadableStream(body)) {\n          uploadStreamDone = isStreamComplete(body);\n        }\n        let downloadStreamDone = Promise.resolve();\n        if (isReadableStream(responseStream)) {\n          downloadStreamDone = isStreamComplete(responseStream);\n        }\n        Promise.all([uploadStreamDone, downloadStreamDone])\n          .then(() => {\n            // eslint-disable-next-line promise/always-return\n            if (abortListener) {\n              request.abortSignal?.removeEventListener(\"abort\", abortListener);\n            }\n          })\n          .catch((e) => {\n            logger.warning(\"Error when cleaning up abortListener on httpRequest\", e);\n          });\n      }\n    }\n  }\n\n  private makeRequest(\n    request: PipelineRequest,\n    abortController: AbortController,\n    body?: RequestBodyType,\n  ): Promise<http.IncomingMessage> {\n    const url = new URL(request.url);\n\n    const isInsecure = url.protocol !== \"https:\";\n\n    if (isInsecure && !request.allowInsecureConnection) {\n      throw new Error(`Cannot connect to ${request.url} while allowInsecureConnection is false.`);\n    }\n\n    const agent = (request.agent as http.Agent) ?? this.getOrCreateAgent(request, isInsecure);\n    const options: http.RequestOptions = {\n      agent,\n      hostname: url.hostname,\n      path: `${url.pathname}${url.search}`,\n      port: url.port,\n      method: request.method,\n      headers: request.headers.toJSON({ preserveCase: true }),\n      ...request.requestOverrides,\n    };\n\n    return new Promise<http.IncomingMessage>((resolve, reject) => {\n      const req = isInsecure ? http.request(options, resolve) : https.request(options, resolve);\n\n      req.once(\"error\", (err: Error & { code?: string }) => {\n        reject(\n          new RestError(err.message, { code: err.code ?? RestError.REQUEST_SEND_ERROR, request }),\n        );\n      });\n\n      abortController.signal.addEventListener(\"abort\", () => {\n        const abortError = new AbortError(\n          \"The operation was aborted. Rejecting from abort signal callback while making request.\",\n        );\n        req.destroy(abortError);\n        reject(abortError);\n      });\n      if (body && isReadableStream(body)) {\n        body.pipe(req);\n      } else if (body) {\n        if (typeof body === \"string\" || Buffer.isBuffer(body)) {\n          req.end(body);\n        } else if (isArrayBuffer(body)) {\n          req.end(ArrayBuffer.isView(body) ? Buffer.from(body.buffer) : Buffer.from(body));\n        } else {\n          logger.error(\"Unrecognized body type\", body);\n          reject(new RestError(\"Unrecognized body type\"));\n        }\n      } else {\n        // streams don't like \"undefined\" being passed as data\n        req.end();\n      }\n    });\n  }\n\n  private getOrCreateAgent(request: PipelineRequest, isInsecure: boolean): http.Agent {\n    const disableKeepAlive = request.disableKeepAlive;\n\n    // Handle Insecure requests first\n    if (isInsecure) {\n      if (disableKeepAlive) {\n        // keepAlive:false is the default so we don't need a custom Agent\n        return http.globalAgent;\n      }\n\n      if (!this.cachedHttpAgent) {\n        // If there is no cached agent create a new one and cache it.\n        this.cachedHttpAgent = new http.Agent({ keepAlive: true });\n      }\n      return this.cachedHttpAgent;\n    } else {\n      if (disableKeepAlive && !request.tlsSettings) {\n        // When there are no tlsSettings and keepAlive is false\n        // we don't need a custom agent\n        return https.globalAgent;\n      }\n\n      // We use the tlsSettings to index cached clients\n      const tlsSettings = request.tlsSettings ?? DEFAULT_TLS_SETTINGS;\n\n      // Get the cached agent or create a new one with the\n      // provided values for keepAlive and tlsSettings\n      let agent = this.cachedHttpsAgents.get(tlsSettings);\n\n      if (agent && agent.options.keepAlive === !disableKeepAlive) {\n        return agent;\n      }\n\n      logger.info(\"No cached TLS Agent exist, creating a new Agent\");\n      agent = new https.Agent({\n        // keepAlive is true if disableKeepAlive is false.\n        keepAlive: !disableKeepAlive,\n        // Since we are spreading, if no tslSettings were provided, nothing is added to the agent options.\n        ...tlsSettings,\n      });\n\n      this.cachedHttpsAgents.set(tlsSettings, agent);\n      return agent;\n    }\n  }\n}\n\nfunction getResponseHeaders(res: IncomingMessage): HttpHeaders {\n  const headers = createHttpHeaders();\n  for (const header of Object.keys(res.headers)) {\n    const value = res.headers[header];\n    if (Array.isArray(value)) {\n      if (value.length > 0) {\n        headers.set(header, value[0]);\n      }\n    } else if (value) {\n      headers.set(header, value);\n    }\n  }\n  return headers;\n}\n\nfunction getDecodedResponseStream(\n  stream: IncomingMessage,\n  headers: HttpHeaders,\n): NodeJS.ReadableStream {\n  const contentEncoding = headers.get(\"Content-Encoding\");\n  if (contentEncoding === \"gzip\") {\n    const unzip = zlib.createGunzip();\n    stream.pipe(unzip);\n    return unzip;\n  } else if (contentEncoding === \"deflate\") {\n    const inflate = zlib.createInflate();\n    stream.pipe(inflate);\n    return inflate;\n  }\n\n  return stream;\n}\n\nfunction streamToText(stream: NodeJS.ReadableStream): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    const buffer: Buffer[] = [];\n\n    stream.on(\"data\", (chunk) => {\n      if (Buffer.isBuffer(chunk)) {\n        buffer.push(chunk);\n      } else {\n        buffer.push(Buffer.from(chunk));\n      }\n    });\n    stream.on(\"end\", () => {\n      resolve(Buffer.concat(buffer).toString(\"utf8\"));\n    });\n    stream.on(\"error\", (e) => {\n      if (e && e?.name === \"AbortError\") {\n        reject(e);\n      } else {\n        reject(\n          new RestError(`Error reading response as text: ${e.message}`, {\n            code: RestError.PARSE_ERROR,\n          }),\n        );\n      }\n    });\n  });\n}\n\n/** @internal */\nexport function getBodyLength(body: RequestBodyType): number | null {\n  if (!body) {\n    return 0;\n  } else if (Buffer.isBuffer(body)) {\n    return body.length;\n  } else if (isReadableStream(body)) {\n    return null;\n  } else if (isArrayBuffer(body)) {\n    return body.byteLength;\n  } else if (typeof body === \"string\") {\n    return Buffer.from(body).length;\n  } else {\n    return null;\n  }\n}\n\n/**\n * Create a new HttpClient instance for the NodeJS environment.\n * @internal\n */\nexport function createNodeHttpClient(): HttpClient {\n  return new NodeHttpClient();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient } from \"./interfaces.js\";\nimport { createNodeHttpClient } from \"./nodeHttpClient.js\";\n\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient(): HttpClient {\n  return createNodeHttpClient();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { getRandomIntegerInclusive } from \"./random.js\";\n\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n * @param retryAttempt - The current retry attempt number.\n * @param config - The exponential retry configuration.\n * @returns An object containing the calculated retry delay.\n */\nexport function calculateRetryDelay(\n  retryAttempt: number,\n  config: {\n    retryDelayInMs: number;\n    maxRetryDelayInMs: number;\n  },\n): { retryAfterInMs: number } {\n  // Exponentially increase the delay each time\n  const exponentialDelay = config.retryDelayInMs * Math.pow(2, retryAttempt);\n\n  // Don't let the delay exceed the maximum\n  const clampedDelay = Math.min(config.maxRetryDelayInMs, exponentialDelay);\n\n  // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n  // that retries across multiple clients don't occur simultaneously.\n  const retryAfterInMs = clampedDelay / 2 + getRandomIntegerInclusive(0, clampedDelay / 2);\n\n  return { retryAfterInMs };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Returns a random integer value between a lower and upper bound,\n * inclusive of both bounds.\n * Note that this uses Math.random and isn't secure. If you need to use\n * this for any kind of security purpose, find a better source of random.\n * @param min - The smallest integer value allowed.\n * @param max - The largest integer value allowed.\n */\nexport function getRandomIntegerInclusive(min: number, max: number): number {\n  // Make sure inputs are integers.\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // Pick a random offset from zero to the size of the range.\n  // Since Math.random() can never return 1, we have to make the range one larger\n  // in order to be inclusive of the maximum value after we take the floor.\n  const offset = Math.floor(Math.random() * (max - min + 1));\n  return offset + min;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"../abort-controller/AbortError.js\";\nimport type { PipelineResponse } from \"../interfaces.js\";\n\nconst StandardAbortMessage = \"The operation was aborted.\";\n\n/**\n * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @param options - The options for delay - currently abort options\n *                  - abortSignal - The abortSignal associated with containing operation.\n *                  - abortErrorMsg - The abort error message associated with containing operation.\n * @returns Resolved promise\n */\nexport function delay<T>(\n  delayInMs: number,\n  value?: T,\n  options?: {\n    abortSignal?: AbortSignal;\n    abortErrorMsg?: string;\n  },\n): Promise<T | void> {\n  return new Promise((resolve, reject) => {\n    let timer: ReturnType<typeof setTimeout> | undefined = undefined;\n    let onAborted: (() => void) | undefined = undefined;\n\n    const rejectOnAbort = (): void => {\n      return reject(\n        new AbortError(options?.abortErrorMsg ? options?.abortErrorMsg : StandardAbortMessage),\n      );\n    };\n\n    const removeListeners = (): void => {\n      if (options?.abortSignal && onAborted) {\n        options.abortSignal.removeEventListener(\"abort\", onAborted);\n      }\n    };\n\n    onAborted = (): void => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      removeListeners();\n      return rejectOnAbort();\n    };\n\n    if (options?.abortSignal && options.abortSignal.aborted) {\n      return rejectOnAbort();\n    }\n\n    timer = setTimeout(() => {\n      removeListeners();\n      resolve(value);\n    }, delayInMs);\n\n    if (options?.abortSignal) {\n      options.abortSignal.addEventListener(\"abort\", onAborted);\n    }\n  });\n}\n\n/**\n * @internal\n * @returns the parsed value or undefined if the parsed value is invalid.\n */\nexport function parseHeaderValueAsNumber(\n  response: PipelineResponse,\n  headerName: string,\n): number | undefined {\n  const value = response.headers.get(headerName);\n  if (!value) return;\n  const valueAsNum = Number(value);\n  if (Number.isNaN(valueAsNum)) return;\n  return valueAsNum;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineResponse } from \"../interfaces.js\";\nimport { parseHeaderValueAsNumber } from \"../util/helpers.js\";\nimport type { RetryStrategy } from \"./retryStrategy.js\";\n\n/**\n * The header that comes back from services representing\n * the amount of time (minimum) to wait to retry (in seconds or timestamp after which we can retry).\n */\nconst RetryAfterHeader = \"Retry-After\";\n/**\n * The headers that come back from services representing\n * the amount of time (minimum) to wait to retry.\n *\n * \"retry-after-ms\", \"x-ms-retry-after-ms\" : milliseconds\n * \"Retry-After\" : seconds or timestamp\n */\nconst AllRetryAfterHeaders: string[] = [\"retry-after-ms\", \"x-ms-retry-after-ms\", RetryAfterHeader];\n\n/**\n * A response is a throttling retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n *\n * Returns the `retryAfterInMs` value if the response is a throttling retry response.\n * If not throttling retry response, returns `undefined`.\n *\n * @internal\n */\nfunction getRetryAfterInMs(response?: PipelineResponse): number | undefined {\n  if (!(response && [429, 503].includes(response.status))) return undefined;\n  try {\n    // Headers: \"retry-after-ms\", \"x-ms-retry-after-ms\", \"Retry-After\"\n    for (const header of AllRetryAfterHeaders) {\n      const retryAfterValue = parseHeaderValueAsNumber(response, header);\n      if (retryAfterValue === 0 || retryAfterValue) {\n        // \"Retry-After\" header ==> seconds\n        // \"retry-after-ms\", \"x-ms-retry-after-ms\" headers ==> milli-seconds\n        const multiplyingFactor = header === RetryAfterHeader ? 1000 : 1;\n        return retryAfterValue * multiplyingFactor; // in milli-seconds\n      }\n    }\n\n    // RetryAfterHeader (\"Retry-After\") has a special case where it might be formatted as a date instead of a number of seconds\n    const retryAfterHeader = response.headers.get(RetryAfterHeader);\n    if (!retryAfterHeader) return;\n\n    const date = Date.parse(retryAfterHeader);\n    const diff = date - Date.now();\n    // negative diff would mean a date in the past, so retry asap with 0 milliseconds\n    return Number.isFinite(diff) ? Math.max(0, diff) : undefined;\n  } catch {\n    return undefined;\n  }\n}\n\n/**\n * A response is a retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n */\nexport function isThrottlingRetryResponse(response?: PipelineResponse): boolean {\n  return Number.isFinite(getRetryAfterInMs(response));\n}\n\nexport function throttlingRetryStrategy(): RetryStrategy {\n  return {\n    name: \"throttlingRetryStrategy\",\n    retry({ response }) {\n      const retryAfterInMs = getRetryAfterInMs(response);\n      if (!Number.isFinite(retryAfterInMs)) {\n        return { skipStrategy: true };\n      }\n      return {\n        retryAfterInMs,\n      };\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineResponse } from \"../interfaces.js\";\nimport type { RestError } from \"../restError.js\";\nimport { calculateRetryDelay } from \"../util/delay.js\";\nimport type { RetryStrategy } from \"./retryStrategy.js\";\nimport { isThrottlingRetryResponse } from \"./throttlingRetryStrategy.js\";\n\n// intervals are in milliseconds\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 64;\n\n/**\n * A retry strategy that retries with an exponentially increasing delay in these two cases:\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails (408, greater or equal than 500, except for 501 and 505).\n */\nexport function exponentialRetryStrategy(\n  options: {\n    /**\n     * The amount of delay in milliseconds between retry attempts. Defaults to 1000\n     * (1 second.) The delay increases exponentially with each retry up to a maximum\n     * specified by maxRetryDelayInMs.\n     */\n    retryDelayInMs?: number;\n\n    /**\n     * The maximum delay in milliseconds allowed before retrying an operation. Defaults\n     * to 64000 (64 seconds).\n     */\n    maxRetryDelayInMs?: number;\n\n    /**\n     * If true it won't retry if it received a system error.\n     */\n    ignoreSystemErrors?: boolean;\n\n    /**\n     * If true it won't retry if it received a non-fatal HTTP status code.\n     */\n    ignoreHttpStatusCodes?: boolean;\n  } = {},\n): RetryStrategy {\n  const retryInterval = options.retryDelayInMs ?? DEFAULT_CLIENT_RETRY_INTERVAL;\n  const maxRetryInterval = options.maxRetryDelayInMs ?? DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n\n  return {\n    name: \"exponentialRetryStrategy\",\n    retry({ retryCount, response, responseError }) {\n      const matchedSystemError = isSystemError(responseError);\n      const ignoreSystemErrors = matchedSystemError && options.ignoreSystemErrors;\n\n      const isExponential = isExponentialRetryResponse(response);\n      const ignoreExponentialResponse = isExponential && options.ignoreHttpStatusCodes;\n      const unknownResponse = response && (isThrottlingRetryResponse(response) || !isExponential);\n\n      if (unknownResponse || ignoreExponentialResponse || ignoreSystemErrors) {\n        return { skipStrategy: true };\n      }\n\n      if (responseError && !matchedSystemError && !isExponential) {\n        return { errorToThrow: responseError };\n      }\n\n      return calculateRetryDelay(retryCount, {\n        retryDelayInMs: retryInterval,\n        maxRetryDelayInMs: maxRetryInterval,\n      });\n    },\n  };\n}\n\n/**\n * A response is a retry response if it has status codes:\n * - 408, or\n * - Greater or equal than 500, except for 501 and 505.\n */\nexport function isExponentialRetryResponse(response?: PipelineResponse): boolean {\n  return Boolean(\n    response &&\n      response.status !== undefined &&\n      (response.status >= 500 || response.status === 408) &&\n      response.status !== 501 &&\n      response.status !== 505,\n  );\n}\n\n/**\n * Determines whether an error from a pipeline response was triggered in the network layer.\n */\nexport function isSystemError(err?: RestError): boolean {\n  if (!err) {\n    return false;\n  }\n  return (\n    err.code === \"ETIMEDOUT\" ||\n    err.code === \"ESOCKETTIMEDOUT\" ||\n    err.code === \"ECONNREFUSED\" ||\n    err.code === \"ECONNRESET\" ||\n    err.code === \"ENOENT\" ||\n    err.code === \"ENOTFOUND\"\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport const SDK_VERSION: string = \"0.2.2\";\n\nexport const DEFAULT_RETRY_POLICY_COUNT = 3;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { delay } from \"../util/helpers.js\";\nimport type { RetryStrategy } from \"../retryStrategies/retryStrategy.js\";\nimport type { RestError } from \"../restError.js\";\nimport { AbortError } from \"../abort-controller/AbortError.js\";\nimport type { TypeSpecRuntimeLogger } from \"../logger/logger.js\";\nimport { createClientLogger } from \"../logger/logger.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\nconst retryPolicyLogger = createClientLogger(\"ts-http-runtime retryPolicy\");\n\n/**\n * The programmatic identifier of the retryPolicy.\n */\nconst retryPolicyName = \"retryPolicy\";\n\n/**\n * Options to the {@link retryPolicy}\n */\nexport interface RetryPolicyOptions {\n  /**\n   * Maximum number of retries. If not specified, it will limit to 3 retries.\n   */\n  maxRetries?: number;\n  /**\n   * Logger. If it's not provided, a default logger is used.\n   */\n  logger?: TypeSpecRuntimeLogger;\n}\n\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nexport function retryPolicy(\n  strategies: RetryStrategy[],\n  options: RetryPolicyOptions = { maxRetries: DEFAULT_RETRY_POLICY_COUNT },\n): PipelinePolicy {\n  const logger = options.logger || retryPolicyLogger;\n  return {\n    name: retryPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      let response: PipelineResponse | undefined;\n      let responseError: RestError | undefined;\n      let retryCount = -1;\n\n      retryRequest: while (true) {\n        retryCount += 1;\n        response = undefined;\n        responseError = undefined;\n\n        try {\n          logger.info(`Retry ${retryCount}: Attempting to send request`, request.requestId);\n          response = await next(request);\n          logger.info(`Retry ${retryCount}: Received a response from request`, request.requestId);\n        } catch (e: any) {\n          logger.error(`Retry ${retryCount}: Received an error from request`, request.requestId);\n\n          // RestErrors are valid targets for the retry strategies.\n          // If none of the retry strategies can work with them, they will be thrown later in this policy.\n          // If the received error is not a RestError, it is immediately thrown.\n          responseError = e as RestError;\n          if (!e || responseError.name !== \"RestError\") {\n            throw e;\n          }\n\n          response = responseError.response;\n        }\n\n        if (request.abortSignal?.aborted) {\n          logger.error(`Retry ${retryCount}: Request aborted.`);\n          const abortError = new AbortError();\n          throw abortError;\n        }\n\n        if (retryCount >= (options.maxRetries ?? DEFAULT_RETRY_POLICY_COUNT)) {\n          logger.info(\n            `Retry ${retryCount}: Maximum retries reached. Returning the last received response, or throwing the last received error.`,\n          );\n          if (responseError) {\n            throw responseError;\n          } else if (response) {\n            return response;\n          } else {\n            throw new Error(\"Maximum retries reached with no response or error to throw\");\n          }\n        }\n\n        logger.info(`Retry ${retryCount}: Processing ${strategies.length} retry strategies.`);\n\n        strategiesLoop: for (const strategy of strategies) {\n          const strategyLogger = strategy.logger || logger;\n          strategyLogger.info(`Retry ${retryCount}: Processing retry strategy ${strategy.name}.`);\n\n          const modifiers = strategy.retry({\n            retryCount,\n            response,\n            responseError,\n          });\n\n          if (modifiers.skipStrategy) {\n            strategyLogger.info(`Retry ${retryCount}: Skipped.`);\n            continue strategiesLoop;\n          }\n\n          const { errorToThrow, retryAfterInMs, redirectTo } = modifiers;\n\n          if (errorToThrow) {\n            strategyLogger.error(\n              `Retry ${retryCount}: Retry strategy ${strategy.name} throws error:`,\n              errorToThrow,\n            );\n            throw errorToThrow;\n          }\n\n          if (retryAfterInMs || retryAfterInMs === 0) {\n            strategyLogger.info(\n              `Retry ${retryCount}: Retry strategy ${strategy.name} retries after ${retryAfterInMs}`,\n            );\n            await delay(retryAfterInMs, undefined, { abortSignal: request.abortSignal });\n            continue retryRequest;\n          }\n\n          if (redirectTo) {\n            strategyLogger.info(\n              `Retry ${retryCount}: Retry strategy ${strategy.name} redirects to ${redirectTo}`,\n            );\n            request.url = redirectTo;\n            continue retryRequest;\n          }\n        }\n\n        if (responseError) {\n          logger.info(\n            `None of the retry strategies could work with the received error. Throwing it.`,\n          );\n          throw responseError;\n        }\n        if (response) {\n          logger.info(\n            `None of the retry strategies could work with the received response. Returning it.`,\n          );\n          return response;\n        }\n\n        // If all the retries skip and there's no response,\n        // we're still in the retry loop, so a new request will be sent\n        // until `maxRetries` is reached.\n      }\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/** The supported character encoding type */\nexport type EncodingType = \"utf-8\" | \"base64\" | \"base64url\" | \"hex\";\n\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nexport function uint8ArrayToString(bytes: Uint8Array, format: EncodingType): string {\n  return Buffer.from(bytes).toString(format);\n}\n\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nexport function stringToUint8Array(value: string, format: EncodingType): Uint8Array {\n  return Buffer.from(value, format);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\ninterface Window {\n  document: unknown;\n}\n\ninterface DedicatedWorkerGlobalScope {\n  constructor: {\n    name: string;\n  };\n\n  importScripts: (...paths: string[]) => void;\n}\n\ninterface Navigator {\n  product: string;\n}\n\ninterface DenoGlobal {\n  version: {\n    deno: string;\n  };\n}\n\ninterface BunGlobal {\n  version: string;\n}\n\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\ndeclare const window: Window;\ndeclare const self: DedicatedWorkerGlobalScope;\ndeclare const Deno: DenoGlobal;\ndeclare const Bun: BunGlobal;\ndeclare const navigator: Navigator;\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nexport const isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexport const isWebWorker =\n  typeof self === \"object\" &&\n  typeof self?.importScripts === \"function\" &&\n  (self.constructor?.name === \"DedicatedWorkerGlobalScope\" ||\n    self.constructor?.name === \"ServiceWorkerGlobalScope\" ||\n    self.constructor?.name === \"SharedWorkerGlobalScope\");\n\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexport const isDeno =\n  typeof Deno !== \"undefined\" &&\n  typeof Deno.version !== \"undefined\" &&\n  typeof Deno.version.deno !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexport const isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nexport const isNodeLike =\n  typeof globalThis.process !== \"undefined\" &&\n  Boolean(globalThis.process.version) &&\n  Boolean(globalThis.process.versions?.node);\n\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexport const isNodeRuntime = isNodeLike && !isBun && !isDeno;\n\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nexport const isReactNative =\n  typeof navigator !== \"undefined\" && navigator?.product === \"ReactNative\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { stringToUint8Array } from \"../util/bytesEncoding.js\";\nimport { isNodeLike } from \"../util/checkEnvironment.js\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\nimport type {\n  BodyPart,\n  FormDataMap,\n  FormDataValue,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\n\nfunction formDataToFormDataMap(formData: FormData): FormDataMap {\n  const formDataMap: FormDataMap = {};\n  for (const [key, value] of formData.entries()) {\n    formDataMap[key] ??= [];\n    (formDataMap[key] as FormDataValue[]).push(value);\n  }\n  return formDataMap;\n}\n\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy(): PipelinePolicy {\n  return {\n    name: formDataPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (isNodeLike && typeof FormData !== \"undefined\" && request.body instanceof FormData) {\n        request.formData = formDataToFormDataMap(request.body);\n        request.body = undefined;\n      }\n\n      if (request.formData) {\n        const contentType = request.headers.get(\"Content-Type\");\n        if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n          request.body = wwwFormUrlEncode(request.formData);\n        } else {\n          await prepareFormData(request.formData, request);\n        }\n\n        request.formData = undefined;\n      }\n      return next(request);\n    },\n  };\n}\n\nfunction wwwFormUrlEncode(formData: FormDataMap): string {\n  const urlSearchParams = new URLSearchParams();\n  for (const [key, value] of Object.entries(formData)) {\n    if (Array.isArray(value)) {\n      for (const subValue of value) {\n        urlSearchParams.append(key, subValue.toString());\n      }\n    } else {\n      urlSearchParams.append(key, value.toString());\n    }\n  }\n  return urlSearchParams.toString();\n}\n\nasync function prepareFormData(formData: FormDataMap, request: PipelineRequest): Promise<void> {\n  // validate content type (multipart/form-data)\n  const contentType = request.headers.get(\"Content-Type\");\n  if (contentType && !contentType.startsWith(\"multipart/form-data\")) {\n    // content type is specified and is not multipart/form-data. Exit.\n    return;\n  }\n\n  request.headers.set(\"Content-Type\", contentType ?? \"multipart/form-data\");\n\n  // set body to MultipartRequestBody using content from FormDataMap\n  const parts: BodyPart[] = [];\n\n  for (const [fieldName, values] of Object.entries(formData)) {\n    for (const value of Array.isArray(values) ? values : [values]) {\n      if (typeof value === \"string\") {\n        parts.push({\n          headers: createHttpHeaders({\n            \"Content-Disposition\": `form-data; name=\"${fieldName}\"`,\n          }),\n          body: stringToUint8Array(value, \"utf-8\"),\n        });\n      } else if (value === undefined || value === null || typeof value !== \"object\") {\n        throw new Error(\n          `Unexpected value for key ${fieldName}: ${value}. Value should be serialized to string first.`,\n        );\n      } else {\n        // using || instead of ?? here since if value.name is empty we should create a file name\n        const fileName = (value as File).name || \"blob\";\n        const headers = createHttpHeaders();\n        headers.set(\n          \"Content-Disposition\",\n          `form-data; name=\"${fieldName}\"; filename=\"${fileName}\"`,\n        );\n\n        // again, || is used since an empty value.type means the content type is unset\n        headers.set(\"Content-Type\", value.type || \"application/octet-stream\");\n\n        parts.push({\n          headers,\n          body: value,\n        });\n      }\n    }\n  }\n  request.multipartBody = { parts };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type * as http from \"http\";\nimport type * as https from \"https\";\nimport { HttpsProxyAgent } from \"https-proxy-agent\";\nimport { HttpProxyAgent } from \"http-proxy-agent\";\nimport type {\n  PipelineRequest,\n  PipelineResponse,\n  ProxySettings,\n  SendRequest,\n} from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { logger } from \"../log.js\";\n\nconst HTTPS_PROXY = \"HTTPS_PROXY\";\nconst HTTP_PROXY = \"HTTP_PROXY\";\nconst ALL_PROXY = \"ALL_PROXY\";\nconst NO_PROXY = \"NO_PROXY\";\n\n/**\n * The programmatic identifier of the proxyPolicy.\n */\nexport const proxyPolicyName = \"proxyPolicy\";\n\n/**\n * Stores the patterns specified in NO_PROXY environment variable.\n * @internal\n */\nexport const globalNoProxyList: string[] = [];\nlet noProxyListLoaded: boolean = false;\n\n/** A cache of whether a host should bypass the proxy. */\nconst globalBypassedMap: Map<string, boolean> = new Map();\n\nfunction getEnvironmentValue(name: string): string | undefined {\n  if (process.env[name]) {\n    return process.env[name];\n  } else if (process.env[name.toLowerCase()]) {\n    return process.env[name.toLowerCase()];\n  }\n  return undefined;\n}\n\nfunction loadEnvironmentProxyValue(): string | undefined {\n  if (!process) {\n    return undefined;\n  }\n\n  const httpsProxy = getEnvironmentValue(HTTPS_PROXY);\n  const allProxy = getEnvironmentValue(ALL_PROXY);\n  const httpProxy = getEnvironmentValue(HTTP_PROXY);\n\n  return httpsProxy || allProxy || httpProxy;\n}\n\n/**\n * Check whether the host of a given `uri` matches any pattern in the no proxy list.\n * If there's a match, any request sent to the same host shouldn't have the proxy settings set.\n * This implementation is a port of https://github.com/Azure/azure-sdk-for-net/blob/8cca811371159e527159c7eb65602477898683e2/sdk/core/Azure.Core/src/Pipeline/Internal/HttpEnvironmentProxy.cs#L210\n */\nfunction isBypassed(\n  uri: string,\n  noProxyList: string[],\n  bypassedMap?: Map<string, boolean>,\n): boolean | undefined {\n  if (noProxyList.length === 0) {\n    return false;\n  }\n  const host = new URL(uri).hostname;\n  if (bypassedMap?.has(host)) {\n    return bypassedMap.get(host);\n  }\n  let isBypassedFlag = false;\n  for (const pattern of noProxyList) {\n    if (pattern[0] === \".\") {\n      // This should match either domain it self or any subdomain or host\n      // .foo.com will match foo.com it self or *.foo.com\n      if (host.endsWith(pattern)) {\n        isBypassedFlag = true;\n      } else {\n        if (host.length === pattern.length - 1 && host === pattern.slice(1)) {\n          isBypassedFlag = true;\n        }\n      }\n    } else {\n      if (host === pattern) {\n        isBypassedFlag = true;\n      }\n    }\n  }\n  bypassedMap?.set(host, isBypassedFlag);\n  return isBypassedFlag;\n}\n\nexport function loadNoProxy(): string[] {\n  const noProxy = getEnvironmentValue(NO_PROXY);\n  noProxyListLoaded = true;\n  if (noProxy) {\n    return noProxy\n      .split(\",\")\n      .map((item) => item.trim())\n      .filter((item) => item.length);\n  }\n\n  return [];\n}\n\n/**\n * This method converts a proxy url into `ProxySettings` for use with ProxyPolicy.\n * If no argument is given, it attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n * @param proxyUrl - The url of the proxy to use. May contain authentication information.\n * @deprecated - Internally this method is no longer necessary when setting proxy information.\n */\nexport function getDefaultProxySettings(proxyUrl?: string): ProxySettings | undefined {\n  if (!proxyUrl) {\n    proxyUrl = loadEnvironmentProxyValue();\n    if (!proxyUrl) {\n      return undefined;\n    }\n  }\n\n  const parsedUrl = new URL(proxyUrl);\n  const schema = parsedUrl.protocol ? parsedUrl.protocol + \"//\" : \"\";\n  return {\n    host: schema + parsedUrl.hostname,\n    port: Number.parseInt(parsedUrl.port || \"80\"),\n    username: parsedUrl.username,\n    password: parsedUrl.password,\n  };\n}\n\n/**\n * This method attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n */\nfunction getDefaultProxySettingsInternal(): URL | undefined {\n  const envProxy = loadEnvironmentProxyValue();\n  return envProxy ? new URL(envProxy) : undefined;\n}\n\nfunction getUrlFromProxySettings(settings: ProxySettings): URL {\n  let parsedProxyUrl: URL;\n  try {\n    parsedProxyUrl = new URL(settings.host);\n  } catch {\n    throw new Error(\n      `Expecting a valid host string in proxy settings, but found \"${settings.host}\".`,\n    );\n  }\n\n  parsedProxyUrl.port = String(settings.port);\n  if (settings.username) {\n    parsedProxyUrl.username = settings.username;\n  }\n  if (settings.password) {\n    parsedProxyUrl.password = settings.password;\n  }\n\n  return parsedProxyUrl;\n}\n\nfunction setProxyAgentOnRequest(\n  request: PipelineRequest,\n  cachedAgents: CachedAgents,\n  proxyUrl: URL,\n): void {\n  // Custom Agent should take precedence so if one is present\n  // we should skip to avoid overwriting it.\n  if (request.agent) {\n    return;\n  }\n\n  const url = new URL(request.url);\n\n  const isInsecure = url.protocol !== \"https:\";\n\n  if (request.tlsSettings) {\n    logger.warning(\n      \"TLS settings are not supported in combination with custom Proxy, certificates provided to the client will be ignored.\",\n    );\n  }\n\n  const headers = request.headers.toJSON();\n\n  if (isInsecure) {\n    if (!cachedAgents.httpProxyAgent) {\n      cachedAgents.httpProxyAgent = new HttpProxyAgent(proxyUrl, { headers });\n    }\n    request.agent = cachedAgents.httpProxyAgent;\n  } else {\n    if (!cachedAgents.httpsProxyAgent) {\n      cachedAgents.httpsProxyAgent = new HttpsProxyAgent(proxyUrl, { headers });\n    }\n    request.agent = cachedAgents.httpsProxyAgent;\n  }\n}\n\ninterface CachedAgents {\n  httpsProxyAgent?: https.Agent;\n  httpProxyAgent?: http.Agent;\n}\n\n/**\n * A policy that allows one to apply proxy settings to all requests.\n * If not passed static settings, they will be retrieved from the HTTPS_PROXY\n * or HTTP_PROXY environment variables.\n * @param proxySettings - ProxySettings to use on each request.\n * @param options - additional settings, for example, custom NO_PROXY patterns\n */\nexport function proxyPolicy(\n  proxySettings?: ProxySettings,\n  options?: {\n    /** a list of patterns to override those loaded from NO_PROXY environment variable. */\n    customNoProxyList?: string[];\n  },\n): PipelinePolicy {\n  if (!noProxyListLoaded) {\n    globalNoProxyList.push(...loadNoProxy());\n  }\n\n  const defaultProxy = proxySettings\n    ? getUrlFromProxySettings(proxySettings)\n    : getDefaultProxySettingsInternal();\n\n  const cachedAgents: CachedAgents = {};\n\n  return {\n    name: proxyPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (\n        !request.proxySettings &&\n        defaultProxy &&\n        !isBypassed(\n          request.url,\n          options?.customNoProxyList ?? globalNoProxyList,\n          options?.customNoProxyList ? undefined : globalBypassedMap,\n        )\n      ) {\n        setProxyAgentOnRequest(request, cachedAgents, defaultProxy);\n      } else if (request.proxySettings) {\n        setProxyAgentOnRequest(\n          request,\n          cachedAgents,\n          getUrlFromProxySettings(request.proxySettings),\n        );\n      }\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport function isNodeReadableStream(x: unknown): x is NodeJS.ReadableStream {\n  return Boolean(x && typeof (x as NodeJS.ReadableStream)[\"pipe\"] === \"function\");\n}\n\nexport function isWebReadableStream(x: unknown): x is ReadableStream {\n  return Boolean(\n    x &&\n      typeof (x as ReadableStream).getReader === \"function\" &&\n      typeof (x as ReadableStream).tee === \"function\",\n  );\n}\n\nexport function isBinaryBody(\n  body: unknown,\n): body is\n  | Uint8Array\n  | NodeJS.ReadableStream\n  | ReadableStream<Uint8Array>\n  | (() => NodeJS.ReadableStream)\n  | (() => ReadableStream<Uint8Array>)\n  | Blob {\n  return (\n    body !== undefined &&\n    (body instanceof Uint8Array ||\n      isReadableStream(body) ||\n      typeof body === \"function\" ||\n      body instanceof Blob)\n  );\n}\n\nexport function isReadableStream(x: unknown): x is ReadableStream | NodeJS.ReadableStream {\n  return isNodeReadableStream(x) || isWebReadableStream(x);\n}\n\nexport function isBlob(x: unknown): x is Blob {\n  return typeof (x as Blob).stream === \"function\";\n}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { Readable } from \"stream\";\nimport type { ReadableStream as AsyncIterableReadableStream } from \"stream/web\";\nimport { isBlob } from \"./typeGuards.js\";\n\nasync function* streamAsyncIterator(\n  this: ReadableStream<Uint8Array>,\n): AsyncIterableIterator<Uint8Array> {\n  const reader = this.getReader();\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) {\n        return;\n      }\n\n      yield value;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nfunction makeAsyncIterable<T>(webStream: any): asserts webStream is AsyncIterableReadableStream<T> {\n  if (!webStream[Symbol.asyncIterator]) {\n    webStream[Symbol.asyncIterator] = streamAsyncIterator.bind(webStream);\n  }\n\n  if (!webStream.values) {\n    webStream.values = streamAsyncIterator.bind(webStream);\n  }\n}\n\nfunction ensureNodeStream(\n  stream: ReadableStream<Uint8Array> | NodeJS.ReadableStream,\n): NodeJS.ReadableStream {\n  if (stream instanceof ReadableStream) {\n    makeAsyncIterable<Uint8Array>(stream);\n    return Readable.fromWeb(stream);\n  } else {\n    return stream;\n  }\n}\n\nfunction toStream(\n  source: ReadableStream<Uint8Array> | NodeJS.ReadableStream | Uint8Array | Blob,\n): NodeJS.ReadableStream {\n  if (source instanceof Uint8Array) {\n    return Readable.from(Buffer.from(source));\n  } else if (isBlob(source)) {\n    return ensureNodeStream(source.stream());\n  } else {\n    return ensureNodeStream(source);\n  }\n}\n\n/**\n * Accepted binary data types for concat\n *\n * @internal\n */\nexport type ConcatSource = ReadableStream<Uint8Array> | NodeJS.ReadableStream | Uint8Array | Blob;\n\n/**\n * Utility function that concatenates a set of binary inputs into one combined output.\n *\n * @param sources - array of sources for the concatenation\n * @returns - in Node, a (() =\\> NodeJS.ReadableStream) which, when read, produces a concatenation of all the inputs.\n *           In browser, returns a `Blob` representing all the concatenated inputs.\n *\n * @internal\n */\nexport async function concat(\n  sources: (ConcatSource | (() => ConcatSource))[],\n): Promise<(() => NodeJS.ReadableStream) | Blob> {\n  return function () {\n    const streams = sources.map((x) => (typeof x === \"function\" ? x() : x)).map(toStream);\n\n    return Readable.from(\n      (async function* () {\n        for (const stream of streams as NodeJS.ReadableStream[]) {\n          for await (const chunk of stream) {\n            yield chunk;\n          }\n        }\n      })(),\n    );\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { BodyPart, HttpHeaders, PipelineRequest, PipelineResponse } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { stringToUint8Array } from \"../util/bytesEncoding.js\";\nimport { isBlob } from \"../util/typeGuards.js\";\nimport { randomUUID } from \"../util/uuidUtils.js\";\nimport { concat } from \"../util/concat.js\";\n\nfunction generateBoundary(): string {\n  return `----AzSDKFormBoundary${randomUUID()}`;\n}\n\nfunction encodeHeaders(headers: HttpHeaders): string {\n  let result = \"\";\n  for (const [key, value] of headers) {\n    result += `${key}: ${value}\\r\\n`;\n  }\n  return result;\n}\n\nfunction getLength(\n  source:\n    | (() => ReadableStream<Uint8Array>)\n    | (() => NodeJS.ReadableStream)\n    | Uint8Array\n    | Blob\n    | ReadableStream\n    | NodeJS.ReadableStream,\n): number | undefined {\n  if (source instanceof Uint8Array) {\n    return source.byteLength;\n  } else if (isBlob(source)) {\n    // if was created using createFile then -1 means we have an unknown size\n    return source.size === -1 ? undefined : source.size;\n  } else {\n    return undefined;\n  }\n}\n\nfunction getTotalLength(\n  sources: (\n    | (() => ReadableStream<Uint8Array>)\n    | (() => NodeJS.ReadableStream)\n    | Uint8Array\n    | Blob\n    | ReadableStream\n    | NodeJS.ReadableStream\n  )[],\n): number | undefined {\n  let total = 0;\n  for (const source of sources) {\n    const partLength = getLength(source);\n    if (partLength === undefined) {\n      return undefined;\n    } else {\n      total += partLength;\n    }\n  }\n  return total;\n}\n\nasync function buildRequestBody(\n  request: PipelineRequest,\n  parts: BodyPart[],\n  boundary: string,\n): Promise<void> {\n  const sources = [\n    stringToUint8Array(`--${boundary}`, \"utf-8\"),\n    ...parts.flatMap((part) => [\n      stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n      stringToUint8Array(encodeHeaders(part.headers), \"utf-8\"),\n      stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n      part.body,\n      stringToUint8Array(`\\r\\n--${boundary}`, \"utf-8\"),\n    ]),\n    stringToUint8Array(\"--\\r\\n\\r\\n\", \"utf-8\"),\n  ];\n\n  const contentLength = getTotalLength(sources);\n  if (contentLength) {\n    request.headers.set(\"Content-Length\", contentLength);\n  }\n\n  request.body = await concat(sources);\n}\n\n/**\n * Name of multipart policy\n */\nexport const multipartPolicyName = \"multipartPolicy\";\n\nconst maxBoundaryLength = 70;\nconst validBoundaryCharacters = new Set(\n  `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'()+,-./:=?`,\n);\n\nfunction assertValidBoundary(boundary: string): void {\n  if (boundary.length > maxBoundaryLength) {\n    throw new Error(`Multipart boundary \"${boundary}\" exceeds maximum length of 70 characters`);\n  }\n\n  if (Array.from(boundary).some((x) => !validBoundaryCharacters.has(x))) {\n    throw new Error(`Multipart boundary \"${boundary}\" contains invalid characters`);\n  }\n}\n\n/**\n * Pipeline policy for multipart requests\n */\nexport function multipartPolicy(): PipelinePolicy {\n  return {\n    name: multipartPolicyName,\n    async sendRequest(request, next): Promise<PipelineResponse> {\n      if (!request.multipartBody) {\n        return next(request);\n      }\n\n      if (request.body) {\n        throw new Error(\"multipartBody and regular body cannot be set at the same time\");\n      }\n\n      let boundary = request.multipartBody.boundary;\n\n      const contentTypeHeader = request.headers.get(\"Content-Type\") ?? \"multipart/mixed\";\n      const parsedHeader = contentTypeHeader.match(/^(multipart\\/[^ ;]+)(?:; *boundary=(.+))?$/);\n      if (!parsedHeader) {\n        throw new Error(\n          `Got multipart request body, but content-type header was not multipart: ${contentTypeHeader}`,\n        );\n      }\n\n      const [, contentType, parsedBoundary] = parsedHeader;\n      if (parsedBoundary && boundary && parsedBoundary !== boundary) {\n        throw new Error(\n          `Multipart boundary was specified as ${parsedBoundary} in the header, but got ${boundary} in the request body`,\n        );\n      }\n\n      boundary ??= parsedBoundary;\n      if (boundary) {\n        assertValidBoundary(boundary);\n      } else {\n        boundary = generateBoundary();\n      }\n      request.headers.set(\"Content-Type\", `${contentType}; boundary=${boundary}`);\n      await buildRequestBody(request, request.multipartBody.parts, boundary);\n\n      request.multipartBody = undefined;\n\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient, PipelineRequest, PipelineResponse, SendRequest } from \"./interfaces.js\";\nimport { createEmptyPipeline as tspCreateEmptyPipeline } from \"@typespec/ts-http-runtime\";\n\n/**\n * Policies are executed in phases.\n * The execution order is:\n * 1. Serialize Phase\n * 2. Policies not in a phase\n * 3. Deserialize Phase\n * 4. Retry Phase\n * 5. Sign Phase\n */\nexport type PipelinePhase = \"Deserialize\" | \"Serialize\" | \"Retry\" | \"Sign\";\n\n/**\n * Options when adding a policy to the pipeline.\n * Used to express dependencies on other policies.\n */\nexport interface AddPolicyOptions {\n  /**\n   * Policies that this policy must come before.\n   */\n  beforePolicies?: string[];\n  /**\n   * Policies that this policy must come after.\n   */\n  afterPolicies?: string[];\n  /**\n   * The phase that this policy must come after.\n   */\n  afterPhase?: PipelinePhase;\n  /**\n   * The phase this policy belongs to.\n   */\n  phase?: PipelinePhase;\n}\n\n/**\n * A pipeline policy manipulates a request as it travels through the pipeline.\n * It is conceptually a middleware that is allowed to modify the request before\n * it is made as well as the response when it is received.\n */\nexport interface PipelinePolicy {\n  /**\n   * The policy name. Must be a unique string in the pipeline.\n   */\n  name: string;\n  /**\n   * The main method to implement that manipulates a request/response.\n   * @param request - The request being performed.\n   * @param next - The next policy in the pipeline. Must be called to continue the pipeline.\n   */\n  sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse>;\n}\n\n/**\n * Represents a pipeline for making a HTTP request to a URL.\n * Pipelines can have multiple policies to manage manipulating each request\n * before and after it is made to the server.\n */\nexport interface Pipeline {\n  /**\n   * Add a new policy to the pipeline.\n   * @param policy - A policy that manipulates a request.\n   * @param options - A set of options for when the policy should run.\n   */\n  addPolicy(policy: PipelinePolicy, options?: AddPolicyOptions): void;\n  /**\n   * Remove a policy from the pipeline.\n   * @param options - Options that let you specify which policies to remove.\n   */\n  removePolicy(options: { name?: string; phase?: PipelinePhase }): PipelinePolicy[];\n  /**\n   * Uses the pipeline to make a HTTP request.\n   * @param httpClient - The HttpClient that actually performs the request.\n   * @param request - The request to be made.\n   */\n  sendRequest(httpClient: HttpClient, request: PipelineRequest): Promise<PipelineResponse>;\n  /**\n   * Returns the current set of policies in the pipeline in the order in which\n   * they will be applied to the request. Later in the list is closer to when\n   * the request is performed.\n   */\n  getOrderedPolicies(): PipelinePolicy[];\n  /**\n   * Duplicates this pipeline to allow for modifying an existing one without mutating it.\n   */\n  clone(): Pipeline;\n}\n\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nexport function createEmptyPipeline(): Pipeline {\n  return tspCreateEmptyPipeline() as Pipeline;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createLoggerContext } from \"@typespec/ts-http-runtime/internal/logger\";\n\nconst context = createLoggerContext({\n  logLevelEnvVarName: \"AZURE_LOG_LEVEL\",\n  namespace: \"azure\",\n});\n\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nexport const AzureLogger: AzureClientLogger = context.logger;\n\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport function setLogLevel(level?: AzureLogLevel): void {\n  context.setLogLevel(level);\n}\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel(): AzureLogLevel | undefined {\n  return context.getLogLevel();\n}\n\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace: string): AzureLogger {\n  return context.createClientLogger(namespace);\n}\n\n/**\n * A log function that can be dynamically enabled and redirected.\n */\nexport interface Debugger {\n  /**\n   * Logs the given arguments to the `log` method.\n   */\n  (...args: any[]): void;\n  /**\n   * True if this logger is active and logging.\n   */\n  enabled: boolean;\n  /**\n   * Used to cleanup/remove this logger.\n   */\n  destroy: () => boolean;\n  /**\n   * The current log method. Can be overridden to redirect output.\n   */\n  log: (...args: any[]) => void;\n  /**\n   * The namespace of this logger.\n   */\n  namespace: string;\n  /**\n   * Extends this logger with a child namespace.\n   * Namespaces are separated with a ':' character.\n   */\n  extend: (namespace: string) => Debugger;\n}\n\n/**\n * The log levels supported by the logger.\n * The log levels in order of most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport type AzureLogLevel = \"verbose\" | \"info\" | \"warning\" | \"error\";\n\n/**\n * An AzureClientLogger is a function that can log to an appropriate severity level.\n */\nexport type AzureClientLogger = Debugger;\n\n/**\n * Defines the methods available on the SDK-facing logger.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface AzureLogger {\n  /**\n   * Used for failures the program is unlikely to recover from,\n   * such as Out of Memory.\n   */\n  error: Debugger;\n  /**\n   * Used when a function fails to perform its intended task.\n   * Usually this means the function will throw an exception.\n   * Not used for self-healing events (e.g. automatic retry)\n   */\n  warning: Debugger;\n  /**\n   * Used when a function operates normally.\n   */\n  info: Debugger;\n  /**\n   * Used for detailed troubleshooting scenarios. This is\n   * intended for use by developers / system administrators\n   * for diagnosing specific failures.\n   */\n  verbose: Debugger;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-rest-pipeline\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nexport const redirectPolicyName = \"redirectPolicy\";\n\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n\n/**\n * Options for how redirect responses are handled.\n */\nexport interface RedirectPolicyOptions {\n  /**\n   * The maximum number of times the redirect URL will be tried before\n   * failing.  Defaults to 20.\n   */\n  maxRetries?: number;\n}\n\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nexport function redirectPolicy(options: RedirectPolicyOptions = {}): PipelinePolicy {\n  const { maxRetries = 20 } = options;\n  return {\n    name: redirectPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      const response = await next(request);\n      return handleRedirect(next, response, maxRetries);\n    },\n  };\n}\n\nasync function handleRedirect(\n  next: SendRequest,\n  response: PipelineResponse,\n  maxRetries: number,\n  currentRetries: number = 0,\n): Promise<PipelineResponse> {\n  const { request, status, headers } = response;\n  const locationHeader = headers.get(\"location\");\n  if (\n    locationHeader &&\n    (status === 300 ||\n      (status === 301 && allowedRedirect.includes(request.method)) ||\n      (status === 302 && allowedRedirect.includes(request.method)) ||\n      (status === 303 && request.method === \"POST\") ||\n      status === 307) &&\n    currentRetries < maxRetries\n  ) {\n    const url = new URL(locationHeader, request.url);\n    request.url = url.toString();\n\n    // POST request with Status code 303 should be converted into a\n    // redirected GET request if the redirect url is present in the location header\n    if (status === 303) {\n      request.method = \"GET\";\n      request.headers.delete(\"Content-Length\");\n      delete request.body;\n    }\n\n    request.headers.delete(\"Authorization\");\n\n    const res = await next(request);\n    return handleRedirect(next, res, maxRetries, currentRetries + 1);\n  }\n\n  return response;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { Debugger } from \"@azure/logger\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { logger as coreLogger } from \"../log.js\";\nimport {\n  logPolicyName as tspLogPolicyName,\n  logPolicy as tspLogPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the logPolicy.\n */\nexport const logPolicyName = tspLogPolicyName;\n\n/**\n * Options to configure the logPolicy.\n */\nexport interface LogPolicyOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled.\n   * Defaults include a list of well-known safe headers. Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  additionalAllowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n\n  /**\n   * The log function to use for writing pipeline logs.\n   * Defaults to core-http's built-in logger.\n   * Compatible with the `debug` library.\n   */\n  logger?: Debugger;\n}\n\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nexport function logPolicy(options: LogPolicyOptions = {}): PipelinePolicy {\n  return tspLogPolicy({\n    logger: coreLogger.info,\n    ...options,\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { Debugger } from \"../logger/logger.js\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { logger as coreLogger } from \"../log.js\";\nimport { Sanitizer } from \"../util/sanitizer.js\";\n\n/**\n * The programmatic identifier of the logPolicy.\n */\nexport const logPolicyName = \"logPolicy\";\n\n/**\n * Options to configure the logPolicy.\n */\nexport interface LogPolicyOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled.\n   * Defaults include a list of well-known safe headers. Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  additionalAllowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n\n  /**\n   * The log function to use for writing pipeline logs.\n   * Defaults to core-http's built-in logger.\n   * Compatible with the `debug` library.\n   */\n  logger?: Debugger;\n}\n\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nexport function logPolicy(options: LogPolicyOptions = {}): PipelinePolicy {\n  const logger = options.logger ?? coreLogger.info;\n  const sanitizer = new Sanitizer({\n    additionalAllowedHeaderNames: options.additionalAllowedHeaderNames,\n    additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n  });\n  return {\n    name: logPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!logger.enabled) {\n        return next(request);\n      }\n\n      logger(`Request: ${sanitizer.sanitize(request)}`);\n\n      const response = await next(request);\n\n      logger(`Response status code: ${response.status}`);\n      logger(`Headers: ${sanitizer.sanitize(response.headers)}`);\n\n      return response;\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { getHeaderName, setPlatformSpecificData } from \"./userAgentPlatform.js\";\nimport { SDK_VERSION } from \"../constants.js\";\n\nfunction getUserAgentString(telemetryInfo: Map<string, string>): string {\n  const parts: string[] = [];\n  for (const [key, value] of telemetryInfo) {\n    const token = value ? `${key}/${value}` : key;\n    parts.push(token);\n  }\n  return parts.join(\" \");\n}\n\n/**\n * @internal\n */\nexport function getUserAgentHeaderName(): string {\n  return getHeaderName();\n}\n\n/**\n * @internal\n */\nexport async function getUserAgentValue(prefix?: string): Promise<string> {\n  const runtimeInfo = new Map<string, string>();\n  runtimeInfo.set(\"core-rest-pipeline\", SDK_VERSION);\n  await setPlatformSpecificData(runtimeInfo);\n  const defaultAgent = getUserAgentString(runtimeInfo);\n  const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n  return userAgentValue;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport const SDK_VERSION: string = \"1.20.0\";\n\nexport const DEFAULT_RETRY_POLICY_COUNT = 3;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as os from \"node:os\";\nimport * as process from \"node:process\";\n\n/**\n * @internal\n */\ninterface ExtendedPlatformVersions extends NodeJS.ProcessVersions {\n  bun?: string;\n  deno?: string;\n}\n\n/**\n * @internal\n */\nexport function getHeaderName(): string {\n  return \"User-Agent\";\n}\n\n/**\n * @internal\n */\nexport async function setPlatformSpecificData(map: Map<string, string>): Promise<void> {\n  if (process && process.versions) {\n    const versions = process.versions as ExtendedPlatformVersions;\n    if (versions.bun) {\n      map.set(\"Bun\", versions.bun);\n    } else if (versions.deno) {\n      map.set(\"Deno\", versions.deno);\n    } else if (versions.node) {\n      map.set(\"Node\", versions.node);\n    }\n  }\n\n  map.set(\"OS\", `(${os.arch()}-${os.type()}-${os.release()})`);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortOptions } from \"./aborterUtils.js\";\nimport { createAbortablePromise } from \"./createAbortablePromise.js\";\nimport { getRandomIntegerInclusive } from \"@typespec/ts-http-runtime/internal/util\";\n\nconst StandardAbortMessage = \"The delay was aborted.\";\n\n/**\n * Options for support abort functionality for the delay method\n */\nexport interface DelayOptions extends AbortOptions {}\n\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @param options - The options for delay - currently abort options\n * @returns Promise that is resolved after timeInMs\n */\nexport function delay(timeInMs: number, options?: DelayOptions): Promise<void> {\n  let token: ReturnType<typeof setTimeout>;\n  const { abortSignal, abortErrorMsg } = options ?? {};\n  return createAbortablePromise(\n    (resolve) => {\n      token = setTimeout(resolve, timeInMs);\n    },\n    {\n      cleanupBeforeAbort: () => clearTimeout(token),\n      abortSignal,\n      abortErrorMsg: abortErrorMsg ?? StandardAbortMessage,\n    },\n  );\n}\n\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n * @param retryAttempt - The current retry attempt number.\n * @param config - The exponential retry configuration.\n * @returns An object containing the calculated retry delay.\n */\nexport function calculateRetryDelay(\n  retryAttempt: number,\n  config: {\n    retryDelayInMs: number;\n    maxRetryDelayInMs: number;\n  },\n): { retryAfterInMs: number } {\n  // Exponentially increase the delay each time\n  const exponentialDelay = config.retryDelayInMs * Math.pow(2, retryAttempt);\n\n  // Don't let the delay exceed the maximum\n  const clampedDelay = Math.min(config.maxRetryDelayInMs, exponentialDelay);\n\n  // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n  // that retries across multiple clients don't occur simultaneously.\n  const retryAfterInMs = clampedDelay / 2 + getRandomIntegerInclusive(0, clampedDelay / 2);\n\n  return { retryAfterInMs };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport type { AbortOptions } from \"./aborterUtils.js\";\n\n/**\n * Options for the createAbortablePromise function.\n */\nexport interface CreateAbortablePromiseOptions extends AbortOptions {\n  /** A function to be called if the promise was aborted */\n  cleanupBeforeAbort?: () => void;\n}\n\n/**\n * Creates an abortable promise.\n * @param buildPromise - A function that takes the resolve and reject functions as parameters.\n * @param options - The options for the abortable promise.\n * @returns A promise that can be aborted.\n */\nexport function createAbortablePromise<T>(\n  buildPromise: (\n    resolve: (value: T | PromiseLike<T>) => void,\n    reject: (reason?: any) => void,\n  ) => void,\n  options?: CreateAbortablePromiseOptions,\n): Promise<T> {\n  const { cleanupBeforeAbort, abortSignal, abortErrorMsg } = options ?? {};\n  return new Promise((resolve, reject) => {\n    function rejectOnAbort(): void {\n      reject(new AbortError(abortErrorMsg ?? \"The operation was aborted.\"));\n    }\n    function removeListeners(): void {\n      abortSignal?.removeEventListener(\"abort\", onAbort);\n    }\n    function onAbort(): void {\n      cleanupBeforeAbort?.();\n      removeListeners();\n      rejectOnAbort();\n    }\n    if (abortSignal?.aborted) {\n      return rejectOnAbort();\n    }\n    try {\n      buildPromise(\n        (x) => {\n          removeListeners();\n          resolve(x);\n        },\n        (x) => {\n          removeListeners();\n          reject(x);\n        },\n      );\n    } catch (err) {\n      reject(err);\n    }\n    abortSignal?.addEventListener(\"abort\", onAbort);\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isError } from \"@typespec/ts-http-runtime/internal/util\";\n\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nexport function getErrorMessage(e: unknown): string {\n  if (isError(e)) {\n    return e.message;\n  } else {\n    let stringified: string;\n    try {\n      if (typeof e === \"object\" && e) {\n        stringified = JSON.stringify(e);\n      } else {\n        stringified = String(e);\n      }\n    } catch (err: any) {\n      stringified = \"[unable to stringify input]\";\n    }\n    return `Unknown error ${stringified}`;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as tspRuntime from \"@typespec/ts-http-runtime/internal/util\";\n\nexport {\n  type AbortOptions,\n  type AbortablePromiseBuilder,\n  cancelablePromiseRace,\n} from \"./aborterUtils.js\";\nexport {\n  type CreateAbortablePromiseOptions,\n  createAbortablePromise,\n} from \"./createAbortablePromise.js\";\nexport { type DelayOptions, delay } from \"./delay.js\";\nexport { getErrorMessage } from \"./error.js\";\nexport { isDefined, isObjectWithProperties, objectHasProperty } from \"./typeGuards.js\";\n\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n *\n * @param retryAttempt - The current retry attempt number.\n *\n * @param config - The exponential retry configuration.\n *\n * @returns An object containing the calculated retry delay.\n */\nexport function calculateRetryDelay(\n  retryAttempt: number,\n  config: {\n    retryDelayInMs: number;\n    maxRetryDelayInMs: number;\n  },\n): {\n  retryAfterInMs: number;\n} {\n  return tspRuntime.calculateRetryDelay(retryAttempt, config);\n}\n\n/**\n * Generates a SHA-256 hash.\n *\n * @param content - The data to be included in the hash.\n *\n * @param encoding - The textual encoding to use for the returned hash.\n */\nexport function computeSha256Hash(content: string, encoding: \"base64\" | \"hex\"): Promise<string> {\n  return tspRuntime.computeSha256Hash(content, encoding);\n}\n\n/**\n * Generates a SHA-256 HMAC signature.\n *\n * @param key - The HMAC key represented as a base64 string, used to generate the cryptographic HMAC hash.\n *\n * @param stringToSign - The data to be signed.\n *\n * @param encoding - The textual encoding to use for the returned HMAC digest.\n */\nexport function computeSha256Hmac(\n  key: string,\n  stringToSign: string,\n  encoding: \"base64\" | \"hex\",\n): Promise<string> {\n  return tspRuntime.computeSha256Hmac(key, stringToSign, encoding);\n}\n\n/**\n * Returns a random integer value between a lower and upper bound, inclusive of both bounds. Note that this uses Math.random and isn't secure. If you need to use this for any kind of security purpose, find a better source of random.\n *\n * @param min - The smallest integer value allowed.\n *\n * @param max - The largest integer value allowed.\n */\nexport function getRandomIntegerInclusive(min: number, max: number): number {\n  return tspRuntime.getRandomIntegerInclusive(min, max);\n}\n\n/**\n * Typeguard for an error object shape (has name and message)\n *\n * @param e - Something caught by a catch clause.\n */\nexport function isError(e: unknown): e is Error {\n  return tspRuntime.isError(e);\n}\n\n/**\n * Helper to determine when an input is a generic JS object.\n *\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input: unknown): input is UnknownObject {\n  return tspRuntime.isObject(input);\n}\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID(): string {\n  return tspRuntime.randomUUID();\n}\n\n/**\n * Supported HTTP methods to use when making requests.\n *\n * @public\n */\nexport type HttpMethods =\n  | \"GET\"\n  | \"PUT\"\n  | \"POST\"\n  | \"DELETE\"\n  | \"PATCH\"\n  | \"HEAD\"\n  | \"OPTIONS\"\n  | \"TRACE\";\n\n/**\n * A generic shape for a plain JS object.\n */\nexport type UnknownObject = {\n  [s: string]: unknown;\n};\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\nexport const isBrowser: boolean = tspRuntime.isBrowser;\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexport const isBun: boolean = tspRuntime.isBun;\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexport const isDeno: boolean = tspRuntime.isDeno;\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n *\n * @deprecated\n *\n * Use `isNodeLike` instead.\n */\nexport const isNode: boolean = tspRuntime.isNodeLike;\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nexport const isNodeLike: boolean = tspRuntime.isNodeLike;\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexport const isNodeRuntime: boolean = tspRuntime.isNodeRuntime;\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\nexport const isReactNative: boolean = tspRuntime.isReactNative;\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexport const isWebWorker: boolean = tspRuntime.isWebWorker;\n\n/** The supported character encoding type */\nexport type EncodingType = \"utf-8\" | \"base64\" | \"base64url\" | \"hex\";\n\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nexport function uint8ArrayToString(bytes: Uint8Array, format: EncodingType): string {\n  return tspRuntime.uint8ArrayToString(bytes, format);\n}\n\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nexport function stringToUint8Array(value: string, format: EncodingType): Uint8Array {\n  return tspRuntime.stringToUint8Array(value, format);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isNodeLike } from \"@azure/core-util\";\n\nfunction isNodeReadableStream(x: unknown): x is NodeJS.ReadableStream {\n  return Boolean(x && typeof (x as NodeJS.ReadableStream)[\"pipe\"] === \"function\");\n}\n\n/**\n * Options passed into createFile specifying metadata about the file.\n */\nexport interface CreateFileOptions {\n  /**\n   * The MIME type of the file.\n   */\n  type?: string;\n\n  /**\n   * Last modified time of the file as a UNIX timestamp.\n   * This will default to the current date.\n   */\n  lastModified?: number;\n\n  /**\n   * relative path of this file when uploading a directory.\n   */\n  webkitRelativePath?: string;\n}\n\n/**\n * Extra options for createFile when a stream is being passed in.\n */\nexport interface CreateFileFromStreamOptions extends CreateFileOptions {\n  /**\n   * Size of the file represented by the stream in bytes.\n   *\n   * This will be used by the pipeline when calculating the Content-Length header\n   * for the overall request.\n   */\n  size?: number;\n}\n\nconst unimplementedMethods = {\n  arrayBuffer: () => {\n    throw new Error(\"Not implemented\");\n  },\n  bytes: () => {\n    throw new Error(\"Not implemented\");\n  },\n  slice: () => {\n    throw new Error(\"Not implemented\");\n  },\n  text: () => {\n    throw new Error(\"Not implemented\");\n  },\n};\n\n/**\n * Private symbol used as key on objects created using createFile containing the\n * original source of the file object.\n *\n * This is used in Node to access the original Node stream without using Blob#stream, which\n * returns a web stream. This is done to avoid a couple of bugs to do with Blob#stream and\n * Readable#to/fromWeb in Node versions we support:\n * - https://github.com/nodejs/node/issues/42694 (fixed in Node 18.14)\n * - https://github.com/nodejs/node/issues/48916 (fixed in Node 20.6)\n *\n * Once these versions are no longer supported, we may be able to stop doing this.\n *\n * @internal\n */\nconst rawContent: unique symbol = Symbol(\"rawContent\");\n\n/**\n * Type signature of a blob-like object with a raw content property.\n */\nexport interface RawContent extends Blob {\n  [rawContent](): Uint8Array | NodeJS.ReadableStream | ReadableStream<Uint8Array>;\n}\n\n/**\n * Type guard to check if a given object is a blob-like object with a raw content property.\n */\nexport function hasRawContent(x: unknown): x is RawContent {\n  return typeof (x as RawContent)[rawContent] === \"function\";\n}\n\n/**\n * Extract the raw content from a given blob-like object. If the input was created using createFile\n * or createFileFromStream, the exact content passed into createFile/createFileFromStream will be used.\n * For true instances of Blob and File, returns the actual blob.\n *\n * @internal\n */\nexport function getRawContent(\n  blob: Blob,\n): Blob | NodeJS.ReadableStream | ReadableStream<Uint8Array> | Uint8Array {\n  if (hasRawContent(blob)) {\n    return blob[rawContent]();\n  } else {\n    return blob;\n  }\n}\n\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function to:\n * - Create a File object for use in RequestBodyType.formData in environments where the\n *   global File object is unavailable.\n * - Create a File-like object from a readable stream without reading the stream into memory.\n *\n * @param stream - the content of the file as a callback returning a stream. When a File object made using createFile is\n *                  passed in a request's form data map, the stream will not be read into memory\n *                  and instead will be streamed when the request is made. In the event of a retry, the\n *                  stream needs to be read again, so this callback SHOULD return a fresh stream if possible.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nexport function createFileFromStream(\n  stream: () => ReadableStream<Uint8Array> | NodeJS.ReadableStream,\n  name: string,\n  options: CreateFileFromStreamOptions = {},\n): File {\n  return {\n    ...unimplementedMethods,\n    type: options.type ?? \"\",\n    lastModified: options.lastModified ?? new Date().getTime(),\n    webkitRelativePath: options.webkitRelativePath ?? \"\",\n    size: options.size ?? -1,\n    name,\n    stream: () => {\n      const s = stream();\n      if (isNodeReadableStream(s)) {\n        throw new Error(\n          \"Not supported: a Node stream was provided as input to createFileFromStream.\",\n        );\n      }\n\n      return s;\n    },\n    [rawContent]: stream,\n  } as File & RawContent;\n}\n\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function create a File object for use in RequestBodyType.formData in environments where the global File object is unavailable.\n *\n * @param content - the content of the file as a Uint8Array in memory.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nexport function createFile(\n  content: Uint8Array,\n  name: string,\n  options: CreateFileOptions = {},\n): File {\n  if (isNodeLike) {\n    return {\n      ...unimplementedMethods,\n      type: options.type ?? \"\",\n      lastModified: options.lastModified ?? new Date().getTime(),\n      webkitRelativePath: options.webkitRelativePath ?? \"\",\n      size: content.byteLength,\n      name,\n      arrayBuffer: async () => content.buffer,\n      stream: () => new Blob([content]).stream(),\n      [rawContent]: () => content,\n    } as File & RawContent;\n  } else {\n    return new File([content], name, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRetryOptions } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  defaultRetryPolicyName as tspDefaultRetryPolicyName,\n  defaultRetryPolicy as tspDefaultRetryPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nexport const defaultRetryPolicyName = tspDefaultRetryPolicyName;\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface DefaultRetryPolicyOptions extends PipelineRetryOptions {}\n\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nexport function defaultRetryPolicy(options: DefaultRetryPolicyOptions = {}): PipelinePolicy {\n  return tspDefaultRetryPolicy(options);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRetryOptions } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { exponentialRetryStrategy } from \"../retryStrategies/exponentialRetryStrategy.js\";\nimport { throttlingRetryStrategy } from \"../retryStrategies/throttlingRetryStrategy.js\";\nimport { retryPolicy } from \"./retryPolicy.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nexport const defaultRetryPolicyName = \"defaultRetryPolicy\";\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface DefaultRetryPolicyOptions extends PipelineRetryOptions {}\n\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nexport function defaultRetryPolicy(options: DefaultRetryPolicyOptions = {}): PipelinePolicy {\n  return {\n    name: defaultRetryPolicyName,\n    sendRequest: retryPolicy([throttlingRetryStrategy(), exponentialRetryStrategy(options)], {\n      maxRetries: options.maxRetries ?? DEFAULT_RETRY_POLICY_COUNT,\n    }).sendRequest,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { ProxySettings } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  proxyPolicy as tspProxyPolicy,\n  proxyPolicyName as tspProxyPolicyName,\n  getDefaultProxySettings as tspGetDefaultProxySettings,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the proxyPolicy.\n */\nexport const proxyPolicyName = tspProxyPolicyName;\n\n/**\n * This method converts a proxy url into `ProxySettings` for use with ProxyPolicy.\n * If no argument is given, it attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n * @param proxyUrl - The url of the proxy to use. May contain authentication information.\n * @deprecated - Internally this method is no longer necessary when setting proxy information.\n */\nexport function getDefaultProxySettings(proxyUrl?: string): ProxySettings | undefined {\n  return tspGetDefaultProxySettings(proxyUrl);\n}\n\n/**\n * A policy that allows one to apply proxy settings to all requests.\n * If not passed static settings, they will be retrieved from the HTTPS_PROXY\n * or HTTP_PROXY environment variables.\n * @param proxySettings - ProxySettings to use on each request.\n * @param options - additional settings, for example, custom NO_PROXY patterns\n */\nexport function proxyPolicy(\n  proxySettings?: ProxySettings,\n  options?: {\n    /** a list of patterns to override those loaded from NO_PROXY environment variable. */\n    customNoProxyList?: string[];\n  },\n): PipelinePolicy {\n  return tspProxyPolicy(proxySettings, options);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { TracingContext, TracingSpan } from \"./interfaces.js\";\n\n/** @internal */\nexport const knownContextKeys = {\n  span: Symbol.for(\"@azure/core-tracing span\"),\n  namespace: Symbol.for(\"@azure/core-tracing namespace\"),\n};\n\n/**\n * Creates a new {@link TracingContext} with the given options.\n * @param options - A set of known keys that may be set on the context.\n * @returns A new {@link TracingContext} with the given options.\n *\n * @internal\n */\nexport function createTracingContext(options: CreateTracingContextOptions = {}): TracingContext {\n  let context: TracingContext = new TracingContextImpl(options.parentContext);\n  if (options.span) {\n    context = context.setValue(knownContextKeys.span, options.span);\n  }\n  if (options.namespace) {\n    context = context.setValue(knownContextKeys.namespace, options.namespace);\n  }\n  return context;\n}\n\n/** @internal */\nexport class TracingContextImpl implements TracingContext {\n  private _contextMap: Map<symbol, unknown>;\n  constructor(initialContext?: TracingContext) {\n    this._contextMap =\n      initialContext instanceof TracingContextImpl\n        ? new Map<symbol, unknown>(initialContext._contextMap)\n        : new Map();\n  }\n\n  setValue(key: symbol, value: unknown): TracingContext {\n    const newContext = new TracingContextImpl(this);\n    newContext._contextMap.set(key, value);\n    return newContext;\n  }\n\n  getValue(key: symbol): unknown {\n    return this._contextMap.get(key);\n  }\n\n  deleteValue(key: symbol): TracingContext {\n    const newContext = new TracingContextImpl(this);\n    newContext._contextMap.delete(key);\n    return newContext;\n  }\n}\n\n/**\n * Represents a set of items that can be set when creating a new {@link TracingContext}.\n */\nexport interface CreateTracingContextOptions {\n  /** The {@link parentContext} - the newly created context will contain all the values of the parent context unless overridden. */\n  parentContext?: TracingContext;\n  /** An initial span to set on the context. */\n  span?: TracingSpan;\n  /** The namespace to set on any child spans. */\n  namespace?: string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { Instrumenter } from \"./interfaces.js\";\n// @ts-expect-error The recommended approach to sharing module state between ESM and CJS.\n// See https://github.com/isaacs/tshy/blob/main/README.md#module-local-state for additional information.\nimport { state as cjsState } from \"../commonjs/state.js\";\n\n/**\n * Defines the shared state between CJS and ESM by re-exporting the CJS state.\n */\nexport const state = cjsState as {\n  instrumenterImplementation: Instrumenter | undefined;\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  Instrumenter,\n  InstrumenterSpanOptions,\n  TracingContext,\n  TracingSpan,\n} from \"./interfaces.js\";\n\nimport { createTracingContext } from \"./tracingContext.js\";\nimport { state } from \"./state.js\";\n\nexport function createDefaultTracingSpan(): TracingSpan {\n  return {\n    end: () => {\n      // noop\n    },\n    isRecording: () => false,\n    recordException: () => {\n      // noop\n    },\n    setAttribute: () => {\n      // noop\n    },\n    setStatus: () => {\n      // noop\n    },\n    addEvent: () => {\n      // noop\n    },\n  };\n}\n\nexport function createDefaultInstrumenter(): Instrumenter {\n  return {\n    createRequestHeaders: (): Record<string, string> => {\n      return {};\n    },\n    parseTraceparentHeader: (): TracingContext | undefined => {\n      return undefined;\n    },\n    startSpan: (\n      _name: string,\n      spanOptions: InstrumenterSpanOptions,\n    ): { span: TracingSpan; tracingContext: TracingContext } => {\n      return {\n        span: createDefaultTracingSpan(),\n        tracingContext: createTracingContext({ parentContext: spanOptions.tracingContext }),\n      };\n    },\n    withContext<\n      CallbackArgs extends unknown[],\n      Callback extends (...args: CallbackArgs) => ReturnType<Callback>,\n    >(\n      _context: TracingContext,\n      callback: Callback,\n      ...callbackArgs: CallbackArgs\n    ): ReturnType<Callback> {\n      return callback(...callbackArgs);\n    },\n  };\n}\n\n/**\n * Extends the Azure SDK with support for a given instrumenter implementation.\n *\n * @param instrumenter - The instrumenter implementation to use.\n */\nexport function useInstrumenter(instrumenter: Instrumenter): void {\n  state.instrumenterImplementation = instrumenter;\n}\n\n/**\n * Gets the currently set instrumenter, a No-Op instrumenter by default.\n *\n * @returns The currently set instrumenter\n */\nexport function getInstrumenter(): Instrumenter {\n  if (!state.instrumenterImplementation) {\n    state.instrumenterImplementation = createDefaultInstrumenter();\n  }\n  return state.instrumenterImplementation;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  OperationTracingOptions,\n  OptionsWithTracingContext,\n  Resolved,\n  TracingClient,\n  TracingClientOptions,\n  TracingContext,\n  TracingSpan,\n  TracingSpanOptions,\n} from \"./interfaces.js\";\nimport { getInstrumenter } from \"./instrumenter.js\";\nimport { knownContextKeys } from \"./tracingContext.js\";\n\n/**\n * Creates a new tracing client.\n *\n * @param options - Options used to configure the tracing client.\n * @returns - An instance of {@link TracingClient}.\n */\nexport function createTracingClient(options: TracingClientOptions): TracingClient {\n  const { namespace, packageName, packageVersion } = options;\n\n  function startSpan<Options extends { tracingOptions?: OperationTracingOptions }>(\n    name: string,\n    operationOptions?: Options,\n    spanOptions?: TracingSpanOptions,\n  ): {\n    span: TracingSpan;\n    updatedOptions: OptionsWithTracingContext<Options>;\n  } {\n    const startSpanResult = getInstrumenter().startSpan(name, {\n      ...spanOptions,\n      packageName: packageName,\n      packageVersion: packageVersion,\n      tracingContext: operationOptions?.tracingOptions?.tracingContext,\n    });\n    let tracingContext = startSpanResult.tracingContext;\n    const span = startSpanResult.span;\n    if (!tracingContext.getValue(knownContextKeys.namespace)) {\n      tracingContext = tracingContext.setValue(knownContextKeys.namespace, namespace);\n    }\n    span.setAttribute(\"az.namespace\", tracingContext.getValue(knownContextKeys.namespace));\n    const updatedOptions: OptionsWithTracingContext<Options> = Object.assign({}, operationOptions, {\n      tracingOptions: { ...operationOptions?.tracingOptions, tracingContext },\n    });\n\n    return {\n      span,\n      updatedOptions,\n    };\n  }\n\n  async function withSpan<\n    Options extends { tracingOptions?: OperationTracingOptions },\n    Callback extends (\n      updatedOptions: Options,\n      span: Omit<TracingSpan, \"end\">,\n    ) => ReturnType<Callback>,\n  >(\n    name: string,\n    operationOptions: Options,\n    callback: Callback,\n    spanOptions?: TracingSpanOptions,\n  ): Promise<Resolved<ReturnType<Callback>>> {\n    const { span, updatedOptions } = startSpan(name, operationOptions, spanOptions);\n    try {\n      const result = await withContext(updatedOptions.tracingOptions.tracingContext, () =>\n        Promise.resolve(callback(updatedOptions, span)),\n      );\n      span.setStatus({ status: \"success\" });\n      return result as ReturnType<typeof withSpan>;\n    } catch (err: any) {\n      span.setStatus({ status: \"error\", error: err });\n      throw err;\n    } finally {\n      span.end();\n    }\n  }\n\n  function withContext<\n    CallbackArgs extends unknown[],\n    Callback extends (...args: CallbackArgs) => ReturnType<Callback>,\n  >(\n    context: TracingContext,\n    callback: Callback,\n    ...callbackArgs: CallbackArgs\n  ): ReturnType<Callback> {\n    return getInstrumenter().withContext(context, callback, ...callbackArgs);\n  }\n\n  /**\n   * Parses a traceparent header value into a span identifier.\n   *\n   * @param traceparentHeader - The traceparent header to parse.\n   * @returns An implementation-specific identifier for the span.\n   */\n  function parseTraceparentHeader(traceparentHeader: string): TracingContext | undefined {\n    return getInstrumenter().parseTraceparentHeader(traceparentHeader);\n  }\n\n  /**\n   * Creates a set of request headers to propagate tracing information to a backend.\n   *\n   * @param tracingContext - The context containing the span to serialize.\n   * @returns The set of headers to add to a request.\n   */\n  function createRequestHeaders(tracingContext?: TracingContext): Record<string, string> {\n    return getInstrumenter().createRequestHeaders(tracingContext);\n  }\n\n  return {\n    startSpan,\n    withSpan,\n    withContext,\n    parseTraceparentHeader,\n    createRequestHeaders,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse } from \"./interfaces.js\";\n\nimport type { RestErrorOptions as TspRestErrorOptions } from \"@typespec/ts-http-runtime\";\nimport {\n  RestError as TspRestError,\n  isRestError as tspIsRestError,\n} from \"@typespec/ts-http-runtime\";\n\n/**\n * The options supported by RestError.\n */\nexport interface RestErrorOptions {\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  statusCode?: number;\n  /**\n   * The request that was made.\n   */\n  request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   */\n  response?: PipelineResponse;\n}\n\n/**\n * A custom error type for failed pipeline requests.\n */\nexport class RestError extends Error {\n  /**\n   * Something went wrong when making the request.\n   * This means the actual request failed for some reason,\n   * such as a DNS issue or the connection being lost.\n   */\n  static readonly REQUEST_SEND_ERROR: string = \"REQUEST_SEND_ERROR\";\n  /**\n   * This means that parsing the response from the server failed.\n   * It may have been malformed.\n   */\n  static readonly PARSE_ERROR: string = \"PARSE_ERROR\";\n\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  public code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  public statusCode?: number;\n  /**\n   * The request that was made.\n   * This property is non-enumerable.\n   */\n  public request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   * This property is non-enumerable.\n   */\n  public response?: PipelineResponse;\n  /**\n   * Bonus property set by the throw site.\n   */\n  public details?: unknown;\n\n  constructor(message: string, options: RestErrorOptions = {}) {\n    super(message);\n\n    // what is this??\n    // it turns out that you can return from a constructor and it causes\n    // calling `new` to return the value you return.\n    // this lets us wrap the TypeSpec RestError so that calling this constructor will give you the same type of object as calling the TypeSpec one,\n    // even though the constructor signatures (through RestErrorOptions) are slightly different.\n    return new TspRestError(message, options as TspRestErrorOptions);\n  }\n}\n\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nexport function isRestError(e: unknown): e is RestError {\n  return tspIsRestError(e);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  type TracingClient,\n  type TracingContext,\n  type TracingSpan,\n  createTracingClient,\n} from \"@azure/core-tracing\";\nimport { SDK_VERSION } from \"../constants.js\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { getUserAgentValue } from \"../util/userAgent.js\";\nimport { logger } from \"../log.js\";\nimport { getErrorMessage, isError } from \"@azure/core-util\";\nimport { isRestError } from \"../restError.js\";\nimport { Sanitizer } from \"@typespec/ts-http-runtime/internal/util\";\n\n/**\n * The programmatic identifier of the tracingPolicy.\n */\nexport const tracingPolicyName = \"tracingPolicy\";\n\n/**\n * Options to configure the tracing policy.\n */\nexport interface TracingPolicyOptions {\n  /**\n   * String prefix to add to the user agent logged as metadata\n   * on the generated Span.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n}\n\n/**\n * A simple policy to create OpenTelemetry Spans for each request made by the pipeline\n * that has SpanOptions with a parent.\n * Requests made without a parent Span will not be recorded.\n * @param options - Options to configure the telemetry logged by the tracing policy.\n */\nexport function tracingPolicy(options: TracingPolicyOptions = {}): PipelinePolicy {\n  const userAgentPromise = getUserAgentValue(options.userAgentPrefix);\n  const sanitizer = new Sanitizer({\n    additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n  });\n  const tracingClient = tryCreateTracingClient();\n\n  return {\n    name: tracingPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!tracingClient) {\n        return next(request);\n      }\n\n      const userAgent = await userAgentPromise;\n\n      const spanAttributes = {\n        \"http.url\": sanitizer.sanitizeUrl(request.url),\n        \"http.method\": request.method,\n        \"http.user_agent\": userAgent,\n        requestId: request.requestId,\n      };\n      if (userAgent) {\n        spanAttributes[\"http.user_agent\"] = userAgent;\n      }\n\n      const { span, tracingContext } = tryCreateSpan(tracingClient, request, spanAttributes) ?? {};\n\n      if (!span || !tracingContext) {\n        return next(request);\n      }\n\n      try {\n        const response = await tracingClient.withContext(tracingContext, next, request);\n        tryProcessResponse(span, response);\n        return response;\n      } catch (err: any) {\n        tryProcessError(span, err);\n        throw err;\n      }\n    },\n  };\n}\n\nfunction tryCreateTracingClient(): TracingClient | undefined {\n  try {\n    return createTracingClient({\n      namespace: \"\",\n      packageName: \"@azure/core-rest-pipeline\",\n      packageVersion: SDK_VERSION,\n    });\n  } catch (e: unknown) {\n    logger.warning(`Error when creating the TracingClient: ${getErrorMessage(e)}`);\n    return undefined;\n  }\n}\n\nfunction tryCreateSpan(\n  tracingClient: TracingClient,\n  request: PipelineRequest,\n  spanAttributes: Record<string, unknown>,\n): { span: TracingSpan; tracingContext: TracingContext } | undefined {\n  try {\n    // As per spec, we do not need to differentiate between HTTP and HTTPS in span name.\n    const { span, updatedOptions } = tracingClient.startSpan(\n      `HTTP ${request.method}`,\n      { tracingOptions: request.tracingOptions },\n      {\n        spanKind: \"client\",\n        spanAttributes,\n      },\n    );\n\n    // If the span is not recording, don't do any more work.\n    if (!span.isRecording()) {\n      span.end();\n      return undefined;\n    }\n\n    // set headers\n    const headers = tracingClient.createRequestHeaders(\n      updatedOptions.tracingOptions.tracingContext,\n    );\n    for (const [key, value] of Object.entries(headers)) {\n      request.headers.set(key, value);\n    }\n    return { span, tracingContext: updatedOptions.tracingOptions.tracingContext };\n  } catch (e: any) {\n    logger.warning(`Skipping creating a tracing span due to an error: ${getErrorMessage(e)}`);\n    return undefined;\n  }\n}\n\nfunction tryProcessError(span: TracingSpan, error: unknown): void {\n  try {\n    span.setStatus({\n      status: \"error\",\n      error: isError(error) ? error : undefined,\n    });\n    if (isRestError(error) && error.statusCode) {\n      span.setAttribute(\"http.status_code\", error.statusCode);\n    }\n    span.end();\n  } catch (e: any) {\n    logger.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(e)}`);\n  }\n}\n\nfunction tryProcessResponse(span: TracingSpan, response: PipelineResponse): void {\n  try {\n    span.setAttribute(\"http.status_code\", response.status);\n    const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n    if (serviceRequestId) {\n      span.setAttribute(\"serviceRequestId\", serviceRequestId);\n    }\n    // Per semantic conventions, only set the status to error if the status code is 4xx or 5xx.\n    // Otherwise, the status MUST remain unset.\n    // https://opentelemetry.io/docs/specs/semconv/http/http-spans/#status\n    if (response.status >= 400) {\n      span.setStatus({\n        status: \"error\",\n      });\n    }\n    span.end();\n  } catch (e: any) {\n    logger.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(e)}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\n\n/**\n * Creates a native AbortSignal which reflects the state of the provided AbortSignalLike.\n * If the AbortSignalLike is already a native AbortSignal, it is returned as is.\n * @param abortSignalLike - The AbortSignalLike to wrap.\n * @returns - An object containing the native AbortSignal and an optional cleanup function. The cleanup function should be called when the AbortSignal is no longer needed.\n */\nexport function wrapAbortSignalLike(abortSignalLike: AbortSignalLike): {\n  abortSignal: AbortSignal;\n  cleanup?: () => void;\n} {\n  if (abortSignalLike instanceof AbortSignal) {\n    return { abortSignal: abortSignalLike };\n  }\n\n  if (abortSignalLike.aborted) {\n    return { abortSignal: AbortSignal.abort((abortSignalLike as any).reason) };\n  }\n\n  const controller = new AbortController();\n  let needsCleanup = true;\n  function cleanup(): void {\n    if (needsCleanup) {\n      abortSignalLike.removeEventListener(\"abort\", listener);\n      needsCleanup = false;\n    }\n  }\n  function listener(): void {\n    controller.abort((abortSignalLike as any).reason);\n    cleanup();\n  }\n\n  abortSignalLike.addEventListener(\"abort\", listener);\n  return { abortSignal: controller.signal, cleanup };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { type LogPolicyOptions, logPolicy } from \"./policies/logPolicy.js\";\nimport { type Pipeline, createEmptyPipeline } from \"./pipeline.js\";\nimport type { Agent, PipelineRetryOptions, ProxySettings, TlsSettings } from \"./interfaces.js\";\nimport { type RedirectPolicyOptions, redirectPolicy } from \"./policies/redirectPolicy.js\";\nimport { type UserAgentPolicyOptions, userAgentPolicy } from \"./policies/userAgentPolicy.js\";\nimport { multipartPolicy, multipartPolicyName } from \"./policies/multipartPolicy.js\";\nimport { decompressResponsePolicy } from \"./policies/decompressResponsePolicy.js\";\nimport { defaultRetryPolicy } from \"./policies/defaultRetryPolicy.js\";\nimport { formDataPolicy } from \"./policies/formDataPolicy.js\";\nimport { isNodeLike } from \"@azure/core-util\";\nimport { proxyPolicy } from \"./policies/proxyPolicy.js\";\nimport { setClientRequestIdPolicy } from \"./policies/setClientRequestIdPolicy.js\";\nimport { agentPolicy } from \"./policies/agentPolicy.js\";\nimport { tlsPolicy } from \"./policies/tlsPolicy.js\";\nimport { tracingPolicy } from \"./policies/tracingPolicy.js\";\nimport { wrapAbortSignalLikePolicy } from \"./policies/wrapAbortSignalLikePolicy.js\";\n\n/**\n * Defines options that are used to configure the HTTP pipeline for\n * an SDK client.\n */\nexport interface PipelineOptions {\n  /**\n   * Options that control how to retry failed requests.\n   */\n  retryOptions?: PipelineRetryOptions;\n\n  /**\n   * Options to configure a proxy for outgoing requests.\n   */\n  proxyOptions?: ProxySettings;\n\n  /** Options for configuring Agent instance for outgoing requests */\n  agent?: Agent;\n\n  /** Options for configuring TLS authentication */\n  tlsOptions?: TlsSettings;\n\n  /**\n   * Options for how redirect responses are handled.\n   */\n  redirectOptions?: RedirectPolicyOptions;\n\n  /**\n   * Options for adding user agent details to outgoing requests.\n   */\n  userAgentOptions?: UserAgentPolicyOptions;\n\n  /**\n   * Options for setting common telemetry and tracing info to outgoing requests.\n   */\n  telemetryOptions?: TelemetryOptions;\n}\n\n/**\n * Defines options that are used to configure common telemetry and tracing info\n */\nexport interface TelemetryOptions {\n  /**\n   * The name of the header to pass the request ID to.\n   */\n  clientRequestIdHeaderName?: string;\n}\n\n/**\n * Defines options that are used to configure internal options of\n * the HTTP pipeline for an SDK client.\n */\nexport interface InternalPipelineOptions extends PipelineOptions {\n  /**\n   * Options to configure request/response logging.\n   */\n  loggingOptions?: LogPolicyOptions;\n}\n\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nexport function createPipelineFromOptions(options: InternalPipelineOptions): Pipeline {\n  const pipeline = createEmptyPipeline();\n\n  if (isNodeLike) {\n    if (options.agent) {\n      pipeline.addPolicy(agentPolicy(options.agent));\n    }\n    if (options.tlsOptions) {\n      pipeline.addPolicy(tlsPolicy(options.tlsOptions));\n    }\n    pipeline.addPolicy(proxyPolicy(options.proxyOptions));\n    pipeline.addPolicy(decompressResponsePolicy());\n  }\n\n  pipeline.addPolicy(wrapAbortSignalLikePolicy());\n\n  pipeline.addPolicy(formDataPolicy(), { beforePolicies: [multipartPolicyName] });\n  pipeline.addPolicy(userAgentPolicy(options.userAgentOptions));\n  pipeline.addPolicy(setClientRequestIdPolicy(options.telemetryOptions?.clientRequestIdHeaderName));\n  // The multipart policy is added after policies with no phase, so that\n  // policies can be added between it and formDataPolicy to modify\n  // properties (e.g., making the boundary constant in recorded tests).\n  pipeline.addPolicy(multipartPolicy(), { afterPhase: \"Deserialize\" });\n  pipeline.addPolicy(defaultRetryPolicy(options.retryOptions), { phase: \"Retry\" });\n  pipeline.addPolicy(tracingPolicy({ ...options.userAgentOptions, ...options.loggingOptions }), {\n    afterPhase: \"Retry\",\n  });\n  if (isNodeLike) {\n    // Both XHR and Fetch expect to handle redirects automatically,\n    // so only include this policy when we're in Node.\n    pipeline.addPolicy(redirectPolicy(options.redirectOptions), { afterPhase: \"Retry\" });\n  }\n  pipeline.addPolicy(logPolicy(options.loggingOptions), { afterPhase: \"Sign\" });\n\n  return pipeline;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { Agent } from \"../interfaces.js\";\n\n/**\n * Name of the Agent Policy\n */\nexport const agentPolicyName = \"agentPolicy\";\n\n/**\n * Gets a pipeline policy that sets http.agent\n */\nexport function agentPolicy(agent?: Agent): PipelinePolicy {\n  return {\n    name: agentPolicyName,\n    sendRequest: async (req, next) => {\n      // Users may define an agent on the request, honor it over the client level one\n      if (!req.agent) {\n        req.agent = agent;\n      }\n      return next(req);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { Agent } from \"../interfaces.js\";\nimport {\n  agentPolicyName as tspAgentPolicyName,\n  agentPolicy as tspAgentPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * Name of the Agent Policy\n */\nexport const agentPolicyName = tspAgentPolicyName;\n\n/**\n * Gets a pipeline policy that sets http.agent\n */\nexport function agentPolicy(agent?: Agent): PipelinePolicy {\n  return tspAgentPolicy(agent);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { TlsSettings } from \"../interfaces.js\";\n\n/**\n * Name of the TLS Policy\n */\nexport const tlsPolicyName = \"tlsPolicy\";\n\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nexport function tlsPolicy(tlsSettings?: TlsSettings): PipelinePolicy {\n  return {\n    name: tlsPolicyName,\n    sendRequest: async (req, next) => {\n      // Users may define a request tlsSettings, honor those over the client level one\n      if (!req.tlsSettings) {\n        req.tlsSettings = tlsSettings;\n      }\n      return next(req);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { TlsSettings } from \"../interfaces.js\";\n\nimport {\n  tlsPolicy as tspTlsPolicy,\n  tlsPolicyName as tspTlsPolicyName,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * Name of the TLS Policy\n */\nexport const tlsPolicyName = tspTlsPolicyName;\n\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nexport function tlsPolicy(tlsSettings?: TlsSettings): PipelinePolicy {\n  return tspTlsPolicy(tlsSettings);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the decompressResponsePolicy.\n */\nexport const decompressResponsePolicyName = \"decompressResponsePolicy\";\n\n/**\n * A policy to enable response decompression according to Accept-Encoding header\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding\n */\nexport function decompressResponsePolicy(): PipelinePolicy {\n  return {\n    name: decompressResponsePolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      // HEAD requests have no body\n      if (request.method !== \"HEAD\") {\n        request.headers.set(\"Accept-Encoding\", \"gzip,deflate\");\n      }\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { type PipelinePolicy } from \"../pipeline.js\";\nimport { wrapAbortSignalLike } from \"../util/wrapAbortSignal.js\";\n\nexport const wrapAbortSignalLikePolicyName = \"wrapAbortSignalLikePolicy\";\n\n/**\n * Policy that ensure that any AbortSignalLike is wrapped in a native AbortSignal for processing by the pipeline.\n * Since the ts-http-runtime expects a native AbortSignal, this policy is used to ensure that any AbortSignalLike is wrapped in a native AbortSignal.\n *\n * @returns - created policy\n */\nexport function wrapAbortSignalLikePolicy(): PipelinePolicy {\n  return {\n    name: wrapAbortSignalLikePolicyName,\n    sendRequest: async (request, next) => {\n      if (!request.abortSignal) {\n        return next(request);\n      }\n\n      const { abortSignal, cleanup } = wrapAbortSignalLike(request.abortSignal);\n      // eslint-disable-next-line no-param-reassign\n      request.abortSignal = abortSignal;\n      try {\n        return await next(request);\n      } finally {\n        cleanup?.();\n      }\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  formDataPolicyName as tspFormDataPolicyName,\n  formDataPolicy as tspFormDataPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = tspFormDataPolicyName;\n\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy(): PipelinePolicy {\n  return tspFormDataPolicy();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { getUserAgentHeaderName, getUserAgentValue } from \"../util/userAgent.js\";\n\nconst UserAgentHeaderName = getUserAgentHeaderName();\n\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nexport const userAgentPolicyName = \"userAgentPolicy\";\n\n/**\n * Options for adding user agent details to outgoing requests.\n */\nexport interface UserAgentPolicyOptions {\n  /**\n   * String prefix to add to the user agent for outgoing requests.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n}\n\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nexport function userAgentPolicy(options: UserAgentPolicyOptions = {}): PipelinePolicy {\n  const userAgentValue = getUserAgentValue(options.userAgentPrefix);\n  return {\n    name: userAgentPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.headers.has(UserAgentHeaderName)) {\n        request.headers.set(UserAgentHeaderName, await userAgentValue);\n      }\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nexport const setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\nexport function setClientRequestIdPolicy(\n  requestIdHeaderName = \"x-ms-client-request-id\",\n): PipelinePolicy {\n  return {\n    name: setClientRequestIdPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.headers.has(requestIdHeaderName)) {\n        request.headers.set(requestIdHeaderName, request.requestId);\n      }\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  multipartPolicyName as tspMultipartPolicyName,\n  multipartPolicy as tspMultipartPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\nimport type {\n  PipelineRequest as TspPipelineRequest,\n  SendRequest as TspSendRequest,\n} from \"@typespec/ts-http-runtime\";\nimport { getRawContent, hasRawContent } from \"../util/file.js\";\n\n/**\n * Name of multipart policy\n */\nexport const multipartPolicyName = tspMultipartPolicyName;\n\n/**\n * Pipeline policy for multipart requests\n */\nexport function multipartPolicy(): PipelinePolicy {\n  const tspPolicy = tspMultipartPolicy();\n\n  return {\n    name: multipartPolicyName,\n    sendRequest: async (request, next) => {\n      if (request.multipartBody) {\n        for (const part of request.multipartBody.parts) {\n          if (hasRawContent(part.body)) {\n            part.body = getRawContent(part.body);\n          }\n        }\n      }\n\n      return tspPolicy.sendRequest(request as TspPipelineRequest, next as TspSendRequest);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\nimport {\n  redirectPolicyName as tspRedirectPolicyName,\n  redirectPolicy as tspRedirectPolicy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\n\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nexport const redirectPolicyName = tspRedirectPolicyName;\n\n/**\n * Options for how redirect responses are handled.\n */\nexport interface RedirectPolicyOptions {\n  /**\n   * The maximum number of times the redirect URL will be tried before\n   * failing.  Defaults to 20.\n   */\n  maxRetries?: number;\n}\n\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nexport function redirectPolicy(options: RedirectPolicyOptions = {}): PipelinePolicy {\n  return tspRedirectPolicy(options);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient } from \"./interfaces.js\";\nimport { createDefaultHttpClient as tspCreateDefaultHttpClient } from \"@typespec/ts-http-runtime\";\nimport { wrapAbortSignalLike } from \"./util/wrapAbortSignal.js\";\nimport { type PipelineRequest as TspPipelineRequest } from \"@typespec/ts-http-runtime\";\n\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient(): HttpClient {\n  const client = tspCreateDefaultHttpClient();\n  return {\n    async sendRequest(request) {\n      // we wrap any AbortSignalLike here since the TypeSpec runtime expects a native AbortSignal.\n      // 99% of the time, this should be a no-op since a native AbortSignal is passed in.\n      const { abortSignal, cleanup } = request.abortSignal\n        ? wrapAbortSignalLike(request.abortSignal)\n        : {};\n      try {\n        // eslint-disable-next-line no-param-reassign\n        request.abortSignal = abortSignal;\n        return await client.sendRequest(request as TspPipelineRequest);\n      } finally {\n        cleanup?.();\n      }\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpHeaders, RawHttpHeadersInput } from \"./interfaces.js\";\n\nimport { createHttpHeaders as tspCreateHttpHeaders } from \"@typespec/ts-http-runtime\";\n\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nexport function createHttpHeaders(rawHeaders?: RawHttpHeadersInput): HttpHeaders {\n  return tspCreateHttpHeaders(rawHeaders);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  Agent,\n  FormDataMap,\n  HttpHeaders,\n  MultipartRequestBody,\n  PipelineRequest,\n  ProxySettings,\n  RequestBodyType,\n  TlsSettings,\n  TransferProgressEvent,\n} from \"./interfaces.js\";\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { OperationTracingOptions } from \"@azure/core-tracing\";\nimport type { HttpMethods } from \"@azure/core-util\";\nimport {\n  createPipelineRequest as tspCreatePipelineRequest,\n  type PipelineRequestOptions as TspPipelineRequestOptions,\n} from \"@typespec/ts-http-runtime\";\n\n/**\n * Settings to initialize a request.\n * Almost equivalent to Partial<PipelineRequest>, but url is mandatory.\n */\nexport interface PipelineRequestOptions {\n  /**\n   * The URL to make the request to.\n   */\n  url: string;\n\n  /**\n   * The HTTP method to use when making the request.\n   */\n  method?: HttpMethods;\n\n  /**\n   * The HTTP headers to use when making the request.\n   */\n  headers?: HttpHeaders;\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   * Defaults to 0, which disables the timeout.\n   */\n  timeout?: number;\n\n  /**\n   * If credentials (cookies) should be sent along during an XHR.\n   * Defaults to false.\n   */\n  withCredentials?: boolean;\n\n  /**\n   * A unique identifier for the request. Used for logging and tracing.\n   */\n  requestId?: string;\n\n  /**\n   * The HTTP body content (if any)\n   */\n  body?: RequestBodyType;\n\n  /**\n   * Body for a multipart request.\n   */\n  multipartBody?: MultipartRequestBody;\n\n  /**\n   * To simulate a browser form post\n   */\n  formData?: FormDataMap;\n\n  /**\n   * A list of response status codes whose corresponding PipelineResponse body should be treated as a stream.\n   */\n  streamResponseStatusCodes?: Set<number>;\n\n  /**\n   * NODEJS ONLY\n   *\n   * A Node-only option to provide a custom `http.Agent`/`https.Agent`.\n   * NOTE: usually this should be one instance shared by multiple requests so that the underlying\n   *       connection to the service can be reused.\n   * Does nothing when running in the browser.\n   */\n  agent?: Agent;\n\n  /**\n   * BROWSER ONLY\n   *\n   * A browser only option to enable use of the Streams API. If this option is set and streaming is used\n   * (see `streamResponseStatusCodes`), the response will have a property `browserStream` instead of\n   * `blobBody` which will be undefined.\n   *\n   * Default value is false\n   */\n  enableBrowserStreams?: boolean;\n\n  /** Settings for configuring TLS authentication */\n  tlsSettings?: TlsSettings;\n\n  /**\n   * Proxy configuration.\n   */\n  proxySettings?: ProxySettings;\n\n  /**\n   * If the connection should not be reused.\n   */\n  disableKeepAlive?: boolean;\n\n  /**\n   * Used to abort the request later.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Options used to create a span when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Set to true if the request is sent over HTTP instead of HTTPS */\n  allowInsecureConnection?: boolean;\n\n  /**\n   * Additional options to set on the request. This provides a way to override\n   * existing ones or provide request properties that are not declared.\n   *\n   * For possible valid properties, see\n   *   - NodeJS https.request options:  https://nodejs.org/api/http.html#httprequestoptions-callback\n   *   - Browser RequestInit: https://developer.mozilla.org/en-US/docs/Web/API/RequestInit\n   *\n   * WARNING: Options specified here will override any properties of same names when request is sent by {@link HttpClient}.\n   */\n  requestOverrides?: Record<string, unknown>;\n}\n\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nexport function createPipelineRequest(options: PipelineRequestOptions): PipelineRequest {\n  // Cast required due to difference between ts-http-runtime requiring AbortSignal while core-rest-pipeline allows\n  // the more generic AbortSignalLike. The wrapAbortSignalLike pipeline policy will take care of ensuring that any AbortSignalLike in the request\n  // is converted into a true AbortSignal.\n  return tspCreatePipelineRequest(options as TspPipelineRequestOptions);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { type AzureLogger, createClientLogger } from \"@azure/logger\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\nimport {\n  retryPolicy as tspRetryPolicy,\n  type RetryStrategy as TspRetryStrategy,\n} from \"@typespec/ts-http-runtime/internal/policies\";\nimport type { PipelineResponse } from \"../interfaces.js\";\nimport type { RestError } from \"../restError.js\";\n\nconst retryPolicyLogger = createClientLogger(\"core-rest-pipeline retryPolicy\");\n\n/**\n * Information provided to the retry strategy about the current progress of the retry policy.\n */\nexport interface RetryInformation {\n  /**\n   * A {@link PipelineResponse}, if the last retry attempt succeeded.\n   */\n  response?: PipelineResponse;\n  /**\n   * A {@link RestError}, if the last retry attempt failed.\n   */\n  responseError?: RestError;\n  /**\n   * Total number of retries so far.\n   */\n  retryCount: number;\n}\n\n/**\n * Properties that can modify the behavior of the retry policy.\n */\nexport interface RetryModifiers {\n  /**\n   * If true, allows skipping the current strategy from running on the retry policy.\n   */\n  skipStrategy?: boolean;\n  /**\n   * Indicates to retry against this URL.\n   */\n  redirectTo?: string;\n  /**\n   * Controls whether to retry in a given number of milliseconds.\n   * If provided, a new retry will be attempted.\n   */\n  retryAfterInMs?: number;\n  /**\n   * Indicates to throw this error instead of retrying.\n   */\n  errorToThrow?: RestError;\n}\n\n/**\n * A retry strategy is intended to define whether to retry or not, and how to retry.\n */\nexport interface RetryStrategy {\n  /**\n   * Name of the retry strategy. Used for logging.\n   */\n  name: string;\n  /**\n   * Logger. If it's not provided, a default logger for all retry strategies is used.\n   */\n  logger?: AzureLogger;\n  /**\n   * Function that determines how to proceed with the subsequent requests.\n   * @param state - Retry state\n   */\n  retry(state: RetryInformation): RetryModifiers;\n}\n\n/**\n * Options to the {@link retryPolicy}\n */\nexport interface RetryPolicyOptions {\n  /**\n   * Maximum number of retries. If not specified, it will limit to 3 retries.\n   */\n  maxRetries?: number;\n  /**\n   * Logger. If it's not provided, a default logger is used.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nexport function retryPolicy(\n  strategies: RetryStrategy[],\n  options: RetryPolicyOptions = { maxRetries: DEFAULT_RETRY_POLICY_COUNT },\n): PipelinePolicy {\n  // Cast is required since the TSP runtime retry strategy type is slightly different\n  // very deep down (using real AbortSignal vs. AbortSignalLike in RestError).\n  // In practice the difference doesn't actually matter.\n  return tspRetryPolicy(strategies as TspRetryStrategy[], {\n    logger: retryPolicyLogger,\n    ...options,\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AccessToken, GetTokenOptions, TokenCredential } from \"@azure/core-auth\";\nimport { delay } from \"@azure/core-util\";\n\n/**\n * A function that gets a promise of an access token and allows providing\n * options.\n *\n * @param options - the options to pass to the underlying token provider\n */\nexport type AccessTokenGetter = (\n  scopes: string | string[],\n  options: GetTokenOptions,\n) => Promise<AccessToken>;\n\nexport interface TokenCyclerOptions {\n  /**\n   * The window of time before token expiration during which the token will be\n   * considered unusable due to risk of the token expiring before sending the\n   * request.\n   *\n   * This will only become meaningful if the refresh fails for over\n   * (refreshWindow - forcedRefreshWindow) milliseconds.\n   */\n  forcedRefreshWindowInMs: number;\n  /**\n   * Interval in milliseconds to retry failed token refreshes.\n   */\n  retryIntervalInMs: number;\n  /**\n   * The window of time before token expiration during which\n   * we will attempt to refresh the token.\n   */\n  refreshWindowInMs: number;\n}\n\n// Default options for the cycler if none are provided\nexport const DEFAULT_CYCLER_OPTIONS: TokenCyclerOptions = {\n  forcedRefreshWindowInMs: 1000, // Force waiting for a refresh 1s before the token expires\n  retryIntervalInMs: 3000, // Allow refresh attempts every 3s\n  refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - A function that produces a promise of an access token that may fail by returning null.\n * @param retryIntervalInMs - The time (in milliseconds) to wait between retry attempts.\n * @param refreshTimeout - The timestamp after which the refresh attempt will fail, throwing an exception.\n * @returns - A promise that, if it resolves, will resolve with an access token.\n */\nasync function beginRefresh(\n  getAccessToken: () => Promise<AccessToken | null>,\n  retryIntervalInMs: number,\n  refreshTimeout: number,\n): Promise<AccessToken> {\n  // This wrapper handles exceptions gracefully as long as we haven't exceeded\n  // the timeout.\n  async function tryGetAccessToken(): Promise<AccessToken | null> {\n    if (Date.now() < refreshTimeout) {\n      try {\n        return await getAccessToken();\n      } catch {\n        return null;\n      }\n    } else {\n      const finalToken = await getAccessToken();\n\n      // Timeout is up, so throw if it's still null\n      if (finalToken === null) {\n        throw new Error(\"Failed to refresh access token.\");\n      }\n\n      return finalToken;\n    }\n  }\n\n  let token: AccessToken | null = await tryGetAccessToken();\n\n  while (token === null) {\n    await delay(retryIntervalInMs);\n\n    token = await tryGetAccessToken();\n  }\n\n  return token;\n}\n\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nexport function createTokenCycler(\n  credential: TokenCredential,\n  tokenCyclerOptions?: Partial<TokenCyclerOptions>,\n): AccessTokenGetter {\n  let refreshWorker: Promise<AccessToken> | null = null;\n  let token: AccessToken | null = null;\n  let tenantId: string | undefined;\n\n  const options = {\n    ...DEFAULT_CYCLER_OPTIONS,\n    ...tokenCyclerOptions,\n  };\n\n  /**\n   * This little holder defines several predicates that we use to construct\n   * the rules of refreshing the token.\n   */\n  const cycler = {\n    /**\n     * Produces true if a refresh job is currently in progress.\n     */\n    get isRefreshing(): boolean {\n      return refreshWorker !== null;\n    },\n    /**\n     * Produces true if the cycler SHOULD refresh (we are within the refresh\n     * window and not already refreshing)\n     */\n    get shouldRefresh(): boolean {\n      if (cycler.isRefreshing) {\n        return false;\n      }\n      if (token?.refreshAfterTimestamp && token.refreshAfterTimestamp < Date.now()) {\n        return true;\n      }\n\n      return (token?.expiresOnTimestamp ?? 0) - options.refreshWindowInMs < Date.now();\n    },\n    /**\n     * Produces true if the cycler MUST refresh (null or nearly-expired\n     * token).\n     */\n    get mustRefresh(): boolean {\n      return (\n        token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now()\n      );\n    },\n  };\n\n  /**\n   * Starts a refresh job or returns the existing job if one is already\n   * running.\n   */\n  function refresh(\n    scopes: string | string[],\n    getTokenOptions: GetTokenOptions,\n  ): Promise<AccessToken> {\n    if (!cycler.isRefreshing) {\n      // We bind `scopes` here to avoid passing it around a lot\n      const tryGetAccessToken = (): Promise<AccessToken | null> =>\n        credential.getToken(scopes, getTokenOptions);\n\n      // Take advantage of promise chaining to insert an assignment to `token`\n      // before the refresh can be considered done.\n      refreshWorker = beginRefresh(\n        tryGetAccessToken,\n        options.retryIntervalInMs,\n        // If we don't have a token, then we should timeout immediately\n        token?.expiresOnTimestamp ?? Date.now(),\n      )\n        .then((_token) => {\n          refreshWorker = null;\n          token = _token;\n          tenantId = getTokenOptions.tenantId;\n          return token;\n        })\n        .catch((reason) => {\n          // We also should reset the refresher if we enter a failed state.  All\n          // existing awaiters will throw, but subsequent requests will start a\n          // new retry chain.\n          refreshWorker = null;\n          token = null;\n          tenantId = undefined;\n          throw reason;\n        });\n    }\n\n    return refreshWorker as Promise<AccessToken>;\n  }\n\n  return async (scopes: string | string[], tokenOptions: GetTokenOptions): Promise<AccessToken> => {\n    //\n    // Simple rules:\n    // - If we MUST refresh, then return the refresh task, blocking\n    //   the pipeline until a token is available.\n    // - If we SHOULD refresh, then run refresh but don't return it\n    //   (we can still use the cached token).\n    // - Return the token, since it's fine if we didn't return in\n    //   step 1.\n    //\n\n    const hasClaimChallenge = Boolean(tokenOptions.claims);\n    const tenantIdChanged = tenantId !== tokenOptions.tenantId;\n\n    if (hasClaimChallenge) {\n      // If we've received a claim, we know the existing token isn't valid\n      // We want to clear it so that that refresh worker won't use the old expiration time as a timeout\n      token = null;\n    }\n\n    // If the tenantId passed in token options is different to the one we have\n    // Or if we are in claim challenge and the token was rejected and a new access token need to be issued, we need to\n    // refresh the token with the new tenantId or token.\n    const mustRefresh = tenantIdChanged || hasClaimChallenge || cycler.mustRefresh;\n\n    if (mustRefresh) {\n      return refresh(scopes, tokenOptions);\n    }\n\n    if (cycler.shouldRefresh) {\n      refresh(scopes, tokenOptions);\n    }\n\n    return token as AccessToken;\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AccessToken, GetTokenOptions, TokenCredential } from \"@azure/core-auth\";\nimport type { AzureLogger } from \"@azure/logger\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { createTokenCycler } from \"../util/tokenCycler.js\";\nimport { logger as coreLogger } from \"../log.js\";\nimport type { RestError } from \"../restError.js\";\nimport { isRestError } from \"../restError.js\";\n\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nexport const bearerTokenAuthenticationPolicyName = \"bearerTokenAuthenticationPolicy\";\n\n/**\n * Options sent to the authorizeRequest callback\n */\nexport interface AuthorizeRequestOptions {\n  /**\n   * The scopes for which the bearer token applies.\n   */\n  scopes: string[];\n  /**\n   * Function that retrieves either a cached access token or a new access token.\n   */\n  getAccessToken: (scopes: string[], options: GetTokenOptions) => Promise<AccessToken | null>;\n  /**\n   * Request that the policy is trying to fulfill.\n   */\n  request: PipelineRequest;\n  /**\n   * A logger, if one was sent through the HTTP pipeline.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * Options sent to the authorizeRequestOnChallenge callback\n */\nexport interface AuthorizeRequestOnChallengeOptions {\n  /**\n   * The scopes for which the bearer token applies.\n   */\n  scopes: string[];\n  /**\n   * Function that retrieves either a cached access token or a new access token.\n   */\n  getAccessToken: (scopes: string[], options: GetTokenOptions) => Promise<AccessToken | null>;\n  /**\n   * Request that the policy is trying to fulfill.\n   */\n  request: PipelineRequest;\n  /**\n   * Response containing the challenge.\n   */\n  response: PipelineResponse;\n  /**\n   * A logger, if one was sent through the HTTP pipeline.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * Options to override the processing of [Continuous Access Evaluation](https://learn.microsoft.com/azure/active-directory/conditional-access/concept-continuous-access-evaluation) challenges.\n */\nexport interface ChallengeCallbacks {\n  /**\n   * Allows for the authorization of the main request of this policy before it's sent.\n   */\n  authorizeRequest?(options: AuthorizeRequestOptions): Promise<void>;\n  /**\n   * Allows to handle authentication challenges and to re-authorize the request.\n   * The response containing the challenge is `options.response`.\n   * If this method returns true, the underlying request will be sent once again.\n   * The request may be modified before being sent.\n   */\n  authorizeRequestOnChallenge?(options: AuthorizeRequestOnChallengeOptions): Promise<boolean>;\n}\n\n/**\n * Options to configure the bearerTokenAuthenticationPolicy\n */\nexport interface BearerTokenAuthenticationPolicyOptions {\n  /**\n   * The TokenCredential implementation that can supply the bearer token.\n   */\n  credential?: TokenCredential;\n  /**\n   * The scopes for which the bearer token applies.\n   */\n  scopes: string | string[];\n  /**\n   * Allows for the processing of [Continuous Access Evaluation](https://learn.microsoft.com/azure/active-directory/conditional-access/concept-continuous-access-evaluation) challenges.\n   * If provided, it must contain at least the `authorizeRequestOnChallenge` method.\n   * If provided, after a request is sent, if it has a challenge, it can be processed to re-send the original request with the relevant challenge information.\n   */\n  challengeCallbacks?: ChallengeCallbacks;\n  /**\n   * A logger can be sent for debugging purposes.\n   */\n  logger?: AzureLogger;\n}\n/**\n * Try to send the given request.\n *\n * When a response is received, returns a tuple of the response received and, if the response was received\n * inside a thrown RestError, the RestError that was thrown.\n *\n * Otherwise, if an error was thrown while sending the request that did not provide an underlying response, it\n * will be rethrown.\n */\nasync function trySendRequest(\n  request: PipelineRequest,\n  next: SendRequest,\n): Promise<[PipelineResponse, RestError | undefined]> {\n  try {\n    return [await next(request), undefined];\n  } catch (e: any) {\n    if (isRestError(e) && e.response) {\n      return [e.response, e];\n    } else {\n      throw e;\n    }\n  }\n}\n/**\n * Default authorize request handler\n */\nasync function defaultAuthorizeRequest(options: AuthorizeRequestOptions): Promise<void> {\n  const { scopes, getAccessToken, request } = options;\n  // Enable CAE true by default\n  const getTokenOptions: GetTokenOptions = {\n    abortSignal: request.abortSignal,\n    tracingOptions: request.tracingOptions,\n    enableCae: true,\n  };\n\n  const accessToken = await getAccessToken(scopes, getTokenOptions);\n\n  if (accessToken) {\n    options.request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n  }\n}\n\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction isChallengeResponse(response: PipelineResponse): boolean {\n  return response.status === 401 && response.headers.has(\"WWW-Authenticate\");\n}\n\n/**\n * Re-authorize the request for CAE challenge.\n * The response containing the challenge is `options.response`.\n * If this method returns true, the underlying request will be sent once again.\n */\nasync function authorizeRequestOnCaeChallenge(\n  onChallengeOptions: AuthorizeRequestOnChallengeOptions,\n  caeClaims: string,\n): Promise<boolean> {\n  const { scopes } = onChallengeOptions;\n\n  const accessToken = await onChallengeOptions.getAccessToken(scopes, {\n    enableCae: true,\n    claims: caeClaims,\n  });\n  if (!accessToken) {\n    return false;\n  }\n\n  onChallengeOptions.request.headers.set(\n    \"Authorization\",\n    `${accessToken.tokenType ?? \"Bearer\"} ${accessToken.token}`,\n  );\n  return true;\n}\n\n/**\n * A policy that can request a token from a TokenCredential implementation and\n * then apply it to the Authorization header of a request as a Bearer token.\n */\nexport function bearerTokenAuthenticationPolicy(\n  options: BearerTokenAuthenticationPolicyOptions,\n): PipelinePolicy {\n  const { credential, scopes, challengeCallbacks } = options;\n  const logger = options.logger || coreLogger;\n  const callbacks = {\n    authorizeRequest:\n      challengeCallbacks?.authorizeRequest?.bind(challengeCallbacks) ?? defaultAuthorizeRequest,\n    authorizeRequestOnChallenge:\n      challengeCallbacks?.authorizeRequestOnChallenge?.bind(challengeCallbacks),\n  };\n\n  // This function encapsulates the entire process of reliably retrieving the token\n  // The options are left out of the public API until there's demand to configure this.\n  // Remember to extend `BearerTokenAuthenticationPolicyOptions` with `TokenCyclerOptions`\n  // in order to pass through the `options` object.\n  const getAccessToken = credential\n    ? createTokenCycler(credential /* , options */)\n    : () => Promise.resolve(null);\n\n  return {\n    name: bearerTokenAuthenticationPolicyName,\n    /**\n     * If there's no challenge parameter:\n     * - It will try to retrieve the token using the cache, or the credential's getToken.\n     * - Then it will try the next policy with or without the retrieved token.\n     *\n     * It uses the challenge parameters to:\n     * - Skip a first attempt to get the token from the credential if there's no cached token,\n     *   since it expects the token to be retrievable only after the challenge.\n     * - Prepare the outgoing request if the `prepareRequest` method has been provided.\n     * - Send an initial request to receive the challenge if it fails.\n     * - Process a challenge if the response contains it.\n     * - Retrieve a token with the challenge information, then re-send the request.\n     */\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.url.toLowerCase().startsWith(\"https://\")) {\n        throw new Error(\n          \"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\",\n        );\n      }\n\n      await callbacks.authorizeRequest({\n        scopes: Array.isArray(scopes) ? scopes : [scopes],\n        request,\n        getAccessToken,\n        logger,\n      });\n\n      let response: PipelineResponse;\n      let error: Error | undefined;\n      let shouldSendRequest: boolean;\n      [response, error] = await trySendRequest(request, next);\n\n      if (isChallengeResponse(response)) {\n        let claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\"));\n        // Handle CAE by default when receive CAE claim\n        if (claims) {\n          let parsedClaim: string;\n          // Return the response immediately if claims is not a valid base64 encoded string\n          try {\n            parsedClaim = atob(claims);\n          } catch (e) {\n            logger.warning(\n              `The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`,\n            );\n            return response;\n          }\n          shouldSendRequest = await authorizeRequestOnCaeChallenge(\n            {\n              scopes: Array.isArray(scopes) ? scopes : [scopes],\n              response,\n              request,\n              getAccessToken,\n              logger,\n            },\n            parsedClaim,\n          );\n          // Send updated request and handle response for RestError\n          if (shouldSendRequest) {\n            [response, error] = await trySendRequest(request, next);\n          }\n        } else if (callbacks.authorizeRequestOnChallenge) {\n          // Handle custom challenges when client provides custom callback\n          shouldSendRequest = await callbacks.authorizeRequestOnChallenge({\n            scopes: Array.isArray(scopes) ? scopes : [scopes],\n            request,\n            response,\n            getAccessToken,\n            logger,\n          });\n\n          // Send updated request and handle response for RestError\n          if (shouldSendRequest) {\n            [response, error] = await trySendRequest(request, next);\n          }\n\n          // If we get another CAE Claim, we will handle it by default and return whatever value we receive for this\n          if (isChallengeResponse(response)) {\n            claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\") as string);\n            if (claims) {\n              let parsedClaim: string;\n              try {\n                parsedClaim = atob(claims);\n              } catch (e) {\n                logger.warning(\n                  `The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`,\n                );\n                return response;\n              }\n\n              shouldSendRequest = await authorizeRequestOnCaeChallenge(\n                {\n                  scopes: Array.isArray(scopes) ? scopes : [scopes],\n                  response,\n                  request,\n                  getAccessToken,\n                  logger,\n                },\n                parsedClaim,\n              );\n              // Send updated request and handle response for RestError\n              if (shouldSendRequest) {\n                [response, error] = await trySendRequest(request, next);\n              }\n            }\n          }\n        }\n      }\n\n      if (error) {\n        throw error;\n      } else {\n        return response;\n      }\n    },\n  };\n}\n\n/**\n *\n * Interface to represent a parsed challenge.\n *\n * @internal\n */\ninterface AuthChallenge {\n  scheme: string;\n  params: Record<string, string>;\n}\n\n/**\n * Converts: `Bearer a=\"b\", c=\"d\", Pop e=\"f\", g=\"h\"`.\n * Into: `[ { scheme: 'Bearer', params: { a: 'b', c: 'd' } }, { scheme: 'Pop', params: { e: 'f', g: 'h' } } ]`.\n *\n * @internal\n */\nexport function parseChallenges(challenges: string): AuthChallenge[] {\n  // Challenge regex seperates the string to individual challenges with different schemes in the format `Scheme a=\"b\", c=d`\n  // The challenge regex captures parameteres with either quotes values or unquoted values\n  const challengeRegex = /(\\w+)\\s+((?:\\w+=(?:\"[^\"]*\"|[^,]*),?\\s*)+)/g;\n  // Parameter regex captures the claims group removed from the scheme in the format `a=\"b\"` and `c=\"d\"`\n  // CAE challenge always have quoted parameters. For more reference, https://learn.microsoft.com/entra/identity-platform/claims-challenge\n  const paramRegex = /(\\w+)=\"([^\"]*)\"/g;\n\n  const parsedChallenges: AuthChallenge[] = [];\n  let match;\n\n  // Iterate over each challenge match\n  while ((match = challengeRegex.exec(challenges)) !== null) {\n    const scheme = match[1];\n    const paramsString = match[2];\n    const params: Record<string, string> = {};\n    let paramMatch;\n\n    // Iterate over each parameter match\n    while ((paramMatch = paramRegex.exec(paramsString)) !== null) {\n      params[paramMatch[1]] = paramMatch[2];\n    }\n\n    parsedChallenges.push({ scheme, params });\n  }\n  return parsedChallenges;\n}\n\n/**\n * Parse a pipeline response and look for a CAE challenge with \"Bearer\" scheme\n * Return the value in the header without parsing the challenge\n * @internal\n */\nfunction getCaeChallengeClaims(challenges: string | undefined): string | undefined {\n  if (!challenges) {\n    return;\n  }\n  // Find all challenges present in the header\n  const parsedChallenges = parseChallenges(challenges);\n  return parsedChallenges.find(\n    (x) => x.scheme === \"Bearer\" && x.params.claims && x.params.error === \"insufficient_claims\",\n  )?.params.claims;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { TracingContext } from \"./tracing.js\";\nimport { HttpMethods } from \"@azure/core-util\";\n\n/**\n * Represents a credential capable of providing an authentication token.\n */\nexport interface TokenCredential {\n  /**\n   * Gets the token provided by this credential.\n   *\n   * This method is called automatically by Azure SDK client libraries. You may call this method\n   * directly, but you must also handle token caching and token refreshing.\n   *\n   * @param scopes - The list of scopes for which the token will have access.\n   * @param options - The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  getToken(scopes: string | string[], options?: GetTokenOptions): Promise<AccessToken | null>;\n}\n\n/**\n * Defines options for TokenCredential.getToken.\n */\nexport interface GetTokenOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: {\n    /**\n     * The number of milliseconds a request can take before automatically being terminated.\n     */\n    timeout?: number;\n  };\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: {\n    /**\n     * Tracing Context for the current request.\n     */\n    tracingContext?: TracingContext;\n  };\n  /**\n   * Claim details to perform the Continuous Access Evaluation authentication flow\n   */\n  claims?: string;\n  /**\n   * Indicates whether to enable the Continuous Access Evaluation authentication flow\n   */\n  enableCae?: boolean;\n  /**\n   * Allows specifying a tenantId. Useful to handle challenges that provide tenant Id hints.\n   */\n  tenantId?: string;\n\n  /**\n   * Options for Proof of Possession token requests\n   */\n  proofOfPossessionOptions?: {\n    /**\n     * The nonce value required for PoP token requests.\n     * This is typically retrieved from the WWW-Authenticate header of a 401 challenge response.\n     * This is used in combination with {@link resourceRequestUrl} and {@link resourceRequestMethod} to generate the PoP token.\n     */\n    nonce: string;\n    /**\n     * The HTTP method of the request.\n     * This is used in combination with {@link resourceRequestUrl} and {@link nonce} to generate the PoP token.\n     */\n    resourceRequestMethod: HttpMethods;\n    /**\n     * The URL of the request.\n     * This is used in combination with {@link resourceRequestMethod} and {@link nonce} to generate the PoP token.\n     */\n    resourceRequestUrl: string;\n  };\n}\n\n/**\n * Represents an access token with an expiration time.\n */\nexport interface AccessToken {\n  /**\n   * The access token returned by the authentication service.\n   */\n  token: string;\n\n  /**\n   * The access token's expiration timestamp in milliseconds, UNIX epoch time.\n   */\n  expiresOnTimestamp: number;\n\n  /**\n   * The timestamp when the access token should be refreshed, in milliseconds, UNIX epoch time.\n   */\n  refreshAfterTimestamp?: number;\n\n  /** Type of token - `Bearer` or `pop` */\n  tokenType?: \"Bearer\" | \"pop\";\n}\n\n/**\n * @internal\n * @param accessToken - Access token\n * @returns Whether a token is bearer type or not\n */\nexport function isBearerToken(accessToken: AccessToken): boolean {\n  return !accessToken.tokenType || accessToken.tokenType === \"Bearer\";\n}\n\n/**\n * @internal\n * @param accessToken - Access token\n * @returns Whether a token is Pop token or not\n */\nexport function isPopToken(accessToken: AccessToken): boolean {\n  return accessToken.tokenType === \"pop\";\n}\n\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential: unknown): credential is TokenCredential {\n  // Check for an object with a 'getToken' function and possibly with\n  // a 'signRequest' function.  We do this check to make sure that\n  // a ServiceClientCredentials implementor (like TokenClientCredentials\n  // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n  // it doesn't actually implement TokenCredential also.\n  const castCredential = credential as {\n    getToken: unknown;\n    signRequest: unknown;\n  };\n  return (\n    castCredential &&\n    typeof castCredential.getToken === \"function\" &&\n    (castCredential.signRequest === undefined || castCredential.getToken.length > 0)\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Encodes a string in base64 format.\n * @param value - the string to encode\n * @internal\n */\nexport function encodeString(value: string): string {\n  return Buffer.from(value).toString(\"base64\");\n}\n\n/**\n * Encodes a byte array in base64 format.\n * @param value - the Uint8Aray to encode\n * @internal\n */\nexport function encodeByteArray(value: Uint8Array): string {\n  const bufferValue = value instanceof Buffer ? value : Buffer.from(value.buffer as ArrayBuffer);\n  return bufferValue.toString(\"base64\");\n}\n\n/**\n * Decodes a base64 string into a byte array.\n * @param value - the base64 string to decode\n * @internal\n */\nexport function decodeString(value: string): Uint8Array {\n  return Buffer.from(value, \"base64\");\n}\n\n/**\n * Decodes a base64 string into a string.\n * @param value - the base64 string to decode\n * @internal\n */\nexport function decodeStringToString(value: string): string {\n  return Buffer.from(value, \"base64\").toString();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  HttpClient,\n  HttpMethods,\n  PipelineOptions,\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  TransferProgressEvent,\n} from \"@azure/core-rest-pipeline\";\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { OperationTracingOptions } from \"@azure/core-tracing\";\n\n/**\n * Default key used to access the XML attributes.\n */\nexport const XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nexport const XML_CHARKEY = \"_\";\n/**\n * Options to govern behavior of xml parser and builder.\n */\nexport interface XmlOptions {\n  /**\n   * indicates the name of the root element in the resulting XML when building XML.\n   */\n  rootName?: string;\n  /**\n   * indicates whether the root element is to be included or not in the output when parsing XML.\n   */\n  includeRoot?: boolean;\n  /**\n   * key used to access the XML value content when parsing XML.\n   */\n  xmlCharKey?: string;\n}\n/**\n * Options to configure serialization/de-serialization behavior.\n */\nexport interface SerializerOptions {\n  /**\n   * Options to configure xml parser/builder behavior.\n   */\n  xml: XmlOptions;\n  /**\n   * Normally additional properties are included in the result object, even if there is no mapper for them.\n   * This flag disables this behavior when true. It is used when parsing headers to avoid polluting the result object.\n   */\n  ignoreUnknownProperties?: boolean;\n}\n\nexport type RequiredSerializerOptions = {\n  [K in keyof SerializerOptions]: Required<SerializerOptions[K]>;\n};\n\n/**\n * A type alias for future proofing.\n */\nexport type OperationRequest = PipelineRequest;\n\n/**\n * Metadata that is used to properly parse a response.\n */\nexport interface OperationRequestInfo {\n  /**\n   * Used to parse the response.\n   */\n  operationSpec?: OperationSpec;\n\n  /**\n   * Used to encode the request.\n   */\n  operationArguments?: OperationArguments;\n\n  /**\n   * A function that returns the proper OperationResponseMap for the given OperationSpec and\n   * PipelineResponse combination. If this is undefined, then a simple status code lookup will\n   * be used.\n   */\n  operationResponseGetter?: (\n    operationSpec: OperationSpec,\n    response: PipelineResponse,\n  ) => undefined | OperationResponseMap;\n\n  /**\n   * Whether or not the PipelineResponse should be deserialized. Defaults to true.\n   */\n  shouldDeserialize?: boolean | ((response: PipelineResponse) => boolean);\n}\n\n/**\n * The base options type for all operations.\n */\nexport interface OperationOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: OperationRequestOptions;\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n  /**\n   * Options to override serialization/de-serialization behavior.\n   */\n  serializerOptions?: SerializerOptions;\n\n  /**\n   * A function to be called each time a response is received from the server\n   * while performing the requested operation.\n   * May be called multiple times.\n   */\n  onResponse?: RawResponseCallback;\n}\n\n/**\n * Options used when creating and sending HTTP requests for this operation.\n */\nexport interface OperationRequestOptions {\n  /**\n   * User defined custom request headers that\n   * will be applied before the request is sent.\n   */\n  customHeaders?: { [key: string]: string };\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   */\n  timeout?: number;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Callback which fires upon download progress.\n   */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: PipelineResponse) => boolean);\n\n  /**\n   * Set to true if the request is sent over HTTP instead of HTTPS\n   */\n  allowInsecureConnection?: boolean;\n}\n\n/**\n * A collection of properties that apply to a single invocation of an operation.\n */\nexport interface OperationArguments {\n  /**\n   * The parameters that were passed to the operation method.\n   */\n  [parameterName: string]: unknown;\n\n  /**\n   * The optional arguments that are provided to an operation.\n   */\n  options?: OperationOptions;\n}\n\n/**\n * The format that will be used to join an array of values together for a query parameter value.\n */\nexport type QueryCollectionFormat = \"CSV\" | \"SSV\" | \"TSV\" | \"Pipes\" | \"Multi\";\n\n/**\n * Encodes how to reach a particular property on an object.\n */\nexport type ParameterPath = string | string[] | { [propertyName: string]: ParameterPath };\n\n/**\n * A common interface that all Operation parameter's extend.\n */\nexport interface OperationParameter {\n  /**\n   * The path to this parameter's value in OperationArguments or the object that contains paths for\n   * each property's value in OperationArguments.\n   */\n  parameterPath: ParameterPath;\n\n  /**\n   * The mapper that defines how to validate and serialize this parameter's value.\n   */\n  mapper: Mapper;\n}\n\n/**\n * A parameter for an operation that will be substituted into the operation's request URL.\n */\nexport interface OperationURLParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the URL parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n}\n\n/**\n * A parameter for an operation that will be added as a query parameter to the operation's HTTP\n * request.\n */\nexport interface OperationQueryParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the query parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n\n  /**\n   * If this query parameter's value is a collection, what type of format should the value be\n   * converted to.\n   */\n  collectionFormat?: QueryCollectionFormat;\n}\n\n/**\n * An OperationResponse that can be returned from an operation request for a single status code.\n */\nexport interface OperationResponseMap {\n  /**\n   * The mapper that will be used to deserialize the response headers.\n   */\n  headersMapper?: Mapper;\n\n  /**\n   * The mapper that will be used to deserialize the response body.\n   */\n  bodyMapper?: Mapper;\n\n  /**\n   * Indicates if this is an error response\n   */\n  isError?: boolean;\n}\n\n/**\n * A specification that defines an operation.\n */\nexport interface OperationSpec {\n  /**\n   * The serializer to use in this operation.\n   */\n  readonly serializer: Serializer;\n\n  /**\n   * The HTTP method that should be used by requests for this operation.\n   */\n  readonly httpMethod: HttpMethods;\n\n  /**\n   * The URL that was provided in the service's specification. This will still have all of the URL\n   * template variables in it. If this is not provided when the OperationSpec is created, then it\n   * will be populated by a \"baseUri\" property on the ServiceClient.\n   */\n  readonly baseUrl?: string;\n\n  /**\n   * The fixed path for this operation's URL. This will still have all of the URL template variables\n   * in it.\n   */\n  readonly path?: string;\n\n  /**\n   * The content type of the request body. This value will be used as the \"Content-Type\" header if\n   * it is provided.\n   */\n  readonly contentType?: string;\n\n  /**\n   * The media type of the request body.\n   * This value can be used to aide in serialization if it is provided.\n   */\n  readonly mediaType?:\n    | \"json\"\n    | \"xml\"\n    | \"form\"\n    | \"binary\"\n    | \"multipart\"\n    | \"text\"\n    | \"unknown\"\n    | string;\n  /**\n   * The parameter that will be used to construct the HTTP request's body.\n   */\n  readonly requestBody?: OperationParameter;\n\n  /**\n   * Whether or not this operation uses XML request and response bodies.\n   */\n  readonly isXML?: boolean;\n\n  /**\n   * The parameters to the operation method that will be substituted into the constructed URL.\n   */\n  readonly urlParameters?: ReadonlyArray<OperationURLParameter>;\n\n  /**\n   * The parameters to the operation method that will be added to the constructed URL's query.\n   */\n  readonly queryParameters?: ReadonlyArray<OperationQueryParameter>;\n\n  /**\n   * The parameters to the operation method that will be converted to headers on the operation's\n   * HTTP request.\n   */\n  readonly headerParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The parameters to the operation method that will be used to create a formdata body for the\n   * operation's HTTP request.\n   */\n  readonly formDataParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The different types of responses that this operation can return based on what status code is\n   * returned.\n   */\n  readonly responses: { [responseCode: string]: OperationResponseMap };\n}\n\n/**\n * Wrapper object for http request and response. Deserialized object is stored in\n * the `parsedBody` property when the response body is received in JSON or XML.\n */\nexport interface FullOperationResponse extends PipelineResponse {\n  /**\n   * The parsed HTTP response headers.\n   */\n  parsedHeaders?: { [key: string]: unknown };\n\n  /**\n   * The response body as parsed JSON or XML.\n   */\n  parsedBody?: any;\n\n  /**\n   * The request that generated the response.\n   */\n  request: OperationRequest;\n}\n\n/**\n * A function to be called each time a response is received from the server\n * while performing the requested operation.\n * May be called multiple times.\n */\nexport type RawResponseCallback = (\n  rawResponse: FullOperationResponse,\n  flatResponse: unknown,\n  error?: unknown,\n) => void;\n\n/**\n * Used to map raw response objects to final shapes.\n * Helps packing and unpacking Dates and other encoded types that are not intrinsic to JSON.\n * Also allows pulling values from headers, as well as inserting default values and constants.\n */\nexport interface Serializer {\n  /**\n   * The provided model mapper.\n   */\n  readonly modelMappers: { [key: string]: any };\n  /**\n   * Whether the contents are XML or not.\n   */\n  readonly isXML: boolean;\n\n  /**\n   * Validates constraints, if any. This function will throw if the provided value does not respect those constraints.\n   * @param mapper - The definition of data models.\n   * @param value - The value.\n   * @param objectName - Name of the object. Used in the error messages.\n   * @deprecated Removing the constraints validation on client side.\n   */\n  validateConstraints(mapper: Mapper, value: any, objectName: string): void;\n\n  /**\n   * Serialize the given object based on its metadata defined in the mapper.\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object.\n   * @param object - A valid Javascript object to be serialized.\n   * @param objectName - Name of the serialized object.\n   * @param options - additional options to deserialization.\n   * @returns A valid serialized Javascript object.\n   */\n  serialize(mapper: Mapper, object: any, objectName?: string, options?: SerializerOptions): any;\n\n  /**\n   * Deserialize the given object based on its metadata defined in the mapper.\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object.\n   * @param responseBody - A valid Javascript entity to be deserialized.\n   * @param objectName - Name of the deserialized object.\n   * @param options - Controls behavior of XML parser and builder.\n   * @returns A valid deserialized Javascript object.\n   */\n  deserialize(\n    mapper: Mapper,\n    responseBody: any,\n    objectName: string,\n    options?: SerializerOptions,\n  ): any;\n}\n\n/**\n * Description of various value constraints such as integer ranges and string regex.\n */\nexport interface MapperConstraints {\n  /**\n   * The value should be less than or equal to the `InclusiveMaximum` value.\n   */\n  InclusiveMaximum?: number;\n  /**\n   * The value should be less than the `ExclusiveMaximum` value.\n   */\n  ExclusiveMaximum?: number;\n  /**\n   * The value should be greater than or equal to the `InclusiveMinimum` value.\n   */\n  InclusiveMinimum?: number;\n  /**\n   * The value should be greater than the `InclusiveMinimum` value.\n   */\n  ExclusiveMinimum?: number;\n  /**\n   * The length should be smaller than the `MaxLength`.\n   */\n  MaxLength?: number;\n  /**\n   * The length should be bigger than the `MinLength`.\n   */\n  MinLength?: number;\n  /**\n   * The value must match the pattern.\n   */\n  Pattern?: RegExp;\n  /**\n   * The value must contain fewer items than the MaxItems value.\n   */\n  MaxItems?: number;\n  /**\n   * The value must contain more items than the `MinItems` value.\n   */\n  MinItems?: number;\n  /**\n   * The value must contain only unique items.\n   */\n  UniqueItems?: true;\n  /**\n   * The value should be exactly divisible by the `MultipleOf` value.\n   */\n  MultipleOf?: number;\n}\n\n/**\n * Type of the mapper. Includes known mappers.\n */\nexport type MapperType =\n  | SimpleMapperType\n  | CompositeMapperType\n  | SequenceMapperType\n  | DictionaryMapperType\n  | EnumMapperType;\n\n/**\n * The type of a simple mapper.\n */\nexport interface SimpleMapperType {\n  /**\n   * Name of the type of the property.\n   */\n  name:\n    | \"Base64Url\"\n    | \"Boolean\"\n    | \"ByteArray\"\n    | \"Date\"\n    | \"DateTime\"\n    | \"DateTimeRfc1123\"\n    | \"Object\"\n    | \"Stream\"\n    | \"String\"\n    | \"TimeSpan\"\n    | \"UnixTime\"\n    | \"Uuid\"\n    | \"Number\"\n    | \"any\";\n}\n\n/**\n * Helps build a mapper that describes how to map a set of properties of an object based on other mappers.\n *\n * Only one of the following properties should be present: `className`, `modelProperties` and `additionalProperties`.\n */\nexport interface CompositeMapperType {\n  /**\n   * Name of the composite mapper type.\n   */\n  name: \"Composite\";\n\n  /**\n   * Use `className` to reference another type definition.\n   */\n  className?: string;\n\n  /**\n   * Use `modelProperties` when the reference to the other type has been resolved.\n   */\n  modelProperties?: { [propertyName: string]: Mapper };\n\n  /**\n   * Used when a model has `additionalProperties: true`. Allows the generic processing of unnamed model properties on the response object.\n   */\n  additionalProperties?: Mapper;\n\n  /**\n   * The name of the top-most parent scheme, the one that has no parents.\n   */\n  uberParent?: string;\n\n  /**\n   * A polymorphic discriminator.\n   */\n  polymorphicDiscriminator?: PolymorphicDiscriminator;\n}\n\n/**\n * Helps build a mapper that describes how to parse a sequence of mapped values.\n */\nexport interface SequenceMapperType {\n  /**\n   * Name of the sequence type mapper.\n   */\n  name: \"Sequence\";\n  /**\n   * The mapper to use to map each one of the properties of the sequence.\n   */\n  element: Mapper;\n}\n\n/**\n * Helps build a mapper that describes how to parse a dictionary of mapped values.\n */\nexport interface DictionaryMapperType {\n  /**\n   * Name of the sequence type mapper.\n   */\n  name: \"Dictionary\";\n  /**\n   * The mapper to use to map the value of each property in the dictionary.\n   */\n  value: Mapper;\n}\n\n/**\n * Helps build a mapper that describes how to parse an enum value.\n */\nexport interface EnumMapperType {\n  /**\n   * Name of the enum type mapper.\n   */\n  name: \"Enum\";\n  /**\n   * Values allowed by this mapper.\n   */\n  allowedValues: any[];\n}\n\n/**\n * The base definition of a mapper. Can be used for XML and plain JavaScript objects.\n */\nexport interface BaseMapper {\n  /**\n   * Name for the xml element\n   */\n  xmlName?: string;\n  /**\n   * Xml element namespace\n   */\n  xmlNamespace?: string;\n  /**\n   * Xml element namespace prefix\n   */\n  xmlNamespacePrefix?: string;\n  /**\n   * Determines if the current property should be serialized as an attribute of the parent xml element\n   */\n  xmlIsAttribute?: boolean;\n  /**\n   * Determines if the current property should be serialized as the inner content of the xml element\n   */\n  xmlIsMsText?: boolean;\n  /**\n   * Name for the xml elements when serializing an array\n   */\n  xmlElementName?: string;\n  /**\n   * Whether or not the current property should have a wrapping XML element\n   */\n  xmlIsWrapped?: boolean;\n  /**\n   * Whether or not the current property is readonly\n   */\n  readOnly?: boolean;\n  /**\n   * Whether or not the current property is a constant\n   */\n  isConstant?: boolean;\n  /**\n   * Whether or not the current property is required\n   */\n  required?: boolean;\n  /**\n   * Whether or not the current property allows mull as a value\n   */\n  nullable?: boolean;\n  /**\n   * The name to use when serializing\n   */\n  serializedName?: string;\n  /**\n   * Type of the mapper\n   */\n  type: MapperType;\n  /**\n   * Default value when one is not explicitly provided\n   */\n  defaultValue?: any;\n  /**\n   * Constraints to test the current value against\n   */\n  constraints?: MapperConstraints;\n}\n\n/**\n * Mappers are definitions of the data models used in the library.\n * These data models are part of the Operation or Client definitions in the responses or parameters.\n */\nexport type Mapper = BaseMapper | CompositeMapper | SequenceMapper | DictionaryMapper | EnumMapper;\n\n/**\n * Used to disambiguate discriminated type unions.\n * For example, if response can have many shapes but also includes a 'kind' field (or similar),\n * that field can be used to determine how to deserialize the response to the correct type.\n */\nexport interface PolymorphicDiscriminator {\n  /**\n   * Name of the discriminant property in the original JSON payload, e.g. `@odata.kind`.\n   */\n  serializedName: string;\n  /**\n   * Name to use on the resulting object instead of the original property name.\n   * Useful since the JSON property could be difficult to work with.\n   * For example: For a field received as `@odata.kind`, the final object could instead include a property simply named `kind`.\n   */\n  clientName: string;\n  /**\n   * It may contain any other property.\n   */\n  [key: string]: string;\n}\n\n/**\n * A mapper composed of other mappers.\n */\nexport interface CompositeMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `CompositeMapper`.\n   */\n  type: CompositeMapperType;\n}\n\n/**\n * A mapper describing arrays.\n */\nexport interface SequenceMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `SequenceMapper`.\n   */\n  type: SequenceMapperType;\n}\n\n/**\n * A mapper describing plain JavaScript objects used as key/value pairs.\n */\nexport interface DictionaryMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `DictionaryMapper`.\n   */\n  type: DictionaryMapperType;\n  /**\n   * Optionally, a prefix to add to the header collection.\n   */\n  headerCollectionPrefix?: string;\n}\n\n/**\n * A mapper describing an enum value.\n */\nexport interface EnumMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `EnumMapper`.\n   */\n  type: EnumMapperType;\n}\n\nexport interface UrlParameterValue {\n  value: string;\n  skipUrlEncoding: boolean;\n}\n\n/**\n * Configuration for creating a new Tracing Span\n */\nexport interface SpanConfig {\n  /**\n   * Package name prefix\n   */\n  packagePrefix: string;\n  /**\n   * Service namespace\n   */\n  namespace: string;\n}\n\n/**\n * Used to configure additional policies added to the pipeline at construction.\n */\nexport interface AdditionalPolicyConfig {\n  /**\n   * A policy to be added.\n   */\n  policy: PipelinePolicy;\n  /**\n   * Determines if this policy be applied before or after retry logic.\n   * Only use `perRetry` if you need to modify the request again\n   * each time the operation is retried due to retryable service\n   * issues.\n   */\n  position: \"perCall\" | \"perRetry\";\n}\n\n/**\n * The common set of options that high level clients are expected to expose.\n */\nexport interface CommonClientOptions extends PipelineOptions {\n  /**\n   * The HttpClient that will be used to send HTTP requests.\n   */\n  httpClient?: HttpClient;\n  /**\n   * Set to true if the request is sent over HTTP instead of HTTPS\n   */\n  allowInsecureConnection?: boolean;\n  /**\n   * Additional policies to include in the HTTP pipeline.\n   */\n  additionalPolicies?: AdditionalPolicyConfig[];\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { CompositeMapper, FullOperationResponse, OperationResponseMap } from \"./interfaces.js\";\n\n/**\n * The union of all possible types for a primitive response body.\n * @internal\n */\nexport type BodyPrimitive = number | string | boolean | Date | Uint8Array | undefined | null;\n\n/**\n * A type guard for a primitive response body.\n * @param value - Value to test\n *\n * @internal\n */\nexport function isPrimitiveBody(value: unknown, mapperTypeName?: string): value is BodyPrimitive {\n  return (\n    mapperTypeName !== \"Composite\" &&\n    mapperTypeName !== \"Dictionary\" &&\n    (typeof value === \"string\" ||\n      typeof value === \"number\" ||\n      typeof value === \"boolean\" ||\n      mapperTypeName?.match(/^(Date|DateTime|DateTimeRfc1123|UnixTime|ByteArray|Base64Url)$/i) !==\n        null ||\n      value === undefined ||\n      value === null)\n  );\n}\n\nconst validateISODuration =\n  /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n/**\n * Returns true if the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @internal\n */\nexport function isDuration(value: string): boolean {\n  return validateISODuration.test(value);\n}\n\nconst validUuidRegex =\n  /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n\n/**\n * Returns true if the provided uuid is valid.\n *\n * @param uuid - The uuid that needs to be validated.\n *\n * @internal\n */\nexport function isValidUuid(uuid: string): boolean {\n  return validUuidRegex.test(uuid);\n}\n\n/**\n * Representation of parsed response headers and body coupled with information\n * about how to map them:\n * - whether the response body should be wrapped (typically if its type is primitive).\n * - whether the response is nullable so it can be null if the combination of\n *   the headers and the body is empty.\n */\ninterface ResponseObjectWithMetadata {\n  /** whether the mapper allows nullable body */\n  hasNullableType: boolean;\n  /** whether the response's body should be wrapped */\n  shouldWrapBody: boolean;\n  /** parsed headers of the response */\n  headers:\n    | {\n        [key: string]: unknown;\n      }\n    | undefined;\n  /** parsed body of the response */\n  body: any;\n}\n\n/**\n * Maps the response as follows:\n * - wraps the response body if needed (typically if its type is primitive).\n * - returns null if the combination of the headers and the body is empty.\n * - otherwise, returns the combination of the headers and the body.\n *\n * @param responseObject - a representation of the parsed response\n * @returns the response that will be returned to the user which can be null and/or wrapped\n *\n * @internal\n */\nfunction handleNullableResponseAndWrappableBody(\n  responseObject: ResponseObjectWithMetadata,\n): unknown | null {\n  const combinedHeadersAndBody = {\n    ...responseObject.headers,\n    ...responseObject.body,\n  };\n  if (\n    responseObject.hasNullableType &&\n    Object.getOwnPropertyNames(combinedHeadersAndBody).length === 0\n  ) {\n    return responseObject.shouldWrapBody ? { body: null } : null;\n  } else {\n    return responseObject.shouldWrapBody\n      ? {\n          ...responseObject.headers,\n          body: responseObject.body,\n        }\n      : combinedHeadersAndBody;\n  }\n}\n\n/**\n * Take a `FullOperationResponse` and turn it into a flat\n * response object to hand back to the consumer.\n * @param fullResponse - The processed response from the operation request\n * @param responseSpec - The response map from the OperationSpec\n *\n * @internal\n */\nexport function flattenResponse(\n  fullResponse: FullOperationResponse,\n  responseSpec: OperationResponseMap | undefined,\n): unknown {\n  const parsedHeaders = fullResponse.parsedHeaders;\n\n  // head methods never have a body, but we return a boolean set to body property\n  // to indicate presence/absence of the resource\n  if (fullResponse.request.method === \"HEAD\") {\n    return {\n      ...parsedHeaders,\n      body: fullResponse.parsedBody,\n    };\n  }\n  const bodyMapper = responseSpec && responseSpec.bodyMapper;\n  const isNullable = Boolean(bodyMapper?.nullable);\n  const expectedBodyTypeName = bodyMapper?.type.name;\n\n  /** If the body is asked for, we look at the expected body type to handle it */\n  if (expectedBodyTypeName === \"Stream\") {\n    return {\n      ...parsedHeaders,\n      blobBody: fullResponse.blobBody,\n      readableStreamBody: fullResponse.readableStreamBody,\n    };\n  }\n\n  const modelProperties =\n    (expectedBodyTypeName === \"Composite\" &&\n      (bodyMapper as CompositeMapper).type.modelProperties) ||\n    {};\n  const isPageableResponse = Object.keys(modelProperties).some(\n    (k) => modelProperties[k].serializedName === \"\",\n  );\n  if (expectedBodyTypeName === \"Sequence\" || isPageableResponse) {\n    const arrayResponse: { [key: string]: unknown } =\n      fullResponse.parsedBody ?? ([] as unknown as { [key: string]: unknown });\n\n    for (const key of Object.keys(modelProperties)) {\n      if (modelProperties[key].serializedName) {\n        arrayResponse[key] = fullResponse.parsedBody?.[key];\n      }\n    }\n\n    if (parsedHeaders) {\n      for (const key of Object.keys(parsedHeaders)) {\n        arrayResponse[key] = parsedHeaders[key];\n      }\n    }\n    return isNullable &&\n      !fullResponse.parsedBody &&\n      !parsedHeaders &&\n      Object.getOwnPropertyNames(modelProperties).length === 0\n      ? null\n      : arrayResponse;\n  }\n\n  return handleNullableResponseAndWrappableBody({\n    body: fullResponse.parsedBody,\n    headers: parsedHeaders,\n    hasNullableType: isNullable,\n    shouldWrapBody: isPrimitiveBody(fullResponse.parsedBody, expectedBodyTypeName),\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as base64 from \"./base64.js\";\nimport type {\n  BaseMapper,\n  CompositeMapper,\n  DictionaryMapper,\n  EnumMapper,\n  Mapper,\n  MapperConstraints,\n  PolymorphicDiscriminator,\n  RequiredSerializerOptions,\n  SequenceMapper,\n  Serializer,\n  SerializerOptions,\n} from \"./interfaces.js\";\nimport { XML_ATTRKEY, XML_CHARKEY } from \"./interfaces.js\";\nimport { isDuration, isValidUuid } from \"./utils.js\";\n\nclass SerializerImpl implements Serializer {\n  constructor(\n    public readonly modelMappers: { [key: string]: any } = {},\n    public readonly isXML: boolean = false,\n  ) {}\n\n  /**\n   * @deprecated Removing the constraints validation on client side.\n   */\n  validateConstraints(mapper: Mapper, value: any, objectName: string): void {\n    const failValidation = (\n      constraintName: keyof MapperConstraints,\n      constraintValue: any,\n    ): never => {\n      throw new Error(\n        `\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`,\n      );\n    };\n    if (mapper.constraints && value !== undefined && value !== null) {\n      const {\n        ExclusiveMaximum,\n        ExclusiveMinimum,\n        InclusiveMaximum,\n        InclusiveMinimum,\n        MaxItems,\n        MaxLength,\n        MinItems,\n        MinLength,\n        MultipleOf,\n        Pattern,\n        UniqueItems,\n      } = mapper.constraints;\n      if (ExclusiveMaximum !== undefined && value >= ExclusiveMaximum) {\n        failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n      }\n      if (ExclusiveMinimum !== undefined && value <= ExclusiveMinimum) {\n        failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n      }\n      if (InclusiveMaximum !== undefined && value > InclusiveMaximum) {\n        failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n      }\n      if (InclusiveMinimum !== undefined && value < InclusiveMinimum) {\n        failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n      }\n      if (MaxItems !== undefined && value.length > MaxItems) {\n        failValidation(\"MaxItems\", MaxItems);\n      }\n      if (MaxLength !== undefined && value.length > MaxLength) {\n        failValidation(\"MaxLength\", MaxLength);\n      }\n      if (MinItems !== undefined && value.length < MinItems) {\n        failValidation(\"MinItems\", MinItems);\n      }\n      if (MinLength !== undefined && value.length < MinLength) {\n        failValidation(\"MinLength\", MinLength);\n      }\n      if (MultipleOf !== undefined && value % MultipleOf !== 0) {\n        failValidation(\"MultipleOf\", MultipleOf);\n      }\n      if (Pattern) {\n        const pattern: RegExp = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n        if (typeof value !== \"string\" || value.match(pattern) === null) {\n          failValidation(\"Pattern\", Pattern);\n        }\n      }\n      if (\n        UniqueItems &&\n        value.some((item: any, i: number, ar: Array<any>) => ar.indexOf(item) !== i)\n      ) {\n        failValidation(\"UniqueItems\", UniqueItems);\n      }\n    }\n  }\n\n  /**\n   * Serialize the given object based on its metadata defined in the mapper\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object\n   *\n   * @param object - A valid Javascript object to be serialized\n   *\n   * @param objectName - Name of the serialized object\n   *\n   * @param options - additional options to serialization\n   *\n   * @returns A valid serialized Javascript object\n   */\n  serialize(\n    mapper: Mapper,\n    object: any,\n    objectName?: string,\n    options: SerializerOptions = { xml: {} },\n  ): any {\n    const updatedOptions: RequiredSerializerOptions = {\n      xml: {\n        rootName: options.xml.rootName ?? \"\",\n        includeRoot: options.xml.includeRoot ?? false,\n        xmlCharKey: options.xml.xmlCharKey ?? XML_CHARKEY,\n      },\n    };\n    let payload: any = {};\n    const mapperType = mapper.type.name as string;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n    if (mapperType.match(/^Sequence$/i) !== null) {\n      payload = [];\n    }\n\n    if (mapper.isConstant) {\n      object = mapper.defaultValue;\n    }\n\n    // This table of allowed values should help explain\n    // the mapper.required and mapper.nullable properties.\n    // X means \"neither undefined or null are allowed\".\n    //           || required\n    //           || true      | false\n    //  nullable || ==========================\n    //      true || null      | undefined/null\n    //     false || X         | undefined\n    // undefined || X         | undefined/null\n\n    const { required, nullable } = mapper;\n\n    if (required && nullable && object === undefined) {\n      throw new Error(`${objectName} cannot be undefined.`);\n    }\n    if (required && !nullable && (object === undefined || object === null)) {\n      throw new Error(`${objectName} cannot be null or undefined.`);\n    }\n    if (!required && nullable === false && object === null) {\n      throw new Error(`${objectName} cannot be null.`);\n    }\n\n    if (object === undefined || object === null) {\n      payload = object;\n    } else {\n      if (mapperType.match(/^any$/i) !== null) {\n        payload = object;\n      } else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n        payload = serializeBasicTypes(mapperType, objectName, object);\n      } else if (mapperType.match(/^Enum$/i) !== null) {\n        const enumMapper = mapper as EnumMapper;\n        payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n      } else if (\n        mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null\n      ) {\n        payload = serializeDateTypes(mapperType, object, objectName);\n      } else if (mapperType.match(/^ByteArray$/i) !== null) {\n        payload = serializeByteArrayType(objectName, object);\n      } else if (mapperType.match(/^Base64Url$/i) !== null) {\n        payload = serializeBase64UrlType(objectName, object);\n      } else if (mapperType.match(/^Sequence$/i) !== null) {\n        payload = serializeSequenceType(\n          this,\n          mapper as SequenceMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions,\n        );\n      } else if (mapperType.match(/^Dictionary$/i) !== null) {\n        payload = serializeDictionaryType(\n          this,\n          mapper as DictionaryMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions,\n        );\n      } else if (mapperType.match(/^Composite$/i) !== null) {\n        payload = serializeCompositeType(\n          this,\n          mapper as CompositeMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions,\n        );\n      }\n    }\n    return payload;\n  }\n\n  /**\n   * Deserialize the given object based on its metadata defined in the mapper\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object\n   *\n   * @param responseBody - A valid Javascript entity to be deserialized\n   *\n   * @param objectName - Name of the deserialized object\n   *\n   * @param options - Controls behavior of XML parser and builder.\n   *\n   * @returns A valid deserialized Javascript object\n   */\n  deserialize(\n    mapper: Mapper,\n    responseBody: any,\n    objectName: string,\n    options: SerializerOptions = { xml: {} },\n  ): any {\n    const updatedOptions: RequiredSerializerOptions = {\n      xml: {\n        rootName: options.xml.rootName ?? \"\",\n        includeRoot: options.xml.includeRoot ?? false,\n        xmlCharKey: options.xml.xmlCharKey ?? XML_CHARKEY,\n      },\n      ignoreUnknownProperties: options.ignoreUnknownProperties ?? false,\n    };\n    if (responseBody === undefined || responseBody === null) {\n      if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n        // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n        // between the list being empty versus being missing,\n        // so let's do the more user-friendly thing and return an empty list.\n        responseBody = [];\n      }\n      // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n      if (mapper.defaultValue !== undefined) {\n        responseBody = mapper.defaultValue;\n      }\n      return responseBody;\n    }\n\n    let payload: any;\n    const mapperType = mapper.type.name;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n\n    if (mapperType.match(/^Composite$/i) !== null) {\n      payload = deserializeCompositeType(\n        this,\n        mapper as CompositeMapper,\n        responseBody,\n        objectName,\n        updatedOptions,\n      );\n    } else {\n      if (this.isXML) {\n        const xmlCharKey = updatedOptions.xml.xmlCharKey;\n        /**\n         * If the mapper specifies this as a non-composite type value but the responseBody contains\n         * both header (\"$\" i.e., XML_ATTRKEY) and body (\"#\" i.e., XML_CHARKEY) properties,\n         * then just reduce the responseBody value to the body (\"#\" i.e., XML_CHARKEY) property.\n         */\n        if (responseBody[XML_ATTRKEY] !== undefined && responseBody[xmlCharKey] !== undefined) {\n          responseBody = responseBody[xmlCharKey];\n        }\n      }\n\n      if (mapperType.match(/^Number$/i) !== null) {\n        payload = parseFloat(responseBody);\n        if (isNaN(payload)) {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^Boolean$/i) !== null) {\n        if (responseBody === \"true\") {\n          payload = true;\n        } else if (responseBody === \"false\") {\n          payload = false;\n        } else {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n        payload = responseBody;\n      } else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n        payload = new Date(responseBody);\n      } else if (mapperType.match(/^UnixTime$/i) !== null) {\n        payload = unixTimeToDate(responseBody);\n      } else if (mapperType.match(/^ByteArray$/i) !== null) {\n        payload = base64.decodeString(responseBody);\n      } else if (mapperType.match(/^Base64Url$/i) !== null) {\n        payload = base64UrlToByteArray(responseBody);\n      } else if (mapperType.match(/^Sequence$/i) !== null) {\n        payload = deserializeSequenceType(\n          this,\n          mapper as SequenceMapper,\n          responseBody,\n          objectName,\n          updatedOptions,\n        );\n      } else if (mapperType.match(/^Dictionary$/i) !== null) {\n        payload = deserializeDictionaryType(\n          this,\n          mapper as DictionaryMapper,\n          responseBody,\n          objectName,\n          updatedOptions,\n        );\n      }\n    }\n\n    if (mapper.isConstant) {\n      payload = mapper.defaultValue;\n    }\n\n    return payload;\n  }\n}\n\n/**\n * Method that creates and returns a Serializer.\n * @param modelMappers - Known models to map\n * @param isXML - If XML should be supported\n */\nexport function createSerializer(\n  modelMappers: { [key: string]: any } = {},\n  isXML: boolean = false,\n): Serializer {\n  return new SerializerImpl(modelMappers, isXML);\n}\n\nfunction trimEnd(str: string, ch: string): string {\n  let len = str.length;\n  while (len - 1 >= 0 && str[len - 1] === ch) {\n    --len;\n  }\n  return str.substr(0, len);\n}\n\nfunction bufferToBase64Url(buffer: Uint8Array): string | undefined {\n  if (!buffer) {\n    return undefined;\n  }\n  if (!(buffer instanceof Uint8Array)) {\n    throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n  }\n  // Uint8Array to Base64.\n  const str = base64.encodeByteArray(buffer);\n  // Base64 to Base64Url.\n  return trimEnd(str, \"=\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\n\nfunction base64UrlToByteArray(str: string): Uint8Array | undefined {\n  if (!str) {\n    return undefined;\n  }\n  if (str && typeof str.valueOf() !== \"string\") {\n    throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n  }\n  // Base64Url to Base64.\n  str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  // Base64 to Uint8Array.\n  return base64.decodeString(str);\n}\n\nfunction splitSerializeName(prop: string | undefined): string[] {\n  const classes: string[] = [];\n  let partialclass = \"\";\n  if (prop) {\n    const subwords = prop.split(\".\");\n\n    for (const item of subwords) {\n      if (item.charAt(item.length - 1) === \"\\\\\") {\n        partialclass += item.substr(0, item.length - 1) + \".\";\n      } else {\n        partialclass += item;\n        classes.push(partialclass);\n        partialclass = \"\";\n      }\n    }\n  }\n\n  return classes;\n}\n\nfunction dateToUnixTime(d: string | Date): number | undefined {\n  if (!d) {\n    return undefined;\n  }\n\n  if (typeof d.valueOf() === \"string\") {\n    d = new Date(d as string);\n  }\n  return Math.floor((d as Date).getTime() / 1000);\n}\n\nfunction unixTimeToDate(n: number): Date | undefined {\n  if (!n) {\n    return undefined;\n  }\n  return new Date(n * 1000);\n}\n\nfunction serializeBasicTypes(typeName: string, objectName: string, value: any): any {\n  if (value !== null && value !== undefined) {\n    if (typeName.match(/^Number$/i) !== null) {\n      if (typeof value !== \"number\") {\n        throw new Error(`${objectName} with value ${value} must be of type number.`);\n      }\n    } else if (typeName.match(/^String$/i) !== null) {\n      if (typeof value.valueOf() !== \"string\") {\n        throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n      }\n    } else if (typeName.match(/^Uuid$/i) !== null) {\n      if (!(typeof value.valueOf() === \"string\" && isValidUuid(value))) {\n        throw new Error(\n          `${objectName} with value \"${value}\" must be of type string and a valid uuid.`,\n        );\n      }\n    } else if (typeName.match(/^Boolean$/i) !== null) {\n      if (typeof value !== \"boolean\") {\n        throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n      }\n    } else if (typeName.match(/^Stream$/i) !== null) {\n      const objectType = typeof value;\n      if (\n        objectType !== \"string\" &&\n        typeof value.pipe !== \"function\" && // NodeJS.ReadableStream\n        typeof value.tee !== \"function\" && // browser ReadableStream\n        !(value instanceof ArrayBuffer) &&\n        !ArrayBuffer.isView(value) &&\n        // File objects count as a type of Blob, so we want to use instanceof explicitly\n        !((typeof Blob === \"function\" || typeof Blob === \"object\") && value instanceof Blob) &&\n        objectType !== \"function\"\n      ) {\n        throw new Error(\n          `${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, ReadableStream, or () => ReadableStream.`,\n        );\n      }\n    }\n  }\n  return value;\n}\n\nfunction serializeEnumType(objectName: string, allowedValues: Array<any>, value: any): any {\n  if (!allowedValues) {\n    throw new Error(\n      `Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`,\n    );\n  }\n  const isPresent = allowedValues.some((item) => {\n    if (typeof item.valueOf() === \"string\") {\n      return item.toLowerCase() === value.toLowerCase();\n    }\n    return item === value;\n  });\n  if (!isPresent) {\n    throw new Error(\n      `${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(\n        allowedValues,\n      )}.`,\n    );\n  }\n  return value;\n}\n\nfunction serializeByteArrayType(objectName: string, value: any): any {\n  if (value !== undefined && value !== null) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    value = base64.encodeByteArray(value);\n  }\n  return value;\n}\n\nfunction serializeBase64UrlType(objectName: string, value: any): any {\n  if (value !== undefined && value !== null) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    value = bufferToBase64Url(value);\n  }\n  return value;\n}\n\nfunction serializeDateTypes(typeName: string, value: any, objectName: string): any {\n  if (value !== undefined && value !== null) {\n    if (typeName.match(/^Date$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value =\n        value instanceof Date\n          ? value.toISOString().substring(0, 10)\n          : new Date(value).toISOString().substring(0, 10);\n    } else if (typeName.match(/^DateTime$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n    } else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n      }\n      value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n    } else if (typeName.match(/^UnixTime$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(\n          `${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n            `for it to be serialized in UnixTime/Epoch format.`,\n        );\n      }\n      value = dateToUnixTime(value);\n    } else if (typeName.match(/^TimeSpan$/i) !== null) {\n      if (!isDuration(value)) {\n        throw new Error(\n          `${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`,\n        );\n      }\n    }\n  }\n  return value;\n}\n\nfunction serializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (!Array.isArray(object)) {\n    throw new Error(`${objectName} must be of type Array.`);\n  }\n  let elementType = mapper.type.element;\n  if (!elementType || typeof elementType !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`,\n    );\n  }\n  // Quirk: Composite mappers referenced by `element` might\n  // not have *all* properties declared (like uberParent),\n  // so let's try to look up the full definition by name.\n  if (elementType.type.name === \"Composite\" && elementType.type.className) {\n    elementType = serializer.modelMappers[elementType.type.className] ?? elementType;\n  }\n  const tempArray = [];\n  for (let i = 0; i < object.length; i++) {\n    const serializedValue = serializer.serialize(elementType, object[i], objectName, options);\n    if (isXml && elementType.xmlNamespace) {\n      const xmlnsKey = elementType.xmlNamespacePrefix\n        ? `xmlns:${elementType.xmlNamespacePrefix}`\n        : \"xmlns\";\n      if (elementType.type.name === \"Composite\") {\n        tempArray[i] = { ...serializedValue };\n        tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n      } else {\n        tempArray[i] = {};\n        tempArray[i][options.xml.xmlCharKey] = serializedValue;\n        tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n      }\n    } else {\n      tempArray[i] = serializedValue;\n    }\n  }\n  return tempArray;\n}\n\nfunction serializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (typeof object !== \"object\") {\n    throw new Error(`${objectName} must be of type object.`);\n  }\n  const valueType = mapper.type.value;\n  if (!valueType || typeof valueType !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`,\n    );\n  }\n  const tempDictionary: { [key: string]: any } = {};\n  for (const key of Object.keys(object)) {\n    const serializedValue = serializer.serialize(valueType, object[key], objectName, options);\n    // If the element needs an XML namespace we need to add it within the $ property\n    tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);\n  }\n\n  // Add the namespace to the root element if needed\n  if (isXml && mapper.xmlNamespace) {\n    const xmlnsKey = mapper.xmlNamespacePrefix ? `xmlns:${mapper.xmlNamespacePrefix}` : \"xmlns\";\n    const result = tempDictionary;\n    result[XML_ATTRKEY] = { [xmlnsKey]: mapper.xmlNamespace };\n    return result;\n  }\n\n  return tempDictionary;\n}\n\n/**\n * Resolves the additionalProperties property from a referenced mapper\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveAdditionalProperties(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string,\n): SequenceMapper | BaseMapper | CompositeMapper | DictionaryMapper | EnumMapper | undefined {\n  const additionalProperties = mapper.type.additionalProperties;\n\n  if (!additionalProperties && mapper.type.className) {\n    const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n    return modelMapper?.type.additionalProperties;\n  }\n\n  return additionalProperties;\n}\n\n/**\n * Finds the mapper referenced by className\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveReferencedMapper(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string,\n): CompositeMapper | undefined {\n  const className = mapper.type.className;\n  if (!className) {\n    throw new Error(\n      `Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(\n        mapper,\n        undefined,\n        2,\n      )}\".`,\n    );\n  }\n\n  return serializer.modelMappers[className];\n}\n\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n */\nfunction resolveModelProperties(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string,\n): { [propertyName: string]: Mapper } {\n  let modelProps = mapper.type.modelProperties;\n  if (!modelProps) {\n    const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n    if (!modelMapper) {\n      throw new Error(`mapper() cannot be null or undefined for model \"${mapper.type.className}\".`);\n    }\n    modelProps = modelMapper?.type.modelProperties;\n    if (!modelProps) {\n      throw new Error(\n        `modelProperties cannot be null or undefined in the ` +\n          `mapper \"${JSON.stringify(modelMapper)}\" of type \"${\n            mapper.type.className\n          }\" for object \"${objectName}\".`,\n      );\n    }\n  }\n\n  return modelProps;\n}\n\nfunction serializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n  }\n\n  if (object !== undefined && object !== null) {\n    const payload: any = {};\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    for (const key of Object.keys(modelProps)) {\n      const propertyMapper = modelProps[key];\n      if (propertyMapper.readOnly) {\n        continue;\n      }\n\n      let propName: string | undefined;\n      let parentObject: any = payload;\n      if (serializer.isXML) {\n        if (propertyMapper.xmlIsWrapped) {\n          propName = propertyMapper.xmlName;\n        } else {\n          propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n        }\n      } else {\n        const paths = splitSerializeName(propertyMapper.serializedName!);\n        propName = paths.pop();\n\n        for (const pathName of paths) {\n          const childObject = parentObject[pathName];\n          if (\n            (childObject === undefined || childObject === null) &&\n            ((object[key] !== undefined && object[key] !== null) ||\n              propertyMapper.defaultValue !== undefined)\n          ) {\n            parentObject[pathName] = {};\n          }\n          parentObject = parentObject[pathName];\n        }\n      }\n\n      if (parentObject !== undefined && parentObject !== null) {\n        if (isXml && mapper.xmlNamespace) {\n          const xmlnsKey = mapper.xmlNamespacePrefix\n            ? `xmlns:${mapper.xmlNamespacePrefix}`\n            : \"xmlns\";\n          parentObject[XML_ATTRKEY] = {\n            ...parentObject[XML_ATTRKEY],\n            [xmlnsKey]: mapper.xmlNamespace,\n          };\n        }\n        const propertyObjectName =\n          propertyMapper.serializedName !== \"\"\n            ? objectName + \".\" + propertyMapper.serializedName\n            : objectName;\n\n        let toSerialize = object[key];\n        const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n        if (\n          polymorphicDiscriminator &&\n          polymorphicDiscriminator.clientName === key &&\n          (toSerialize === undefined || toSerialize === null)\n        ) {\n          toSerialize = mapper.serializedName;\n        }\n\n        const serializedValue = serializer.serialize(\n          propertyMapper,\n          toSerialize,\n          propertyObjectName,\n          options,\n        );\n        if (serializedValue !== undefined && propName !== undefined && propName !== null) {\n          const value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);\n          if (isXml && propertyMapper.xmlIsAttribute) {\n            // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.\n            // This keeps things simple while preventing name collision\n            // with names in user documents.\n            parentObject[XML_ATTRKEY] = parentObject[XML_ATTRKEY] || {};\n            parentObject[XML_ATTRKEY][propName] = serializedValue;\n          } else if (isXml && propertyMapper.xmlIsWrapped) {\n            parentObject[propName] = { [propertyMapper.xmlElementName!]: value };\n          } else {\n            parentObject[propName] = value;\n          }\n        }\n      }\n    }\n\n    const additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);\n    if (additionalPropertiesMapper) {\n      const propNames = Object.keys(modelProps);\n      for (const clientPropName in object) {\n        const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n        if (isAdditionalProperty) {\n          payload[clientPropName] = serializer.serialize(\n            additionalPropertiesMapper,\n            object[clientPropName],\n            objectName + '[\"' + clientPropName + '\"]',\n            options,\n          );\n        }\n      }\n    }\n\n    return payload;\n  }\n  return object;\n}\n\nfunction getXmlObjectValue(\n  propertyMapper: Mapper,\n  serializedValue: any,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (!isXml || !propertyMapper.xmlNamespace) {\n    return serializedValue;\n  }\n\n  const xmlnsKey = propertyMapper.xmlNamespacePrefix\n    ? `xmlns:${propertyMapper.xmlNamespacePrefix}`\n    : \"xmlns\";\n  const xmlNamespace = { [xmlnsKey]: propertyMapper.xmlNamespace };\n\n  if ([\"Composite\"].includes(propertyMapper.type.name)) {\n    if (serializedValue[XML_ATTRKEY]) {\n      return serializedValue;\n    } else {\n      const result: any = { ...serializedValue };\n      result[XML_ATTRKEY] = xmlNamespace;\n      return result;\n    }\n  }\n  const result: any = {};\n  result[options.xml.xmlCharKey] = serializedValue;\n  result[XML_ATTRKEY] = xmlNamespace;\n  return result;\n}\n\nfunction isSpecialXmlProperty(propertyName: string, options: RequiredSerializerOptions): boolean {\n  return [XML_ATTRKEY, options.xml.xmlCharKey].includes(propertyName);\n}\n\nfunction deserializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  responseBody: any,\n  objectName: string,\n  options: RequiredSerializerOptions,\n): any {\n  const xmlCharKey = options.xml.xmlCharKey ?? XML_CHARKEY;\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n  }\n\n  const modelProps = resolveModelProperties(serializer, mapper, objectName);\n  let instance: { [key: string]: any } = {};\n  const handledPropertyNames: string[] = [];\n\n  for (const key of Object.keys(modelProps)) {\n    const propertyMapper = modelProps[key];\n    const paths = splitSerializeName(modelProps[key].serializedName!);\n    handledPropertyNames.push(paths[0]);\n    const { serializedName, xmlName, xmlElementName } = propertyMapper;\n    let propertyObjectName = objectName;\n    if (serializedName !== \"\" && serializedName !== undefined) {\n      propertyObjectName = objectName + \".\" + serializedName;\n    }\n\n    const headerCollectionPrefix = (propertyMapper as DictionaryMapper).headerCollectionPrefix;\n    if (headerCollectionPrefix) {\n      const dictionary: any = {};\n      for (const headerKey of Object.keys(responseBody)) {\n        if (headerKey.startsWith(headerCollectionPrefix)) {\n          dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(\n            (propertyMapper as DictionaryMapper).type.value,\n            responseBody[headerKey],\n            propertyObjectName,\n            options,\n          );\n        }\n\n        handledPropertyNames.push(headerKey);\n      }\n      instance[key] = dictionary;\n    } else if (serializer.isXML) {\n      if (propertyMapper.xmlIsAttribute && responseBody[XML_ATTRKEY]) {\n        instance[key] = serializer.deserialize(\n          propertyMapper,\n          responseBody[XML_ATTRKEY][xmlName!],\n          propertyObjectName,\n          options,\n        );\n      } else if (propertyMapper.xmlIsMsText) {\n        if (responseBody[xmlCharKey] !== undefined) {\n          instance[key] = responseBody[xmlCharKey];\n        } else if (typeof responseBody === \"string\") {\n          // The special case where xml parser parses \"<Name>content</Name>\" into JSON of\n          //   `{ name: \"content\"}` instead of `{ name: { \"_\": \"content\" }}`\n          instance[key] = responseBody;\n        }\n      } else {\n        const propertyName = xmlElementName || xmlName || serializedName;\n        if (propertyMapper.xmlIsWrapped) {\n          /* a list of <xmlElementName> wrapped by <xmlName>\n            For the xml example below\n              <Cors>\n                <CorsRule>...</CorsRule>\n                <CorsRule>...</CorsRule>\n              </Cors>\n            the responseBody has\n              {\n                Cors: {\n                  CorsRule: [{...}, {...}]\n                }\n              }\n            xmlName is \"Cors\" and xmlElementName is\"CorsRule\".\n          */\n          const wrapped = responseBody[xmlName!];\n          const elementList = wrapped?.[xmlElementName!] ?? [];\n          instance[key] = serializer.deserialize(\n            propertyMapper,\n            elementList,\n            propertyObjectName,\n            options,\n          );\n          handledPropertyNames.push(xmlName!);\n        } else {\n          const property = responseBody[propertyName!];\n          instance[key] = serializer.deserialize(\n            propertyMapper,\n            property,\n            propertyObjectName,\n            options,\n          );\n          handledPropertyNames.push(propertyName!);\n        }\n      }\n    } else {\n      // deserialize the property if it is present in the provided responseBody instance\n      let propertyInstance;\n      let res = responseBody;\n      // traversing the object step by step.\n      let steps = 0;\n      for (const item of paths) {\n        if (!res) break;\n        steps++;\n        res = res[item];\n      }\n      // only accept null when reaching the last position of object otherwise it would be undefined\n      if (res === null && steps < paths.length) {\n        res = undefined;\n      }\n      propertyInstance = res;\n      const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n      // checking that the model property name (key)(ex: \"fishtype\") and the\n      // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n      // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n      // is a better approach. The generator is not consistent with escaping '\\.' in the\n      // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n      // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n      // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n      // the transformation of model property name (ex: \"fishtype\") is done consistently.\n      // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n      if (\n        polymorphicDiscriminator &&\n        key === polymorphicDiscriminator.clientName &&\n        (propertyInstance === undefined || propertyInstance === null)\n      ) {\n        propertyInstance = mapper.serializedName;\n      }\n\n      let serializedValue;\n      // paging\n      if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n        propertyInstance = responseBody[key];\n        const arrayInstance = serializer.deserialize(\n          propertyMapper,\n          propertyInstance,\n          propertyObjectName,\n          options,\n        );\n        // Copy over any properties that have already been added into the instance, where they do\n        // not exist on the newly de-serialized array\n        for (const [k, v] of Object.entries(instance)) {\n          if (!Object.prototype.hasOwnProperty.call(arrayInstance, k)) {\n            arrayInstance[k] = v;\n          }\n        }\n        instance = arrayInstance;\n      } else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n        serializedValue = serializer.deserialize(\n          propertyMapper,\n          propertyInstance,\n          propertyObjectName,\n          options,\n        );\n        instance[key] = serializedValue;\n      }\n    }\n  }\n\n  const additionalPropertiesMapper = mapper.type.additionalProperties;\n  if (additionalPropertiesMapper) {\n    const isAdditionalProperty = (responsePropName: string): boolean => {\n      for (const clientPropName in modelProps) {\n        const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n        if (paths[0] === responsePropName) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    for (const responsePropName in responseBody) {\n      if (isAdditionalProperty(responsePropName)) {\n        instance[responsePropName] = serializer.deserialize(\n          additionalPropertiesMapper,\n          responseBody[responsePropName],\n          objectName + '[\"' + responsePropName + '\"]',\n          options,\n        );\n      }\n    }\n  } else if (responseBody && !options.ignoreUnknownProperties) {\n    for (const key of Object.keys(responseBody)) {\n      if (\n        instance[key] === undefined &&\n        !handledPropertyNames.includes(key) &&\n        !isSpecialXmlProperty(key, options)\n      ) {\n        instance[key] = responseBody[key];\n      }\n    }\n  }\n\n  return instance;\n}\n\nfunction deserializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  responseBody: any,\n  objectName: string,\n  options: RequiredSerializerOptions,\n): any {\n  /* jshint validthis: true */\n  const value = mapper.type.value;\n  if (!value || typeof value !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`,\n    );\n  }\n  if (responseBody) {\n    const tempDictionary: { [key: string]: any } = {};\n    for (const key of Object.keys(responseBody)) {\n      tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);\n    }\n    return tempDictionary;\n  }\n  return responseBody;\n}\n\nfunction deserializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  responseBody: any,\n  objectName: string,\n  options: RequiredSerializerOptions,\n): any {\n  let element = mapper.type.element;\n  if (!element || typeof element !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`,\n    );\n  }\n  if (responseBody) {\n    if (!Array.isArray(responseBody)) {\n      // xml2js will interpret a single element array as just the element, so force it to be an array\n      responseBody = [responseBody];\n    }\n\n    // Quirk: Composite mappers referenced by `element` might\n    // not have *all* properties declared (like uberParent),\n    // so let's try to look up the full definition by name.\n    if (element.type.name === \"Composite\" && element.type.className) {\n      element = serializer.modelMappers[element.type.className] ?? element;\n    }\n\n    const tempArray = [];\n    for (let i = 0; i < responseBody.length; i++) {\n      tempArray[i] = serializer.deserialize(\n        element,\n        responseBody[i],\n        `${objectName}[${i}]`,\n        options,\n      );\n    }\n    return tempArray;\n  }\n  return responseBody;\n}\n\nfunction getIndexDiscriminator(\n  discriminators: Record<string, CompositeMapper>,\n  discriminatorValue: string,\n  typeName: string,\n): CompositeMapper | undefined {\n  const typeNamesToCheck = [typeName];\n  while (typeNamesToCheck.length) {\n    const currentName = typeNamesToCheck.shift();\n    const indexDiscriminator =\n      discriminatorValue === currentName\n        ? discriminatorValue\n        : currentName + \".\" + discriminatorValue;\n    if (Object.prototype.hasOwnProperty.call(discriminators, indexDiscriminator)) {\n      return discriminators[indexDiscriminator];\n    } else {\n      for (const [name, mapper] of Object.entries(discriminators)) {\n        if (\n          name.startsWith(currentName + \".\") &&\n          mapper.type.uberParent === currentName &&\n          mapper.type.className\n        ) {\n          typeNamesToCheck.push(mapper.type.className);\n        }\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction getPolymorphicMapper(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  polymorphicPropertyName: \"clientName\" | \"serializedName\",\n): CompositeMapper {\n  const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n\n  if (polymorphicDiscriminator) {\n    let discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n    if (discriminatorName) {\n      // The serializedName might have \\\\, which we just want to ignore\n      if (polymorphicPropertyName === \"serializedName\") {\n        discriminatorName = discriminatorName.replace(/\\\\/gi, \"\");\n      }\n      const discriminatorValue = object[discriminatorName];\n      const typeName = mapper.type.uberParent ?? mapper.type.className;\n\n      if (typeof discriminatorValue === \"string\" && typeName) {\n        const polymorphicMapper = getIndexDiscriminator(\n          serializer.modelMappers.discriminators,\n          discriminatorValue,\n          typeName,\n        );\n        if (polymorphicMapper) {\n          mapper = polymorphicMapper;\n        }\n      }\n    }\n  }\n  return mapper;\n}\n\nfunction getPolymorphicDiscriminatorRecursively(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n): PolymorphicDiscriminator | undefined {\n  return (\n    mapper.type.polymorphicDiscriminator ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.className)\n  );\n}\n\nfunction getPolymorphicDiscriminatorSafely(\n  serializer: Serializer,\n  typeName?: string,\n): PolymorphicDiscriminator | undefined {\n  return (\n    typeName &&\n    serializer.modelMappers[typeName] &&\n    serializer.modelMappers[typeName].type.polymorphicDiscriminator\n  );\n}\n\n/**\n * Known types of Mappers\n */\nexport const MapperTypeNames = {\n  Base64Url: \"Base64Url\",\n  Boolean: \"Boolean\",\n  ByteArray: \"ByteArray\",\n  Composite: \"Composite\",\n  Date: \"Date\",\n  DateTime: \"DateTime\",\n  DateTimeRfc1123: \"DateTimeRfc1123\",\n  Dictionary: \"Dictionary\",\n  Enum: \"Enum\",\n  Number: \"Number\",\n  Object: \"Object\",\n  Sequence: \"Sequence\",\n  String: \"String\",\n  Stream: \"Stream\",\n  TimeSpan: \"TimeSpan\",\n  UnixTime: \"UnixTime\",\n} as const;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { OperationRequest, OperationRequestInfo } from \"./interfaces.js\";\n\n// @ts-expect-error The recommended approach to sharing module state between ESM and CJS.\n// See https://github.com/isaacs/tshy/blob/main/README.md#module-local-state for additional information.\nimport { state as cjsState } from \"../commonjs/state.js\";\n\n/**\n * Defines the shared state between CJS and ESM by re-exporting the CJS state.\n */\nexport const state = cjsState as {\n  operationRequestMap: WeakMap<OperationRequest, OperationRequestInfo>;\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  CompositeMapper,\n  Mapper,\n  OperationArguments,\n  OperationParameter,\n  OperationRequest,\n  OperationRequestInfo,\n  ParameterPath,\n} from \"./interfaces.js\";\n\nimport { state } from \"./state.js\";\n\n/**\n * @internal\n * Retrieves the value to use for a given operation argument\n * @param operationArguments - The arguments passed from the generated client\n * @param parameter - The parameter description\n * @param fallbackObject - If something isn't found in the arguments bag, look here.\n *  Generally used to look at the service client properties.\n */\nexport function getOperationArgumentValueFromParameter(\n  operationArguments: OperationArguments,\n  parameter: OperationParameter,\n  fallbackObject?: { [parameterName: string]: any },\n): any {\n  let parameterPath = parameter.parameterPath;\n  const parameterMapper = parameter.mapper;\n  let value: any;\n  if (typeof parameterPath === \"string\") {\n    parameterPath = [parameterPath];\n  }\n  if (Array.isArray(parameterPath)) {\n    if (parameterPath.length > 0) {\n      if (parameterMapper.isConstant) {\n        value = parameterMapper.defaultValue;\n      } else {\n        let propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n\n        if (!propertySearchResult.propertyFound && fallbackObject) {\n          propertySearchResult = getPropertyFromParameterPath(fallbackObject, parameterPath);\n        }\n\n        let useDefaultValue = false;\n        if (!propertySearchResult.propertyFound) {\n          useDefaultValue =\n            parameterMapper.required ||\n            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n        }\n        value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n      }\n    }\n  } else {\n    if (parameterMapper.required) {\n      value = {};\n    }\n\n    for (const propertyName in parameterPath) {\n      const propertyMapper: Mapper = (parameterMapper as CompositeMapper).type.modelProperties![\n        propertyName\n      ];\n      const propertyPath: ParameterPath = parameterPath[propertyName];\n      const propertyValue: any = getOperationArgumentValueFromParameter(\n        operationArguments,\n        {\n          parameterPath: propertyPath,\n          mapper: propertyMapper,\n        },\n        fallbackObject,\n      );\n      if (propertyValue !== undefined) {\n        if (!value) {\n          value = {};\n        }\n        value[propertyName] = propertyValue;\n      }\n    }\n  }\n  return value;\n}\n\ninterface PropertySearchResult {\n  propertyValue?: any;\n  propertyFound: boolean;\n}\n\nfunction getPropertyFromParameterPath(\n  parent: { [parameterName: string]: any },\n  parameterPath: string[],\n): PropertySearchResult {\n  const result: PropertySearchResult = { propertyFound: false };\n  let i = 0;\n  for (; i < parameterPath.length; ++i) {\n    const parameterPathPart: string = parameterPath[i];\n    // Make sure to check inherited properties too, so don't use hasOwnProperty().\n    if (parent && parameterPathPart in parent) {\n      parent = parent[parameterPathPart];\n    } else {\n      break;\n    }\n  }\n  if (i === parameterPath.length) {\n    result.propertyValue = parent;\n    result.propertyFound = true;\n  }\n  return result;\n}\n\nconst originalRequestSymbol = Symbol.for(\"@azure/core-client original request\");\n\nfunction hasOriginalRequest(\n  request: OperationRequest,\n): request is OperationRequest & { [originalRequestSymbol]: OperationRequest } {\n  return originalRequestSymbol in request;\n}\n\nexport function getOperationRequestInfo(request: OperationRequest): OperationRequestInfo {\n  if (hasOriginalRequest(request)) {\n    return getOperationRequestInfo(request[originalRequestSymbol]);\n  }\n  let info = state.operationRequestMap.get(request);\n\n  if (!info) {\n    info = {};\n    state.operationRequestMap.set(request, info);\n  }\n  return info;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  FullOperationResponse,\n  OperationRequest,\n  OperationResponseMap,\n  OperationSpec,\n  RequiredSerializerOptions,\n  SerializerOptions,\n  XmlOptions,\n} from \"./interfaces.js\";\nimport { XML_CHARKEY } from \"./interfaces.js\";\nimport type {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport { RestError } from \"@azure/core-rest-pipeline\";\nimport { MapperTypeNames } from \"./serializer.js\";\nimport { getOperationRequestInfo } from \"./operationHelpers.js\";\n\nconst defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nconst defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n\n/**\n * The programmatic identifier of the deserializationPolicy.\n */\nexport const deserializationPolicyName = \"deserializationPolicy\";\n\n/**\n * Options to configure API response deserialization.\n */\nexport interface DeserializationPolicyOptions {\n  /**\n   * Configures the expected content types for the deserialization of\n   * JSON and XML response bodies.\n   */\n  expectedContentTypes?: DeserializationContentTypes;\n\n  /**\n   * A function that is able to parse XML. Required for XML support.\n   */\n  parseXML?: (str: string, opts?: XmlOptions) => Promise<any>;\n\n  /**\n   * Configures behavior of xml parser and builder.\n   */\n  serializerOptions?: SerializerOptions;\n}\n\n/**\n * The content-types that will indicate that an operation response should be deserialized in a\n * particular way.\n */\nexport interface DeserializationContentTypes {\n  /**\n   * The content-types that indicate that an operation response should be deserialized as JSON.\n   * Defaults to [ \"application/json\", \"text/json\" ].\n   */\n  json?: string[];\n\n  /**\n   * The content-types that indicate that an operation response should be deserialized as XML.\n   * Defaults to [ \"application/xml\", \"application/atom+xml\" ].\n   */\n  xml?: string[];\n}\n\n/**\n * This policy handles parsing out responses according to OperationSpecs on the request.\n */\nexport function deserializationPolicy(options: DeserializationPolicyOptions = {}): PipelinePolicy {\n  const jsonContentTypes = options.expectedContentTypes?.json ?? defaultJsonContentTypes;\n  const xmlContentTypes = options.expectedContentTypes?.xml ?? defaultXmlContentTypes;\n  const parseXML = options.parseXML;\n  const serializerOptions = options.serializerOptions;\n  const updatedOptions: RequiredSerializerOptions = {\n    xml: {\n      rootName: serializerOptions?.xml.rootName ?? \"\",\n      includeRoot: serializerOptions?.xml.includeRoot ?? false,\n      xmlCharKey: serializerOptions?.xml.xmlCharKey ?? XML_CHARKEY,\n    },\n  };\n\n  return {\n    name: deserializationPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      const response = await next(request);\n      return deserializeResponseBody(\n        jsonContentTypes,\n        xmlContentTypes,\n        response,\n        updatedOptions,\n        parseXML,\n      );\n    },\n  };\n}\n\nfunction getOperationResponseMap(\n  parsedResponse: PipelineResponse,\n): undefined | OperationResponseMap {\n  let result: OperationResponseMap | undefined;\n  const request: OperationRequest = parsedResponse.request;\n  const operationInfo = getOperationRequestInfo(request);\n  const operationSpec = operationInfo?.operationSpec;\n  if (operationSpec) {\n    if (!operationInfo?.operationResponseGetter) {\n      result = operationSpec.responses[parsedResponse.status];\n    } else {\n      result = operationInfo?.operationResponseGetter(operationSpec, parsedResponse);\n    }\n  }\n  return result;\n}\n\nfunction shouldDeserializeResponse(parsedResponse: PipelineResponse): boolean {\n  const request: OperationRequest = parsedResponse.request;\n  const operationInfo = getOperationRequestInfo(request);\n  const shouldDeserialize = operationInfo?.shouldDeserialize;\n  let result: boolean;\n  if (shouldDeserialize === undefined) {\n    result = true;\n  } else if (typeof shouldDeserialize === \"boolean\") {\n    result = shouldDeserialize;\n  } else {\n    result = shouldDeserialize(parsedResponse);\n  }\n  return result;\n}\n\nasync function deserializeResponseBody(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  response: PipelineResponse,\n  options: RequiredSerializerOptions,\n  parseXML?: (str: string, opts?: XmlOptions) => Promise<any>,\n): Promise<PipelineResponse> {\n  const parsedResponse = await parse(\n    jsonContentTypes,\n    xmlContentTypes,\n    response,\n    options,\n    parseXML,\n  );\n  if (!shouldDeserializeResponse(parsedResponse)) {\n    return parsedResponse;\n  }\n\n  const operationInfo = getOperationRequestInfo(parsedResponse.request);\n  const operationSpec = operationInfo?.operationSpec;\n  if (!operationSpec || !operationSpec.responses) {\n    return parsedResponse;\n  }\n\n  const responseSpec = getOperationResponseMap(parsedResponse);\n  const { error, shouldReturnResponse } = handleErrorResponse(\n    parsedResponse,\n    operationSpec,\n    responseSpec,\n    options,\n  );\n  if (error) {\n    throw error;\n  } else if (shouldReturnResponse) {\n    return parsedResponse;\n  }\n\n  // An operation response spec does exist for current status code, so\n  // use it to deserialize the response.\n  if (responseSpec) {\n    if (responseSpec.bodyMapper) {\n      let valueToDeserialize: any = parsedResponse.parsedBody;\n      if (operationSpec.isXML && responseSpec.bodyMapper.type.name === MapperTypeNames.Sequence) {\n        valueToDeserialize =\n          typeof valueToDeserialize === \"object\"\n            ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName!]\n            : [];\n      }\n      try {\n        parsedResponse.parsedBody = operationSpec.serializer.deserialize(\n          responseSpec.bodyMapper,\n          valueToDeserialize,\n          \"operationRes.parsedBody\",\n          options,\n        );\n      } catch (deserializeError: any) {\n        const restError = new RestError(\n          `Error ${deserializeError} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`,\n          {\n            statusCode: parsedResponse.status,\n            request: parsedResponse.request,\n            response: parsedResponse,\n          },\n        );\n        throw restError;\n      }\n    } else if (operationSpec.httpMethod === \"HEAD\") {\n      // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n      parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n    }\n\n    if (responseSpec.headersMapper) {\n      parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(\n        responseSpec.headersMapper,\n        parsedResponse.headers.toJSON(),\n        \"operationRes.parsedHeaders\",\n        { xml: {}, ignoreUnknownProperties: true },\n      );\n    }\n  }\n\n  return parsedResponse;\n}\n\nfunction isOperationSpecEmpty(operationSpec: OperationSpec): boolean {\n  const expectedStatusCodes = Object.keys(operationSpec.responses);\n  return (\n    expectedStatusCodes.length === 0 ||\n    (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\")\n  );\n}\n\nfunction handleErrorResponse(\n  parsedResponse: FullOperationResponse,\n  operationSpec: OperationSpec,\n  responseSpec: OperationResponseMap | undefined,\n  options: RequiredSerializerOptions,\n): { error: RestError | null; shouldReturnResponse: boolean } {\n  const isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;\n  const isExpectedStatusCode: boolean = isOperationSpecEmpty(operationSpec)\n    ? isSuccessByStatus\n    : !!responseSpec;\n\n  if (isExpectedStatusCode) {\n    if (responseSpec) {\n      if (!responseSpec.isError) {\n        return { error: null, shouldReturnResponse: false };\n      }\n    } else {\n      return { error: null, shouldReturnResponse: false };\n    }\n  }\n\n  const errorResponseSpec = responseSpec ?? operationSpec.responses.default;\n\n  const initialErrorMessage = parsedResponse.request.streamResponseStatusCodes?.has(\n    parsedResponse.status,\n  )\n    ? `Unexpected status code: ${parsedResponse.status}`\n    : (parsedResponse.bodyAsText as string);\n\n  const error = new RestError(initialErrorMessage, {\n    statusCode: parsedResponse.status,\n    request: parsedResponse.request,\n    response: parsedResponse,\n  });\n\n  // If the item failed but there's no error spec or default spec to deserialize the error,\n  // and the parsed body doesn't look like an error object,\n  // we should fail so we just throw the parsed response\n  if (\n    !errorResponseSpec &&\n    !(parsedResponse.parsedBody?.error?.code && parsedResponse.parsedBody?.error?.message)\n  ) {\n    throw error;\n  }\n\n  const defaultBodyMapper = errorResponseSpec?.bodyMapper;\n  const defaultHeadersMapper = errorResponseSpec?.headersMapper;\n\n  try {\n    // If error response has a body, try to deserialize it using default body mapper.\n    // Then try to extract error code & message from it\n    if (parsedResponse.parsedBody) {\n      const parsedBody = parsedResponse.parsedBody;\n      let deserializedError;\n\n      if (defaultBodyMapper) {\n        let valueToDeserialize: any = parsedBody;\n        if (operationSpec.isXML && defaultBodyMapper.type.name === MapperTypeNames.Sequence) {\n          valueToDeserialize = [];\n          const elementName = defaultBodyMapper.xmlElementName;\n          if (typeof parsedBody === \"object\" && elementName) {\n            valueToDeserialize = parsedBody[elementName];\n          }\n        }\n        deserializedError = operationSpec.serializer.deserialize(\n          defaultBodyMapper,\n          valueToDeserialize,\n          \"error.response.parsedBody\",\n          options,\n        );\n      }\n\n      const internalError: any = parsedBody.error || deserializedError || parsedBody;\n      error.code = internalError.code;\n      if (internalError.message) {\n        error.message = internalError.message;\n      }\n\n      if (defaultBodyMapper) {\n        (error.response! as FullOperationResponse).parsedBody = deserializedError;\n      }\n    }\n\n    // If error response has headers, try to deserialize it using default header mapper\n    if (parsedResponse.headers && defaultHeadersMapper) {\n      (error.response! as FullOperationResponse).parsedHeaders =\n        operationSpec.serializer.deserialize(\n          defaultHeadersMapper,\n          parsedResponse.headers.toJSON(),\n          \"operationRes.parsedHeaders\",\n        );\n    }\n  } catch (defaultError: any) {\n    error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody - \"${parsedResponse.bodyAsText}\" for the default response.`;\n  }\n\n  return { error, shouldReturnResponse: false };\n}\n\nasync function parse(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  operationResponse: FullOperationResponse,\n  opts: RequiredSerializerOptions,\n  parseXML?: (str: string, opts?: XmlOptions) => Promise<any>,\n): Promise<FullOperationResponse> {\n  if (\n    !operationResponse.request.streamResponseStatusCodes?.has(operationResponse.status) &&\n    operationResponse.bodyAsText\n  ) {\n    const text = operationResponse.bodyAsText;\n    const contentType: string = operationResponse.headers.get(\"Content-Type\") || \"\";\n    const contentComponents: string[] = !contentType\n      ? []\n      : contentType.split(\";\").map((component) => component.toLowerCase());\n\n    try {\n      if (\n        contentComponents.length === 0 ||\n        contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)\n      ) {\n        operationResponse.parsedBody = JSON.parse(text);\n        return operationResponse;\n      } else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n        if (!parseXML) {\n          throw new Error(\"Parsing XML not supported.\");\n        }\n        const body = await parseXML(text, opts.xml);\n        operationResponse.parsedBody = body;\n        return operationResponse;\n      }\n    } catch (err: any) {\n      const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n      const errCode = err.code || RestError.PARSE_ERROR;\n      const e = new RestError(msg, {\n        code: errCode,\n        statusCode: operationResponse.status,\n        request: operationResponse.request,\n        response: operationResponse,\n      });\n      throw e;\n    }\n  }\n\n  return operationResponse;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { OperationParameter, OperationSpec } from \"./interfaces.js\";\nimport { MapperTypeNames } from \"./serializer.js\";\n\n/**\n * Gets the list of status codes for streaming responses.\n * @internal\n */\nexport function getStreamingResponseStatusCodes(operationSpec: OperationSpec): Set<number> {\n  const result = new Set<number>();\n  for (const statusCode in operationSpec.responses) {\n    const operationResponse = operationSpec.responses[statusCode];\n    if (\n      operationResponse.bodyMapper &&\n      operationResponse.bodyMapper.type.name === MapperTypeNames.Stream\n    ) {\n      result.add(Number(statusCode));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter - The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n * @internal\n */\nexport function getPathStringFromParameter(parameter: OperationParameter): string {\n  const { parameterPath, mapper } = parameter;\n  let result: string;\n  if (typeof parameterPath === \"string\") {\n    result = parameterPath;\n  } else if (Array.isArray(parameterPath)) {\n    result = parameterPath.join(\".\");\n  } else {\n    result = mapper.serializedName!;\n  }\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  DictionaryMapper,\n  OperationArguments,\n  OperationRequest,\n  OperationSpec,\n  RequiredSerializerOptions,\n  SerializerOptions,\n  XmlOptions,\n} from \"./interfaces.js\";\nimport { XML_ATTRKEY, XML_CHARKEY } from \"./interfaces.js\";\nimport type { PipelinePolicy, PipelineResponse, SendRequest } from \"@azure/core-rest-pipeline\";\nimport {\n  getOperationArgumentValueFromParameter,\n  getOperationRequestInfo,\n} from \"./operationHelpers.js\";\nimport { MapperTypeNames } from \"./serializer.js\";\nimport { getPathStringFromParameter } from \"./interfaceHelpers.js\";\n\n/**\n * The programmatic identifier of the serializationPolicy.\n */\nexport const serializationPolicyName = \"serializationPolicy\";\n\n/**\n * Options to configure API request serialization.\n */\nexport interface SerializationPolicyOptions {\n  /**\n   * A function that is able to write XML. Required for XML support.\n   */\n  stringifyXML?: (obj: any, opts?: XmlOptions) => string;\n\n  /**\n   * Configures behavior of xml parser and builder.\n   */\n  serializerOptions?: SerializerOptions;\n}\n\n/**\n * This policy handles assembling the request body and headers using\n * an OperationSpec and OperationArguments on the request.\n */\nexport function serializationPolicy(options: SerializationPolicyOptions = {}): PipelinePolicy {\n  const stringifyXML = options.stringifyXML;\n\n  return {\n    name: serializationPolicyName,\n    async sendRequest(request: OperationRequest, next: SendRequest): Promise<PipelineResponse> {\n      const operationInfo = getOperationRequestInfo(request);\n      const operationSpec = operationInfo?.operationSpec;\n      const operationArguments = operationInfo?.operationArguments;\n      if (operationSpec && operationArguments) {\n        serializeHeaders(request, operationArguments, operationSpec);\n        serializeRequestBody(request, operationArguments, operationSpec, stringifyXML);\n      }\n      return next(request);\n    },\n  };\n}\n\n/**\n * @internal\n */\nexport function serializeHeaders(\n  request: OperationRequest,\n  operationArguments: OperationArguments,\n  operationSpec: OperationSpec,\n): void {\n  if (operationSpec.headerParameters) {\n    for (const headerParameter of operationSpec.headerParameters) {\n      let headerValue = getOperationArgumentValueFromParameter(operationArguments, headerParameter);\n      if ((headerValue !== null && headerValue !== undefined) || headerParameter.mapper.required) {\n        headerValue = operationSpec.serializer.serialize(\n          headerParameter.mapper,\n          headerValue,\n          getPathStringFromParameter(headerParameter),\n        );\n        const headerCollectionPrefix = (headerParameter.mapper as DictionaryMapper)\n          .headerCollectionPrefix;\n        if (headerCollectionPrefix) {\n          for (const key of Object.keys(headerValue)) {\n            request.headers.set(headerCollectionPrefix + key, headerValue[key]);\n          }\n        } else {\n          request.headers.set(\n            headerParameter.mapper.serializedName || getPathStringFromParameter(headerParameter),\n            headerValue,\n          );\n        }\n      }\n    }\n  }\n  const customHeaders = operationArguments.options?.requestOptions?.customHeaders;\n  if (customHeaders) {\n    for (const customHeaderName of Object.keys(customHeaders)) {\n      request.headers.set(customHeaderName, customHeaders[customHeaderName]);\n    }\n  }\n}\n\n/**\n * @internal\n */\nexport function serializeRequestBody(\n  request: OperationRequest,\n  operationArguments: OperationArguments,\n  operationSpec: OperationSpec,\n  stringifyXML: (obj: any, opts?: XmlOptions) => string = function () {\n    throw new Error(\"XML serialization unsupported!\");\n  },\n): void {\n  const serializerOptions = operationArguments.options?.serializerOptions;\n  const updatedOptions: RequiredSerializerOptions = {\n    xml: {\n      rootName: serializerOptions?.xml.rootName ?? \"\",\n      includeRoot: serializerOptions?.xml.includeRoot ?? false,\n      xmlCharKey: serializerOptions?.xml.xmlCharKey ?? XML_CHARKEY,\n    },\n  };\n\n  const xmlCharKey = updatedOptions.xml.xmlCharKey;\n  if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n    request.body = getOperationArgumentValueFromParameter(\n      operationArguments,\n      operationSpec.requestBody,\n    );\n\n    const bodyMapper = operationSpec.requestBody.mapper;\n    const {\n      required,\n      serializedName,\n      xmlName,\n      xmlElementName,\n      xmlNamespace,\n      xmlNamespacePrefix,\n      nullable,\n    } = bodyMapper;\n    const typeName = bodyMapper.type.name;\n\n    try {\n      if (\n        (request.body !== undefined && request.body !== null) ||\n        (nullable && request.body === null) ||\n        required\n      ) {\n        const requestBodyParameterPathString: string = getPathStringFromParameter(\n          operationSpec.requestBody,\n        );\n        request.body = operationSpec.serializer.serialize(\n          bodyMapper,\n          request.body,\n          requestBodyParameterPathString,\n          updatedOptions,\n        );\n\n        const isStream = typeName === MapperTypeNames.Stream;\n\n        if (operationSpec.isXML) {\n          const xmlnsKey = xmlNamespacePrefix ? `xmlns:${xmlNamespacePrefix}` : \"xmlns\";\n          const value = getXmlValueWithNamespace(\n            xmlNamespace,\n            xmlnsKey,\n            typeName,\n            request.body,\n            updatedOptions,\n          );\n\n          if (typeName === MapperTypeNames.Sequence) {\n            request.body = stringifyXML(\n              prepareXMLRootList(\n                value,\n                xmlElementName || xmlName || serializedName!,\n                xmlnsKey,\n                xmlNamespace,\n              ),\n              { rootName: xmlName || serializedName, xmlCharKey },\n            );\n          } else if (!isStream) {\n            request.body = stringifyXML(value, {\n              rootName: xmlName || serializedName,\n              xmlCharKey,\n            });\n          }\n        } else if (\n          typeName === MapperTypeNames.String &&\n          (operationSpec.contentType?.match(\"text/plain\") || operationSpec.mediaType === \"text\")\n        ) {\n          // the String serializer has validated that request body is a string\n          // so just send the string.\n          return;\n        } else if (!isStream) {\n          request.body = JSON.stringify(request.body);\n        }\n      }\n    } catch (error: any) {\n      throw new Error(\n        `Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(\n          serializedName,\n          undefined,\n          \"  \",\n        )}.`,\n      );\n    }\n  } else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n    request.formData = {};\n    for (const formDataParameter of operationSpec.formDataParameters) {\n      const formDataParameterValue = getOperationArgumentValueFromParameter(\n        operationArguments,\n        formDataParameter,\n      );\n      if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n        const formDataParameterPropertyName: string =\n          formDataParameter.mapper.serializedName || getPathStringFromParameter(formDataParameter);\n        request.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(\n          formDataParameter.mapper,\n          formDataParameterValue,\n          getPathStringFromParameter(formDataParameter),\n          updatedOptions,\n        );\n      }\n    }\n  }\n}\n\n/**\n * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself\n */\nfunction getXmlValueWithNamespace(\n  xmlNamespace: string | undefined,\n  xmlnsKey: string,\n  typeName: string,\n  serializedValue: any,\n  options: RequiredSerializerOptions,\n): any {\n  // Composite and Sequence schemas already got their root namespace set during serialization\n  // We just need to add xmlns to the other schema types\n  if (xmlNamespace && ![\"Composite\", \"Sequence\", \"Dictionary\"].includes(typeName)) {\n    const result: any = {};\n    result[options.xml.xmlCharKey] = serializedValue;\n    result[XML_ATTRKEY] = { [xmlnsKey]: xmlNamespace };\n    return result;\n  }\n\n  return serializedValue;\n}\n\nfunction prepareXMLRootList(\n  obj: any,\n  elementName: string,\n  xmlNamespaceKey?: string,\n  xmlNamespace?: string,\n): { [key: string]: any[] } {\n  if (!Array.isArray(obj)) {\n    obj = [obj];\n  }\n  if (!xmlNamespaceKey || !xmlNamespace) {\n    return { [elementName]: obj };\n  }\n\n  const result = { [elementName]: obj };\n  result[XML_ATTRKEY] = { [xmlNamespaceKey]: xmlNamespace };\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { DeserializationPolicyOptions } from \"./deserializationPolicy.js\";\nimport { deserializationPolicy } from \"./deserializationPolicy.js\";\nimport type { InternalPipelineOptions, Pipeline } from \"@azure/core-rest-pipeline\";\nimport {\n  bearerTokenAuthenticationPolicy,\n  createPipelineFromOptions,\n} from \"@azure/core-rest-pipeline\";\nimport type { SerializationPolicyOptions } from \"./serializationPolicy.js\";\nimport { serializationPolicy } from \"./serializationPolicy.js\";\nimport type { TokenCredential } from \"@azure/core-auth\";\n\n/**\n * Options for creating a Pipeline to use with ServiceClient.\n * Mostly for customizing the auth policy (if using token auth) or\n * the deserialization options when using XML.\n */\nexport interface InternalClientPipelineOptions extends InternalPipelineOptions {\n  /**\n   * Options to customize bearerTokenAuthenticationPolicy.\n   */\n  credentialOptions?: { credentialScopes: string | string[]; credential: TokenCredential };\n  /**\n   * Options to customize deserializationPolicy.\n   */\n  deserializationOptions?: DeserializationPolicyOptions;\n  /**\n   * Options to customize serializationPolicy.\n   */\n  serializationOptions?: SerializationPolicyOptions;\n}\n\n/**\n * Creates a new Pipeline for use with a Service Client.\n * Adds in deserializationPolicy by default.\n * Also adds in bearerTokenAuthenticationPolicy if passed a TokenCredential.\n * @param options - Options to customize the created pipeline.\n */\nexport function createClientPipeline(options: InternalClientPipelineOptions = {}): Pipeline {\n  const pipeline = createPipelineFromOptions(options ?? {});\n  if (options.credentialOptions) {\n    pipeline.addPolicy(\n      bearerTokenAuthenticationPolicy({\n        credential: options.credentialOptions.credential,\n        scopes: options.credentialOptions.credentialScopes,\n      }),\n    );\n  }\n\n  pipeline.addPolicy(serializationPolicy(options.serializationOptions), { phase: \"Serialize\" });\n  pipeline.addPolicy(deserializationPolicy(options.deserializationOptions), {\n    phase: \"Deserialize\",\n  });\n\n  return pipeline;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient } from \"@azure/core-rest-pipeline\";\nimport { createDefaultHttpClient } from \"@azure/core-rest-pipeline\";\n\nlet cachedHttpClient: HttpClient | undefined;\n\nexport function getCachedDefaultHttpClient(): HttpClient {\n  if (!cachedHttpClient) {\n    cachedHttpClient = createDefaultHttpClient();\n  }\n\n  return cachedHttpClient;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { OperationArguments, OperationSpec, QueryCollectionFormat } from \"./interfaces.js\";\nimport { getOperationArgumentValueFromParameter } from \"./operationHelpers.js\";\nimport { getPathStringFromParameter } from \"./interfaceHelpers.js\";\n\nconst CollectionFormatToDelimiterMap: { [key in QueryCollectionFormat]: string } = {\n  CSV: \",\",\n  SSV: \" \",\n  Multi: \"Multi\",\n  TSV: \"\\t\",\n  Pipes: \"|\",\n};\n\nexport function getRequestUrl(\n  baseUri: string,\n  operationSpec: OperationSpec,\n  operationArguments: OperationArguments,\n  fallbackObject: { [parameterName: string]: any },\n): string {\n  const urlReplacements = calculateUrlReplacements(\n    operationSpec,\n    operationArguments,\n    fallbackObject,\n  );\n\n  let isAbsolutePath = false;\n\n  let requestUrl = replaceAll(baseUri, urlReplacements);\n  if (operationSpec.path) {\n    let path = replaceAll(operationSpec.path, urlReplacements);\n    // QUIRK: sometimes we get a path component like /{nextLink}\n    // which may be a fully formed URL with a leading /. In that case, we should\n    // remove the leading /\n    if (operationSpec.path === \"/{nextLink}\" && path.startsWith(\"/\")) {\n      path = path.substring(1);\n    }\n    // QUIRK: sometimes we get a path component like {nextLink}\n    // which may be a fully formed URL. In that case, we should\n    // ignore the baseUri.\n    if (isAbsoluteUrl(path)) {\n      requestUrl = path;\n      isAbsolutePath = true;\n    } else {\n      requestUrl = appendPath(requestUrl, path);\n    }\n  }\n\n  const { queryParams, sequenceParams } = calculateQueryParameters(\n    operationSpec,\n    operationArguments,\n    fallbackObject,\n  );\n  /**\n   * Notice that this call sets the `noOverwrite` parameter to true if the `requestUrl`\n   * is an absolute path. This ensures that existing query parameter values in `requestUrl`\n   * do not get overwritten. On the other hand when `requestUrl` is not absolute path, it\n   * is still being built so there is nothing to overwrite.\n   */\n  requestUrl = appendQueryParams(requestUrl, queryParams, sequenceParams, isAbsolutePath);\n\n  return requestUrl;\n}\n\nfunction replaceAll(input: string, replacements: Map<string, string>): string {\n  let result = input;\n  for (const [searchValue, replaceValue] of replacements) {\n    result = result.split(searchValue).join(replaceValue);\n  }\n  return result;\n}\n\nfunction calculateUrlReplacements(\n  operationSpec: OperationSpec,\n  operationArguments: OperationArguments,\n  fallbackObject: { [parameterName: string]: any },\n): Map<string, string> {\n  const result = new Map<string, string>();\n  if (operationSpec.urlParameters?.length) {\n    for (const urlParameter of operationSpec.urlParameters) {\n      let urlParameterValue: string = getOperationArgumentValueFromParameter(\n        operationArguments,\n        urlParameter,\n        fallbackObject,\n      );\n      const parameterPathString = getPathStringFromParameter(urlParameter);\n      urlParameterValue = operationSpec.serializer.serialize(\n        urlParameter.mapper,\n        urlParameterValue,\n        parameterPathString,\n      );\n      if (!urlParameter.skipEncoding) {\n        urlParameterValue = encodeURIComponent(urlParameterValue);\n      }\n      result.set(\n        `{${urlParameter.mapper.serializedName || parameterPathString}}`,\n        urlParameterValue,\n      );\n    }\n  }\n  return result;\n}\n\nfunction isAbsoluteUrl(url: string): boolean {\n  return url.includes(\"://\");\n}\n\nfunction appendPath(url: string, pathToAppend?: string): string {\n  if (!pathToAppend) {\n    return url;\n  }\n\n  const parsedUrl = new URL(url);\n  let newPath = parsedUrl.pathname;\n\n  if (!newPath.endsWith(\"/\")) {\n    newPath = `${newPath}/`;\n  }\n\n  if (pathToAppend.startsWith(\"/\")) {\n    pathToAppend = pathToAppend.substring(1);\n  }\n\n  const searchStart = pathToAppend.indexOf(\"?\");\n  if (searchStart !== -1) {\n    const path = pathToAppend.substring(0, searchStart);\n    const search = pathToAppend.substring(searchStart + 1);\n    newPath = newPath + path;\n    if (search) {\n      parsedUrl.search = parsedUrl.search ? `${parsedUrl.search}&${search}` : search;\n    }\n  } else {\n    newPath = newPath + pathToAppend;\n  }\n\n  parsedUrl.pathname = newPath;\n\n  return parsedUrl.toString();\n}\n\nfunction calculateQueryParameters(\n  operationSpec: OperationSpec,\n  operationArguments: OperationArguments,\n  fallbackObject: { [parameterName: string]: any },\n): {\n  queryParams: Map<string, string | string[]>;\n  sequenceParams: Set<string>;\n} {\n  const result = new Map<string, string | string[]>();\n  const sequenceParams: Set<string> = new Set<string>();\n\n  if (operationSpec.queryParameters?.length) {\n    for (const queryParameter of operationSpec.queryParameters) {\n      if (queryParameter.mapper.type.name === \"Sequence\" && queryParameter.mapper.serializedName) {\n        sequenceParams.add(queryParameter.mapper.serializedName);\n      }\n      let queryParameterValue: string | string[] = getOperationArgumentValueFromParameter(\n        operationArguments,\n        queryParameter,\n        fallbackObject,\n      );\n      if (\n        (queryParameterValue !== undefined && queryParameterValue !== null) ||\n        queryParameter.mapper.required\n      ) {\n        queryParameterValue = operationSpec.serializer.serialize(\n          queryParameter.mapper,\n          queryParameterValue,\n          getPathStringFromParameter(queryParameter),\n        );\n\n        const delimiter = queryParameter.collectionFormat\n          ? CollectionFormatToDelimiterMap[queryParameter.collectionFormat]\n          : \"\";\n        if (Array.isArray(queryParameterValue)) {\n          // replace null and undefined\n          queryParameterValue = queryParameterValue.map((item) => {\n            if (item === null || item === undefined) {\n              return \"\";\n            }\n\n            return item;\n          });\n        }\n        if (queryParameter.collectionFormat === \"Multi\" && queryParameterValue.length === 0) {\n          continue;\n        } else if (\n          Array.isArray(queryParameterValue) &&\n          (queryParameter.collectionFormat === \"SSV\" || queryParameter.collectionFormat === \"TSV\")\n        ) {\n          queryParameterValue = queryParameterValue.join(delimiter);\n        }\n        if (!queryParameter.skipEncoding) {\n          if (Array.isArray(queryParameterValue)) {\n            queryParameterValue = queryParameterValue.map((item: string) => {\n              return encodeURIComponent(item);\n            });\n          } else {\n            queryParameterValue = encodeURIComponent(queryParameterValue);\n          }\n        }\n\n        // Join pipes and CSV *after* encoding, or the server will be upset.\n        if (\n          Array.isArray(queryParameterValue) &&\n          (queryParameter.collectionFormat === \"CSV\" || queryParameter.collectionFormat === \"Pipes\")\n        ) {\n          queryParameterValue = queryParameterValue.join(delimiter);\n        }\n\n        result.set(\n          queryParameter.mapper.serializedName || getPathStringFromParameter(queryParameter),\n          queryParameterValue,\n        );\n      }\n    }\n  }\n  return {\n    queryParams: result,\n    sequenceParams,\n  };\n}\n\nfunction simpleParseQueryParams(queryString: string): Map<string, string | string[] | undefined> {\n  const result: Map<string, string | string[] | undefined> = new Map<\n    string,\n    string | string[] | undefined\n  >();\n  if (!queryString || queryString[0] !== \"?\") {\n    return result;\n  }\n\n  // remove the leading ?\n  queryString = queryString.slice(1);\n  const pairs = queryString.split(\"&\");\n\n  for (const pair of pairs) {\n    const [name, value] = pair.split(\"=\", 2);\n    const existingValue = result.get(name);\n    if (existingValue) {\n      if (Array.isArray(existingValue)) {\n        existingValue.push(value);\n      } else {\n        result.set(name, [existingValue, value]);\n      }\n    } else {\n      result.set(name, value);\n    }\n  }\n\n  return result;\n}\n\n/** @internal */\nexport function appendQueryParams(\n  url: string,\n  queryParams: Map<string, string | string[]>,\n  sequenceParams: Set<string>,\n  noOverwrite: boolean = false,\n): string {\n  if (queryParams.size === 0) {\n    return url;\n  }\n\n  const parsedUrl = new URL(url);\n\n  // QUIRK: parsedUrl.searchParams will have their name/value pairs decoded, which\n  // can change their meaning to the server, such as in the case of a SAS signature.\n  // To avoid accidentally un-encoding a query param, we parse the key/values ourselves\n  const combinedParams = simpleParseQueryParams(parsedUrl.search);\n\n  for (const [name, value] of queryParams) {\n    const existingValue = combinedParams.get(name);\n    if (Array.isArray(existingValue)) {\n      if (Array.isArray(value)) {\n        existingValue.push(...value);\n        const valueSet = new Set(existingValue);\n        combinedParams.set(name, Array.from(valueSet));\n      } else {\n        existingValue.push(value);\n      }\n    } else if (existingValue) {\n      if (Array.isArray(value)) {\n        value.unshift(existingValue);\n      } else if (sequenceParams.has(name)) {\n        combinedParams.set(name, [existingValue, value]);\n      }\n      if (!noOverwrite) {\n        combinedParams.set(name, value);\n      }\n    } else {\n      combinedParams.set(name, value);\n    }\n  }\n\n  const searchPieces: string[] = [];\n  for (const [name, value] of combinedParams) {\n    if (typeof value === \"string\") {\n      searchPieces.push(`${name}=${value}`);\n    } else if (Array.isArray(value)) {\n      // QUIRK: If we get an array of values, include multiple key/value pairs\n      for (const subValue of value) {\n        searchPieces.push(`${name}=${subValue}`);\n      }\n    } else {\n      searchPieces.push(`${name}=${value}`);\n    }\n  }\n\n  // QUIRK: we have to set search manually as searchParams will encode comma when it shouldn't.\n  parsedUrl.search = searchPieces.length ? `?${searchPieces.join(\"&\")}` : \"\";\n  return parsedUrl.toString();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-client\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  CommonClientOptions,\n  OperationArguments,\n  OperationRequest,\n  OperationSpec,\n} from \"./interfaces.js\";\nimport type {\n  HttpClient,\n  Pipeline,\n  PipelineRequest,\n  PipelineResponse,\n} from \"@azure/core-rest-pipeline\";\nimport { createPipelineRequest } from \"@azure/core-rest-pipeline\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport { createClientPipeline } from \"./pipeline.js\";\nimport { flattenResponse } from \"./utils.js\";\nimport { getCachedDefaultHttpClient } from \"./httpClientCache.js\";\nimport { getOperationRequestInfo } from \"./operationHelpers.js\";\nimport { getRequestUrl } from \"./urlHelpers.js\";\nimport { getStreamingResponseStatusCodes } from \"./interfaceHelpers.js\";\nimport { logger } from \"./log.js\";\n\n/**\n * Options to be provided while creating the client.\n */\nexport interface ServiceClientOptions extends CommonClientOptions {\n  /**\n   * If specified, this is the base URI that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   * @deprecated This property is deprecated and will be removed soon, please use endpoint instead\n   */\n  baseUri?: string;\n  /**\n   * If specified, this is the endpoint that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   * to encourage customer to use endpoint, we mark the baseUri as deprecated.\n   */\n  endpoint?: string;\n  /**\n   * If specified, will be used to build the BearerTokenAuthenticationPolicy.\n   */\n  credentialScopes?: string | string[];\n  /**\n   * The default request content type for the service.\n   * Used if no requestContentType is present on an OperationSpec.\n   */\n  requestContentType?: string;\n  /**\n   * Credential used to authenticate the request.\n   */\n  credential?: TokenCredential;\n  /**\n   * A customized pipeline to use, otherwise a default one will be created.\n   */\n  pipeline?: Pipeline;\n}\n\n/**\n * Initializes a new instance of the ServiceClient.\n */\nexport class ServiceClient {\n  /**\n   * If specified, this is the base URI that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   */\n  private readonly _endpoint?: string;\n\n  /**\n   * The default request content type for the service.\n   * Used if no requestContentType is present on an OperationSpec.\n   */\n  private readonly _requestContentType?: string;\n\n  /**\n   * Set to true if the request is sent over HTTP instead of HTTPS\n   */\n  private readonly _allowInsecureConnection?: boolean;\n\n  /**\n   * The HTTP client that will be used to send requests.\n   */\n  private readonly _httpClient: HttpClient;\n\n  /**\n   * The pipeline used by this client to make requests\n   */\n  public readonly pipeline: Pipeline;\n\n  /**\n   * The ServiceClient constructor\n   * @param options - The service client options that govern the behavior of the client.\n   */\n  constructor(options: ServiceClientOptions = {}) {\n    this._requestContentType = options.requestContentType;\n    this._endpoint = options.endpoint ?? options.baseUri;\n    if (options.baseUri) {\n      logger.warning(\n        \"The baseUri option for SDK Clients has been deprecated, please use endpoint instead.\",\n      );\n    }\n    this._allowInsecureConnection = options.allowInsecureConnection;\n    this._httpClient = options.httpClient || getCachedDefaultHttpClient();\n\n    this.pipeline = options.pipeline || createDefaultPipeline(options);\n    if (options.additionalPolicies?.length) {\n      for (const { policy, position } of options.additionalPolicies) {\n        // Sign happens after Retry and is commonly needed to occur\n        // before policies that intercept post-retry.\n        const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n        this.pipeline.addPolicy(policy, {\n          afterPhase,\n        });\n      }\n    }\n  }\n\n  /**\n   * Send the provided httpRequest.\n   */\n  async sendRequest(request: PipelineRequest): Promise<PipelineResponse> {\n    return this.pipeline.sendRequest(this._httpClient, request);\n  }\n\n  /**\n   * Send an HTTP request that is populated using the provided OperationSpec.\n   * @typeParam T - The typed result of the request, based on the OperationSpec.\n   * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.\n   * @param operationSpec - The OperationSpec to use to populate the httpRequest.\n   */\n  async sendOperationRequest<T>(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<T> {\n    const endpoint: string | undefined = operationSpec.baseUrl || this._endpoint;\n    if (!endpoint) {\n      throw new Error(\n        \"If operationSpec.baseUrl is not specified, then the ServiceClient must have a endpoint string property that contains the base URL to use.\",\n      );\n    }\n\n    // Templatized URLs sometimes reference properties on the ServiceClient child class,\n    // so we have to pass `this` below in order to search these properties if they're\n    // not part of OperationArguments\n    const url = getRequestUrl(endpoint, operationSpec, operationArguments, this);\n\n    const request: OperationRequest = createPipelineRequest({\n      url,\n    });\n    request.method = operationSpec.httpMethod;\n    const operationInfo = getOperationRequestInfo(request);\n    operationInfo.operationSpec = operationSpec;\n    operationInfo.operationArguments = operationArguments;\n\n    const contentType = operationSpec.contentType || this._requestContentType;\n    if (contentType && operationSpec.requestBody) {\n      request.headers.set(\"Content-Type\", contentType);\n    }\n\n    const options = operationArguments.options;\n    if (options) {\n      const requestOptions = options.requestOptions;\n\n      if (requestOptions) {\n        if (requestOptions.timeout) {\n          request.timeout = requestOptions.timeout;\n        }\n\n        if (requestOptions.onUploadProgress) {\n          request.onUploadProgress = requestOptions.onUploadProgress;\n        }\n\n        if (requestOptions.onDownloadProgress) {\n          request.onDownloadProgress = requestOptions.onDownloadProgress;\n        }\n\n        if (requestOptions.shouldDeserialize !== undefined) {\n          operationInfo.shouldDeserialize = requestOptions.shouldDeserialize;\n        }\n\n        if (requestOptions.allowInsecureConnection) {\n          request.allowInsecureConnection = true;\n        }\n      }\n\n      if (options.abortSignal) {\n        request.abortSignal = options.abortSignal;\n      }\n\n      if (options.tracingOptions) {\n        request.tracingOptions = options.tracingOptions;\n      }\n    }\n\n    if (this._allowInsecureConnection) {\n      request.allowInsecureConnection = true;\n    }\n\n    if (request.streamResponseStatusCodes === undefined) {\n      request.streamResponseStatusCodes = getStreamingResponseStatusCodes(operationSpec);\n    }\n\n    try {\n      const rawResponse = await this.sendRequest(request);\n      const flatResponse = flattenResponse(\n        rawResponse,\n        operationSpec.responses[rawResponse.status],\n      ) as T;\n      if (options?.onResponse) {\n        options.onResponse(rawResponse, flatResponse);\n      }\n      return flatResponse;\n    } catch (error: any) {\n      if (typeof error === \"object\" && error?.response) {\n        const rawResponse = error.response;\n        const flatResponse = flattenResponse(\n          rawResponse,\n          operationSpec.responses[error.statusCode] || operationSpec.responses[\"default\"],\n        );\n        error.details = flatResponse;\n        if (options?.onResponse) {\n          options.onResponse(rawResponse, flatResponse, error);\n        }\n      }\n      throw error;\n    }\n  }\n}\n\nfunction createDefaultPipeline(options: ServiceClientOptions): Pipeline {\n  const credentialScopes = getCredentialScopes(options);\n  const credentialOptions =\n    options.credential && credentialScopes\n      ? { credentialScopes, credential: options.credential }\n      : undefined;\n\n  return createClientPipeline({\n    ...options,\n    credentialOptions,\n  });\n}\n\nfunction getCredentialScopes(options: ServiceClientOptions): string | string[] | undefined {\n  if (options.credentialScopes) {\n    return options.credentialScopes;\n  }\n\n  if (options.endpoint) {\n    return `${options.endpoint}/.default`;\n  }\n\n  if (options.baseUri) {\n    return `${options.baseUri}/.default`;\n  }\n\n  if (options.credential && !options.credentialScopes) {\n    throw new Error(\n      `When using credentials, the ServiceClientOptions must contain either a endpoint or a credentialScopes. Unable to create a bearerTokenAuthenticationPolicy`,\n    );\n  }\n\n  return undefined;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  AuthorizeRequestOnChallengeOptions,\n  PipelineRequest,\n  PipelineResponse,\n} from \"@azure/core-rest-pipeline\";\n\nimport type { GetTokenOptions } from \"@azure/core-auth\";\n\n/**\n * A set of constants used internally when processing requests.\n */\nconst Constants = {\n  DefaultScope: \"/.default\",\n  /**\n   * Defines constants for use with HTTP headers.\n   */\n  HeaderConstants: {\n    /**\n     * The Authorization header.\n     */\n    AUTHORIZATION: \"authorization\",\n  },\n};\n\nfunction isUuid(text: string): boolean {\n  return /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/.test(\n    text,\n  );\n}\n\n/**\n * Defines a callback to handle auth challenge for Storage APIs.\n * This implements the bearer challenge process described here: https://learn.microsoft.com/rest/api/storageservices/authorize-with-azure-active-directory#bearer-challenge\n * Handling has specific features for storage that departs to the general AAD challenge docs.\n **/\nexport const authorizeRequestOnTenantChallenge: (\n  challengeOptions: AuthorizeRequestOnChallengeOptions,\n) => Promise<boolean> = async (challengeOptions) => {\n  const requestOptions = requestToOptions(challengeOptions.request);\n  const challenge = getChallenge(challengeOptions.response);\n  if (challenge) {\n    const challengeInfo: Challenge = parseChallenge(challenge);\n    const challengeScopes = buildScopes(challengeOptions, challengeInfo);\n    const tenantId = extractTenantId(challengeInfo);\n    if (!tenantId) {\n      return false;\n    }\n    const accessToken = await challengeOptions.getAccessToken(challengeScopes, {\n      ...requestOptions,\n      tenantId,\n    });\n\n    if (!accessToken) {\n      return false;\n    }\n\n    challengeOptions.request.headers.set(\n      Constants.HeaderConstants.AUTHORIZATION,\n      `${accessToken.tokenType ?? \"Bearer\"} ${accessToken.token}`,\n    );\n    return true;\n  }\n  return false;\n};\n\n/**\n * Extracts the tenant id from the challenge information\n * The tenant id is contained in the authorization_uri as the first\n * path part.\n */\nfunction extractTenantId(challengeInfo: Challenge): string | undefined {\n  const parsedAuthUri = new URL(challengeInfo.authorization_uri);\n  const pathSegments = parsedAuthUri.pathname.split(\"/\");\n  const tenantId = pathSegments[1];\n  if (tenantId && isUuid(tenantId)) {\n    return tenantId;\n  }\n  return undefined;\n}\n\n/**\n * Builds the authentication scopes based on the information that comes in the\n * challenge information. Scopes url is present in the resource_id, if it is empty\n * we keep using the original scopes.\n */\nfunction buildScopes(\n  challengeOptions: AuthorizeRequestOnChallengeOptions,\n  challengeInfo: Challenge,\n): string[] {\n  if (!challengeInfo.resource_id) {\n    return challengeOptions.scopes;\n  }\n\n  const challengeScopes = new URL(challengeInfo.resource_id);\n  challengeScopes.pathname = Constants.DefaultScope;\n  let scope = challengeScopes.toString();\n  if (scope === \"https://disk.azure.com/.default\") {\n    // the extra slash is required by the service\n    scope = \"https://disk.azure.com//.default\";\n  }\n  return [scope];\n}\n\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction getChallenge(response: PipelineResponse): string | undefined {\n  const challenge = response.headers.get(\"WWW-Authenticate\");\n  if (response.status === 401 && challenge) {\n    return challenge;\n  }\n  return;\n}\n\n/**\n * Challenge structure\n */\ninterface Challenge {\n  authorization_uri: string;\n  resource_id?: string;\n}\n\n/**\n * Converts: `Bearer a=\"b\" c=\"d\"`.\n * Into: `[ { a: 'b', c: 'd' }]`.\n *\n * @internal\n */\nfunction parseChallenge(challenge: string): Challenge {\n  const bearerChallenge = challenge.slice(\"Bearer \".length);\n  const challengeParts = `${bearerChallenge.trim()} `.split(\" \").filter((x) => x);\n  const keyValuePairs = challengeParts.map((keyValue) =>\n    (([key, value]) => ({ [key]: value }))(keyValue.trim().split(\"=\")),\n  );\n  // Key-value pairs to plain object:\n  return keyValuePairs.reduce((a, b) => ({ ...a, ...b }), {} as Challenge);\n}\n\n/**\n * Extracts the options form a Pipeline Request for later re-use\n */\nfunction requestToOptions(request: PipelineRequest): GetTokenOptions {\n  return {\n    abortSignal: request.abortSignal,\n    requestOptions: {\n      timeout: request.timeout,\n    },\n    tracingOptions: request.tracingOptions,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpMethods, ProxySettings } from \"@azure/core-rest-pipeline\";\nimport { createHttpHeaders, createPipelineRequest } from \"@azure/core-rest-pipeline\";\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { HttpHeaders as HttpHeadersV2, PipelineRequest } from \"@azure/core-rest-pipeline\";\n\n// We use a custom symbol to cache a reference to the original request without\n// exposing it on the public interface.\nconst originalRequestSymbol = Symbol(\"Original PipelineRequest\");\ntype CompatWebResourceLike = WebResourceLike & { [originalRequestSymbol]?: PipelineRequest };\n// Symbol.for() will return the same symbol if it's already been created\n// This particular one is used in core-client to handle the case of when a request is\n// cloned but we need to retrieve the OperationSpec and OperationArguments from the\n// original request.\nconst originalClientRequestSymbol = Symbol.for(\"@azure/core-client original request\");\ntype PipelineRequestWithOriginal = PipelineRequest & {\n  [originalClientRequestSymbol]?: PipelineRequest;\n};\n\nexport function toPipelineRequest(\n  webResource: WebResourceLike,\n  options: {\n    originalRequest?: PipelineRequest;\n  } = {},\n): PipelineRequest {\n  const compatWebResource = webResource as CompatWebResourceLike;\n  const request = compatWebResource[originalRequestSymbol];\n  const headers = createHttpHeaders(webResource.headers.toJson({ preserveCase: true }));\n  if (request) {\n    request.headers = headers;\n    return request;\n  } else {\n    const newRequest = createPipelineRequest({\n      url: webResource.url,\n      method: webResource.method,\n      headers,\n      withCredentials: webResource.withCredentials,\n      timeout: webResource.timeout,\n      requestId: webResource.requestId,\n      abortSignal: webResource.abortSignal,\n      body: webResource.body,\n      formData: webResource.formData,\n      disableKeepAlive: !!webResource.keepAlive,\n      onDownloadProgress: webResource.onDownloadProgress,\n      onUploadProgress: webResource.onUploadProgress,\n      proxySettings: webResource.proxySettings,\n      streamResponseStatusCodes: webResource.streamResponseStatusCodes,\n      agent: webResource.agent,\n      requestOverrides: webResource.requestOverrides,\n    });\n    if (options.originalRequest) {\n      (newRequest as PipelineRequestWithOriginal)[originalClientRequestSymbol] =\n        options.originalRequest;\n    }\n    return newRequest;\n  }\n}\n\nexport function toWebResourceLike(\n  request: PipelineRequest,\n  options?: { createProxy?: boolean; originalRequest?: PipelineRequest },\n): WebResourceLike {\n  const originalRequest = options?.originalRequest ?? request;\n  const webResource: WebResourceLike = {\n    url: request.url,\n    method: request.method,\n    headers: toHttpHeadersLike(request.headers),\n    withCredentials: request.withCredentials,\n    timeout: request.timeout,\n    requestId: request.headers.get(\"x-ms-client-request-id\") || request.requestId,\n    abortSignal: request.abortSignal,\n    body: request.body,\n    formData: request.formData,\n    keepAlive: !!request.disableKeepAlive,\n    onDownloadProgress: request.onDownloadProgress,\n    onUploadProgress: request.onUploadProgress,\n    proxySettings: request.proxySettings,\n    streamResponseStatusCodes: request.streamResponseStatusCodes,\n    agent: request.agent,\n    requestOverrides: request.requestOverrides,\n    clone(): WebResourceLike {\n      throw new Error(\"Cannot clone a non-proxied WebResourceLike\");\n    },\n    prepare(): WebResourceLike {\n      throw new Error(\"WebResourceLike.prepare() is not supported by @azure/core-http-compat\");\n    },\n    validateRequestProperties(): void {\n      /** do nothing */\n    },\n  };\n\n  if (options?.createProxy) {\n    return new Proxy(webResource, {\n      get(target, prop, receiver) {\n        if (prop === originalRequestSymbol) {\n          return request;\n        } else if (prop === \"clone\") {\n          return () => {\n            return toWebResourceLike(toPipelineRequest(webResource, { originalRequest }), {\n              createProxy: true,\n              originalRequest,\n            });\n          };\n        }\n        return Reflect.get(target, prop, receiver);\n      },\n      set(target: any, prop, value, receiver) {\n        if (prop === \"keepAlive\") {\n          request.disableKeepAlive = !value;\n        }\n        const passThroughProps = [\n          \"url\",\n          \"method\",\n          \"withCredentials\",\n          \"timeout\",\n          \"requestId\",\n          \"abortSignal\",\n          \"body\",\n          \"formData\",\n          \"onDownloadProgress\",\n          \"onUploadProgress\",\n          \"proxySettings\",\n          \"streamResponseStatusCodes\",\n          \"agent\",\n          \"requestOverrides\",\n        ];\n\n        if (typeof prop === \"string\" && passThroughProps.includes(prop)) {\n          (request as any)[prop] = value;\n        }\n\n        return Reflect.set(target, prop, value, receiver);\n      },\n    });\n  } else {\n    return webResource;\n  }\n}\n\n/**\n * Converts HttpHeaders from core-rest-pipeline to look like\n * HttpHeaders from core-http.\n * @param headers - HttpHeaders from core-rest-pipeline\n * @returns HttpHeaders as they looked in core-http\n */\nexport function toHttpHeadersLike(headers: HttpHeadersV2): HttpHeadersLike {\n  return new HttpHeaders(headers.toJSON({ preserveCase: true }));\n}\n\n/**\n * A collection of HttpHeaders that can be sent with a HTTP request.\n */\nfunction getHeaderKey(headerName: string): string {\n  return headerName.toLowerCase();\n}\n\n/**\n * An individual header within a HttpHeaders collection.\n */\nexport interface HttpHeader {\n  /**\n   * The name of the header.\n   */\n  name: string;\n\n  /**\n   * The value of the header.\n   */\n  value: string;\n}\n\n/**\n * A HttpHeaders collection represented as a simple JSON object.\n */\nexport type RawHttpHeaders = { [headerName: string]: string };\n\n/**\n * A collection of HTTP header key/value pairs.\n */\nexport interface HttpHeadersLike {\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param headerName - The name of the header to set. This value is case-insensitive.\n   * @param headerValue - The value of the header to set.\n   */\n  set(headerName: string, headerValue: string | number): void;\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param headerName - The name of the header.\n   */\n  get(headerName: string): string | undefined;\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   */\n  contains(headerName: string): boolean;\n  /**\n   * Remove the header with the provided headerName. Return whether or not the header existed and\n   * was removed.\n   * @param headerName - The name of the header to remove.\n   */\n  remove(headerName: string): boolean;\n  /**\n   * Get the headers that are contained this collection as an object.\n   */\n  rawHeaders(): RawHttpHeaders;\n  /**\n   * Get the headers that are contained in this collection as an array.\n   */\n  headersArray(): HttpHeader[];\n  /**\n   * Get the header names that are contained in this collection.\n   */\n  headerNames(): string[];\n  /**\n   * Get the header values that are contained in this collection.\n   */\n  headerValues(): string[];\n  /**\n   * Create a deep clone/copy of this HttpHeaders collection.\n   */\n  clone(): HttpHeadersLike;\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   * The result is the same as `rawHeaders()`.\n   */\n  toJson(options?: { preserveCase?: boolean }): RawHttpHeaders;\n}\n\n/**\n * A collection of HTTP header key/value pairs.\n */\nexport class HttpHeaders implements HttpHeadersLike {\n  private readonly _headersMap: { [headerKey: string]: HttpHeader };\n\n  constructor(rawHeaders?: RawHttpHeaders) {\n    this._headersMap = {};\n    if (rawHeaders) {\n      for (const headerName in rawHeaders) {\n        this.set(headerName, rawHeaders[headerName]);\n      }\n    }\n  }\n\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param headerName - The name of the header to set. This value is case-insensitive.\n   * @param headerValue - The value of the header to set.\n   */\n  public set(headerName: string, headerValue: string | number): void {\n    this._headersMap[getHeaderKey(headerName)] = {\n      name: headerName,\n      value: headerValue.toString(),\n    };\n  }\n\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param headerName - The name of the header.\n   */\n  public get(headerName: string): string | undefined {\n    const header: HttpHeader = this._headersMap[getHeaderKey(headerName)];\n    return !header ? undefined : header.value;\n  }\n\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   */\n  public contains(headerName: string): boolean {\n    return !!this._headersMap[getHeaderKey(headerName)];\n  }\n\n  /**\n   * Remove the header with the provided headerName. Return whether or not the header existed and\n   * was removed.\n   * @param headerName - The name of the header to remove.\n   */\n  public remove(headerName: string): boolean {\n    const result: boolean = this.contains(headerName);\n    delete this._headersMap[getHeaderKey(headerName)];\n    return result;\n  }\n\n  /**\n   * Get the headers that are contained this collection as an object.\n   */\n  public rawHeaders(): RawHttpHeaders {\n    return this.toJson({ preserveCase: true });\n  }\n\n  /**\n   * Get the headers that are contained in this collection as an array.\n   */\n  public headersArray(): HttpHeader[] {\n    const headers: HttpHeader[] = [];\n    for (const headerKey in this._headersMap) {\n      headers.push(this._headersMap[headerKey]);\n    }\n    return headers;\n  }\n\n  /**\n   * Get the header names that are contained in this collection.\n   */\n  public headerNames(): string[] {\n    const headerNames: string[] = [];\n    const headers: HttpHeader[] = this.headersArray();\n    for (let i = 0; i < headers.length; ++i) {\n      headerNames.push(headers[i].name);\n    }\n    return headerNames;\n  }\n\n  /**\n   * Get the header values that are contained in this collection.\n   */\n  public headerValues(): string[] {\n    const headerValues: string[] = [];\n    const headers: HttpHeader[] = this.headersArray();\n    for (let i = 0; i < headers.length; ++i) {\n      headerValues.push(headers[i].value);\n    }\n    return headerValues;\n  }\n\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   */\n  public toJson(options: { preserveCase?: boolean } = {}): RawHttpHeaders {\n    const result: RawHttpHeaders = {};\n    if (options.preserveCase) {\n      for (const headerKey in this._headersMap) {\n        const header: HttpHeader = this._headersMap[headerKey];\n        result[header.name] = header.value;\n      }\n    } else {\n      for (const headerKey in this._headersMap) {\n        const header: HttpHeader = this._headersMap[headerKey];\n        result[getHeaderKey(header.name)] = header.value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Get the string representation of this HTTP header collection.\n   */\n  public toString(): string {\n    return JSON.stringify(this.toJson({ preserveCase: true }));\n  }\n\n  /**\n   * Create a deep clone/copy of this HttpHeaders collection.\n   */\n  public clone(): HttpHeaders {\n    const resultPreservingCasing: RawHttpHeaders = {};\n    for (const headerKey in this._headersMap) {\n      const header: HttpHeader = this._headersMap[headerKey];\n      resultPreservingCasing[header.name] = header.value;\n    }\n    return new HttpHeaders(resultPreservingCasing);\n  }\n}\n\n/**\n * An interface compatible with NodeJS's `http.Agent`.\n * We want to avoid publicly re-exporting the actual interface,\n * since it might vary across runtime versions.\n */\nexport interface Agent {\n  /**\n   * Destroy any sockets that are currently in use by the agent.\n   */\n  destroy(): void;\n  /**\n   * For agents with keepAlive enabled, this sets the maximum number of sockets that will be left open in the free state.\n   */\n  maxFreeSockets: number;\n  /**\n   * Determines how many concurrent sockets the agent can have open per origin.\n   */\n  maxSockets: number;\n  /**\n   * An object which contains queues of requests that have not yet been assigned to sockets.\n   */\n  requests: unknown;\n  /**\n   * An object which contains arrays of sockets currently in use by the agent.\n   */\n  sockets: unknown;\n}\n\n/**\n * A description of a HTTP request to be made to a remote server.\n */\nexport interface WebResourceLike {\n  /**\n   * The URL being accessed by the request.\n   */\n  url: string;\n  /**\n   * The HTTP method to use when making the request.\n   */\n  method: HttpMethods;\n  /**\n   * The HTTP body contents of the request.\n   */\n  body?: any;\n  /**\n   * The HTTP headers to use when making the request.\n   */\n  headers: HttpHeadersLike;\n  /**\n   * Whether or not the body of the HttpOperationResponse should be treated as a stream.\n   * @deprecated Use streamResponseStatusCodes property instead.\n   */\n  streamResponseBody?: boolean;\n  /**\n   * A list of response status codes whose corresponding HttpOperationResponse body should be treated as a stream.\n   */\n  streamResponseStatusCodes?: Set<number>;\n  /**\n   * Form data, used to build the request body.\n   */\n  formData?: any;\n  /**\n   * A query string represented as an object.\n   */\n  query?: { [key: string]: any };\n  /**\n   * If credentials (cookies) should be sent along during an XHR.\n   */\n  withCredentials: boolean;\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   */\n  timeout: number;\n  /**\n   * Proxy configuration.\n   */\n  proxySettings?: ProxySettings;\n  /**\n   * If the connection should be reused.\n   */\n  keepAlive?: boolean;\n  /**\n   * Whether or not to decompress response according to Accept-Encoding header (node-fetch only)\n   */\n  decompressResponse?: boolean;\n  /**\n   * A unique identifier for the request. Used for logging and tracing.\n   */\n  requestId: string;\n\n  /**\n   * Signal of an abort controller. Can be used to abort both sending a network request and waiting for a response.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * NODEJS ONLY\n   *\n   * A Node-only option to provide a custom `http.Agent`/`https.Agent`.\n   * NOTE: usually this should be one instance shared by multiple requests so that the underlying\n   *       connection to the service can be reused.\n   * Does nothing when running in the browser.\n   */\n  agent?: Agent;\n\n  /**\n   * Additional options to set on the request. This provides a way to override\n   * existing ones or provide request properties that are not declared.\n   *\n   * For possible valid properties, see\n   *   - NodeJS https.request options:  https://nodejs.org/api/http.html#httprequestoptions-callback\n   *   - Browser RequestInit: https://developer.mozilla.org/en-US/docs/Web/API/RequestInit\n   *\n   * WARNING: Options specified here will override any properties of same names when request is sent by {@link HttpClient}.\n   */\n  requestOverrides?: Record<string, unknown>;\n\n  /**\n   * Clone this request object.\n   */\n  clone(): WebResourceLike;\n\n  /**\n   * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n   * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n   * mentioned properties are not defined.\n   * Note: this a no-op for compat purposes.\n   */\n  validateRequestProperties(): void;\n\n  /**\n   * This is a no-op for compat purposes and will throw if called.\n   */\n  prepare(options: unknown): WebResourceLike;\n}\n\n/**\n * Fired in response to upload or download progress.\n */\nexport type TransferProgressEvent = {\n  /**\n   * The number of bytes loaded so far.\n   */\n  loadedBytes: number;\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { FullOperationResponse } from \"@azure/core-client\";\nimport type { PipelineResponse } from \"@azure/core-rest-pipeline\";\nimport { createHttpHeaders } from \"@azure/core-rest-pipeline\";\nimport type { HttpHeadersLike, WebResourceLike } from \"./util.js\";\nimport { toHttpHeadersLike, toPipelineRequest, toWebResourceLike } from \"./util.js\";\n/**\n * Http Response that is compatible with the core-v1(core-http).\n */\nexport interface CompatResponse extends Omit<FullOperationResponse, \"request\" | \"headers\"> {\n  /**\n   * A description of a HTTP request to be made to a remote server.\n   */\n  request: WebResourceLike;\n  /**\n   * A collection of HTTP header key/value pairs.\n   */\n  headers: HttpHeadersLike;\n}\n\nconst originalResponse = Symbol(\"Original FullOperationResponse\");\ntype ExtendedCompatResponse = CompatResponse & { [originalResponse]?: FullOperationResponse };\n\n/**\n * A helper to convert response objects from the new pipeline back to the old one.\n * @param response - A response object from core-client.\n * @returns A response compatible with `HttpOperationResponse` from core-http.\n */\nexport function toCompatResponse(\n  response: FullOperationResponse,\n  options?: { createProxy?: boolean },\n): CompatResponse {\n  let request = toWebResourceLike(response.request);\n  let headers = toHttpHeadersLike(response.headers);\n  if (options?.createProxy) {\n    return new Proxy(response, {\n      get(target, prop, receiver) {\n        if (prop === \"headers\") {\n          return headers;\n        } else if (prop === \"request\") {\n          return request;\n        } else if (prop === originalResponse) {\n          return response;\n        }\n        return Reflect.get(target, prop, receiver);\n      },\n      set(target, prop, value, receiver) {\n        if (prop === \"headers\") {\n          headers = value;\n        } else if (prop === \"request\") {\n          request = value;\n        }\n        return Reflect.set(target, prop, value, receiver);\n      },\n    }) as unknown as CompatResponse;\n  } else {\n    return {\n      ...response,\n      request,\n      headers,\n    };\n  }\n}\n\n/**\n * A helper to convert back to a PipelineResponse\n * @param compatResponse - A response compatible with `HttpOperationResponse` from core-http.\n */\nexport function toPipelineResponse(compatResponse: CompatResponse): PipelineResponse {\n  const extendedCompatResponse = compatResponse as ExtendedCompatResponse;\n  const response = extendedCompatResponse[originalResponse];\n  const headers = createHttpHeaders(compatResponse.headers.toJson({ preserveCase: true }));\n  if (response) {\n    response.headers = headers;\n    return response;\n  } else {\n    return {\n      ...compatResponse,\n      headers,\n      request: toPipelineRequest(compatResponse.request),\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { KeepAliveOptions } from \"./policies/keepAliveOptions.js\";\nimport {\n  createDisableKeepAlivePolicy,\n  pipelineContainsDisableKeepAlivePolicy,\n} from \"./policies/disableKeepAlivePolicy.js\";\nimport type { RedirectOptions } from \"./policies/redirectOptions.js\";\nimport { redirectPolicyName } from \"@azure/core-rest-pipeline\";\nimport type {\n  CommonClientOptions,\n  FullOperationResponse,\n  OperationArguments,\n  OperationSpec,\n  RawResponseCallback,\n  ServiceClientOptions,\n} from \"@azure/core-client\";\nimport { ServiceClient } from \"@azure/core-client\";\nimport { toCompatResponse } from \"./response.js\";\n\n/**\n * Options specific to Shim Clients.\n */\nexport interface ExtendedClientOptions {\n  /**\n   * Options to disable keep alive.\n   */\n  keepAliveOptions?: KeepAliveOptions;\n  /**\n   * Options to redirect requests.\n   */\n  redirectOptions?: RedirectOptions;\n}\n\n/**\n * Options that shim clients are expected to expose.\n */\nexport type ExtendedServiceClientOptions = ServiceClientOptions & ExtendedClientOptions;\n\n/**\n * The common set of options that custom shim clients are expected to expose.\n */\nexport type ExtendedCommonClientOptions = CommonClientOptions & ExtendedClientOptions;\n\n/**\n * Client to provide compatability between core V1 & V2.\n */\nexport class ExtendedServiceClient extends ServiceClient {\n  constructor(options: ExtendedServiceClientOptions) {\n    super(options);\n\n    if (\n      options.keepAliveOptions?.enable === false &&\n      !pipelineContainsDisableKeepAlivePolicy(this.pipeline)\n    ) {\n      this.pipeline.addPolicy(createDisableKeepAlivePolicy());\n    }\n\n    if (options.redirectOptions?.handleRedirects === false) {\n      this.pipeline.removePolicy({\n        name: redirectPolicyName,\n      });\n    }\n  }\n\n  /**\n   * Compatible send operation request function.\n   *\n   * @param operationArguments - Operation arguments\n   * @param operationSpec - Operation Spec\n   * @returns\n   */\n  async sendOperationRequest<T>(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<T> {\n    const userProvidedCallBack: RawResponseCallback | undefined =\n      operationArguments?.options?.onResponse;\n\n    let lastResponse: FullOperationResponse | undefined;\n\n    function onResponse(\n      rawResponse: FullOperationResponse,\n      flatResponse: unknown,\n      error?: unknown,\n    ): void {\n      lastResponse = rawResponse;\n      if (userProvidedCallBack) {\n        userProvidedCallBack(rawResponse, flatResponse, error);\n      }\n    }\n\n    operationArguments.options = {\n      ...operationArguments.options,\n      onResponse,\n    };\n\n    const result: T = await super.sendOperationRequest(operationArguments, operationSpec);\n\n    if (lastResponse) {\n      Object.defineProperty(result, \"_response\", {\n        value: toCompatResponse(lastResponse),\n      });\n    }\n\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  Pipeline,\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\n\nexport const disableKeepAlivePolicyName = \"DisableKeepAlivePolicy\";\n\nexport function createDisableKeepAlivePolicy(): PipelinePolicy {\n  return {\n    name: disableKeepAlivePolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      request.disableKeepAlive = true;\n      return next(request);\n    },\n  };\n}\n\n/**\n * @internal\n */\nexport function pipelineContainsDisableKeepAlivePolicy(pipeline: Pipeline): boolean {\n  return pipeline.getOrderedPolicies().some((policy) => policy.name === disableKeepAlivePolicyName);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport type { WebResourceLike } from \"../util.js\";\nimport { toPipelineRequest, toWebResourceLike } from \"../util.js\";\nimport type { CompatResponse } from \"../response.js\";\nimport { toCompatResponse, toPipelineResponse } from \"../response.js\";\n\n/**\n * A compatible interface for core-http request policies\n */\nexport interface RequestPolicy {\n  sendRequest(httpRequest: WebResourceLike): Promise<CompatResponse>;\n}\n\n/**\n * An enum for compatibility with RequestPolicy\n */\nexport enum HttpPipelineLogLevel {\n  ERROR = 1,\n  INFO = 3,\n  OFF = 0,\n  WARNING = 2,\n}\n\n/**\n * An interface for compatibility with RequestPolicy\n */\nexport interface RequestPolicyOptionsLike {\n  log(logLevel: HttpPipelineLogLevel, message: string): void;\n  shouldLog(logLevel: HttpPipelineLogLevel): boolean;\n}\n\nconst mockRequestPolicyOptions: RequestPolicyOptionsLike = {\n  log(_logLevel: HttpPipelineLogLevel, _message: string): void {\n    /* do nothing */\n  },\n  shouldLog(_logLevel: HttpPipelineLogLevel): boolean {\n    return false;\n  },\n};\n\n/**\n * An interface for compatibility with core-http's RequestPolicyFactory\n */\nexport interface RequestPolicyFactory {\n  create(nextPolicy: RequestPolicy, options: RequestPolicyOptionsLike): RequestPolicy;\n}\n\n/**\n * The name of the RequestPolicyFactoryPolicy\n */\nexport const requestPolicyFactoryPolicyName = \"RequestPolicyFactoryPolicy\";\n\n/**\n * A policy that wraps policies written for core-http.\n * @param factories - An array of `RequestPolicyFactory` objects from a core-http pipeline\n */\nexport function createRequestPolicyFactoryPolicy(\n  factories: RequestPolicyFactory[],\n): PipelinePolicy {\n  const orderedFactories = factories.slice().reverse();\n\n  return {\n    name: requestPolicyFactoryPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      let httpPipeline: RequestPolicy = {\n        async sendRequest(httpRequest) {\n          const response = await next(toPipelineRequest(httpRequest));\n          return toCompatResponse(response, { createProxy: true });\n        },\n      };\n      for (const factory of orderedFactories) {\n        httpPipeline = factory.create(httpPipeline, mockRequestPolicyOptions);\n      }\n\n      const webResourceLike = toWebResourceLike(request, { createProxy: true });\n      const response = await httpPipeline.sendRequest(webResourceLike);\n      return toPipelineResponse(response);\n    },\n  };\n}\n","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nexport default function toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        if(tagName === undefined) continue;\n\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if(!obj.hasOwnProperty(key)) continue;\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            if(!attrMap.hasOwnProperty(attr)) continue;\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\n","export default function getIgnoreAttributesFn(ignoreAttributes) {\n    if (typeof ignoreAttributes === 'function') {\n        return ignoreAttributes\n    }\n    if (Array.isArray(ignoreAttributes)) {\n        return (attrName) => {\n            for (const pattern of ignoreAttributes) {\n                if (typeof pattern === 'string' && attrName === pattern) {\n                    return true\n                }\n                if (pattern instanceof RegExp && pattern.test(attrName)) {\n                    return true\n                }\n            }\n        }\n    }\n    return () => false\n}","'use strict';\n//parse Empty Node as self closing node\nimport buildFromOrderedJs from './orderedJs2Xml.js';\nimport getIgnoreAttributesFn from \"../ignoreAttributes.js\";\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nexport default function Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes === true || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes)\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0, []).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level, ajPath) {\n  let attrStr = '';\n  let val = '';\n  const jPath = ajPath.join('.')\n  for (let key in jObj) {\n    if(!Object.prototype.hasOwnProperty.call(jObj, key)) continue;\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node only if it is not an attribute\n      if (this.isAttribute(key)) {\n        val += '';\n      }\n    } else if (jObj[key] === null) {\n      // null attribute should be ignored by the attribute list, but should not cause the tag closing\n      if (this.isAttribute(key)) {\n        val += '';\n      } else if (key === this.options.cdataPropName) {\n        val += '';\n      } else if (key[0] === '?') {\n        val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      } else {\n        val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      }\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr && !this.ignoreAttributesFn(attr, jPath)) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      } else if (!attr) {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      let listTagAttr = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup){\n            const result = this.j2x(item, level + 1, ajPath.concat(key));\n            listTagVal += result.val;\n            if (this.options.attributesGroupName && item.hasOwnProperty(this.options.attributesGroupName)) {\n              listTagAttr += result.attrStr\n            }\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level, ajPath)\n          }\n        } else {\n          if (this.options.oneListGroup) {\n            let textValue = this.options.tagValueProcessor(key, item);\n            textValue = this.replaceEntitiesValue(textValue);\n            listTagVal += textValue;\n          } else {\n            listTagVal += this.buildTextValNode(item, key, '', level);\n          }\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, listTagAttr, level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level, ajPath)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level, ajPath) {\n  const result = this.j2x(object, level + 1, ajPath.concat(key));\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    // attrStr is an empty string in case the attribute came as undefined or null\n    if ((attrStr || attrStr === '') && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nexport const nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*';\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nexport function getAllMatches(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n}\n\nexport const isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n}\n\nexport function isExist(v) {\n  return typeof v !== 'undefined';\n}\n\nexport function isEmptyObject(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexport function merge(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n}\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexport function getValue(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n}\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};","'use strict';\n\nimport {getAllMatches, isName} from './util.js';\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexport function validate(xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else if (tags.length === 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' has not been opened.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","'use strict';\n\nimport {validate} from './validator.js';\nimport XMLParser from './xmlparser/XMLParser.js';\nimport XMLBuilder from './xmlbuilder/json2xml.js';\n\nconst XMLValidator = {\n  validate: validate\n}\nexport {\n  XMLParser,\n  XMLValidator,\n  XMLBuilder\n};","\nexport const defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n    captureMetaData: false,\n};\n   \nexport const buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n","'use strict';\n\nlet METADATA_SYMBOL;\n\nif (typeof Symbol !== \"function\") {\n  METADATA_SYMBOL = \"@@xmlMetadata\";\n} else {\n  METADATA_SYMBOL = Symbol(\"XML Node Metadata\");\n}\n\nexport default class XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node, startIndex) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n    // if requested, add the startIndex\n    if (startIndex !== undefined) {\n      // Note: for now we just overwrite the metadata. If we had more complex metadata,\n      // we might need to do an object append here:  metadata = { ...metadata, startIndex }\n      this.child[this.child.length - 1][METADATA_SYMBOL] = { startIndex };\n    }\n  }\n  /** symbol used for metadata */\n  static getMetaDataSymbol() {\n    return METADATA_SYMBOL;\n  }\n}\n","import {isName} from '../util.js';\n\n//TODO: handle comments\nexport default function readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    let entityName, val;\n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ entityName ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  {\n                    i += 8;//Not supported\n                    const {index} = readElementExp(xmlData,i+1);\n                    i = index;\n                }else if( hasBody && isAttlist(xmlData, i)){\n                    i += 8;//Not supported\n                    // const {index} = readAttlistExp(xmlData,i+1);\n                    // i = index;\n                }else if( hasBody && isNotation(xmlData, i)) {\n                    i += 9;//Not supported\n                    const {index} = readNotationExp(xmlData,i+1);\n                    i = index;\n                }else if( isComment) comment = true;\n                else throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nconst skipWhitespace = (data, index) => {\n    while (index < data.length && /\\s/.test(data[index])) {\n        index++;\n    }\n    return index;\n};\n\nfunction readEntityExp(xmlData, i) {    \n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n\n    // Skip leading whitespace after <!ENTITY\n    i = skipWhitespace(xmlData, i);\n\n    // Read entity name\n    let entityName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i]) && xmlData[i] !== '\"' && xmlData[i] !== \"'\") {\n        entityName += xmlData[i];\n        i++;\n    }\n    validateEntityName(entityName);\n\n    // Skip whitespace after entity name\n    i = skipWhitespace(xmlData, i);\n\n    // Check for unsupported constructs (external entities or parameter entities)\n    if (xmlData.substring(i, i + 6).toUpperCase() === \"SYSTEM\") {\n        throw new Error(\"External entities are not supported\");\n    }else if (xmlData[i] === \"%\") {\n        throw new Error(\"Parameter entities are not supported\");\n    }\n\n    // Read entity value (internal entity)\n    let entityValue = \"\";\n    [i, entityValue] = readIdentifierVal(xmlData, i, \"entity\");\n    i--;\n    return [entityName, entityValue, i ];\n}\n\nfunction readNotationExp(xmlData, i) {\n    // Skip leading whitespace after <!NOTATION\n    i = skipWhitespace(xmlData, i);\n\n    // Read notation name\n    let notationName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        notationName += xmlData[i];\n        i++;\n    }\n    validateEntityName(notationName);\n\n    // Skip whitespace after notation name\n    i = skipWhitespace(xmlData, i);\n\n    // Check identifier type (SYSTEM or PUBLIC)\n    const identifierType = xmlData.substring(i, i + 6).toUpperCase();\n    if (identifierType !== \"SYSTEM\" && identifierType !== \"PUBLIC\") {\n        throw new Error(`Expected SYSTEM or PUBLIC, found \"${identifierType}\"`);\n    }\n    i += identifierType.length;\n\n    // Skip whitespace after identifier type\n    i = skipWhitespace(xmlData, i);\n\n    // Read public identifier (if PUBLIC)\n    let publicIdentifier = null;\n    let systemIdentifier = null;\n\n    if (identifierType === \"PUBLIC\") {\n        [i, publicIdentifier ] = readIdentifierVal(xmlData, i, \"publicIdentifier\");\n\n        // Skip whitespace after public identifier\n        i = skipWhitespace(xmlData, i);\n\n        // Optionally read system identifier\n        if (xmlData[i] === '\"' || xmlData[i] === \"'\") {\n            [i, systemIdentifier ] = readIdentifierVal(xmlData, i,\"systemIdentifier\");\n        }\n    } else if (identifierType === \"SYSTEM\") {\n        // Read system identifier (mandatory for SYSTEM)\n        [i, systemIdentifier ] = readIdentifierVal(xmlData, i, \"systemIdentifier\");\n\n        if (!systemIdentifier) {\n            throw new Error(\"Missing mandatory system identifier for SYSTEM notation\");\n        }\n    }\n    \n    return {notationName, publicIdentifier, systemIdentifier, index: --i};\n}\n\nfunction readIdentifierVal(xmlData, i, type) {\n    let identifierVal = \"\";\n    const startChar = xmlData[i];\n    if (startChar !== '\"' && startChar !== \"'\") {\n        throw new Error(`Expected quoted string, found \"${startChar}\"`);\n    }\n    i++;\n\n    while (i < xmlData.length && xmlData[i] !== startChar) {\n        identifierVal += xmlData[i];\n        i++;\n    }\n\n    if (xmlData[i] !== startChar) {\n        throw new Error(`Unterminated ${type} value`);\n    }\n    i++;\n    return [i, identifierVal];\n}\n\nfunction readElementExp(xmlData, i) {\n    // <!ELEMENT name (content-model)>\n\n    // Skip leading whitespace after <!ELEMENT\n    i = skipWhitespace(xmlData, i);\n\n    // Read element name\n    let elementName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        elementName += xmlData[i];\n        i++;\n    }\n\n    // Validate element name\n    if (!validateEntityName(elementName)) {\n        throw new Error(`Invalid element name: \"${elementName}\"`);\n    }\n\n    // Skip whitespace after element name\n    i = skipWhitespace(xmlData, i);\n\n    // Expect '(' to start content model\n    if (xmlData[i] !== \"(\") {\n        throw new Error(`Expected '(', found \"${xmlData[i]}\"`);\n    }\n    i++; // Move past '('\n\n    // Read content model\n    let contentModel = \"\";\n    while (i < xmlData.length && xmlData[i] !== \")\") {\n        contentModel += xmlData[i];\n        i++;\n    }\n\n    if (xmlData[i] !== \")\") {\n        throw new Error(\"Unterminated content model\");\n    }\n\n    return {\n        elementName,\n        contentModel: contentModel.trim(),\n        index: i\n    };\n}\n\nfunction readAttlistExp(xmlData, i) {\n    // Skip leading whitespace after <!ATTLIST\n    i = skipWhitespace(xmlData, i);\n\n    // Read element name\n    let elementName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        elementName += xmlData[i];\n        i++;\n    }\n\n    // Validate element name\n    validateEntityName(elementName)\n\n    // Skip whitespace after element name\n    i = skipWhitespace(xmlData, i);\n\n    // Read attribute name\n    let attributeName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        attributeName += xmlData[i];\n        i++;\n    }\n\n    // Validate attribute name\n    if (!validateEntityName(attributeName)) {\n        throw new Error(`Invalid attribute name: \"${attributeName}\"`);\n    }\n\n    // Skip whitespace after attribute name\n    i = skipWhitespace(xmlData, i);\n\n    // Read attribute type\n    let attributeType = \"\";\n    if (xmlData.substring(i, i + 8).toUpperCase() === \"NOTATION\") {\n        attributeType = \"NOTATION\";\n        i += 8; // Move past \"NOTATION\"\n\n        // Skip whitespace after \"NOTATION\"\n        i = skipWhitespace(xmlData, i);\n\n        // Expect '(' to start the list of notations\n        if (xmlData[i] !== \"(\") {\n            throw new Error(`Expected '(', found \"${xmlData[i]}\"`);\n        }\n        i++; // Move past '('\n\n        // Read the list of allowed notations\n        let allowedNotations = [];\n        while (i < xmlData.length && xmlData[i] !== \")\") {\n            let notation = \"\";\n            while (i < xmlData.length && xmlData[i] !== \"|\" && xmlData[i] !== \")\") {\n                notation += xmlData[i];\n                i++;\n            }\n\n            // Validate notation name\n            notation = notation.trim();\n            if (!validateEntityName(notation)) {\n                throw new Error(`Invalid notation name: \"${notation}\"`);\n            }\n\n            allowedNotations.push(notation);\n\n            // Skip '|' separator or exit loop\n            if (xmlData[i] === \"|\") {\n                i++; // Move past '|'\n                i = skipWhitespace(xmlData, i); // Skip optional whitespace after '|'\n            }\n        }\n\n        if (xmlData[i] !== \")\") {\n            throw new Error(\"Unterminated list of notations\");\n        }\n        i++; // Move past ')'\n\n        // Store the allowed notations as part of the attribute type\n        attributeType += \" (\" + allowedNotations.join(\"|\") + \")\";\n    } else {\n        // Handle simple types (e.g., CDATA, ID, IDREF, etc.)\n        while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n            attributeType += xmlData[i];\n            i++;\n        }\n\n        // Validate simple attribute type\n        const validTypes = [\"CDATA\", \"ID\", \"IDREF\", \"IDREFS\", \"ENTITY\", \"ENTITIES\", \"NMTOKEN\", \"NMTOKENS\"];\n        if (!validTypes.includes(attributeType.toUpperCase())) {\n            throw new Error(`Invalid attribute type: \"${attributeType}\"`);\n        }\n    }\n\n    // Skip whitespace after attribute type\n    i = skipWhitespace(xmlData, i);\n\n    // Read default value\n    let defaultValue = \"\";\n    if (xmlData.substring(i, i + 8).toUpperCase() === \"#REQUIRED\") {\n        defaultValue = \"#REQUIRED\";\n        i += 8;\n    } else if (xmlData.substring(i, i + 7).toUpperCase() === \"#IMPLIED\") {\n        defaultValue = \"#IMPLIED\";\n        i += 7;\n    } else {\n        [i, defaultValue] = readIdentifierVal(xmlData, i, \"ATTLIST\");\n    }\n\n    return {\n        elementName,\n        attributeName,\n        attributeType,\n        defaultValue,\n        index: i\n    }\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nfunction validateEntityName(name){\n    if (isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)([0-9]*(\\.[0-9]*)?)$/;\n// const octRegex = /^0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n \nconst consider = {\n    hex :  true,\n    // oct: false,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true,\n    //skipLike: /regex/\n};\n\nexport default function toNumber(str, options = {}){\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    \n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if(str===\"0\") return 0;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return parse_int(trimmedStr, 16);\n    // }else if (options.oct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    }else if (trimmedStr.search(/.+[eE].+/)!== -1) { //eNotation\n        return resolveEnotation(str,trimmedStr,options);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        // +00.123 => [ , '+', '00', '.123', ..\n        if(match){\n            const sign = match[1] || \"\";\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            const decimalAdjacentToLeadingZeros = sign ? // 0., -00., 000.\n                str[leadingZeros.length+1] === \".\" \n                : str[leadingZeros.length] === \".\";\n\n            //trim ending zeros for floating number\n            if(!options.leadingZeros //leading zeros are not allowed\n                && (leadingZeros.length > 1 \n                    || (leadingZeros.length === 1 && !decimalAdjacentToLeadingZeros))){\n                // 00, 00.3, +03.24, 03, 03.24\n                return str;\n            }\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const parsedStr = String(num);\n\n                if( num === 0 || num === -0) return num;\n                if(parsedStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    if(parsedStr === \"0\") return num; //0.0\n                    else if(parsedStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( parsedStr === `${sign}${numTrimmedByZeros}`) return num;\n                    else return str;\n                }\n                \n                let n = leadingZeros? numTrimmedByZeros : trimmedStr;\n                if(leadingZeros){\n                    // -009 => -9\n                    return (n === parsedStr) || (sign+n === parsedStr) ? num : str\n                }else  {\n                    // +9\n                    return (n === parsedStr) || (n === sign+parsedStr) ? num : str\n                }\n            }\n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\nconst eNotationRegx = /^([-+])?(0*)(\\d*(\\.\\d*)?[eE][-\\+]?\\d+)$/;\nfunction resolveEnotation(str,trimmedStr,options){\n    if(!options.eNotation) return str;\n    const notation = trimmedStr.match(eNotationRegx); \n    if(notation){\n        let sign = notation[1] || \"\";\n        const eChar = notation[3].indexOf(\"e\") === -1 ? \"E\" : \"e\";\n        const leadingZeros = notation[2];\n        const eAdjacentToLeadingZeros = sign ? // 0E.\n            str[leadingZeros.length+1] === eChar \n            : str[leadingZeros.length] === eChar;\n\n        if(leadingZeros.length > 1 && eAdjacentToLeadingZeros) return str;\n        else if(leadingZeros.length === 1 \n            && (notation[3].startsWith(`.${eChar}`) || notation[3][0] === eChar)){\n                return Number(trimmedStr);\n        }else if(options.leadingZeros && !eAdjacentToLeadingZeros){ //accept with leading zeros\n            //remove leading 0s\n            trimmedStr = (notation[1] || \"\") + notation[3];\n            return Number(trimmedStr);\n        }else return str;\n    }else{\n        return str;\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substring(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\n\nfunction parse_int(numStr, base){\n    //polyfill\n    if(parseInt) return parseInt(numStr, base);\n    else if(Number.parseInt) return Number.parseInt(numStr, base);\n    else if(window && window.parseInt) return window.parseInt(numStr, base);\n    else throw new Error(\"parseInt, Number.parseInt, window.parseInt are not supported\")\n}","'use strict';\n///@ts-check\n\nimport {getAllMatches, isExist} from '../util.js';\nimport xmlNode from './xmlNode.js';\nimport readDocType from './DocTypeReader.js';\nimport toNumber from \"strnum\";\nimport getIgnoreAttributesFn from \"../ignoreAttributes.js\";\n\n// const regx =\n//   '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n//   .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nexport default class OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n      \"num_dec\": { regex: /&#([0-9]{1,7});/g, val : (_, str) => String.fromCodePoint(Number.parseInt(str, 10)) },\n      \"num_hex\": { regex: /&#x([0-9a-fA-F]{1,6});/g, val : (_, str) => String.fromCodePoint(Number.parseInt(str, 16)) },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n    this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes)\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (this.options.ignoreAttributes !== true && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      if (this.ignoreAttributesFn(attrName, jPath)) {\n        continue\n      }\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath, i);\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);\n        if(val == undefined) val = \"\";\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        const rawTagName = result.rawTagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        const startIndex = i;\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            \n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${rawTagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath, startIndex);\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath, startIndex);\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath, startIndex);\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath, startIndex){\n  // unset startIndex if not requested\n  if (!this.options.captureMetaData) startIndex = undefined;\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  } else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode, startIndex);\n  }else{\n    currentNode.addChild(childNode, startIndex);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = currentNode.child.length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substring(0, separatorIndex);\n    tagExp = tagExp.substring(separatorIndex + 1).trimStart();\n  }\n\n  const rawTagName = tagName;\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n    rawTagName: rawTagName,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n","'use strict';\n\nimport XmlNode from './xmlNode.js';\n\nconst METADATA_SYMBOL = XmlNode.getMetaDataSymbol();\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nexport default function prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n      if (tagObj[METADATA_SYMBOL] !== undefined) {\n        val[METADATA_SYMBOL] = tagObj[METADATA_SYMBOL]; // copy over metadata\n      }\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","import { buildOptions} from './OptionsBuilder.js';\nimport OrderedObjParser from './OrderedObjParser.js';\nimport prettify from './node2json.js';\nimport {validate} from \"../validator.js\";\nimport XmlNode from './xmlNode.js';\n\nexport default class XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n\n    /**\n     * Returns a Symbol that can be used to access the metadata\n     * property on a node.\n     * \n     * If Symbol is not available in the environment, an ordinary property is used\n     * and the name of the property is here returned.\n     * \n     * The XMLMetaData property is only present when `captureMetaData`\n     * is true in the options.\n     */\n    static getMetaDataSymbol() {\n        return XmlNode.getMetaDataSymbol();\n    }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { XMLBuilder, XMLParser, XMLValidator } from \"fast-xml-parser\";\nimport { XML_ATTRKEY, XML_CHARKEY, type XmlOptions } from \"./xml.common.js\";\n\nfunction getCommonOptions(options: XmlOptions): {\n  attributesGroupName: string;\n  textNodeName: string;\n  ignoreAttributes: boolean;\n  suppressBooleanAttributes: boolean;\n} {\n  return {\n    attributesGroupName: XML_ATTRKEY,\n    textNodeName: options.xmlCharKey ?? XML_CHARKEY,\n    ignoreAttributes: false,\n    suppressBooleanAttributes: false,\n  };\n}\n\nfunction getSerializerOptions(options: XmlOptions = {}): {\n  attributesGroupName: string;\n  textNodeName: string;\n  ignoreAttributes: boolean;\n  suppressBooleanAttributes: boolean;\n  attributeNamePrefix: string;\n  format: boolean;\n  suppressEmptyNode: boolean;\n  indentBy: string;\n  rootNodeName: string;\n  cdataPropName: string;\n} {\n  return {\n    ...getCommonOptions(options),\n    attributeNamePrefix: \"@_\",\n    format: true,\n    suppressEmptyNode: true,\n    indentBy: \"\",\n    rootNodeName: options.rootName ?? \"root\",\n    cdataPropName: options.cdataPropName ?? \"__cdata\",\n  };\n}\n\nfunction getParserOptions(options: XmlOptions = {}): {\n  attributesGroupName: string;\n  textNodeName: string;\n  ignoreAttributes: boolean;\n  suppressBooleanAttributes: boolean;\n  parseAttributeValue: boolean;\n  parseTagValue: boolean;\n  attributeNamePrefix: string;\n  stopNodes?: string[];\n  processEntities: boolean;\n  trimValues: boolean;\n} {\n  return {\n    ...getCommonOptions(options),\n    parseAttributeValue: false,\n    parseTagValue: false,\n    attributeNamePrefix: \"\",\n    stopNodes: options.stopNodes,\n    processEntities: true,\n    trimValues: false,\n  };\n}\n/**\n * Converts given JSON object to XML string\n * @param obj - JSON object to be converted into XML string\n * @param opts - Options that govern the XML building of given JSON object\n * `rootName` indicates the name of the root element in the resulting XML\n */\nexport function stringifyXML(obj: unknown, opts: XmlOptions = {}): string {\n  const parserOptions = getSerializerOptions(opts);\n  const j2x = new XMLBuilder(parserOptions);\n\n  const node = { [parserOptions.rootNodeName]: obj };\n\n  const xmlData: string = j2x.build(node);\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>${xmlData}`.replace(/\\n/g, \"\");\n}\n\n/**\n * Converts given XML string into JSON\n * @param str - String containing the XML content to be parsed into JSON\n * @param opts - Options that govern the parsing of given xml string\n * `includeRoot` indicates whether the root element is to be included or not in the output\n */\nexport async function parseXML(str: string, opts: XmlOptions = {}): Promise<any> {\n  if (!str) {\n    throw new Error(\"Document is empty\");\n  }\n\n  const validation = XMLValidator.validate(str);\n\n  if (validation !== true) {\n    throw validation;\n  }\n\n  const parser = new XMLParser(getParserOptions(opts));\n  const parsedXml = parser.parse(str);\n\n  // Remove the <?xml version=\"...\" ?> node.\n  // This is a change in behavior on fxp v4. Issue #424\n  if (parsedXml[\"?xml\"]) {\n    delete parsedXml[\"?xml\"];\n  }\n\n  if (!opts.includeRoot) {\n    for (const key of Object.keys(parsedXml)) {\n      const value = parsedXml[key];\n      return typeof value === \"object\" ? { ...value } : value;\n    }\n  }\n\n  return parsedXml;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Default key used to access the XML attributes.\n */\nexport const XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nexport const XML_CHARKEY = \"_\";\n\n/**\n * Options to govern behavior of xml parser and builder.\n */\nexport interface XmlOptions {\n  /**\n   * indicates the name of the root element in the resulting XML when building XML.\n   */\n  rootName?: string;\n  /**\n   * indicates whether the root element is to be included or not in the output when parsing XML.\n   */\n  includeRoot?: boolean;\n  /**\n   * key used to access the XML value content when parsing XML.\n   */\n  xmlCharKey?: string;\n\n  /**\n   * property name for a CDATA section.\n   */\n  cdataPropName?: string;\n\n  /**\n   * XML nodes to exclude from parsing.\n   */\n  stopNodes?: string[];\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The `@azure/logger` configuration for this package.\n */\nexport const logger = createClientLogger(\"storage-blob\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  HttpPipelineLogLevel,\n  RequestPolicy,\n  RequestPolicyOptionsLike,\n  WebResourceLike,\n  CompatResponse as HttpOperationResponse,\n} from \"@azure/core-http-compat\";\n\n/**\n * The base class from which all request policies derive.\n */\nexport abstract class BaseRequestPolicy implements RequestPolicy {\n  /**\n   * The main method to implement that manipulates a request/response.\n   */\n  protected constructor(\n    /**\n     * The next policy in the pipeline. Each policy is responsible for executing the next one if the request is to continue through the pipeline.\n     */\n    readonly _nextPolicy: RequestPolicy,\n    /**\n     * The options that can be passed to a given request policy.\n     */\n    readonly _options: RequestPolicyOptionsLike,\n  ) {}\n\n  /**\n   * Sends a network request based on the given web resource.\n   * @param webResource - A {@link WebResourceLike} that describes a HTTP request to be made.\n   */\n  public abstract sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse>;\n\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  public shouldLog(logLevel: HttpPipelineLogLevel): boolean {\n    return this._options.shouldLog(logLevel);\n  }\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meat the logger's threshold, then nothing will be logged.\n   * @param logLevel - The log level of this log.\n   * @param message - The message of this log.\n   */\n  public log(logLevel: HttpPipelineLogLevel, message: string): void {\n    this._options.log(logLevel, message);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport const SDK_VERSION: string = \"12.27.0\";\nexport const SERVICE_VERSION: string = \"2025-05-05\";\n\nexport const BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES: number = 256 * 1024 * 1024; // 256MB\nexport const BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES: number = 4000 * 1024 * 1024; // 4000MB\nexport const BLOCK_BLOB_MAX_BLOCKS: number = 50000;\nexport const DEFAULT_BLOCK_BUFFER_SIZE_BYTES: number = 8 * 1024 * 1024; // 8MB\nexport const DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES: number = 4 * 1024 * 1024; // 4MB\nexport const DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS: number = 5;\n\nexport const REQUEST_TIMEOUT: number = 100 * 1000; // In ms\n/**\n * The OAuth scope to use with Azure Storage.\n */\nexport const StorageOAuthScopes: string | string[] = \"https://storage.azure.com/.default\";\n\nexport const URLConstants = {\n  Parameters: {\n    FORCE_BROWSER_NO_CACHE: \"_\",\n    SIGNATURE: \"sig\",\n    SNAPSHOT: \"snapshot\",\n    VERSIONID: \"versionid\",\n    TIMEOUT: \"timeout\",\n  },\n};\n\nexport const HTTPURLConnection = {\n  HTTP_ACCEPTED: 202,\n  HTTP_CONFLICT: 409,\n  HTTP_NOT_FOUND: 404,\n  HTTP_PRECON_FAILED: 412,\n  HTTP_RANGE_NOT_SATISFIABLE: 416,\n};\n\nexport const HeaderConstants = {\n  AUTHORIZATION: \"Authorization\",\n  AUTHORIZATION_SCHEME: \"Bearer\",\n  CONTENT_ENCODING: \"Content-Encoding\",\n  CONTENT_ID: \"Content-ID\",\n  CONTENT_LANGUAGE: \"Content-Language\",\n  CONTENT_LENGTH: \"Content-Length\",\n  CONTENT_MD5: \"Content-Md5\",\n  CONTENT_TRANSFER_ENCODING: \"Content-Transfer-Encoding\",\n  CONTENT_TYPE: \"Content-Type\",\n  COOKIE: \"Cookie\",\n  DATE: \"date\",\n  IF_MATCH: \"if-match\",\n  IF_MODIFIED_SINCE: \"if-modified-since\",\n  IF_NONE_MATCH: \"if-none-match\",\n  IF_UNMODIFIED_SINCE: \"if-unmodified-since\",\n  PREFIX_FOR_STORAGE: \"x-ms-\",\n  RANGE: \"Range\",\n  USER_AGENT: \"User-Agent\",\n  X_MS_CLIENT_REQUEST_ID: \"x-ms-client-request-id\",\n  X_MS_COPY_SOURCE: \"x-ms-copy-source\",\n  X_MS_DATE: \"x-ms-date\",\n  X_MS_ERROR_CODE: \"x-ms-error-code\",\n  X_MS_VERSION: \"x-ms-version\",\n  X_MS_CopySourceErrorCode: \"x-ms-copy-source-error-code\",\n};\n\nexport const ETagNone = \"\";\nexport const ETagAny = \"*\";\n\nexport const SIZE_1_MB = 1 * 1024 * 1024;\nexport const BATCH_MAX_REQUEST = 256;\nexport const BATCH_MAX_PAYLOAD_IN_BYTES = 4 * SIZE_1_MB;\nexport const HTTP_LINE_ENDING = \"\\r\\n\";\nexport const HTTP_VERSION_1_1 = \"HTTP/1.1\";\n\nexport const EncryptionAlgorithmAES25 = \"AES256\";\n\nexport const DevelopmentConnectionString = `DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;`;\n\nexport const StorageBlobLoggingAllowedHeaderNames = [\n  \"Access-Control-Allow-Origin\",\n  \"Cache-Control\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"Request-Id\",\n  \"traceparent\",\n  \"Transfer-Encoding\",\n  \"User-Agent\",\n  \"x-ms-client-request-id\",\n  \"x-ms-date\",\n  \"x-ms-error-code\",\n  \"x-ms-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-version\",\n  \"Accept-Ranges\",\n  \"Content-Disposition\",\n  \"Content-Encoding\",\n  \"Content-Language\",\n  \"Content-MD5\",\n  \"Content-Range\",\n  \"ETag\",\n  \"Last-Modified\",\n  \"Server\",\n  \"Vary\",\n  \"x-ms-content-crc64\",\n  \"x-ms-copy-action\",\n  \"x-ms-copy-completion-time\",\n  \"x-ms-copy-id\",\n  \"x-ms-copy-progress\",\n  \"x-ms-copy-status\",\n  \"x-ms-has-immutability-policy\",\n  \"x-ms-has-legal-hold\",\n  \"x-ms-lease-state\",\n  \"x-ms-lease-status\",\n  \"x-ms-range\",\n  \"x-ms-request-server-encrypted\",\n  \"x-ms-server-encrypted\",\n  \"x-ms-snapshot\",\n  \"x-ms-source-range\",\n  \"If-Match\",\n  \"If-Modified-Since\",\n  \"If-None-Match\",\n  \"If-Unmodified-Since\",\n  \"x-ms-access-tier\",\n  \"x-ms-access-tier-change-time\",\n  \"x-ms-access-tier-inferred\",\n  \"x-ms-account-kind\",\n  \"x-ms-archive-status\",\n  \"x-ms-blob-append-offset\",\n  \"x-ms-blob-cache-control\",\n  \"x-ms-blob-committed-block-count\",\n  \"x-ms-blob-condition-appendpos\",\n  \"x-ms-blob-condition-maxsize\",\n  \"x-ms-blob-content-disposition\",\n  \"x-ms-blob-content-encoding\",\n  \"x-ms-blob-content-language\",\n  \"x-ms-blob-content-length\",\n  \"x-ms-blob-content-md5\",\n  \"x-ms-blob-content-type\",\n  \"x-ms-blob-public-access\",\n  \"x-ms-blob-sequence-number\",\n  \"x-ms-blob-type\",\n  \"x-ms-copy-destination-snapshot\",\n  \"x-ms-creation-time\",\n  \"x-ms-default-encryption-scope\",\n  \"x-ms-delete-snapshots\",\n  \"x-ms-delete-type-permanent\",\n  \"x-ms-deny-encryption-scope-override\",\n  \"x-ms-encryption-algorithm\",\n  \"x-ms-if-sequence-number-eq\",\n  \"x-ms-if-sequence-number-le\",\n  \"x-ms-if-sequence-number-lt\",\n  \"x-ms-incremental-copy\",\n  \"x-ms-lease-action\",\n  \"x-ms-lease-break-period\",\n  \"x-ms-lease-duration\",\n  \"x-ms-lease-id\",\n  \"x-ms-lease-time\",\n  \"x-ms-page-write\",\n  \"x-ms-proposed-lease-id\",\n  \"x-ms-range-get-content-md5\",\n  \"x-ms-rehydrate-priority\",\n  \"x-ms-sequence-number-action\",\n  \"x-ms-sku-name\",\n  \"x-ms-source-content-md5\",\n  \"x-ms-source-if-match\",\n  \"x-ms-source-if-modified-since\",\n  \"x-ms-source-if-none-match\",\n  \"x-ms-source-if-unmodified-since\",\n  \"x-ms-tag-count\",\n  \"x-ms-encryption-key-sha256\",\n  \"x-ms-copy-source-error-code\",\n  \"x-ms-copy-source-status-code\",\n  \"x-ms-if-tags\",\n  \"x-ms-source-if-tags\",\n];\n\nexport const StorageBlobLoggingAllowedQueryParameters = [\n  \"comp\",\n  \"maxresults\",\n  \"rscc\",\n  \"rscd\",\n  \"rsce\",\n  \"rscl\",\n  \"rsct\",\n  \"se\",\n  \"si\",\n  \"sip\",\n  \"sp\",\n  \"spr\",\n  \"sr\",\n  \"srt\",\n  \"ss\",\n  \"st\",\n  \"sv\",\n  \"include\",\n  \"marker\",\n  \"prefix\",\n  \"copyid\",\n  \"restype\",\n  \"blockid\",\n  \"blocklisttype\",\n  \"delimiter\",\n  \"prevsnapshot\",\n  \"ske\",\n  \"skoid\",\n  \"sks\",\n  \"skt\",\n  \"sktid\",\n  \"skv\",\n  \"snapshot\",\n];\n\nexport const BlobUsesCustomerSpecifiedEncryptionMsg = \"BlobUsesCustomerSpecifiedEncryption\";\nexport const BlobDoesNotUseCustomerSpecifiedEncryption =\n  \"BlobDoesNotUseCustomerSpecifiedEncryption\";\n\n/// List of ports used for path style addressing.\n/// Path style addressing means that storage account is put in URI's Path segment in instead of in host.\nexport const PathStylePorts = [\n  \"10000\",\n  \"10001\",\n  \"10002\",\n  \"10003\",\n  \"10004\",\n  \"10100\",\n  \"10101\",\n  \"10102\",\n  \"10103\",\n  \"10104\",\n  \"11000\",\n  \"11001\",\n  \"11002\",\n  \"11003\",\n  \"11004\",\n  \"11100\",\n  \"11101\",\n  \"11102\",\n  \"11103\",\n  \"11104\",\n];\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport type { HttpHeaders } from \"@azure/core-rest-pipeline\";\nimport { createHttpHeaders } from \"@azure/core-rest-pipeline\";\nimport { isNode } from \"@azure/core-util\";\n\nimport type {\n  BlobQueryArrowConfiguration,\n  BlobQueryCsvTextConfiguration,\n  BlobQueryJsonTextConfiguration,\n  BlobQueryParquetConfiguration,\n} from \"../Clients\";\nimport type {\n  QuerySerialization,\n  BlobTags,\n  BlobName,\n  ListBlobsFlatSegmentResponse,\n  ListBlobsHierarchySegmentResponse,\n  PageRange,\n  ClearRange,\n} from \"../generated/src/models\";\nimport {\n  DevelopmentConnectionString,\n  HeaderConstants,\n  PathStylePorts,\n  URLConstants,\n} from \"./constants\";\nimport type {\n  Tags,\n  ObjectReplicationPolicy,\n  ObjectReplicationRule,\n  ObjectReplicationStatus,\n  HttpAuthorization,\n} from \"../models\";\nimport type {\n  ListBlobsFlatSegmentResponseModel,\n  BlobItemInternal as BlobItemInternalModel,\n  ListBlobsHierarchySegmentResponseModel,\n  BlobPrefix as BlobPrefixModel,\n  PageBlobGetPageRangesDiffResponseModel,\n  PageRangeInfo,\n} from \"../generatedModels\";\nimport type { HttpHeadersLike, WebResourceLike } from \"@azure/core-http-compat\";\n\n/**\n * Reserved URL characters must be properly escaped for Storage services like Blob or File.\n *\n * ## URL encode and escape strategy for JS SDKs\n *\n * When customers pass a URL string into XxxClient classes constructor, the URL string may already be URL encoded or not.\n * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL\n * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XxxClient constructors.\n *\n * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.\n *\n * This is what legacy V2 SDK does, simple and works for most of the cases.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%253A\" and send to server. A blob named \"b%3A\" will be created.\n *\n * But this strategy will make it not possible to create a blob with \"?\" in it's name. Because when customer URL string is\n * \"http://account.blob.core.windows.net/con/blob?name\", the \"?name\" will be treated as URL paramter instead of blob name.\n * If customer URL string is \"http://account.blob.core.windows.net/con/blob%3Fname\", a blob named \"blob%3Fname\" will be created.\n * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.\n * We cannot accept a SDK cannot create a blob name with \"?\". So we implement strategy two:\n *\n * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.\n *\n * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will escape \":\" like \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%3A\" to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%253A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%253A\" to server. A blob named \"b%3A\" will be created.\n *\n * This strategy gives us flexibility to create with any special characters. But \"%\" will be treated as a special characters, if the URL string\n * is not encoded, there shouldn't a \"%\" in the URL string, otherwise the URL is not a valid URL.\n * If customer needs to create a blob with \"%\" in it's blob name, use \"%25\" instead of \"%\". Just like above 3rd sample.\n * And following URL strings are invalid:\n * - \"http://account.blob.core.windows.net/con/b%\"\n * - \"http://account.blob.core.windows.net/con/b%2\"\n * - \"http://account.blob.core.windows.net/con/b%G\"\n *\n * Another special character is \"?\", use \"%2F\" to represent a blob name with \"?\" in a URL string.\n *\n * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `containerClient.getBlobClient(blobName)`\n *\n * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.\n *\n * @see https://learn.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n * @see https://learn.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\n *\n * @param url -\n */\nexport function escapeURLPath(url: string): string {\n  const urlParsed = new URL(url);\n\n  let path = urlParsed.pathname;\n  path = path || \"/\";\n\n  path = escape(path);\n  urlParsed.pathname = path;\n\n  return urlParsed.toString();\n}\n\nexport interface ConnectionString {\n  kind: \"AccountConnString\" | \"SASConnString\";\n  url: string;\n  accountName: string;\n  accountKey?: any;\n  accountSas?: string;\n  proxyUri?: string; // Development Connection String may contain proxyUri\n}\n\nfunction getProxyUriFromDevConnString(connectionString: string): string {\n  // Development Connection String\n  // https://learn.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string#connect-to-the-emulator-account-using-the-well-known-account-name-and-key\n  let proxyUri = \"\";\n  if (connectionString.search(\"DevelopmentStorageProxyUri=\") !== -1) {\n    // CONNECTION_STRING=UseDevelopmentStorage=true;DevelopmentStorageProxyUri=http://myProxyUri\n    const matchCredentials = connectionString.split(\";\");\n    for (const element of matchCredentials) {\n      if (element.trim().startsWith(\"DevelopmentStorageProxyUri=\")) {\n        proxyUri = element.trim().match(\"DevelopmentStorageProxyUri=(.*)\")![1];\n      }\n    }\n  }\n  return proxyUri;\n}\n\nexport function getValueInConnString(\n  connectionString: string,\n  argument:\n    | \"BlobEndpoint\"\n    | \"AccountName\"\n    | \"AccountKey\"\n    | \"DefaultEndpointsProtocol\"\n    | \"EndpointSuffix\"\n    | \"SharedAccessSignature\",\n): string {\n  const elements = connectionString.split(\";\");\n  for (const element of elements) {\n    if (element.trim().startsWith(argument)) {\n      return element.trim().match(argument + \"=(.*)\")![1];\n    }\n  }\n  return \"\";\n}\n\n/**\n * Extracts the parts of an Azure Storage account connection string.\n *\n * @param connectionString - Connection string.\n * @returns String key value pairs of the storage account's url and credentials.\n */\nexport function extractConnectionStringParts(connectionString: string): ConnectionString {\n  let proxyUri = \"\";\n\n  if (connectionString.startsWith(\"UseDevelopmentStorage=true\")) {\n    // Development connection string\n    proxyUri = getProxyUriFromDevConnString(connectionString);\n    connectionString = DevelopmentConnectionString;\n  }\n\n  // Matching BlobEndpoint in the Account connection string\n  let blobEndpoint = getValueInConnString(connectionString, \"BlobEndpoint\");\n  // Slicing off '/' at the end if exists\n  // (The methods that use `extractConnectionStringParts` expect the url to not have `/` at the end)\n  blobEndpoint = blobEndpoint.endsWith(\"/\") ? blobEndpoint.slice(0, -1) : blobEndpoint;\n\n  if (\n    connectionString.search(\"DefaultEndpointsProtocol=\") !== -1 &&\n    connectionString.search(\"AccountKey=\") !== -1\n  ) {\n    // Account connection string\n\n    let defaultEndpointsProtocol = \"\";\n    let accountName = \"\";\n    let accountKey = Buffer.from(\"accountKey\", \"base64\");\n    let endpointSuffix = \"\";\n\n    // Get account name and key\n    accountName = getValueInConnString(connectionString, \"AccountName\");\n    accountKey = Buffer.from(getValueInConnString(connectionString, \"AccountKey\"), \"base64\");\n\n    if (!blobEndpoint) {\n      // BlobEndpoint is not present in the Account connection string\n      // Can be obtained from `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`\n\n      defaultEndpointsProtocol = getValueInConnString(connectionString, \"DefaultEndpointsProtocol\");\n      const protocol = defaultEndpointsProtocol!.toLowerCase();\n      if (protocol !== \"https\" && protocol !== \"http\") {\n        throw new Error(\n          \"Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'\",\n        );\n      }\n\n      endpointSuffix = getValueInConnString(connectionString, \"EndpointSuffix\");\n      if (!endpointSuffix) {\n        throw new Error(\"Invalid EndpointSuffix in the provided Connection String\");\n      }\n      blobEndpoint = `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;\n    }\n\n    if (!accountName) {\n      throw new Error(\"Invalid AccountName in the provided Connection String\");\n    } else if (accountKey.length === 0) {\n      throw new Error(\"Invalid AccountKey in the provided Connection String\");\n    }\n\n    return {\n      kind: \"AccountConnString\",\n      url: blobEndpoint,\n      accountName,\n      accountKey,\n      proxyUri,\n    };\n  } else {\n    // SAS connection string\n\n    let accountSas = getValueInConnString(connectionString, \"SharedAccessSignature\");\n    let accountName = getValueInConnString(connectionString, \"AccountName\");\n    // if accountName is empty, try to read it from BlobEndpoint\n    if (!accountName) {\n      accountName = getAccountNameFromUrl(blobEndpoint);\n    }\n    if (!blobEndpoint) {\n      throw new Error(\"Invalid BlobEndpoint in the provided SAS Connection String\");\n    } else if (!accountSas) {\n      throw new Error(\"Invalid SharedAccessSignature in the provided SAS Connection String\");\n    }\n\n    // client constructors assume accountSas does *not* start with ?\n    if (accountSas.startsWith(\"?\")) {\n      accountSas = accountSas.substring(1);\n    }\n\n    return { kind: \"SASConnString\", url: blobEndpoint, accountName, accountSas };\n  }\n}\n\n/**\n * Internal escape method implemented Strategy Two mentioned in escapeURL() description.\n *\n * @param text -\n */\nfunction escape(text: string): string {\n  return encodeURIComponent(text)\n    .replace(/%2F/g, \"/\") // Don't escape for \"/\"\n    .replace(/'/g, \"%27\") // Escape for \"'\"\n    .replace(/\\+/g, \"%20\")\n    .replace(/%25/g, \"%\"); // Revert encoded \"%\"\n}\n\n/**\n * Append a string to URL path. Will remove duplicated \"/\" in front of the string\n * when URL path ends with a \"/\".\n *\n * @param url - Source URL string\n * @param name - String to be appended to URL\n * @returns An updated URL string\n */\nexport function appendToURLPath(url: string, name: string): string {\n  const urlParsed = new URL(url);\n\n  let path = urlParsed.pathname;\n  path = path ? (path.endsWith(\"/\") ? `${path}${name}` : `${path}/${name}`) : name;\n  urlParsed.pathname = path;\n\n  return urlParsed.toString();\n}\n\n/**\n * Set URL parameter name and value. If name exists in URL parameters, old value\n * will be replaced by name key. If not provide value, the parameter will be deleted.\n *\n * @param url - Source URL string\n * @param name - Parameter name\n * @param value - Parameter value\n * @returns An updated URL string\n */\nexport function setURLParameter(url: string, name: string, value?: string): string {\n  const urlParsed = new URL(url);\n  const encodedName = encodeURIComponent(name);\n  const encodedValue = value ? encodeURIComponent(value) : undefined;\n  // mutating searchParams will change the encoding, so we have to do this ourselves\n  const searchString = urlParsed.search === \"\" ? \"?\" : urlParsed.search;\n\n  const searchPieces: string[] = [];\n\n  for (const pair of searchString.slice(1).split(\"&\")) {\n    if (pair) {\n      const [key] = pair.split(\"=\", 2);\n      if (key !== encodedName) {\n        searchPieces.push(pair);\n      }\n    }\n  }\n  if (encodedValue) {\n    searchPieces.push(`${encodedName}=${encodedValue}`);\n  }\n\n  urlParsed.search = searchPieces.length ? `?${searchPieces.join(\"&\")}` : \"\";\n\n  return urlParsed.toString();\n}\n\n/**\n * Get URL parameter by name.\n *\n * @param url -\n * @param name -\n */\nexport function getURLParameter(url: string, name: string): string | string[] | undefined {\n  const urlParsed = new URL(url);\n  return urlParsed.searchParams.get(name) ?? undefined;\n}\n\n/**\n * Set URL host.\n *\n * @param url - Source URL string\n * @param host - New host string\n * @returns An updated URL string\n */\nexport function setURLHost(url: string, host: string): string {\n  const urlParsed = new URL(url);\n  urlParsed.hostname = host;\n  return urlParsed.toString();\n}\n\n/**\n * Get URL path from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLPath(url: string): string | undefined {\n  try {\n    const urlParsed = new URL(url);\n    return urlParsed.pathname;\n  } catch (e) {\n    return undefined;\n  }\n}\n\n/**\n * Get URL scheme from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLScheme(url: string): string | undefined {\n  try {\n    const urlParsed = new URL(url);\n    return urlParsed.protocol.endsWith(\":\") ? urlParsed.protocol.slice(0, -1) : urlParsed.protocol;\n  } catch (e) {\n    return undefined;\n  }\n}\n\n/**\n * Get URL path and query from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLPathAndQuery(url: string): string | undefined {\n  const urlParsed = new URL(url);\n  const pathString = urlParsed.pathname;\n  if (!pathString) {\n    throw new RangeError(\"Invalid url without valid path.\");\n  }\n\n  let queryString = urlParsed.search || \"\";\n  queryString = queryString.trim();\n  if (queryString !== \"\") {\n    queryString = queryString.startsWith(\"?\") ? queryString : `?${queryString}`; // Ensure query string start with '?'\n  }\n\n  return `${pathString}${queryString}`;\n}\n\n/**\n * Get URL query key value pairs from an URL string.\n *\n * @param url -\n */\nexport function getURLQueries(url: string): { [key: string]: string } {\n  let queryString = new URL(url).search;\n  if (!queryString) {\n    return {};\n  }\n\n  queryString = queryString.trim();\n  queryString = queryString.startsWith(\"?\") ? queryString.substring(1) : queryString;\n\n  let querySubStrings: string[] = queryString.split(\"&\");\n  querySubStrings = querySubStrings.filter((value: string) => {\n    const indexOfEqual = value.indexOf(\"=\");\n    const lastIndexOfEqual = value.lastIndexOf(\"=\");\n    return (\n      indexOfEqual > 0 && indexOfEqual === lastIndexOfEqual && lastIndexOfEqual < value.length - 1\n    );\n  });\n\n  const queries: { [key: string]: string } = {};\n  for (const querySubString of querySubStrings) {\n    const splitResults = querySubString.split(\"=\");\n    const key: string = splitResults[0];\n    const value: string = splitResults[1];\n    queries[key] = value;\n  }\n\n  return queries;\n}\n\n/**\n * Append a string to URL query.\n *\n * @param url - Source URL string.\n * @param queryParts - String to be appended to the URL query.\n * @returns An updated URL string.\n */\nexport function appendToURLQuery(url: string, queryParts: string): string {\n  const urlParsed = new URL(url);\n\n  let query = urlParsed.search;\n  if (query) {\n    query += \"&\" + queryParts;\n  } else {\n    query = queryParts;\n  }\n\n  urlParsed.search = query;\n  return urlParsed.toString();\n}\n\n/**\n * Rounds a date off to seconds.\n *\n * @param date -\n * @param withMilliseconds - If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;\n *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.\n * @returns Date string in ISO8061 format, with or without 7 milliseconds component\n */\nexport function truncatedISO8061Date(date: Date, withMilliseconds: boolean = true): string {\n  // Date.toISOString() will return like \"2018-10-29T06:34:36.139Z\"\n  const dateString = date.toISOString();\n\n  return withMilliseconds\n    ? dateString.substring(0, dateString.length - 1) + \"0000\" + \"Z\"\n    : dateString.substring(0, dateString.length - 5) + \"Z\";\n}\n\n/**\n * Base64 encode.\n *\n * @param content -\n */\nexport function base64encode(content: string): string {\n  return !isNode ? btoa(content) : Buffer.from(content).toString(\"base64\");\n}\n\n/**\n * Base64 decode.\n *\n * @param encodedString -\n */\nexport function base64decode(encodedString: string): string {\n  return !isNode ? atob(encodedString) : Buffer.from(encodedString, \"base64\").toString();\n}\n\n/**\n * Generate a 64 bytes base64 block ID string.\n *\n * @param blockIndex -\n */\nexport function generateBlockID(blockIDPrefix: string, blockIndex: number): string {\n  // To generate a 64 bytes base64 string, source string should be 48\n  const maxSourceStringLength = 48;\n\n  // A blob can have a maximum of 100,000 uncommitted blocks at any given time\n  const maxBlockIndexLength = 6;\n\n  const maxAllowedBlockIDPrefixLength = maxSourceStringLength - maxBlockIndexLength;\n\n  if (blockIDPrefix.length > maxAllowedBlockIDPrefixLength) {\n    blockIDPrefix = blockIDPrefix.slice(0, maxAllowedBlockIDPrefixLength);\n  }\n  const res =\n    blockIDPrefix +\n    padStart(blockIndex.toString(), maxSourceStringLength - blockIDPrefix.length, \"0\");\n  return base64encode(res);\n}\n\n/**\n * Delay specified time interval.\n *\n * @param timeInMs -\n * @param aborter -\n * @param abortError -\n */\nexport async function delay(\n  timeInMs: number,\n  aborter?: AbortSignalLike,\n  abortError?: Error,\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    /* eslint-disable-next-line prefer-const */\n    let timeout: any;\n\n    const abortHandler = () => {\n      if (timeout !== undefined) {\n        clearTimeout(timeout);\n      }\n      reject(abortError);\n    };\n\n    const resolveHandler = () => {\n      if (aborter !== undefined) {\n        aborter.removeEventListener(\"abort\", abortHandler);\n      }\n      resolve();\n    };\n\n    timeout = setTimeout(resolveHandler, timeInMs);\n\n    if (aborter !== undefined) {\n      aborter.addEventListener(\"abort\", abortHandler);\n    }\n  });\n}\n\n/**\n * String.prototype.padStart()\n *\n * @param currentString -\n * @param targetLength -\n * @param padString -\n */\nexport function padStart(\n  currentString: string,\n  targetLength: number,\n  padString: string = \" \",\n): string {\n  // @ts-expect-error: TS doesn't know this code needs to run downlevel sometimes\n  if (String.prototype.padStart) {\n    return currentString.padStart(targetLength, padString);\n  }\n\n  padString = padString || \" \";\n  if (currentString.length > targetLength) {\n    return currentString;\n  } else {\n    targetLength = targetLength - currentString.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + currentString;\n  }\n}\n\nexport function sanitizeURL(url: string): string {\n  let safeURL: string = url;\n  if (getURLParameter(safeURL, URLConstants.Parameters.SIGNATURE)) {\n    safeURL = setURLParameter(safeURL, URLConstants.Parameters.SIGNATURE, \"*****\");\n  }\n\n  return safeURL;\n}\n\nexport function sanitizeHeaders(originalHeader: HttpHeaders): HttpHeaders {\n  const headers: HttpHeaders = createHttpHeaders();\n  for (const [name, value] of originalHeader) {\n    if (name.toLowerCase() === HeaderConstants.AUTHORIZATION.toLowerCase()) {\n      headers.set(name, \"*****\");\n    } else if (name.toLowerCase() === HeaderConstants.X_MS_COPY_SOURCE) {\n      headers.set(name, sanitizeURL(value));\n    } else {\n      headers.set(name, value);\n    }\n  }\n\n  return headers;\n}\n/**\n * If two strings are equal when compared case insensitive.\n *\n * @param str1 -\n * @param str2 -\n */\nexport function iEqual(str1: string, str2: string): boolean {\n  return str1.toLocaleLowerCase() === str2.toLocaleLowerCase();\n}\n\n/**\n * Extracts account name from the url\n * @param url - url to extract the account name from\n * @returns with the account name\n */\nexport function getAccountNameFromUrl(url: string): string {\n  const parsedUrl = new URL(url);\n  let accountName;\n  try {\n    if (parsedUrl.hostname.split(\".\")[1] === \"blob\") {\n      // `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;\n      accountName = parsedUrl.hostname.split(\".\")[0];\n    } else if (isIpEndpointStyle(parsedUrl)) {\n      // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/\n      // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/\n      // .getPath() -> /devstoreaccount1/\n      accountName = parsedUrl.pathname.split(\"/\")[1];\n    } else {\n      // Custom domain case: \"https://customdomain.com/containername/blob\".\n      accountName = \"\";\n    }\n    return accountName;\n  } catch (error: any) {\n    throw new Error(\"Unable to extract accountName with provided information.\");\n  }\n}\n\nexport function isIpEndpointStyle(parsedUrl: URL): boolean {\n  const host = parsedUrl.host;\n\n  // Case 1: Ipv6, use a broad regex to find out candidates whose host contains two ':'.\n  // Case 2: localhost(:port) or host.docker.internal, use broad regex to match port part.\n  // Case 3: Ipv4, use broad regex which just check if host contains Ipv4.\n  // For valid host please refer to https://man7.org/linux/man-pages/man7/hostname.7.html.\n  return (\n    /^.*:.*:.*$|^(localhost|host.docker.internal)(:[0-9]+)?$|^(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])(\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])){3}(:[0-9]+)?$/.test(\n      host,\n    ) ||\n    (Boolean(parsedUrl.port) && PathStylePorts.includes(parsedUrl.port))\n  );\n}\n\n/**\n * Convert Tags to encoded string.\n *\n * @param tags -\n */\nexport function toBlobTagsString(tags?: Tags): string | undefined {\n  if (tags === undefined) {\n    return undefined;\n  }\n\n  const tagPairs = [];\n  for (const key in tags) {\n    if (Object.prototype.hasOwnProperty.call(tags, key)) {\n      const value = tags[key];\n      tagPairs.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n    }\n  }\n\n  return tagPairs.join(\"&\");\n}\n\n/**\n * Convert Tags type to BlobTags.\n *\n * @param tags -\n */\nexport function toBlobTags(tags?: Tags): BlobTags | undefined {\n  if (tags === undefined) {\n    return undefined;\n  }\n\n  const res: BlobTags = {\n    blobTagSet: [],\n  };\n\n  for (const key in tags) {\n    if (Object.prototype.hasOwnProperty.call(tags, key)) {\n      const value = tags[key];\n      res.blobTagSet.push({\n        key,\n        value,\n      });\n    }\n  }\n  return res;\n}\n\n/**\n * Covert BlobTags to Tags type.\n *\n * @param tags -\n */\nexport function toTags(tags?: BlobTags): Tags | undefined {\n  if (tags === undefined) {\n    return undefined;\n  }\n\n  const res: Tags = {};\n  for (const blobTag of tags.blobTagSet) {\n    res[blobTag.key] = blobTag.value;\n  }\n  return res;\n}\n\n/**\n * Convert BlobQueryTextConfiguration to QuerySerialization type.\n *\n * @param textConfiguration -\n */\nexport function toQuerySerialization(\n  textConfiguration?:\n    | BlobQueryJsonTextConfiguration\n    | BlobQueryCsvTextConfiguration\n    | BlobQueryArrowConfiguration\n    | BlobQueryParquetConfiguration,\n): QuerySerialization | undefined {\n  if (textConfiguration === undefined) {\n    return undefined;\n  }\n\n  switch (textConfiguration.kind) {\n    case \"csv\":\n      return {\n        format: {\n          type: \"delimited\",\n          delimitedTextConfiguration: {\n            columnSeparator: textConfiguration.columnSeparator || \",\",\n            fieldQuote: textConfiguration.fieldQuote || \"\",\n            recordSeparator: textConfiguration.recordSeparator,\n            escapeChar: textConfiguration.escapeCharacter || \"\",\n            headersPresent: textConfiguration.hasHeaders || false,\n          },\n        },\n      };\n    case \"json\":\n      return {\n        format: {\n          type: \"json\",\n          jsonTextConfiguration: {\n            recordSeparator: textConfiguration.recordSeparator,\n          },\n        },\n      };\n    case \"arrow\":\n      return {\n        format: {\n          type: \"arrow\",\n          arrowConfiguration: {\n            schema: textConfiguration.schema,\n          },\n        },\n      };\n    case \"parquet\":\n      return {\n        format: {\n          type: \"parquet\",\n        },\n      };\n\n    default:\n      throw Error(\"Invalid BlobQueryTextConfiguration.\");\n  }\n}\n\nexport function parseObjectReplicationRecord(\n  objectReplicationRecord?: Record<string, string>,\n): ObjectReplicationPolicy[] | undefined {\n  if (!objectReplicationRecord) {\n    return undefined;\n  }\n\n  if (\"policy-id\" in objectReplicationRecord) {\n    // If the dictionary contains a key with policy id, we are not required to do any parsing since\n    // the policy id should already be stored in the ObjectReplicationDestinationPolicyId.\n    return undefined;\n  }\n\n  const orProperties: ObjectReplicationPolicy[] = [];\n  for (const key in objectReplicationRecord) {\n    const ids = key.split(\"_\");\n    const policyPrefix = \"or-\";\n    if (ids[0].startsWith(policyPrefix)) {\n      ids[0] = ids[0].substring(policyPrefix.length);\n    }\n    const rule: ObjectReplicationRule = {\n      ruleId: ids[1],\n      replicationStatus: objectReplicationRecord[key] as ObjectReplicationStatus,\n    };\n    const policyIndex = orProperties.findIndex((policy) => policy.policyId === ids[0]);\n    if (policyIndex > -1) {\n      orProperties[policyIndex].rules.push(rule);\n    } else {\n      orProperties.push({\n        policyId: ids[0],\n        rules: [rule],\n      });\n    }\n  }\n  return orProperties;\n}\n\n/**\n * Attach a TokenCredential to an object.\n *\n * @param thing -\n * @param credential -\n */\nexport function attachCredential<T>(thing: T, credential: TokenCredential): T {\n  (thing as any).credential = credential;\n  return thing;\n}\n\nexport function httpAuthorizationToString(\n  httpAuthorization?: HttpAuthorization,\n): string | undefined {\n  return httpAuthorization ? httpAuthorization.scheme + \" \" + httpAuthorization.value : undefined;\n}\n\nexport function BlobNameToString(name: BlobName): string {\n  if (name.encoded) {\n    return decodeURIComponent(name.content!);\n  } else {\n    return name.content!;\n  }\n}\n\nexport function ConvertInternalResponseOfListBlobFlat(\n  internalResponse: ListBlobsFlatSegmentResponse,\n): ListBlobsFlatSegmentResponseModel {\n  return {\n    ...internalResponse,\n    segment: {\n      blobItems: internalResponse.segment.blobItems.map((blobItemInteral) => {\n        const blobItem: BlobItemInternalModel = {\n          ...blobItemInteral,\n          name: BlobNameToString(blobItemInteral.name),\n        };\n        return blobItem;\n      }),\n    },\n  };\n}\n\nexport function ConvertInternalResponseOfListBlobHierarchy(\n  internalResponse: ListBlobsHierarchySegmentResponse,\n): ListBlobsHierarchySegmentResponseModel {\n  return {\n    ...internalResponse,\n    segment: {\n      blobPrefixes: internalResponse.segment.blobPrefixes?.map((blobPrefixInternal) => {\n        const blobPrefix: BlobPrefixModel = {\n          ...blobPrefixInternal,\n          name: BlobNameToString(blobPrefixInternal.name),\n        };\n        return blobPrefix;\n      }),\n      blobItems: internalResponse.segment.blobItems.map((blobItemInteral) => {\n        const blobItem: BlobItemInternalModel = {\n          ...blobItemInteral,\n          name: BlobNameToString(blobItemInteral.name),\n        };\n        return blobItem;\n      }),\n    },\n  };\n}\n\nexport function* ExtractPageRangeInfoItems(\n  getPageRangesSegment: PageBlobGetPageRangesDiffResponseModel,\n): IterableIterator<PageRangeInfo> {\n  let pageRange: PageRange[] = [];\n  let clearRange: ClearRange[] = [];\n\n  if (getPageRangesSegment.pageRange) pageRange = getPageRangesSegment.pageRange;\n  if (getPageRangesSegment.clearRange) clearRange = getPageRangesSegment.clearRange;\n\n  let pageRangeIndex = 0;\n  let clearRangeIndex = 0;\n\n  while (pageRangeIndex < pageRange.length && clearRangeIndex < clearRange.length) {\n    if (pageRange[pageRangeIndex].start < clearRange[clearRangeIndex].start) {\n      yield {\n        start: pageRange[pageRangeIndex].start,\n        end: pageRange[pageRangeIndex].end,\n        isClear: false,\n      };\n      ++pageRangeIndex;\n    } else {\n      yield {\n        start: clearRange[clearRangeIndex].start,\n        end: clearRange[clearRangeIndex].end,\n        isClear: true,\n      };\n      ++clearRangeIndex;\n    }\n  }\n\n  for (; pageRangeIndex < pageRange.length; ++pageRangeIndex) {\n    yield {\n      start: pageRange[pageRangeIndex].start,\n      end: pageRange[pageRangeIndex].end,\n      isClear: false,\n    };\n  }\n\n  for (; clearRangeIndex < clearRange.length; ++clearRangeIndex) {\n    yield {\n      start: clearRange[clearRangeIndex].start,\n      end: clearRange[clearRangeIndex].end,\n      isClear: true,\n    };\n  }\n}\n\n/**\n * Escape the blobName but keep path separator ('/').\n */\nexport function EscapePath(blobName: string): string {\n  const split = blobName.split(\"/\");\n  for (let i = 0; i < split.length; i++) {\n    split[i] = encodeURIComponent(split[i]);\n  }\n  return split.join(\"/\");\n}\n\n/**\n * A representation of an HTTP response that\n * includes a reference to the request that\n * originated it.\n */\nexport interface HttpResponse {\n  /**\n   * The headers from the response.\n   */\n  headers: HttpHeadersLike;\n  /**\n   * The original request that resulted in this response.\n   */\n  request: WebResourceLike;\n  /**\n   * The HTTP status code returned from the service.\n   */\n  status: number;\n}\n\n/**\n * An object with a _response property that has\n * headers already parsed into a typed object.\n */\nexport interface ResponseWithHeaders<Headers> {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: Headers;\n  };\n}\n\n/**\n * An object with a _response property that has body\n * and headers already parsed into known types.\n */\nexport interface ResponseWithBody<Headers, Body> {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: Headers;\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: Body;\n  };\n}\n\n/**\n * An object with a simple _response property.\n */\nexport interface ResponseLike {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse;\n}\n\n/**\n * A type that represents an operation result with a known _response property.\n */\nexport type WithResponse<T, Headers = undefined, Body = undefined> = T &\n  (Body extends object\n    ? ResponseWithBody<Headers, Body>\n    : Headers extends object\n      ? ResponseWithHeaders<Headers>\n      : ResponseLike);\n\n/**\n * A typesafe helper for ensuring that a given response object has\n * the original _response attached.\n * @param response - A response object from calling a client operation\n * @returns The same object, but with known _response property\n */\nexport function assertResponse<T extends object, Headers = undefined, Body = undefined>(\n  response: T,\n): WithResponse<T, Headers, Body> {\n  if (`_response` in response) {\n    return response as WithResponse<T, Headers, Body>;\n  }\n\n  throw new TypeError(`Unexpected response object ${response}`);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport { AbortError } from \"@azure/abort-controller\";\n\nimport type {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  RequestPolicyFactory,\n  WebResourceLike as WebResource,\n  CompatResponse as HttpOperationResponse,\n} from \"@azure/core-http-compat\";\nimport { BaseRequestPolicy } from \"./RequestPolicy\";\nimport type { RestError } from \"@azure/core-rest-pipeline\";\n\nimport type { StorageRetryOptions } from \"../StorageRetryPolicyFactory\";\nimport { URLConstants } from \"../utils/constants\";\nimport { delay, setURLHost, setURLParameter } from \"../utils/utils.common\";\nimport { logger } from \"../log\";\n\n/**\n * A factory method used to generated a RetryPolicy factory.\n *\n * @param retryOptions -\n */\nexport function NewRetryPolicyFactory(retryOptions?: StorageRetryOptions): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy => {\n      return new StorageRetryPolicy(nextPolicy, options, retryOptions);\n    },\n  };\n}\n\n/**\n * RetryPolicy types.\n */\nexport enum StorageRetryPolicyType {\n  /**\n   * Exponential retry. Retry time delay grows exponentially.\n   */\n  EXPONENTIAL,\n  /**\n   * Linear retry. Retry time delay grows linearly.\n   */\n  FIXED,\n}\n\n// Default values of StorageRetryOptions\nconst DEFAULT_RETRY_OPTIONS: StorageRetryOptions = {\n  maxRetryDelayInMs: 120 * 1000,\n  maxTries: 4,\n  retryDelayInMs: 4 * 1000,\n  retryPolicyType: StorageRetryPolicyType.EXPONENTIAL,\n  secondaryHost: \"\",\n  tryTimeoutInMs: undefined, // Use server side default timeout strategy\n};\n\nconst RETRY_ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * Retry policy with exponential retry and linear retry implemented.\n */\nexport class StorageRetryPolicy extends BaseRequestPolicy {\n  /**\n   * RetryOptions.\n   */\n  private readonly retryOptions: StorageRetryOptions;\n\n  /**\n   * Creates an instance of RetryPolicy.\n   *\n   * @param nextPolicy -\n   * @param options -\n   * @param retryOptions -\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryOptions: StorageRetryOptions = DEFAULT_RETRY_OPTIONS,\n  ) {\n    super(nextPolicy, options);\n\n    // Initialize retry options\n    this.retryOptions = {\n      retryPolicyType: retryOptions.retryPolicyType\n        ? retryOptions.retryPolicyType\n        : DEFAULT_RETRY_OPTIONS.retryPolicyType,\n\n      maxTries:\n        retryOptions.maxTries && retryOptions.maxTries >= 1\n          ? Math.floor(retryOptions.maxTries)\n          : DEFAULT_RETRY_OPTIONS.maxTries,\n\n      tryTimeoutInMs:\n        retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0\n          ? retryOptions.tryTimeoutInMs\n          : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,\n\n      retryDelayInMs:\n        retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0\n          ? Math.min(\n              retryOptions.retryDelayInMs,\n              retryOptions.maxRetryDelayInMs\n                ? retryOptions.maxRetryDelayInMs\n                : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs!,\n            )\n          : DEFAULT_RETRY_OPTIONS.retryDelayInMs,\n\n      maxRetryDelayInMs:\n        retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0\n          ? retryOptions.maxRetryDelayInMs\n          : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs,\n\n      secondaryHost: retryOptions.secondaryHost\n        ? retryOptions.secondaryHost\n        : DEFAULT_RETRY_OPTIONS.secondaryHost,\n    };\n  }\n\n  /**\n   * Sends request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this.attemptSendRequest(request, false, 1);\n  }\n\n  /**\n   * Decide and perform next retry. Won't mutate request parameter.\n   *\n   * @param request -\n   * @param secondaryHas404 -  If attempt was against the secondary & it returned a StatusNotFound (404), then\n   *                                   the resource was not found. This may be due to replication delay. So, in this\n   *                                   case, we'll never try the secondary again for this operation.\n   * @param attempt -           How many retries has been attempted to performed, starting from 1, which includes\n   *                                   the attempt will be performed by this method call.\n   */\n  protected async attemptSendRequest(\n    request: WebResource,\n    secondaryHas404: boolean,\n    attempt: number,\n  ): Promise<HttpOperationResponse> {\n    const newRequest: WebResource = request.clone();\n\n    const isPrimaryRetry =\n      secondaryHas404 ||\n      !this.retryOptions.secondaryHost ||\n      !(request.method === \"GET\" || request.method === \"HEAD\" || request.method === \"OPTIONS\") ||\n      attempt % 2 === 1;\n\n    if (!isPrimaryRetry) {\n      newRequest.url = setURLHost(newRequest.url, this.retryOptions.secondaryHost!);\n    }\n\n    // Set the server-side timeout query parameter \"timeout=[seconds]\"\n    if (this.retryOptions.tryTimeoutInMs) {\n      newRequest.url = setURLParameter(\n        newRequest.url,\n        URLConstants.Parameters.TIMEOUT,\n        Math.floor(this.retryOptions.tryTimeoutInMs! / 1000).toString(),\n      );\n    }\n\n    let response: HttpOperationResponse | undefined;\n    try {\n      logger.info(`RetryPolicy: =====> Try=${attempt} ${isPrimaryRetry ? \"Primary\" : \"Secondary\"}`);\n      response = await this._nextPolicy.sendRequest(newRequest);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response)) {\n        return response;\n      }\n\n      secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n    } catch (err: any) {\n      logger.error(`RetryPolicy: Caught error, message: ${err.message}, code: ${err.code}`);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response, err)) {\n        throw err;\n      }\n    }\n\n    await this.delay(isPrimaryRetry, attempt, request.abortSignal);\n    return this.attemptSendRequest(request, secondaryHas404, ++attempt);\n  }\n\n  /**\n   * Decide whether to retry according to last HTTP response and retry counters.\n   *\n   * @param isPrimaryRetry -\n   * @param attempt -\n   * @param response -\n   * @param err -\n   */\n  protected shouldRetry(\n    isPrimaryRetry: boolean,\n    attempt: number,\n    response?: HttpOperationResponse,\n    err?: RestError,\n  ): boolean {\n    if (attempt >= this.retryOptions.maxTries!) {\n      logger.info(\n        `RetryPolicy: Attempt(s) ${attempt} >= maxTries ${this.retryOptions\n          .maxTries!}, no further try.`,\n      );\n      return false;\n    }\n\n    // Handle network failures, you may need to customize the list when you implement\n    // your own http client\n    const retriableErrors = [\n      \"ETIMEDOUT\",\n      \"ESOCKETTIMEDOUT\",\n      \"ECONNREFUSED\",\n      \"ECONNRESET\",\n      \"ENOENT\",\n      \"ENOTFOUND\",\n      \"TIMEOUT\",\n      \"EPIPE\",\n      \"REQUEST_SEND_ERROR\", // For default xhr based http client provided in ms-rest-js\n    ];\n    if (err) {\n      for (const retriableError of retriableErrors) {\n        if (\n          err.name.toUpperCase().includes(retriableError) ||\n          err.message.toUpperCase().includes(retriableError) ||\n          (err.code && err.code.toString().toUpperCase() === retriableError)\n        ) {\n          logger.info(`RetryPolicy: Network error ${retriableError} found, will retry.`);\n          return true;\n        }\n      }\n    }\n\n    // If attempt was against the secondary & it returned a StatusNotFound (404), then\n    // the resource was not found. This may be due to replication delay. So, in this\n    // case, we'll never try the secondary again for this operation.\n    if (response || err) {\n      const statusCode = response ? response.status : err ? err.statusCode : 0;\n      if (!isPrimaryRetry && statusCode === 404) {\n        logger.info(`RetryPolicy: Secondary access with 404, will retry.`);\n        return true;\n      }\n\n      // Server internal error or server timeout\n      if (statusCode === 503 || statusCode === 500) {\n        logger.info(`RetryPolicy: Will retry for status code ${statusCode}.`);\n        return true;\n      }\n    }\n\n    // [Copy source error code] Feature is pending on service side, skip retry on copy source error for now.\n    // if (response) {\n    //   // Retry select Copy Source Error Codes.\n    //   if (response?.status >= 400) {\n    //     const copySourceError = response.headers.get(HeaderConstants.X_MS_CopySourceErrorCode);\n    //     if (copySourceError !== undefined) {\n    //       switch (copySourceError) {\n    //         case \"InternalError\":\n    //         case \"OperationTimedOut\":\n    //         case \"ServerBusy\":\n    //           return true;\n    //       }\n    //     }\n    //   }\n    // }\n\n    if (err?.code === \"PARSE_ERROR\" && err?.message.startsWith(`Error \"Error: Unclosed root tag`)) {\n      logger.info(\n        \"RetryPolicy: Incomplete XML response likely due to service timeout, will retry.\",\n      );\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Delay a calculated time between retries.\n   *\n   * @param isPrimaryRetry -\n   * @param attempt -\n   * @param abortSignal -\n   */\n  private async delay(isPrimaryRetry: boolean, attempt: number, abortSignal?: AbortSignalLike) {\n    let delayTimeInMs: number = 0;\n\n    if (isPrimaryRetry) {\n      switch (this.retryOptions.retryPolicyType) {\n        case StorageRetryPolicyType.EXPONENTIAL:\n          delayTimeInMs = Math.min(\n            (Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs!,\n            this.retryOptions.maxRetryDelayInMs!,\n          );\n          break;\n        case StorageRetryPolicyType.FIXED:\n          delayTimeInMs = this.retryOptions.retryDelayInMs!;\n          break;\n      }\n    } else {\n      delayTimeInMs = Math.random() * 1000;\n    }\n\n    logger.info(`RetryPolicy: Delay for ${delayTimeInMs}ms`);\n    return delay(delayTimeInMs, abortSignal, RETRY_ABORT_ERROR);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  RequestPolicyFactory,\n} from \"@azure/core-http-compat\";\nimport { StorageRetryPolicy, StorageRetryPolicyType } from \"./policies/StorageRetryPolicy\";\n\nexport { StorageRetryPolicyType, StorageRetryPolicy };\n\n/**\n * Storage Blob retry options interface.\n */\nexport interface StorageRetryOptions {\n  /**\n   * Optional. StorageRetryPolicyType, default is exponential retry policy.\n   */\n  readonly retryPolicyType?: StorageRetryPolicyType;\n\n  /**\n   * Optional. Max try number of attempts, default is 4.\n   * A value of 1 means 1 try and no retries.\n   * A value smaller than 1 means default retry number of attempts.\n   */\n  readonly maxTries?: number;\n\n  /**\n   * Optional. Indicates the maximum time in ms allowed for any single try of an HTTP request.\n   * A value of zero or undefined means no default timeout on SDK client, Azure\n   * Storage server's default timeout policy will be used.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-blob-service-operations\n   */\n  readonly tryTimeoutInMs?: number;\n\n  /**\n   * Optional. Specifies the amount of delay to use before retrying an operation (default is 4s or 4 * 1000ms).\n   * The delay increases (exponentially or linearly) with each retry up to a maximum specified by\n   * maxRetryDelayInMs. If you specify 0, then you must also specify 0 for maxRetryDelayInMs.\n   */\n  readonly retryDelayInMs?: number;\n\n  /**\n   * Optional. Specifies the maximum delay allowed before retrying an operation (default is 120s or 120 * 1000ms).\n   * If you specify 0, then you must also specify 0 for retryDelayInMs.\n   */\n  readonly maxRetryDelayInMs?: number;\n\n  /**\n   * If a secondaryHost is specified, retries will be tried against this host. If secondaryHost is undefined\n   * (the default) then operations are not retried against another host.\n   *\n   * NOTE: Before setting this field, make sure you understand the issues around\n   * reading stale and potentially-inconsistent data at\n   * {@link https://learn.microsoft.com/en-us/azure/storage/common/storage-designing-ha-apps-with-ragrs}\n   */\n  readonly secondaryHost?: string;\n}\n\n/**\n * StorageRetryPolicyFactory is a factory class helping generating {@link StorageRetryPolicy} objects.\n */\nexport class StorageRetryPolicyFactory implements RequestPolicyFactory {\n  private retryOptions?: StorageRetryOptions;\n\n  /**\n   * Creates an instance of StorageRetryPolicyFactory.\n   * @param retryOptions -\n   */\n  constructor(retryOptions?: StorageRetryOptions) {\n    this.retryOptions = retryOptions;\n  }\n\n  /**\n   * Creates a StorageRetryPolicy object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy {\n    return new StorageRetryPolicy(nextPolicy, options, this.retryOptions);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { BaseRequestPolicy } from \"./RequestPolicy\";\nimport type {\n  WebResourceLike as WebResource,\n  CompatResponse as HttpOperationResponse,\n} from \"@azure/core-http-compat\";\n\n/**\n * Credential policy used to sign HTTP(S) requests before sending. This is an\n * abstract class.\n */\nexport abstract class CredentialPolicy extends BaseRequestPolicy {\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(this.signRequest(request));\n  }\n\n  /**\n   * Child classes must implement this method with request signing. This method\n   * will be executed in {@link sendRequest}.\n   *\n   * @param request -\n   */\n  protected signRequest(request: WebResource): WebResource {\n    // Child classes must override this method with request signing. This method\n    // will be executed in sendRequest().\n    return request;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/*\n * We need to imitate .Net culture-aware sorting, which is used in storage service.\n * Below tables contain sort-keys for en-US culture.\n */\nconst table_lv0 = new Uint32Array([\n  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x71c, 0x0, 0x71f, 0x721,\n  0x723, 0x725, 0x0, 0x0, 0x0, 0x72d, 0x803, 0x0, 0x0, 0x733, 0x0, 0xd03, 0xd1a, 0xd1c, 0xd1e,\n  0xd20, 0xd22, 0xd24, 0xd26, 0xd28, 0xd2a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe02, 0xe09, 0xe0a,\n  0xe1a, 0xe21, 0xe23, 0xe25, 0xe2c, 0xe32, 0xe35, 0xe36, 0xe48, 0xe51, 0xe70, 0xe7c, 0xe7e, 0xe89,\n  0xe8a, 0xe91, 0xe99, 0xe9f, 0xea2, 0xea4, 0xea6, 0xea7, 0xea9, 0x0, 0x0, 0x0, 0x743, 0x744, 0x748,\n  0xe02, 0xe09, 0xe0a, 0xe1a, 0xe21, 0xe23, 0xe25, 0xe2c, 0xe32, 0xe35, 0xe36, 0xe48, 0xe51, 0xe70,\n  0xe7c, 0xe7e, 0xe89, 0xe8a, 0xe91, 0xe99, 0xe9f, 0xea2, 0xea4, 0xea6, 0xea7, 0xea9, 0x0, 0x74c,\n  0x0, 0x750, 0x0,\n]);\nconst table_lv2 = new Uint32Array([\n  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12,\n  0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12,\n  0x12, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n]);\nconst table_lv4 = new Uint32Array([\n  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n  0x0, 0x8012, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8212, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n]);\n\nexport function compareHeader(lhs: string, rhs: string): number {\n  if (isLessThan(lhs, rhs)) return -1;\n\n  return 1;\n}\n\nfunction isLessThan(lhs: string, rhs: string): boolean {\n  const tables = [table_lv0, table_lv2, table_lv4];\n  let curr_level = 0;\n  let i = 0;\n  let j = 0;\n  while (curr_level < tables.length) {\n    if (curr_level === tables.length - 1 && i !== j) {\n      return i > j;\n    }\n    const weight1 = i < lhs.length ? tables[curr_level][lhs[i].charCodeAt(0)] : 0x1;\n    const weight2 = j < rhs.length ? tables[curr_level][rhs[j].charCodeAt(0)] : 0x1;\n    if (weight1 === 0x1 && weight2 === 0x1) {\n      i = 0;\n      j = 0;\n      ++curr_level;\n    } else if (weight1 === weight2) {\n      ++i;\n      ++j;\n    } else if (weight1 === 0) {\n      ++i;\n    } else if (weight2 === 0) {\n      ++j;\n    } else {\n      return weight1 < weight2;\n    }\n  }\n  return false;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  WebResourceLike as WebResource,\n} from \"@azure/core-http-compat\";\nimport type { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport { HeaderConstants } from \"../utils/constants\";\nimport { getURLPath, getURLQueries } from \"../utils/utils.common\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\nimport { compareHeader } from \"../utils/SharedKeyComparator\";\n\n/**\n * StorageSharedKeyCredentialPolicy is a policy used to sign HTTP request with a shared key.\n */\nexport class StorageSharedKeyCredentialPolicy extends CredentialPolicy {\n  /**\n   * Reference to StorageSharedKeyCredential which generates StorageSharedKeyCredentialPolicy\n   */\n  private readonly factory: StorageSharedKeyCredential;\n\n  /**\n   * Creates an instance of StorageSharedKeyCredentialPolicy.\n   * @param nextPolicy -\n   * @param options -\n   * @param factory -\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    factory: StorageSharedKeyCredential,\n  ) {\n    super(nextPolicy, options);\n    this.factory = factory;\n  }\n\n  /**\n   * Signs request.\n   *\n   * @param request -\n   */\n  protected signRequest(request: WebResource): WebResource {\n    request.headers.set(HeaderConstants.X_MS_DATE, new Date().toUTCString());\n\n    if (\n      request.body &&\n      (typeof request.body === \"string\" || (request.body as Buffer) !== undefined) &&\n      request.body.length > 0\n    ) {\n      request.headers.set(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(request.body));\n    }\n\n    const stringToSign: string =\n      [\n        request.method.toUpperCase(),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LANGUAGE),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_ENCODING),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LENGTH),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_MD5),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_TYPE),\n        this.getHeaderValueToSign(request, HeaderConstants.DATE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_NONE_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_UNMODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.RANGE),\n      ].join(\"\\n\") +\n      \"\\n\" +\n      this.getCanonicalizedHeadersString(request) +\n      this.getCanonicalizedResourceString(request);\n\n    const signature: string = this.factory.computeHMACSHA256(stringToSign);\n    request.headers.set(\n      HeaderConstants.AUTHORIZATION,\n      `SharedKey ${this.factory.accountName}:${signature}`,\n    );\n\n    // console.log(`[URL]:${request.url}`);\n    // console.log(`[HEADERS]:${request.headers.toString()}`);\n    // console.log(`[STRING TO SIGN]:${JSON.stringify(stringToSign)}`);\n    // console.log(`[KEY]: ${request.headers.get(HeaderConstants.AUTHORIZATION)}`);\n    return request;\n  }\n\n  /**\n   * Retrieve header value according to shared key sign rules.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n   *\n   * @param request -\n   * @param headerName -\n   */\n  private getHeaderValueToSign(request: WebResource, headerName: string): string {\n    const value = request.headers.get(headerName);\n\n    if (!value) {\n      return \"\";\n    }\n\n    // When using version 2015-02-21 or later, if Content-Length is zero, then\n    // set the Content-Length part of the StringToSign to an empty string.\n    // https://learn.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n    if (headerName === HeaderConstants.CONTENT_LENGTH && value === \"0\") {\n      return \"\";\n    }\n\n    return value;\n  }\n\n  /**\n   * To construct the CanonicalizedHeaders portion of the signature string, follow these steps:\n   * 1. Retrieve all headers for the resource that begin with x-ms-, including the x-ms-date header.\n   * 2. Convert each HTTP header name to lowercase.\n   * 3. Sort the headers lexicographically by header name, in ascending order.\n   *    Each header may appear only once in the string.\n   * 4. Replace any linear whitespace in the header value with a single space.\n   * 5. Trim any whitespace around the colon in the header.\n   * 6. Finally, append a new-line character to each canonicalized header in the resulting list.\n   *    Construct the CanonicalizedHeaders string by concatenating all headers in this list into a single string.\n   *\n   * @param request -\n   */\n  private getCanonicalizedHeadersString(request: WebResource): string {\n    let headersArray = request.headers.headersArray().filter((value) => {\n      return value.name.toLowerCase().startsWith(HeaderConstants.PREFIX_FOR_STORAGE);\n    });\n\n    headersArray.sort((a, b): number => {\n      return compareHeader(a.name.toLowerCase(), b.name.toLowerCase());\n    });\n\n    // Remove duplicate headers\n    headersArray = headersArray.filter((value, index, array) => {\n      if (index > 0 && value.name.toLowerCase() === array[index - 1].name.toLowerCase()) {\n        return false;\n      }\n      return true;\n    });\n\n    let canonicalizedHeadersStringToSign: string = \"\";\n    headersArray.forEach((header) => {\n      canonicalizedHeadersStringToSign += `${header.name\n        .toLowerCase()\n        .trimRight()}:${header.value.trimLeft()}\\n`;\n    });\n\n    return canonicalizedHeadersStringToSign;\n  }\n\n  /**\n   * Retrieves the webResource canonicalized resource string.\n   *\n   * @param request -\n   */\n  private getCanonicalizedResourceString(request: WebResource): string {\n    const path = getURLPath(request.url) || \"/\";\n\n    let canonicalizedResourceString: string = \"\";\n    canonicalizedResourceString += `/${this.factory.accountName}${path}`;\n\n    const queries = getURLQueries(request.url);\n    const lowercaseQueries: { [key: string]: string } = {};\n    if (queries) {\n      const queryKeys: string[] = [];\n      for (const key in queries) {\n        if (Object.prototype.hasOwnProperty.call(queries, key)) {\n          const lowercaseKey = key.toLowerCase();\n          lowercaseQueries[lowercaseKey] = queries[key];\n          queryKeys.push(lowercaseKey);\n        }\n      }\n\n      queryKeys.sort();\n      for (const key of queryKeys) {\n        canonicalizedResourceString += `\\n${key}:${decodeURIComponent(lowercaseQueries[key])}`;\n      }\n    }\n\n    return canonicalizedResourceString;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n} from \"@azure/core-http-compat\";\nimport type { CredentialPolicy } from \"../policies/CredentialPolicy\";\n\n/**\n * Credential is an abstract class for Azure Storage HTTP requests signing. This\n * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n */\nexport abstract class Credential implements RequestPolicyFactory {\n  /**\n   * Creates a RequestPolicy object.\n   *\n   * @param _nextPolicy -\n   * @param _options -\n   */\n  public create(_nextPolicy: RequestPolicy, _options: RequestPolicyOptions): RequestPolicy {\n    throw new Error(\"Method should be implemented in children classes.\");\n  }\n}\n\n/**\n * A factory function that creates a new CredentialPolicy that uses the provided nextPolicy.\n */\nexport type CredentialPolicyCreator = (\n  nextPolicy: RequestPolicy,\n  options: RequestPolicyOptions,\n) => CredentialPolicy;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createHmac } from \"crypto\";\nimport type {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n} from \"@azure/core-http-compat\";\n\nimport { StorageSharedKeyCredentialPolicy } from \"../policies/StorageSharedKeyCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * StorageSharedKeyCredential for account key authorization of Azure Storage service.\n */\nexport class StorageSharedKeyCredential extends Credential {\n  /**\n   * Azure Storage account name; readonly.\n   */\n  public readonly accountName: string;\n\n  /**\n   * Azure Storage account key; readonly.\n   */\n  private readonly accountKey: Buffer;\n\n  /**\n   * Creates an instance of StorageSharedKeyCredential.\n   * @param accountName -\n   * @param accountKey -\n   */\n  constructor(accountName: string, accountKey: string) {\n    super();\n    this.accountName = accountName;\n    this.accountKey = Buffer.from(accountKey, \"base64\");\n  }\n\n  /**\n   * Creates a StorageSharedKeyCredentialPolicy object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n  ): StorageSharedKeyCredentialPolicy {\n    return new StorageSharedKeyCredentialPolicy(nextPolicy, options, this);\n  }\n\n  /**\n   * Generates a hash signature for an HTTP request or for a SAS.\n   *\n   * @param stringToSign -\n   */\n  public computeHMACSHA256(stringToSign: string): string {\n    return createHmac(\"sha256\", this.accountKey).update(stringToSign, \"utf8\").digest(\"base64\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n} from \"@azure/core-http-compat\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources\n * or for use with Shared Access Signatures (SAS).\n */\nexport class AnonymousCredentialPolicy extends CredentialPolicy {\n  /**\n   * Creates an instance of AnonymousCredentialPolicy.\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n} from \"@azure/core-http-compat\";\n\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * AnonymousCredentialPolicy objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n */\nexport class AnonymousCredential extends Credential {\n  /**\n   * Creates an {@link AnonymousCredentialPolicy} object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n  ): AnonymousCredentialPolicy {\n    return new AnonymousCredentialPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient } from \"@azure/core-rest-pipeline\";\nimport { createDefaultHttpClient } from \"@azure/core-rest-pipeline\";\n\nlet _defaultHttpClient: HttpClient;\n\nexport function getCachedDefaultHttpClient(): HttpClient {\n  if (!_defaultHttpClient) {\n    _defaultHttpClient = createDefaultHttpClient();\n  }\n  return _defaultHttpClient;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport type {\n  PipelinePolicy,\n  PipelineRequest,\n  SendRequest,\n  PipelineResponse,\n} from \"@azure/core-rest-pipeline\";\nimport { isRestError, RestError } from \"@azure/core-rest-pipeline\";\nimport { getErrorMessage } from \"@azure/core-util\";\nimport type { StorageRetryOptions } from \"../StorageRetryPolicyFactory\";\nimport { URLConstants } from \"../utils/constants\";\nimport { delay, setURLHost, setURLParameter } from \"../utils/utils.common\";\nimport { logger } from \"../log\";\n\n/**\n * Name of the {@link storageRetryPolicy}\n */\nexport const storageRetryPolicyName = \"storageRetryPolicy\";\n\n/**\n * RetryPolicy types.\n */\nexport enum StorageRetryPolicyType {\n  /**\n   * Exponential retry. Retry time delay grows exponentially.\n   */\n  EXPONENTIAL,\n  /**\n   * Linear retry. Retry time delay grows linearly.\n   */\n  FIXED,\n}\n\n// Default values of StorageRetryOptions\nconst DEFAULT_RETRY_OPTIONS = {\n  maxRetryDelayInMs: 120 * 1000,\n  maxTries: 4,\n  retryDelayInMs: 4 * 1000,\n  retryPolicyType: StorageRetryPolicyType.EXPONENTIAL,\n  secondaryHost: \"\",\n  tryTimeoutInMs: undefined, // Use server side default timeout strategy\n} as const;\n\nconst retriableErrors = [\n  \"ETIMEDOUT\",\n  \"ESOCKETTIMEDOUT\",\n  \"ECONNREFUSED\",\n  \"ECONNRESET\",\n  \"ENOENT\",\n  \"ENOTFOUND\",\n  \"TIMEOUT\",\n  \"EPIPE\",\n  \"REQUEST_SEND_ERROR\",\n] as const;\n\nconst RETRY_ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * Retry policy with exponential retry and linear retry implemented.\n */\nexport function storageRetryPolicy(options: StorageRetryOptions = {}): PipelinePolicy {\n  const retryPolicyType = options.retryPolicyType ?? DEFAULT_RETRY_OPTIONS.retryPolicyType;\n  const maxTries = options.maxTries ?? DEFAULT_RETRY_OPTIONS.maxTries;\n  const retryDelayInMs = options.retryDelayInMs ?? DEFAULT_RETRY_OPTIONS.retryDelayInMs;\n  const maxRetryDelayInMs = options.maxRetryDelayInMs ?? DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs;\n  const secondaryHost = options.secondaryHost ?? DEFAULT_RETRY_OPTIONS.secondaryHost;\n  const tryTimeoutInMs = options.tryTimeoutInMs ?? DEFAULT_RETRY_OPTIONS.tryTimeoutInMs;\n\n  function shouldRetry({\n    isPrimaryRetry,\n    attempt,\n    response,\n    error,\n  }: {\n    isPrimaryRetry: boolean;\n    attempt: number;\n    response?: PipelineResponse;\n    error?: RestError;\n  }): boolean {\n    if (attempt >= maxTries) {\n      logger.info(`RetryPolicy: Attempt(s) ${attempt} >= maxTries ${maxTries}, no further try.`);\n      return false;\n    }\n    if (error) {\n      for (const retriableError of retriableErrors) {\n        if (\n          error.name.toUpperCase().includes(retriableError) ||\n          error.message.toUpperCase().includes(retriableError) ||\n          (error.code && error.code.toString().toUpperCase() === retriableError)\n        ) {\n          logger.info(`RetryPolicy: Network error ${retriableError} found, will retry.`);\n          return true;\n        }\n      }\n      if (\n        error?.code === \"PARSE_ERROR\" &&\n        error?.message.startsWith(`Error \"Error: Unclosed root tag`)\n      ) {\n        logger.info(\n          \"RetryPolicy: Incomplete XML response likely due to service timeout, will retry.\",\n        );\n        return true;\n      }\n    }\n\n    // If attempt was against the secondary & it returned a StatusNotFound (404), then\n    // the resource was not found. This may be due to replication delay. So, in this\n    // case, we'll never try the secondary again for this operation.\n    if (response || error) {\n      const statusCode = response?.status ?? error?.statusCode ?? 0;\n      if (!isPrimaryRetry && statusCode === 404) {\n        logger.info(`RetryPolicy: Secondary access with 404, will retry.`);\n        return true;\n      }\n\n      // Server internal error or server timeout\n      if (statusCode === 503 || statusCode === 500) {\n        logger.info(`RetryPolicy: Will retry for status code ${statusCode}.`);\n        return true;\n      }\n    }\n\n    // [Copy source error code] Feature is pending on service side, skip retry on copy source error for now.\n    // if (response) {\n    //   // Retry select Copy Source Error Codes.\n    //   if (response?.status >= 400) {\n    //     const copySourceError = response.headers.get(HeaderConstants.X_MS_CopySourceErrorCode);\n    //     if (copySourceError !== undefined) {\n    //       switch (copySourceError) {\n    //         case \"InternalError\":\n    //         case \"OperationTimedOut\":\n    //         case \"ServerBusy\":\n    //           return true;\n    //       }\n    //     }\n    //   }\n    // }\n\n    return false;\n  }\n  function calculateDelay(isPrimaryRetry: boolean, attempt: number): number {\n    let delayTimeInMs = 0;\n\n    if (isPrimaryRetry) {\n      switch (retryPolicyType) {\n        case StorageRetryPolicyType.EXPONENTIAL:\n          delayTimeInMs = Math.min(\n            (Math.pow(2, attempt - 1) - 1) * retryDelayInMs,\n            maxRetryDelayInMs,\n          );\n          break;\n        case StorageRetryPolicyType.FIXED:\n          delayTimeInMs = retryDelayInMs;\n          break;\n      }\n    } else {\n      delayTimeInMs = Math.random() * 1000;\n    }\n\n    logger.info(`RetryPolicy: Delay for ${delayTimeInMs}ms`);\n    return delayTimeInMs;\n  }\n  return {\n    name: storageRetryPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      // Set the server-side timeout query parameter \"timeout=[seconds]\"\n      if (tryTimeoutInMs) {\n        request.url = setURLParameter(\n          request.url,\n          URLConstants.Parameters.TIMEOUT,\n          String(Math.floor(tryTimeoutInMs / 1000)),\n        );\n      }\n      const primaryUrl = request.url;\n      const secondaryUrl = secondaryHost ? setURLHost(request.url, secondaryHost) : undefined;\n      let secondaryHas404 = false;\n      let attempt = 1;\n      let retryAgain = true;\n      let response: PipelineResponse | undefined;\n      let error: RestError | undefined;\n      while (retryAgain) {\n        const isPrimaryRetry: boolean =\n          secondaryHas404 ||\n          !secondaryUrl ||\n          ![\"GET\", \"HEAD\", \"OPTIONS\"].includes(request.method) ||\n          attempt % 2 === 1;\n        request.url = isPrimaryRetry ? primaryUrl : secondaryUrl!;\n        response = undefined;\n        error = undefined;\n        try {\n          logger.info(\n            `RetryPolicy: =====> Try=${attempt} ${isPrimaryRetry ? \"Primary\" : \"Secondary\"}`,\n          );\n          response = await next(request);\n          secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n        } catch (e: unknown) {\n          if (isRestError(e)) {\n            logger.error(`RetryPolicy: Caught error, message: ${e.message}, code: ${e.code}`);\n            error = e;\n          } else {\n            logger.error(`RetryPolicy: Caught error, message: ${getErrorMessage(e)}`);\n            throw e;\n          }\n        }\n        retryAgain = shouldRetry({ isPrimaryRetry, attempt, response, error });\n        if (retryAgain) {\n          await delay(\n            calculateDelay(isPrimaryRetry, attempt),\n            request.abortSignal,\n            RETRY_ABORT_ERROR,\n          );\n        }\n        attempt++;\n      }\n      if (response) {\n        return response;\n      }\n      throw error ?? new RestError(\"RetryPolicy failed without known error.\");\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createHmac } from \"crypto\";\nimport type {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n  PipelinePolicy,\n} from \"@azure/core-rest-pipeline\";\nimport { HeaderConstants } from \"../utils/constants\";\nimport { getURLPath, getURLQueries } from \"../utils/utils.common\";\nimport { compareHeader } from \"../utils/SharedKeyComparator\";\n\n/**\n * The programmatic identifier of the storageSharedKeyCredentialPolicy.\n */\nexport const storageSharedKeyCredentialPolicyName = \"storageSharedKeyCredentialPolicy\";\n\n/**\n * Options used to configure StorageSharedKeyCredentialPolicy.\n */\nexport interface StorageSharedKeyCredentialPolicyOptions {\n  accountName: string;\n  accountKey: Buffer;\n}\n\n/**\n * storageSharedKeyCredentialPolicy handles signing requests using storage account keys.\n */\nexport function storageSharedKeyCredentialPolicy(\n  options: StorageSharedKeyCredentialPolicyOptions,\n): PipelinePolicy {\n  function signRequest(request: PipelineRequest): void {\n    request.headers.set(HeaderConstants.X_MS_DATE, new Date().toUTCString());\n\n    if (\n      request.body &&\n      (typeof request.body === \"string\" || Buffer.isBuffer(request.body)) &&\n      request.body.length > 0\n    ) {\n      request.headers.set(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(request.body));\n    }\n\n    const stringToSign: string =\n      [\n        request.method.toUpperCase(),\n        getHeaderValueToSign(request, HeaderConstants.CONTENT_LANGUAGE),\n        getHeaderValueToSign(request, HeaderConstants.CONTENT_ENCODING),\n        getHeaderValueToSign(request, HeaderConstants.CONTENT_LENGTH),\n        getHeaderValueToSign(request, HeaderConstants.CONTENT_MD5),\n        getHeaderValueToSign(request, HeaderConstants.CONTENT_TYPE),\n        getHeaderValueToSign(request, HeaderConstants.DATE),\n        getHeaderValueToSign(request, HeaderConstants.IF_MODIFIED_SINCE),\n        getHeaderValueToSign(request, HeaderConstants.IF_MATCH),\n        getHeaderValueToSign(request, HeaderConstants.IF_NONE_MATCH),\n        getHeaderValueToSign(request, HeaderConstants.IF_UNMODIFIED_SINCE),\n        getHeaderValueToSign(request, HeaderConstants.RANGE),\n      ].join(\"\\n\") +\n      \"\\n\" +\n      getCanonicalizedHeadersString(request) +\n      getCanonicalizedResourceString(request);\n\n    const signature: string = createHmac(\"sha256\", options.accountKey)\n      .update(stringToSign, \"utf8\")\n      .digest(\"base64\");\n    request.headers.set(\n      HeaderConstants.AUTHORIZATION,\n      `SharedKey ${options.accountName}:${signature}`,\n    );\n\n    // console.log(`[URL]:${request.url}`);\n    // console.log(`[HEADERS]:${request.headers.toString()}`);\n    // console.log(`[STRING TO SIGN]:${JSON.stringify(stringToSign)}`);\n    // console.log(`[KEY]: ${request.headers.get(HeaderConstants.AUTHORIZATION)}`);\n  }\n\n  /**\n   * Retrieve header value according to shared key sign rules.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n   */\n  function getHeaderValueToSign(request: PipelineRequest, headerName: string): string {\n    const value = request.headers.get(headerName);\n\n    if (!value) {\n      return \"\";\n    }\n\n    // When using version 2015-02-21 or later, if Content-Length is zero, then\n    // set the Content-Length part of the StringToSign to an empty string.\n    // https://learn.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n    if (headerName === HeaderConstants.CONTENT_LENGTH && value === \"0\") {\n      return \"\";\n    }\n\n    return value;\n  }\n\n  /**\n   * To construct the CanonicalizedHeaders portion of the signature string, follow these steps:\n   * 1. Retrieve all headers for the resource that begin with x-ms-, including the x-ms-date header.\n   * 2. Convert each HTTP header name to lowercase.\n   * 3. Sort the headers lexicographically by header name, in ascending order.\n   *    Each header may appear only once in the string.\n   * 4. Replace any linear whitespace in the header value with a single space.\n   * 5. Trim any whitespace around the colon in the header.\n   * 6. Finally, append a new-line character to each canonicalized header in the resulting list.\n   *    Construct the CanonicalizedHeaders string by concatenating all headers in this list into a single string.\n   *\n   */\n  function getCanonicalizedHeadersString(request: PipelineRequest): string {\n    let headersArray: Array<{ name: string; value: string }> = [];\n    for (const [name, value] of request.headers) {\n      if (name.toLowerCase().startsWith(HeaderConstants.PREFIX_FOR_STORAGE)) {\n        headersArray.push({ name, value });\n      }\n    }\n\n    headersArray.sort((a, b): number => {\n      return compareHeader(a.name.toLowerCase(), b.name.toLowerCase());\n    });\n\n    // Remove duplicate headers\n    headersArray = headersArray.filter((value, index, array) => {\n      if (index > 0 && value.name.toLowerCase() === array[index - 1].name.toLowerCase()) {\n        return false;\n      }\n      return true;\n    });\n\n    let canonicalizedHeadersStringToSign: string = \"\";\n    headersArray.forEach((header) => {\n      canonicalizedHeadersStringToSign += `${header.name\n        .toLowerCase()\n        .trimRight()}:${header.value.trimLeft()}\\n`;\n    });\n\n    return canonicalizedHeadersStringToSign;\n  }\n\n  function getCanonicalizedResourceString(request: PipelineRequest): string {\n    const path = getURLPath(request.url) || \"/\";\n\n    let canonicalizedResourceString: string = \"\";\n    canonicalizedResourceString += `/${options.accountName}${path}`;\n\n    const queries = getURLQueries(request.url);\n    const lowercaseQueries: { [key: string]: string } = {};\n    if (queries) {\n      const queryKeys: string[] = [];\n      for (const key in queries) {\n        if (Object.prototype.hasOwnProperty.call(queries, key)) {\n          const lowercaseKey = key.toLowerCase();\n          lowercaseQueries[lowercaseKey] = queries[key];\n          queryKeys.push(lowercaseKey);\n        }\n      }\n\n      queryKeys.sort();\n      for (const key of queryKeys) {\n        canonicalizedResourceString += `\\n${key}:${decodeURIComponent(lowercaseQueries[key])}`;\n      }\n    }\n\n    return canonicalizedResourceString;\n  }\n\n  return {\n    name: storageSharedKeyCredentialPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      signRequest(request);\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  WebResourceLike as WebResource,\n  CompatResponse as HttpOperationResponse,\n} from \"@azure/core-http-compat\";\nimport { BaseRequestPolicy } from \"./RequestPolicy\";\nimport { isNode } from \"@azure/core-util\";\n\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n\n/**\n * StorageBrowserPolicy will handle differences between Node.js and browser runtime, including:\n *\n * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n * StorageBrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n * thus avoid the browser cache.\n *\n * 2. Remove cookie header for security\n *\n * 3. Remove content-length header to avoid browsers warning\n */\nexport class StorageBrowserPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of StorageBrowserPolicy.\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    if (request.method.toUpperCase() === \"GET\" || request.method.toUpperCase() === \"HEAD\") {\n      request.url = setURLParameter(\n        request.url,\n        URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,\n        new Date().getTime().toString(),\n      );\n    }\n\n    request.headers.remove(HeaderConstants.COOKIE);\n\n    // According to XHR standards, content-length should be fully controlled by browsers\n    request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  RequestPolicyFactory,\n} from \"@azure/core-http-compat\";\nimport { StorageBrowserPolicy } from \"./policies/StorageBrowserPolicy\";\nexport { StorageBrowserPolicy };\n\n/**\n * StorageBrowserPolicyFactory is a factory class helping generating StorageBrowserPolicy objects.\n */\nexport class StorageBrowserPolicyFactory implements RequestPolicyFactory {\n  /**\n   * Creates a StorageBrowserPolicyFactory object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageBrowserPolicy {\n    return new StorageBrowserPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n  PipelinePolicy,\n} from \"@azure/core-rest-pipeline\";\nimport { HeaderConstants } from \"../utils/constants\";\n\n/**\n * The programmatic identifier of the storageCorrectContentLengthPolicy.\n */\nexport const storageCorrectContentLengthPolicyName = \"StorageCorrectContentLengthPolicy\";\n\n/**\n * storageCorrectContentLengthPolicy to correctly set Content-Length header with request body length.\n */\nexport function storageCorrectContentLengthPolicy(): PipelinePolicy {\n  function correctContentLength(request: PipelineRequest): void {\n    if (\n      request.body &&\n      (typeof request.body === \"string\" || Buffer.isBuffer(request.body)) &&\n      request.body.length > 0\n    ) {\n      request.headers.set(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(request.body));\n    }\n  }\n\n  return {\n    name: storageCorrectContentLengthPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      correctContentLength(request);\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  KeepAliveOptions,\n  ExtendedServiceClientOptions,\n  HttpPipelineLogLevel,\n} from \"@azure/core-http-compat\";\nimport {\n  CompatResponse as HttpOperationResponse,\n  RequestPolicy as IHttpClient,\n  HttpHeadersLike as HttpHeaders,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  WebResourceLike as WebResource,\n  convertHttpClient,\n  createRequestPolicyFactoryPolicy,\n} from \"@azure/core-http-compat\";\nimport type {\n  ProxySettings as ProxyOptions,\n  UserAgentPolicyOptions as UserAgentOptions,\n  Pipeline as CorePipeline,\n  PipelinePolicy,\n  HttpClient,\n} from \"@azure/core-rest-pipeline\";\nimport {\n  RequestBodyType as HttpRequestBody,\n  bearerTokenAuthenticationPolicy,\n  decompressResponsePolicyName,\n} from \"@azure/core-rest-pipeline\";\nimport { authorizeRequestOnTenantChallenge, createClientPipeline } from \"@azure/core-client\";\nimport { parseXML, stringifyXML } from \"@azure/core-xml\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport { isTokenCredential } from \"@azure/core-auth\";\n\nimport { logger } from \"./log\";\nimport type { StorageRetryOptions } from \"./StorageRetryPolicyFactory\";\nimport { StorageRetryPolicyFactory } from \"./StorageRetryPolicyFactory\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport {\n  StorageOAuthScopes,\n  StorageBlobLoggingAllowedHeaderNames,\n  StorageBlobLoggingAllowedQueryParameters,\n  SDK_VERSION,\n} from \"./utils/constants\";\nimport { getCachedDefaultHttpClient } from \"./utils/cache\";\nimport { storageBrowserPolicy } from \"./policies/StorageBrowserPolicyV2\";\nimport { storageRetryPolicy } from \"./policies/StorageRetryPolicyV2\";\nimport { storageSharedKeyCredentialPolicy } from \"./policies/StorageSharedKeyCredentialPolicyV2\";\nimport { StorageBrowserPolicyFactory } from \"./StorageBrowserPolicyFactory\";\nimport { storageCorrectContentLengthPolicy } from \"./policies/StorageCorrectContentLengthPolicy\";\n\n// Export following interfaces and types for customers who want to implement their\n// own RequestPolicy or HTTPClient\nexport {\n  StorageOAuthScopes,\n  IHttpClient,\n  HttpHeaders,\n  HttpRequestBody,\n  HttpOperationResponse,\n  WebResource,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions,\n};\n\n/**\n * A subset of `@azure/core-http` ServiceClientOptions\n */\nexport interface ServiceClientOptions {\n  /**\n   * Optional. Configures the HTTP client to send requests and receive responses.\n   */\n  httpClient?: IHttpClient;\n  /**\n   * Optional. Overrides the default policy factories.\n   */\n  requestPolicyFactories?:\n    | RequestPolicyFactory[]\n    | ((defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | RequestPolicyFactory[]);\n}\n\n/**\n * Option interface for Pipeline constructor.\n */\nexport interface PipelineOptions {\n  /**\n   * Optional. Configures the HTTP client to send requests and receive responses.\n   */\n  httpClient?: IHttpClient;\n}\n\n/**\n * An interface for the {@link Pipeline} class containing HTTP request policies.\n * You can create a default Pipeline by calling {@link newPipeline}.\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n *\n * Refer to {@link newPipeline} and provided policies before implementing your\n * customized Pipeline.\n */\nexport interface PipelineLike {\n  /**\n   * A list of chained request policy factories.\n   */\n  readonly factories: RequestPolicyFactory[];\n  /**\n   * Configures pipeline logger and HTTP client.\n   */\n  readonly options: PipelineOptions;\n  /**\n   * Transfer Pipeline object to ServiceClientOptions object which is required by\n   * ServiceClient constructor.\n   *\n   * @returns The ServiceClientOptions object from this Pipeline.\n   */\n  toServiceClientOptions(): ServiceClientOptions;\n}\n\n/**\n * A helper to decide if a given argument satisfies the Pipeline contract\n * @param pipeline - An argument that may be a Pipeline\n * @returns true when the argument satisfies the Pipeline contract\n */\nexport function isPipelineLike(pipeline: unknown): pipeline is PipelineLike {\n  if (!pipeline || typeof pipeline !== \"object\") {\n    return false;\n  }\n\n  const castPipeline = pipeline as PipelineLike;\n\n  return (\n    Array.isArray(castPipeline.factories) &&\n    typeof castPipeline.options === \"object\" &&\n    typeof castPipeline.toServiceClientOptions === \"function\"\n  );\n}\n\n/**\n * A Pipeline class containing HTTP request policies.\n * You can create a default Pipeline by calling {@link newPipeline}.\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n *\n * Refer to {@link newPipeline} and provided policies before implementing your\n * customized Pipeline.\n */\nexport class Pipeline implements PipelineLike {\n  /**\n   * A list of chained request policy factories.\n   */\n  public readonly factories: RequestPolicyFactory[];\n  /**\n   * Configures pipeline logger and HTTP client.\n   */\n  public readonly options: PipelineOptions;\n\n  /**\n   * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.\n   *\n   * @param factories -\n   * @param options -\n   */\n  constructor(factories: RequestPolicyFactory[], options: PipelineOptions = {}) {\n    this.factories = factories;\n    this.options = options;\n  }\n\n  /**\n   * Transfer Pipeline object to ServiceClientOptions object which is required by\n   * ServiceClient constructor.\n   *\n   * @returns The ServiceClientOptions object from this Pipeline.\n   */\n  public toServiceClientOptions(): ServiceClientOptions {\n    return {\n      httpClient: this.options.httpClient,\n      requestPolicyFactories: this.factories,\n    };\n  }\n}\n\n/**\n * Options interface for the {@link newPipeline} function.\n */\nexport interface StoragePipelineOptions {\n  /**\n   * Options to configure a proxy for outgoing requests.\n   */\n  proxyOptions?: ProxyOptions;\n  /**\n   * Options for adding user agent details to outgoing requests.\n   */\n  userAgentOptions?: UserAgentOptions;\n  /**\n   * Configures the built-in retry policy behavior.\n   */\n  retryOptions?: StorageRetryOptions;\n  /**\n   * Keep alive configurations. Default keep-alive is enabled.\n   */\n  keepAliveOptions?: KeepAliveOptions;\n  /**\n   * Configures the HTTP client to send requests and receive responses.\n   */\n  httpClient?: IHttpClient;\n  /**\n   * The audience used to retrieve an AAD token.\n   * By default, audience 'https://storage.azure.com/.default' will be used.\n   */\n  audience?: string | string[];\n}\n\n/**\n * Creates a new Pipeline object with Credential provided.\n *\n * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n * @param pipelineOptions - Optional. Options.\n * @returns A new Pipeline object.\n */\nexport function newPipeline(\n  credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n  pipelineOptions: StoragePipelineOptions = {},\n): Pipeline {\n  if (!credential) {\n    credential = new AnonymousCredential();\n  }\n  const pipeline = new Pipeline([], pipelineOptions);\n  (pipeline as any)._credential = credential;\n  return pipeline;\n}\n\nfunction processDownlevelPipeline(\n  pipeline: PipelineLike,\n): { wrappedPolicies: PipelinePolicy; afterRetry: boolean } | undefined {\n  const knownFactoryFunctions = [\n    isAnonymousCredential,\n    isStorageSharedKeyCredential,\n    isCoreHttpBearerTokenFactory,\n    isStorageBrowserPolicyFactory,\n    isStorageRetryPolicyFactory,\n    isStorageTelemetryPolicyFactory,\n    isCoreHttpPolicyFactory,\n  ];\n  if (pipeline.factories.length) {\n    const novelFactories = pipeline.factories.filter((factory) => {\n      return !knownFactoryFunctions.some((knownFactory) => knownFactory(factory));\n    });\n    if (novelFactories.length) {\n      const hasInjector = novelFactories.some((factory) => isInjectorPolicyFactory(factory));\n      // if there are any left over, wrap in a requestPolicyFactoryPolicy\n      return {\n        wrappedPolicies: createRequestPolicyFactoryPolicy(novelFactories),\n        afterRetry: hasInjector,\n      };\n    }\n  }\n  return undefined;\n}\n\nexport function getCoreClientOptions(pipeline: PipelineLike): ExtendedServiceClientOptions {\n  const { httpClient: v1Client, ...restOptions } = pipeline.options as StoragePipelineOptions;\n\n  let httpClient: HttpClient = (pipeline as any)._coreHttpClient;\n  if (!httpClient) {\n    httpClient = v1Client ? convertHttpClient(v1Client) : getCachedDefaultHttpClient();\n    (pipeline as any)._coreHttpClient = httpClient;\n  }\n\n  let corePipeline: CorePipeline = (pipeline as any)._corePipeline;\n  if (!corePipeline) {\n    const packageDetails = `azsdk-js-azure-storage-blob/${SDK_VERSION}`;\n    const userAgentPrefix =\n      restOptions.userAgentOptions && restOptions.userAgentOptions.userAgentPrefix\n        ? `${restOptions.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n    corePipeline = createClientPipeline({\n      ...restOptions,\n      loggingOptions: {\n        additionalAllowedHeaderNames: StorageBlobLoggingAllowedHeaderNames,\n        additionalAllowedQueryParameters: StorageBlobLoggingAllowedQueryParameters,\n        logger: logger.info,\n      },\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      serializationOptions: {\n        stringifyXML,\n        serializerOptions: {\n          xml: {\n            // Use customized XML char key of \"#\" so we can deserialize metadata\n            // with \"_\" key\n            xmlCharKey: \"#\",\n          },\n        },\n      },\n      deserializationOptions: {\n        parseXML,\n        serializerOptions: {\n          xml: {\n            // Use customized XML char key of \"#\" so we can deserialize metadata\n            // with \"_\" key\n            xmlCharKey: \"#\",\n          },\n        },\n      },\n    });\n    corePipeline.removePolicy({ phase: \"Retry\" });\n    corePipeline.removePolicy({ name: decompressResponsePolicyName });\n    corePipeline.addPolicy(storageCorrectContentLengthPolicy());\n    corePipeline.addPolicy(storageRetryPolicy(restOptions.retryOptions), { phase: \"Retry\" });\n    corePipeline.addPolicy(storageBrowserPolicy());\n    const downlevelResults = processDownlevelPipeline(pipeline);\n    if (downlevelResults) {\n      corePipeline.addPolicy(\n        downlevelResults.wrappedPolicies,\n        downlevelResults.afterRetry ? { afterPhase: \"Retry\" } : undefined,\n      );\n    }\n    const credential = getCredentialFromPipeline(pipeline);\n    if (isTokenCredential(credential)) {\n      corePipeline.addPolicy(\n        bearerTokenAuthenticationPolicy({\n          credential,\n          scopes: restOptions.audience ?? StorageOAuthScopes,\n          challengeCallbacks: { authorizeRequestOnChallenge: authorizeRequestOnTenantChallenge },\n        }),\n        { phase: \"Sign\" },\n      );\n    } else if (credential instanceof StorageSharedKeyCredential) {\n      corePipeline.addPolicy(\n        storageSharedKeyCredentialPolicy({\n          accountName: credential.accountName,\n          accountKey: (credential as any).accountKey,\n        }),\n        { phase: \"Sign\" },\n      );\n    }\n    (pipeline as any)._corePipeline = corePipeline;\n  }\n  return {\n    ...restOptions,\n    allowInsecureConnection: true,\n    httpClient,\n    pipeline: corePipeline,\n  };\n}\n\nexport function getCredentialFromPipeline(\n  pipeline: PipelineLike,\n): StorageSharedKeyCredential | AnonymousCredential | TokenCredential {\n  // see if we squirreled one away on the type itself\n  if ((pipeline as any)._credential) {\n    return (pipeline as any)._credential;\n  }\n  // if it came from another package, loop over the factories and look for one like before\n  let credential = new AnonymousCredential();\n  for (const factory of pipeline.factories) {\n    if (isTokenCredential((factory as any).credential)) {\n      // Only works if the factory has been attached a \"credential\" property.\n      // We do that in newPipeline() when using TokenCredential.\n      credential = (factory as any).credential;\n    } else if (isStorageSharedKeyCredential(factory)) {\n      return factory;\n    }\n  }\n  return credential;\n}\n\nfunction isStorageSharedKeyCredential(\n  factory: RequestPolicyFactory,\n): factory is StorageSharedKeyCredential {\n  if (factory instanceof StorageSharedKeyCredential) {\n    return true;\n  }\n  return factory.constructor.name === \"StorageSharedKeyCredential\";\n}\n\nfunction isAnonymousCredential(factory: RequestPolicyFactory): factory is AnonymousCredential {\n  if (factory instanceof AnonymousCredential) {\n    return true;\n  }\n  return factory.constructor.name === \"AnonymousCredential\";\n}\n\nfunction isCoreHttpBearerTokenFactory(factory: RequestPolicyFactory): boolean {\n  return isTokenCredential((factory as any).credential);\n}\n\nfunction isStorageBrowserPolicyFactory(\n  factory: RequestPolicyFactory,\n): factory is StorageBrowserPolicyFactory {\n  if (factory instanceof StorageBrowserPolicyFactory) {\n    return true;\n  }\n  return factory.constructor.name === \"StorageBrowserPolicyFactory\";\n}\n\nfunction isStorageRetryPolicyFactory(\n  factory: RequestPolicyFactory,\n): factory is StorageRetryPolicyFactory {\n  if (factory instanceof StorageRetryPolicyFactory) {\n    return true;\n  }\n  return factory.constructor.name === \"StorageRetryPolicyFactory\";\n}\n\nfunction isStorageTelemetryPolicyFactory(factory: RequestPolicyFactory): boolean {\n  return factory.constructor.name === \"TelemetryPolicyFactory\";\n}\n\nfunction isInjectorPolicyFactory(factory: RequestPolicyFactory): boolean {\n  return factory.constructor.name === \"InjectorPolicyFactory\";\n}\n\nfunction isCoreHttpPolicyFactory(factory: RequestPolicyFactory): boolean {\n  const knownPolicies = [\n    \"GenerateClientRequestIdPolicy\",\n    \"TracingPolicy\",\n    \"LogPolicy\",\n    \"ProxyPolicy\",\n    \"DisableResponseDecompressionPolicy\",\n    \"KeepAlivePolicy\",\n    \"DeserializationPolicy\",\n  ];\n\n  const mockHttpClient: IHttpClient = {\n    sendRequest: async (request: WebResource) => {\n      return {\n        request,\n        headers: request.headers.clone(),\n        status: 500,\n      };\n    },\n  };\n  const mockRequestPolicyOptions: RequestPolicyOptions = {\n    log(_logLevel: HttpPipelineLogLevel, _message: string): void {\n      /* do nothing */\n    },\n    shouldLog(_logLevel: HttpPipelineLogLevel): boolean {\n      return false;\n    },\n  };\n  const policyInstance = factory.create(mockHttpClient, mockRequestPolicyOptions);\n  const policyName = policyInstance.constructor.name;\n  // bundlers sometimes add a custom suffix to the class name to make it unique\n  return knownPolicies.some((knownPolicyName) => {\n    return policyName.startsWith(knownPolicyName);\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient, PipelineRequest, PipelineResponse } from \"@azure/core-rest-pipeline\";\nimport type { RequestPolicy } from \"./policies/requestPolicyFactoryPolicy.js\";\nimport { toPipelineResponse } from \"./response.js\";\nimport { toWebResourceLike } from \"./util.js\";\n\n/**\n * Converts a RequestPolicy based HttpClient to a PipelineRequest based HttpClient.\n * @param requestPolicyClient - A HttpClient compatible with core-http\n * @returns A HttpClient compatible with core-rest-pipeline\n */\nexport function convertHttpClient(requestPolicyClient: RequestPolicy): HttpClient {\n  return {\n    sendRequest: async (request: PipelineRequest): Promise<PipelineResponse> => {\n      const response = await requestPolicyClient.sendRequest(\n        toWebResourceLike(request, { createProxy: true }),\n      );\n      return toPipelineResponse(response);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n  PipelinePolicy,\n} from \"@azure/core-rest-pipeline\";\nimport { isNode } from \"@azure/core-util\";\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n\n/**\n * The programmatic identifier of the StorageBrowserPolicy.\n */\nexport const storageBrowserPolicyName = \"storageBrowserPolicy\";\n\n/**\n * storageBrowserPolicy is a policy used to prevent browsers from caching requests\n * and to remove cookies and explicit content-length headers.\n */\nexport function storageBrowserPolicy(): PipelinePolicy {\n  return {\n    name: storageBrowserPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (isNode) {\n        return next(request);\n      }\n\n      if (request.method === \"GET\" || request.method === \"HEAD\") {\n        request.url = setURLParameter(\n          request.url,\n          URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,\n          new Date().getTime().toString(),\n        );\n      }\n\n      request.headers.delete(HeaderConstants.COOKIE);\n\n      // According to XHR standards, content-length should be fully controlled by browsers\n      request.headers.delete(HeaderConstants.CONTENT_LENGTH);\n      return next(request);\n    },\n  };\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const BlobServiceProperties: coreClient.CompositeMapper = {\n  serializedName: \"BlobServiceProperties\",\n  xmlName: \"StorageServiceProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobServiceProperties\",\n    modelProperties: {\n      blobAnalyticsLogging: {\n        serializedName: \"Logging\",\n        xmlName: \"Logging\",\n        type: {\n          name: \"Composite\",\n          className: \"Logging\",\n        },\n      },\n      hourMetrics: {\n        serializedName: \"HourMetrics\",\n        xmlName: \"HourMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\",\n        },\n      },\n      minuteMetrics: {\n        serializedName: \"MinuteMetrics\",\n        xmlName: \"MinuteMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\",\n        },\n      },\n      cors: {\n        serializedName: \"Cors\",\n        xmlName: \"Cors\",\n        xmlIsWrapped: true,\n        xmlElementName: \"CorsRule\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CorsRule\",\n            },\n          },\n        },\n      },\n      defaultServiceVersion: {\n        serializedName: \"DefaultServiceVersion\",\n        xmlName: \"DefaultServiceVersion\",\n        type: {\n          name: \"String\",\n        },\n      },\n      deleteRetentionPolicy: {\n        serializedName: \"DeleteRetentionPolicy\",\n        xmlName: \"DeleteRetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\",\n        },\n      },\n      staticWebsite: {\n        serializedName: \"StaticWebsite\",\n        xmlName: \"StaticWebsite\",\n        type: {\n          name: \"Composite\",\n          className: \"StaticWebsite\",\n        },\n      },\n    },\n  },\n};\n\nexport const Logging: coreClient.CompositeMapper = {\n  serializedName: \"Logging\",\n  type: {\n    name: \"Composite\",\n    className: \"Logging\",\n    modelProperties: {\n      version: {\n        serializedName: \"Version\",\n        required: true,\n        xmlName: \"Version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      deleteProperty: {\n        serializedName: \"Delete\",\n        required: true,\n        xmlName: \"Delete\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      read: {\n        serializedName: \"Read\",\n        required: true,\n        xmlName: \"Read\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      write: {\n        serializedName: \"Write\",\n        required: true,\n        xmlName: \"Write\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      retentionPolicy: {\n        serializedName: \"RetentionPolicy\",\n        xmlName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\",\n        },\n      },\n    },\n  },\n};\n\nexport const RetentionPolicy: coreClient.CompositeMapper = {\n  serializedName: \"RetentionPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"RetentionPolicy\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      days: {\n        constraints: {\n          InclusiveMinimum: 1,\n        },\n        serializedName: \"Days\",\n        xmlName: \"Days\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Metrics: coreClient.CompositeMapper = {\n  serializedName: \"Metrics\",\n  type: {\n    name: \"Composite\",\n    className: \"Metrics\",\n    modelProperties: {\n      version: {\n        serializedName: \"Version\",\n        xmlName: \"Version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      includeAPIs: {\n        serializedName: \"IncludeAPIs\",\n        xmlName: \"IncludeAPIs\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      retentionPolicy: {\n        serializedName: \"RetentionPolicy\",\n        xmlName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\",\n        },\n      },\n    },\n  },\n};\n\nexport const CorsRule: coreClient.CompositeMapper = {\n  serializedName: \"CorsRule\",\n  type: {\n    name: \"Composite\",\n    className: \"CorsRule\",\n    modelProperties: {\n      allowedOrigins: {\n        serializedName: \"AllowedOrigins\",\n        required: true,\n        xmlName: \"AllowedOrigins\",\n        type: {\n          name: \"String\",\n        },\n      },\n      allowedMethods: {\n        serializedName: \"AllowedMethods\",\n        required: true,\n        xmlName: \"AllowedMethods\",\n        type: {\n          name: \"String\",\n        },\n      },\n      allowedHeaders: {\n        serializedName: \"AllowedHeaders\",\n        required: true,\n        xmlName: \"AllowedHeaders\",\n        type: {\n          name: \"String\",\n        },\n      },\n      exposedHeaders: {\n        serializedName: \"ExposedHeaders\",\n        required: true,\n        xmlName: \"ExposedHeaders\",\n        type: {\n          name: \"String\",\n        },\n      },\n      maxAgeInSeconds: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"MaxAgeInSeconds\",\n        required: true,\n        xmlName: \"MaxAgeInSeconds\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const StaticWebsite: coreClient.CompositeMapper = {\n  serializedName: \"StaticWebsite\",\n  type: {\n    name: \"Composite\",\n    className: \"StaticWebsite\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      indexDocument: {\n        serializedName: \"IndexDocument\",\n        xmlName: \"IndexDocument\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorDocument404Path: {\n        serializedName: \"ErrorDocument404Path\",\n        xmlName: \"ErrorDocument404Path\",\n        type: {\n          name: \"String\",\n        },\n      },\n      defaultIndexDocumentPath: {\n        serializedName: \"DefaultIndexDocumentPath\",\n        xmlName: \"DefaultIndexDocumentPath\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const StorageError: coreClient.CompositeMapper = {\n  serializedName: \"StorageError\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageError\",\n    modelProperties: {\n      message: {\n        serializedName: \"Message\",\n        xmlName: \"Message\",\n        type: {\n          name: \"String\",\n        },\n      },\n      code: {\n        serializedName: \"Code\",\n        xmlName: \"Code\",\n        type: {\n          name: \"String\",\n        },\n      },\n      authenticationErrorDetail: {\n        serializedName: \"AuthenticationErrorDetail\",\n        xmlName: \"AuthenticationErrorDetail\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobServiceStatistics: coreClient.CompositeMapper = {\n  serializedName: \"BlobServiceStatistics\",\n  xmlName: \"StorageServiceStats\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobServiceStatistics\",\n    modelProperties: {\n      geoReplication: {\n        serializedName: \"GeoReplication\",\n        xmlName: \"GeoReplication\",\n        type: {\n          name: \"Composite\",\n          className: \"GeoReplication\",\n        },\n      },\n    },\n  },\n};\n\nexport const GeoReplication: coreClient.CompositeMapper = {\n  serializedName: \"GeoReplication\",\n  type: {\n    name: \"Composite\",\n    className: \"GeoReplication\",\n    modelProperties: {\n      status: {\n        serializedName: \"Status\",\n        required: true,\n        xmlName: \"Status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"live\", \"bootstrap\", \"unavailable\"],\n        },\n      },\n      lastSyncOn: {\n        serializedName: \"LastSyncTime\",\n        required: true,\n        xmlName: \"LastSyncTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ListContainersSegmentResponse: coreClient.CompositeMapper = {\n  serializedName: \"ListContainersSegmentResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListContainersSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\",\n        },\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\",\n        },\n      },\n      maxPageSize: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      containerItems: {\n        serializedName: \"ContainerItems\",\n        required: true,\n        xmlName: \"Containers\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Container\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerItem\",\n            },\n          },\n        },\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerItem: coreClient.CompositeMapper = {\n  serializedName: \"ContainerItem\",\n  xmlName: \"Container\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      deleted: {\n        serializedName: \"Deleted\",\n        xmlName: \"Deleted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      version: {\n        serializedName: \"Version\",\n        xmlName: \"Version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"Properties\",\n        xmlName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerProperties\",\n        },\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        xmlName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerProperties: coreClient.CompositeMapper = {\n  serializedName: \"ContainerProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerProperties\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"Last-Modified\",\n        required: true,\n        xmlName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      etag: {\n        serializedName: \"Etag\",\n        required: true,\n        xmlName: \"Etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      leaseStatus: {\n        serializedName: \"LeaseStatus\",\n        xmlName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"LeaseState\",\n        xmlName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseDuration: {\n        serializedName: \"LeaseDuration\",\n        xmlName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      publicAccess: {\n        serializedName: \"PublicAccess\",\n        xmlName: \"PublicAccess\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"container\", \"blob\"],\n        },\n      },\n      hasImmutabilityPolicy: {\n        serializedName: \"HasImmutabilityPolicy\",\n        xmlName: \"HasImmutabilityPolicy\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      hasLegalHold: {\n        serializedName: \"HasLegalHold\",\n        xmlName: \"HasLegalHold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      defaultEncryptionScope: {\n        serializedName: \"DefaultEncryptionScope\",\n        xmlName: \"DefaultEncryptionScope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      preventEncryptionScopeOverride: {\n        serializedName: \"DenyEncryptionScopeOverride\",\n        xmlName: \"DenyEncryptionScopeOverride\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      deletedOn: {\n        serializedName: \"DeletedTime\",\n        xmlName: \"DeletedTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      remainingRetentionDays: {\n        serializedName: \"RemainingRetentionDays\",\n        xmlName: \"RemainingRetentionDays\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isImmutableStorageWithVersioningEnabled: {\n        serializedName: \"ImmutableStorageWithVersioningEnabled\",\n        xmlName: \"ImmutableStorageWithVersioningEnabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const KeyInfo: coreClient.CompositeMapper = {\n  serializedName: \"KeyInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"KeyInfo\",\n    modelProperties: {\n      startsOn: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"String\",\n        },\n      },\n      expiresOn: {\n        serializedName: \"Expiry\",\n        required: true,\n        xmlName: \"Expiry\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const UserDelegationKey: coreClient.CompositeMapper = {\n  serializedName: \"UserDelegationKey\",\n  type: {\n    name: \"Composite\",\n    className: \"UserDelegationKey\",\n    modelProperties: {\n      signedObjectId: {\n        serializedName: \"SignedOid\",\n        required: true,\n        xmlName: \"SignedOid\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signedTenantId: {\n        serializedName: \"SignedTid\",\n        required: true,\n        xmlName: \"SignedTid\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signedStartsOn: {\n        serializedName: \"SignedStart\",\n        required: true,\n        xmlName: \"SignedStart\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signedExpiresOn: {\n        serializedName: \"SignedExpiry\",\n        required: true,\n        xmlName: \"SignedExpiry\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signedService: {\n        serializedName: \"SignedService\",\n        required: true,\n        xmlName: \"SignedService\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signedVersion: {\n        serializedName: \"SignedVersion\",\n        required: true,\n        xmlName: \"SignedVersion\",\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        serializedName: \"Value\",\n        required: true,\n        xmlName: \"Value\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const FilterBlobSegment: coreClient.CompositeMapper = {\n  serializedName: \"FilterBlobSegment\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"FilterBlobSegment\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      where: {\n        serializedName: \"Where\",\n        required: true,\n        xmlName: \"Where\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobs: {\n        serializedName: \"Blobs\",\n        required: true,\n        xmlName: \"Blobs\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Blob\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FilterBlobItem\",\n            },\n          },\n        },\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const FilterBlobItem: coreClient.CompositeMapper = {\n  serializedName: \"FilterBlobItem\",\n  xmlName: \"Blob\",\n  type: {\n    name: \"Composite\",\n    className: \"FilterBlobItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      containerName: {\n        serializedName: \"ContainerName\",\n        required: true,\n        xmlName: \"ContainerName\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tags: {\n        serializedName: \"Tags\",\n        xmlName: \"Tags\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobTags\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobTags: coreClient.CompositeMapper = {\n  serializedName: \"BlobTags\",\n  xmlName: \"Tags\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobTags\",\n    modelProperties: {\n      blobTagSet: {\n        serializedName: \"BlobTagSet\",\n        required: true,\n        xmlName: \"TagSet\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Tag\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobTag\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const BlobTag: coreClient.CompositeMapper = {\n  serializedName: \"BlobTag\",\n  xmlName: \"Tag\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobTag\",\n    modelProperties: {\n      key: {\n        serializedName: \"Key\",\n        required: true,\n        xmlName: \"Key\",\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        serializedName: \"Value\",\n        required: true,\n        xmlName: \"Value\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SignedIdentifier: coreClient.CompositeMapper = {\n  serializedName: \"SignedIdentifier\",\n  xmlName: \"SignedIdentifier\",\n  type: {\n    name: \"Composite\",\n    className: \"SignedIdentifier\",\n    modelProperties: {\n      id: {\n        serializedName: \"Id\",\n        required: true,\n        xmlName: \"Id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accessPolicy: {\n        serializedName: \"AccessPolicy\",\n        xmlName: \"AccessPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AccessPolicy\",\n        },\n      },\n    },\n  },\n};\n\nexport const AccessPolicy: coreClient.CompositeMapper = {\n  serializedName: \"AccessPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"AccessPolicy\",\n    modelProperties: {\n      startsOn: {\n        serializedName: \"Start\",\n        xmlName: \"Start\",\n        type: {\n          name: \"String\",\n        },\n      },\n      expiresOn: {\n        serializedName: \"Expiry\",\n        xmlName: \"Expiry\",\n        type: {\n          name: \"String\",\n        },\n      },\n      permissions: {\n        serializedName: \"Permission\",\n        xmlName: \"Permission\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ListBlobsFlatSegmentResponse: coreClient.CompositeMapper = {\n  serializedName: \"ListBlobsFlatSegmentResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListBlobsFlatSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      containerName: {\n        serializedName: \"ContainerName\",\n        required: true,\n        xmlName: \"ContainerName\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\",\n        },\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\",\n        },\n      },\n      maxPageSize: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      segment: {\n        serializedName: \"Segment\",\n        xmlName: \"Blobs\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobFlatListSegment\",\n        },\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobFlatListSegment: coreClient.CompositeMapper = {\n  serializedName: \"BlobFlatListSegment\",\n  xmlName: \"Blobs\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobFlatListSegment\",\n    modelProperties: {\n      blobItems: {\n        serializedName: \"BlobItems\",\n        required: true,\n        xmlName: \"BlobItems\",\n        xmlElementName: \"Blob\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobItemInternal\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const BlobItemInternal: coreClient.CompositeMapper = {\n  serializedName: \"BlobItemInternal\",\n  xmlName: \"Blob\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobItemInternal\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        xmlName: \"Name\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobName\",\n        },\n      },\n      deleted: {\n        serializedName: \"Deleted\",\n        required: true,\n        xmlName: \"Deleted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      snapshot: {\n        serializedName: \"Snapshot\",\n        required: true,\n        xmlName: \"Snapshot\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"VersionId\",\n        xmlName: \"VersionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      isCurrentVersion: {\n        serializedName: \"IsCurrentVersion\",\n        xmlName: \"IsCurrentVersion\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      properties: {\n        serializedName: \"Properties\",\n        xmlName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobPropertiesInternal\",\n        },\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        xmlName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      blobTags: {\n        serializedName: \"BlobTags\",\n        xmlName: \"Tags\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobTags\",\n        },\n      },\n      objectReplicationMetadata: {\n        serializedName: \"ObjectReplicationMetadata\",\n        xmlName: \"OrMetadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      hasVersionsOnly: {\n        serializedName: \"HasVersionsOnly\",\n        xmlName: \"HasVersionsOnly\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobName: coreClient.CompositeMapper = {\n  serializedName: \"BlobName\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobName\",\n    modelProperties: {\n      encoded: {\n        serializedName: \"Encoded\",\n        xmlName: \"Encoded\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      content: {\n        serializedName: \"content\",\n        xmlName: \"content\",\n        xmlIsMsText: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobPropertiesInternal: coreClient.CompositeMapper = {\n  serializedName: \"BlobPropertiesInternal\",\n  xmlName: \"Properties\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobPropertiesInternal\",\n    modelProperties: {\n      createdOn: {\n        serializedName: \"Creation-Time\",\n        xmlName: \"Creation-Time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      lastModified: {\n        serializedName: \"Last-Modified\",\n        required: true,\n        xmlName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      etag: {\n        serializedName: \"Etag\",\n        required: true,\n        xmlName: \"Etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentLength: {\n        serializedName: \"Content-Length\",\n        xmlName: \"Content-Length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contentType: {\n        serializedName: \"Content-Type\",\n        xmlName: \"Content-Type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentEncoding: {\n        serializedName: \"Content-Encoding\",\n        xmlName: \"Content-Encoding\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentLanguage: {\n        serializedName: \"Content-Language\",\n        xmlName: \"Content-Language\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"Content-MD5\",\n        xmlName: \"Content-MD5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      contentDisposition: {\n        serializedName: \"Content-Disposition\",\n        xmlName: \"Content-Disposition\",\n        type: {\n          name: \"String\",\n        },\n      },\n      cacheControl: {\n        serializedName: \"Cache-Control\",\n        xmlName: \"Cache-Control\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      blobType: {\n        serializedName: \"BlobType\",\n        xmlName: \"BlobType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"],\n        },\n      },\n      leaseStatus: {\n        serializedName: \"LeaseStatus\",\n        xmlName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"LeaseState\",\n        xmlName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseDuration: {\n        serializedName: \"LeaseDuration\",\n        xmlName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      copyId: {\n        serializedName: \"CopyId\",\n        xmlName: \"CopyId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"CopyStatus\",\n        xmlName: \"CopyStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      copySource: {\n        serializedName: \"CopySource\",\n        xmlName: \"CopySource\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyProgress: {\n        serializedName: \"CopyProgress\",\n        xmlName: \"CopyProgress\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyCompletedOn: {\n        serializedName: \"CopyCompletionTime\",\n        xmlName: \"CopyCompletionTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyStatusDescription: {\n        serializedName: \"CopyStatusDescription\",\n        xmlName: \"CopyStatusDescription\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverEncrypted: {\n        serializedName: \"ServerEncrypted\",\n        xmlName: \"ServerEncrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      incrementalCopy: {\n        serializedName: \"IncrementalCopy\",\n        xmlName: \"IncrementalCopy\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      destinationSnapshot: {\n        serializedName: \"DestinationSnapshot\",\n        xmlName: \"DestinationSnapshot\",\n        type: {\n          name: \"String\",\n        },\n      },\n      deletedOn: {\n        serializedName: \"DeletedTime\",\n        xmlName: \"DeletedTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      remainingRetentionDays: {\n        serializedName: \"RemainingRetentionDays\",\n        xmlName: \"RemainingRetentionDays\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accessTier: {\n        serializedName: \"AccessTier\",\n        xmlName: \"AccessTier\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"P4\",\n            \"P6\",\n            \"P10\",\n            \"P15\",\n            \"P20\",\n            \"P30\",\n            \"P40\",\n            \"P50\",\n            \"P60\",\n            \"P70\",\n            \"P80\",\n            \"Hot\",\n            \"Cool\",\n            \"Archive\",\n            \"Cold\",\n          ],\n        },\n      },\n      accessTierInferred: {\n        serializedName: \"AccessTierInferred\",\n        xmlName: \"AccessTierInferred\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      archiveStatus: {\n        serializedName: \"ArchiveStatus\",\n        xmlName: \"ArchiveStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"rehydrate-pending-to-hot\",\n            \"rehydrate-pending-to-cool\",\n            \"rehydrate-pending-to-cold\",\n          ],\n        },\n      },\n      customerProvidedKeySha256: {\n        serializedName: \"CustomerProvidedKeySha256\",\n        xmlName: \"CustomerProvidedKeySha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"EncryptionScope\",\n        xmlName: \"EncryptionScope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accessTierChangedOn: {\n        serializedName: \"AccessTierChangeTime\",\n        xmlName: \"AccessTierChangeTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      tagCount: {\n        serializedName: \"TagCount\",\n        xmlName: \"TagCount\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      expiresOn: {\n        serializedName: \"Expiry-Time\",\n        xmlName: \"Expiry-Time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isSealed: {\n        serializedName: \"Sealed\",\n        xmlName: \"Sealed\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      rehydratePriority: {\n        serializedName: \"RehydratePriority\",\n        xmlName: \"RehydratePriority\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"High\", \"Standard\"],\n        },\n      },\n      lastAccessedOn: {\n        serializedName: \"LastAccessTime\",\n        xmlName: \"LastAccessTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyExpiresOn: {\n        serializedName: \"ImmutabilityPolicyUntilDate\",\n        xmlName: \"ImmutabilityPolicyUntilDate\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"ImmutabilityPolicyMode\",\n        xmlName: \"ImmutabilityPolicyMode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"],\n        },\n      },\n      legalHold: {\n        serializedName: \"LegalHold\",\n        xmlName: \"LegalHold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const ListBlobsHierarchySegmentResponse: coreClient.CompositeMapper = {\n  serializedName: \"ListBlobsHierarchySegmentResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListBlobsHierarchySegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      containerName: {\n        serializedName: \"ContainerName\",\n        required: true,\n        xmlName: \"ContainerName\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\",\n        },\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\",\n        },\n      },\n      maxPageSize: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      delimiter: {\n        serializedName: \"Delimiter\",\n        xmlName: \"Delimiter\",\n        type: {\n          name: \"String\",\n        },\n      },\n      segment: {\n        serializedName: \"Segment\",\n        xmlName: \"Blobs\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobHierarchyListSegment\",\n        },\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobHierarchyListSegment: coreClient.CompositeMapper = {\n  serializedName: \"BlobHierarchyListSegment\",\n  xmlName: \"Blobs\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobHierarchyListSegment\",\n    modelProperties: {\n      blobPrefixes: {\n        serializedName: \"BlobPrefixes\",\n        xmlName: \"BlobPrefixes\",\n        xmlElementName: \"BlobPrefix\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobPrefix\",\n            },\n          },\n        },\n      },\n      blobItems: {\n        serializedName: \"BlobItems\",\n        required: true,\n        xmlName: \"BlobItems\",\n        xmlElementName: \"Blob\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobItemInternal\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const BlobPrefix: coreClient.CompositeMapper = {\n  serializedName: \"BlobPrefix\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobPrefix\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        xmlName: \"Name\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobName\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockLookupList: coreClient.CompositeMapper = {\n  serializedName: \"BlockLookupList\",\n  xmlName: \"BlockList\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockLookupList\",\n    modelProperties: {\n      committed: {\n        serializedName: \"Committed\",\n        xmlName: \"Committed\",\n        xmlElementName: \"Committed\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      uncommitted: {\n        serializedName: \"Uncommitted\",\n        xmlName: \"Uncommitted\",\n        xmlElementName: \"Uncommitted\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      latest: {\n        serializedName: \"Latest\",\n        xmlName: \"Latest\",\n        xmlElementName: \"Latest\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const BlockList: coreClient.CompositeMapper = {\n  serializedName: \"BlockList\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockList\",\n    modelProperties: {\n      committedBlocks: {\n        serializedName: \"CommittedBlocks\",\n        xmlName: \"CommittedBlocks\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Block\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\",\n            },\n          },\n        },\n      },\n      uncommittedBlocks: {\n        serializedName: \"UncommittedBlocks\",\n        xmlName: \"UncommittedBlocks\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Block\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const Block: coreClient.CompositeMapper = {\n  serializedName: \"Block\",\n  type: {\n    name: \"Composite\",\n    className: \"Block\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      size: {\n        serializedName: \"Size\",\n        required: true,\n        xmlName: \"Size\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageList: coreClient.CompositeMapper = {\n  serializedName: \"PageList\",\n  type: {\n    name: \"Composite\",\n    className: \"PageList\",\n    modelProperties: {\n      pageRange: {\n        serializedName: \"PageRange\",\n        xmlName: \"PageRange\",\n        xmlElementName: \"PageRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PageRange\",\n            },\n          },\n        },\n      },\n      clearRange: {\n        serializedName: \"ClearRange\",\n        xmlName: \"ClearRange\",\n        xmlElementName: \"ClearRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClearRange\",\n            },\n          },\n        },\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageRange: coreClient.CompositeMapper = {\n  serializedName: \"PageRange\",\n  xmlName: \"PageRange\",\n  type: {\n    name: \"Composite\",\n    className: \"PageRange\",\n    modelProperties: {\n      start: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      end: {\n        serializedName: \"End\",\n        required: true,\n        xmlName: \"End\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ClearRange: coreClient.CompositeMapper = {\n  serializedName: \"ClearRange\",\n  xmlName: \"ClearRange\",\n  type: {\n    name: \"Composite\",\n    className: \"ClearRange\",\n    modelProperties: {\n      start: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      end: {\n        serializedName: \"End\",\n        required: true,\n        xmlName: \"End\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const QueryRequest: coreClient.CompositeMapper = {\n  serializedName: \"QueryRequest\",\n  xmlName: \"QueryRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryRequest\",\n    modelProperties: {\n      queryType: {\n        serializedName: \"QueryType\",\n        required: true,\n        xmlName: \"QueryType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      expression: {\n        serializedName: \"Expression\",\n        required: true,\n        xmlName: \"Expression\",\n        type: {\n          name: \"String\",\n        },\n      },\n      inputSerialization: {\n        serializedName: \"InputSerialization\",\n        xmlName: \"InputSerialization\",\n        type: {\n          name: \"Composite\",\n          className: \"QuerySerialization\",\n        },\n      },\n      outputSerialization: {\n        serializedName: \"OutputSerialization\",\n        xmlName: \"OutputSerialization\",\n        type: {\n          name: \"Composite\",\n          className: \"QuerySerialization\",\n        },\n      },\n    },\n  },\n};\n\nexport const QuerySerialization: coreClient.CompositeMapper = {\n  serializedName: \"QuerySerialization\",\n  type: {\n    name: \"Composite\",\n    className: \"QuerySerialization\",\n    modelProperties: {\n      format: {\n        serializedName: \"Format\",\n        xmlName: \"Format\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryFormat\",\n        },\n      },\n    },\n  },\n};\n\nexport const QueryFormat: coreClient.CompositeMapper = {\n  serializedName: \"QueryFormat\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryFormat\",\n    modelProperties: {\n      type: {\n        serializedName: \"Type\",\n        required: true,\n        xmlName: \"Type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"delimited\", \"json\", \"arrow\", \"parquet\"],\n        },\n      },\n      delimitedTextConfiguration: {\n        serializedName: \"DelimitedTextConfiguration\",\n        xmlName: \"DelimitedTextConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"DelimitedTextConfiguration\",\n        },\n      },\n      jsonTextConfiguration: {\n        serializedName: \"JsonTextConfiguration\",\n        xmlName: \"JsonTextConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"JsonTextConfiguration\",\n        },\n      },\n      arrowConfiguration: {\n        serializedName: \"ArrowConfiguration\",\n        xmlName: \"ArrowConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"ArrowConfiguration\",\n        },\n      },\n      parquetTextConfiguration: {\n        serializedName: \"ParquetTextConfiguration\",\n        xmlName: \"ParquetTextConfiguration\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const DelimitedTextConfiguration: coreClient.CompositeMapper = {\n  serializedName: \"DelimitedTextConfiguration\",\n  xmlName: \"DelimitedTextConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"DelimitedTextConfiguration\",\n    modelProperties: {\n      columnSeparator: {\n        serializedName: \"ColumnSeparator\",\n        xmlName: \"ColumnSeparator\",\n        type: {\n          name: \"String\",\n        },\n      },\n      fieldQuote: {\n        serializedName: \"FieldQuote\",\n        xmlName: \"FieldQuote\",\n        type: {\n          name: \"String\",\n        },\n      },\n      recordSeparator: {\n        serializedName: \"RecordSeparator\",\n        xmlName: \"RecordSeparator\",\n        type: {\n          name: \"String\",\n        },\n      },\n      escapeChar: {\n        serializedName: \"EscapeChar\",\n        xmlName: \"EscapeChar\",\n        type: {\n          name: \"String\",\n        },\n      },\n      headersPresent: {\n        serializedName: \"HeadersPresent\",\n        xmlName: \"HasHeaders\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const JsonTextConfiguration: coreClient.CompositeMapper = {\n  serializedName: \"JsonTextConfiguration\",\n  xmlName: \"JsonTextConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"JsonTextConfiguration\",\n    modelProperties: {\n      recordSeparator: {\n        serializedName: \"RecordSeparator\",\n        xmlName: \"RecordSeparator\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ArrowConfiguration: coreClient.CompositeMapper = {\n  serializedName: \"ArrowConfiguration\",\n  xmlName: \"ArrowConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"ArrowConfiguration\",\n    modelProperties: {\n      schema: {\n        serializedName: \"Schema\",\n        required: true,\n        xmlName: \"Schema\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Field\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ArrowField\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const ArrowField: coreClient.CompositeMapper = {\n  serializedName: \"ArrowField\",\n  xmlName: \"Field\",\n  type: {\n    name: \"Composite\",\n    className: \"ArrowField\",\n    modelProperties: {\n      type: {\n        serializedName: \"Type\",\n        required: true,\n        xmlName: \"Type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"Name\",\n        xmlName: \"Name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      precision: {\n        serializedName: \"Precision\",\n        xmlName: \"Precision\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      scale: {\n        serializedName: \"Scale\",\n        xmlName: \"Scale\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceSetPropertiesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_setPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSetPropertiesHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceSetPropertiesExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_setPropertiesExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceSetPropertiesExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceGetPropertiesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetPropertiesHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceGetPropertiesExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_getPropertiesExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceGetPropertiesExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceGetStatisticsHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_getStatisticsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetStatisticsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceGetStatisticsExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_getStatisticsExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceGetStatisticsExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceListContainersSegmentHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_listContainersSegmentHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceListContainersSegmentHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceListContainersSegmentExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_listContainersSegmentExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceListContainersSegmentExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceGetUserDelegationKeyHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_getUserDelegationKeyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetUserDelegationKeyHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceGetUserDelegationKeyExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_getUserDelegationKeyExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceGetUserDelegationKeyExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceGetAccountInfoHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_getAccountInfoHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetAccountInfoHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        xmlName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\",\n          ],\n        },\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        xmlName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\",\n            \"FileStorage\",\n            \"BlockBlobStorage\",\n          ],\n        },\n      },\n      isHierarchicalNamespaceEnabled: {\n        serializedName: \"x-ms-is-hns-enabled\",\n        xmlName: \"x-ms-is-hns-enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceGetAccountInfoExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_getAccountInfoExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceGetAccountInfoExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceSubmitBatchHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_submitBatchHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSubmitBatchHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceSubmitBatchExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_submitBatchExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSubmitBatchExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceFilterBlobsHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_filterBlobsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceFilterBlobsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceFilterBlobsExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_filterBlobsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceFilterBlobsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerCreateHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerCreateExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerGetPropertiesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetPropertiesHeaders\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        headerCollectionPrefix: \"x-ms-meta-\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobPublicAccess: {\n        serializedName: \"x-ms-blob-public-access\",\n        xmlName: \"x-ms-blob-public-access\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"container\", \"blob\"],\n        },\n      },\n      hasImmutabilityPolicy: {\n        serializedName: \"x-ms-has-immutability-policy\",\n        xmlName: \"x-ms-has-immutability-policy\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      hasLegalHold: {\n        serializedName: \"x-ms-has-legal-hold\",\n        xmlName: \"x-ms-has-legal-hold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      defaultEncryptionScope: {\n        serializedName: \"x-ms-default-encryption-scope\",\n        xmlName: \"x-ms-default-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      denyEncryptionScopeOverride: {\n        serializedName: \"x-ms-deny-encryption-scope-override\",\n        xmlName: \"x-ms-deny-encryption-scope-override\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      isImmutableStorageWithVersioningEnabled: {\n        serializedName: \"x-ms-immutable-storage-with-versioning-enabled\",\n        xmlName: \"x-ms-immutable-storage-with-versioning-enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerGetPropertiesExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_getPropertiesExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerGetPropertiesExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerDeleteHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_deleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerDeleteHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerDeleteExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_deleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerDeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerSetMetadataHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_setMetadataHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerSetMetadataExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_setMetadataExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerSetMetadataExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerGetAccessPolicyHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_getAccessPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccessPolicyHeaders\",\n    modelProperties: {\n      blobPublicAccess: {\n        serializedName: \"x-ms-blob-public-access\",\n        xmlName: \"x-ms-blob-public-access\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"container\", \"blob\"],\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerGetAccessPolicyExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_getAccessPolicyExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerGetAccessPolicyExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerSetAccessPolicyHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_setAccessPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetAccessPolicyHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerSetAccessPolicyExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_setAccessPolicyExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerSetAccessPolicyExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerRestoreHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_restoreHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRestoreHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerRestoreExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_restoreExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRestoreExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerRenameHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_renameHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenameHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerRenameExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_renameExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenameExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerSubmitBatchHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_submitBatchHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSubmitBatchHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerSubmitBatchExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_submitBatchExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerSubmitBatchExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerFilterBlobsHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_filterBlobsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerFilterBlobsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerFilterBlobsExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_filterBlobsExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerFilterBlobsExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerAcquireLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_acquireLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAcquireLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerAcquireLeaseExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_acquireLeaseExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerAcquireLeaseExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerReleaseLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_releaseLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerReleaseLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerReleaseLeaseExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_releaseLeaseExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerReleaseLeaseExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerRenewLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_renewLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenewLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerRenewLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_renewLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenewLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerBreakLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_breakLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerBreakLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseTime: {\n        serializedName: \"x-ms-lease-time\",\n        xmlName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerBreakLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_breakLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerBreakLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerChangeLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_changeLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerChangeLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerChangeLeaseExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_changeLeaseExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerChangeLeaseExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerListBlobFlatSegmentHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_listBlobFlatSegmentHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerListBlobFlatSegmentHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerListBlobFlatSegmentExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_listBlobFlatSegmentExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerListBlobFlatSegmentExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerListBlobHierarchySegmentHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_listBlobHierarchySegmentHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerListBlobHierarchySegmentHeaders\",\n      modelProperties: {\n        contentType: {\n          serializedName: \"content-type\",\n          xmlName: \"content-type\",\n          type: {\n            name: \"String\",\n          },\n        },\n        clientRequestId: {\n          serializedName: \"x-ms-client-request-id\",\n          xmlName: \"x-ms-client-request-id\",\n          type: {\n            name: \"String\",\n          },\n        },\n        requestId: {\n          serializedName: \"x-ms-request-id\",\n          xmlName: \"x-ms-request-id\",\n          type: {\n            name: \"String\",\n          },\n        },\n        version: {\n          serializedName: \"x-ms-version\",\n          xmlName: \"x-ms-version\",\n          type: {\n            name: \"String\",\n          },\n        },\n        date: {\n          serializedName: \"date\",\n          xmlName: \"date\",\n          type: {\n            name: \"DateTimeRfc1123\",\n          },\n        },\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerListBlobHierarchySegmentExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_listBlobHierarchySegmentExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerListBlobHierarchySegmentExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerGetAccountInfoHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_getAccountInfoHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccountInfoHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        xmlName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\",\n          ],\n        },\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        xmlName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\",\n            \"FileStorage\",\n            \"BlockBlobStorage\",\n          ],\n        },\n      },\n      isHierarchicalNamespaceEnabled: {\n        serializedName: \"x-ms-is-hns-enabled\",\n        xmlName: \"x-ms-is-hns-enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerGetAccountInfoExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_getAccountInfoExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerGetAccountInfoExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlobDownloadHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_downloadHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDownloadHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      createdOn: {\n        serializedName: \"x-ms-creation-time\",\n        xmlName: \"x-ms-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        headerCollectionPrefix: \"x-ms-meta-\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      objectReplicationPolicyId: {\n        serializedName: \"x-ms-or-policy-id\",\n        xmlName: \"x-ms-or-policy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      objectReplicationRules: {\n        serializedName: \"x-ms-or\",\n        headerCollectionPrefix: \"x-ms-or-\",\n        xmlName: \"x-ms-or\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        xmlName: \"content-range\",\n        type: {\n          name: \"String\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\",\n        },\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        xmlName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"],\n        },\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      isCurrentVersion: {\n        serializedName: \"x-ms-is-current-version\",\n        xmlName: \"x-ms-is-current-version\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        xmlName: \"accept-ranges\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobContentMD5: {\n        serializedName: \"x-ms-blob-content-md5\",\n        xmlName: \"x-ms-blob-content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      tagCount: {\n        serializedName: \"x-ms-tag-count\",\n        xmlName: \"x-ms-tag-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isSealed: {\n        serializedName: \"x-ms-blob-sealed\",\n        xmlName: \"x-ms-blob-sealed\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      lastAccessed: {\n        serializedName: \"x-ms-last-access-time\",\n        xmlName: \"x-ms-last-access-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyExpiresOn: {\n        serializedName: \"x-ms-immutability-policy-until-date\",\n        xmlName: \"x-ms-immutability-policy-until-date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"x-ms-immutability-policy-mode\",\n        xmlName: \"x-ms-immutability-policy-mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"],\n        },\n      },\n      legalHold: {\n        serializedName: \"x-ms-legal-hold\",\n        xmlName: \"x-ms-legal-hold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobDownloadExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_downloadExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDownloadExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetPropertiesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetPropertiesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      createdOn: {\n        serializedName: \"x-ms-creation-time\",\n        xmlName: \"x-ms-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        headerCollectionPrefix: \"x-ms-meta-\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      objectReplicationPolicyId: {\n        serializedName: \"x-ms-or-policy-id\",\n        xmlName: \"x-ms-or-policy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      objectReplicationRules: {\n        serializedName: \"x-ms-or\",\n        headerCollectionPrefix: \"x-ms-or-\",\n        xmlName: \"x-ms-or\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        xmlName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"],\n        },\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      isIncrementalCopy: {\n        serializedName: \"x-ms-incremental-copy\",\n        xmlName: \"x-ms-incremental-copy\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      destinationSnapshot: {\n        serializedName: \"x-ms-copy-destination-snapshot\",\n        xmlName: \"x-ms-copy-destination-snapshot\",\n        type: {\n          name: \"String\",\n        },\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\",\n        },\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        xmlName: \"accept-ranges\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accessTier: {\n        serializedName: \"x-ms-access-tier\",\n        xmlName: \"x-ms-access-tier\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accessTierInferred: {\n        serializedName: \"x-ms-access-tier-inferred\",\n        xmlName: \"x-ms-access-tier-inferred\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      archiveStatus: {\n        serializedName: \"x-ms-archive-status\",\n        xmlName: \"x-ms-archive-status\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accessTierChangedOn: {\n        serializedName: \"x-ms-access-tier-change-time\",\n        xmlName: \"x-ms-access-tier-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      isCurrentVersion: {\n        serializedName: \"x-ms-is-current-version\",\n        xmlName: \"x-ms-is-current-version\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      tagCount: {\n        serializedName: \"x-ms-tag-count\",\n        xmlName: \"x-ms-tag-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      expiresOn: {\n        serializedName: \"x-ms-expiry-time\",\n        xmlName: \"x-ms-expiry-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isSealed: {\n        serializedName: \"x-ms-blob-sealed\",\n        xmlName: \"x-ms-blob-sealed\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      rehydratePriority: {\n        serializedName: \"x-ms-rehydrate-priority\",\n        xmlName: \"x-ms-rehydrate-priority\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"High\", \"Standard\"],\n        },\n      },\n      lastAccessed: {\n        serializedName: \"x-ms-last-access-time\",\n        xmlName: \"x-ms-last-access-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyExpiresOn: {\n        serializedName: \"x-ms-immutability-policy-until-date\",\n        xmlName: \"x-ms-immutability-policy-until-date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"x-ms-immutability-policy-mode\",\n        xmlName: \"x-ms-immutability-policy-mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"],\n        },\n      },\n      legalHold: {\n        serializedName: \"x-ms-legal-hold\",\n        xmlName: \"x-ms-legal-hold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetPropertiesExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobDeleteHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_deleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobDeleteExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_deleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobUndeleteHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_undeleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobUndeleteHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobUndeleteExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_undeleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobUndeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetExpiryHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setExpiryHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetExpiryHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetExpiryExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setExpiryExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetExpiryExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetHttpHeadersHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setHttpHeadersHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetHttpHeadersHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetHttpHeadersExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setHttpHeadersExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetHttpHeadersExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetImmutabilityPolicyHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setImmutabilityPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetImmutabilityPolicyHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyExpiry: {\n        serializedName: \"x-ms-immutability-policy-until-date\",\n        xmlName: \"x-ms-immutability-policy-until-date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"x-ms-immutability-policy-mode\",\n        xmlName: \"x-ms-immutability-policy-mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"],\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetImmutabilityPolicyExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Blob_setImmutabilityPolicyExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlobSetImmutabilityPolicyExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlobDeleteImmutabilityPolicyHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_deleteImmutabilityPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteImmutabilityPolicyHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobDeleteImmutabilityPolicyExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Blob_deleteImmutabilityPolicyExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlobDeleteImmutabilityPolicyExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlobSetLegalHoldHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setLegalHoldHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetLegalHoldHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      legalHold: {\n        serializedName: \"x-ms-legal-hold\",\n        xmlName: \"x-ms-legal-hold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetLegalHoldExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setLegalHoldExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetLegalHoldExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetMetadataHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setMetadataHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetMetadataExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setMetadataExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetMetadataExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobAcquireLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_acquireLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAcquireLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobAcquireLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_acquireLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAcquireLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobReleaseLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_releaseLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobReleaseLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobReleaseLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_releaseLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobReleaseLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobRenewLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_renewLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobRenewLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobRenewLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_renewLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobRenewLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobChangeLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_changeLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobChangeLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobChangeLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_changeLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobChangeLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobBreakLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_breakLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobBreakLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseTime: {\n        serializedName: \"x-ms-lease-time\",\n        xmlName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobBreakLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_breakLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobBreakLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobCreateSnapshotHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_createSnapshotHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCreateSnapshotHeaders\",\n    modelProperties: {\n      snapshot: {\n        serializedName: \"x-ms-snapshot\",\n        xmlName: \"x-ms-snapshot\",\n        type: {\n          name: \"String\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobCreateSnapshotExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_createSnapshotExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCreateSnapshotExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobStartCopyFromURLHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_startCopyFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobStartCopyFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobStartCopyFromURLExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Blob_startCopyFromURLExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlobStartCopyFromURLExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlobCopyFromURLHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_copyFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCopyFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        defaultValue: \"success\",\n        isConstant: true,\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobCopyFromURLExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_copyFromURLExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCopyFromURLExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobAbortCopyFromURLHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_abortCopyFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAbortCopyFromURLHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobAbortCopyFromURLExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Blob_abortCopyFromURLExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlobAbortCopyFromURLExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlobSetTierHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setTierHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTierHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetTierExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setTierExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTierExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetAccountInfoHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getAccountInfoHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetAccountInfoHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        xmlName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\",\n          ],\n        },\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        xmlName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\",\n            \"FileStorage\",\n            \"BlockBlobStorage\",\n          ],\n        },\n      },\n      isHierarchicalNamespaceEnabled: {\n        serializedName: \"x-ms-is-hns-enabled\",\n        xmlName: \"x-ms-is-hns-enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetAccountInfoExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getAccountInfoExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetAccountInfoExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobQueryHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_queryHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobQueryHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        headerCollectionPrefix: \"x-ms-meta-\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        xmlName: \"content-range\",\n        type: {\n          name: \"String\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\",\n        },\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        xmlName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"],\n        },\n      },\n      copyCompletionTime: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        xmlName: \"accept-ranges\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobContentMD5: {\n        serializedName: \"x-ms-blob-content-md5\",\n        xmlName: \"x-ms-blob-content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobQueryExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_queryExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobQueryExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetTagsHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getTagsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetTagsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetTagsExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getTagsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetTagsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetTagsHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setTagsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTagsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetTagsExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setTagsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTagsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobCreateHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobCreateExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUploadPagesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_uploadPagesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUploadPagesExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_uploadPagesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobClearPagesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_clearPagesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobClearPagesHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobClearPagesExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_clearPagesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobClearPagesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUploadPagesFromURLHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_uploadPagesFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUploadPagesFromURLExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"PageBlob_uploadPagesFromURLExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"PageBlobUploadPagesFromURLExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PageBlobGetPageRangesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_getPageRangesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        xmlName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobGetPageRangesExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"PageBlob_getPageRangesExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"PageBlobGetPageRangesExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PageBlobGetPageRangesDiffHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_getPageRangesDiffHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesDiffHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        xmlName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobGetPageRangesDiffExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"PageBlob_getPageRangesDiffExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"PageBlobGetPageRangesDiffExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PageBlobResizeHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_resizeHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobResizeHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobResizeExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_resizeExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobResizeExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUpdateSequenceNumberHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_updateSequenceNumberHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUpdateSequenceNumberHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUpdateSequenceNumberExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"PageBlob_updateSequenceNumberExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"PageBlobUpdateSequenceNumberExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PageBlobCopyIncrementalHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_copyIncrementalHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCopyIncrementalHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobCopyIncrementalExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"PageBlob_copyIncrementalExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"PageBlobCopyIncrementalExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppendBlobCreateHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppendBlobCreateExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppendBlobAppendBlockHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_appendBlockHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobAppendBlockHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobAppendOffset: {\n        serializedName: \"x-ms-blob-append-offset\",\n        xmlName: \"x-ms-blob-append-offset\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppendBlobAppendBlockExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"AppendBlob_appendBlockExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"AppendBlobAppendBlockExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppendBlobAppendBlockFromUrlHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_appendBlockFromUrlHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobAppendBlockFromUrlHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobAppendOffset: {\n        serializedName: \"x-ms-blob-append-offset\",\n        xmlName: \"x-ms-blob-append-offset\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppendBlobAppendBlockFromUrlExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"AppendBlob_appendBlockFromUrlExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"AppendBlobAppendBlockFromUrlExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppendBlobSealHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_sealHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobSealHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isSealed: {\n        serializedName: \"x-ms-blob-sealed\",\n        xmlName: \"x-ms-blob-sealed\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppendBlobSealExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_sealExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobSealExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobUploadHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_uploadHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobUploadHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobUploadExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_uploadExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobUploadExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobPutBlobFromUrlHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_putBlobFromUrlHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobPutBlobFromUrlHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobPutBlobFromUrlExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"BlockBlob_putBlobFromUrlExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlockBlobPutBlobFromUrlExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlockBlobStageBlockHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_stageBlockHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockHeaders\",\n    modelProperties: {\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobStageBlockExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_stageBlockExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobStageBlockFromURLHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_stageBlockFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockFromURLHeaders\",\n    modelProperties: {\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobStageBlockFromURLExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"BlockBlob_stageBlockFromURLExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlockBlobStageBlockFromURLExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlockBlobCommitBlockListHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_commitBlockListHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobCommitBlockListHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobCommitBlockListExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"BlockBlob_commitBlockListExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlockBlobCommitBlockListExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlockBlobGetBlockListHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_getBlockListHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobGetBlockListHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        xmlName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobGetBlockListExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"BlockBlob_getBlockListExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlockBlobGetBlockListExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\nimport {\n  BlobServiceProperties as BlobServicePropertiesMapper,\n  KeyInfo as KeyInfoMapper,\n  QueryRequest as QueryRequestMapper,\n  BlobTags as BlobTagsMapper,\n  BlockLookupList as BlockLookupListMapper,\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobServiceProperties: OperationParameter = {\n  parameterPath: \"blobServiceProperties\",\n  mapper: BlobServicePropertiesMapper,\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const url: OperationURLParameter = {\n  parameterPath: \"url\",\n  mapper: {\n    serializedName: \"url\",\n    required: true,\n    xmlName: \"url\",\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const restype: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"service\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"properties\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const timeoutInSeconds: OperationQueryParameter = {\n  parameterPath: [\"options\", \"timeoutInSeconds\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 0,\n    },\n    serializedName: \"timeout\",\n    xmlName: \"timeout\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const version: OperationParameter = {\n  parameterPath: \"version\",\n  mapper: {\n    defaultValue: \"2025-05-05\",\n    isConstant: true,\n    serializedName: \"x-ms-version\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const requestId: OperationParameter = {\n  parameterPath: [\"options\", \"requestId\"],\n  mapper: {\n    serializedName: \"x-ms-client-request-id\",\n    xmlName: \"x-ms-client-request-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const accept1: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp1: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"stats\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp2: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"list\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const prefix: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prefix\"],\n  mapper: {\n    serializedName: \"prefix\",\n    xmlName: \"prefix\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const marker: OperationQueryParameter = {\n  parameterPath: [\"options\", \"marker\"],\n  mapper: {\n    serializedName: \"marker\",\n    xmlName: \"marker\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const maxPageSize: OperationQueryParameter = {\n  parameterPath: [\"options\", \"maxPageSize\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1,\n    },\n    serializedName: \"maxresults\",\n    xmlName: \"maxresults\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const include: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"include\",\n    xmlName: \"include\",\n    xmlElementName: \"ListContainersIncludeType\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"metadata\", \"deleted\", \"system\"],\n        },\n      },\n    },\n  },\n  collectionFormat: \"CSV\",\n};\n\nexport const keyInfo: OperationParameter = {\n  parameterPath: \"keyInfo\",\n  mapper: KeyInfoMapper,\n};\n\nexport const comp3: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"userdelegationkey\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const restype1: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"account\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: {\n    serializedName: \"body\",\n    required: true,\n    xmlName: \"body\",\n    type: {\n      name: \"Stream\",\n    },\n  },\n};\n\nexport const comp4: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"batch\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contentLength: OperationParameter = {\n  parameterPath: \"contentLength\",\n  mapper: {\n    serializedName: \"Content-Length\",\n    required: true,\n    xmlName: \"Content-Length\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const multipartContentType: OperationParameter = {\n  parameterPath: \"multipartContentType\",\n  mapper: {\n    serializedName: \"Content-Type\",\n    required: true,\n    xmlName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp5: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"blobs\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const where: OperationQueryParameter = {\n  parameterPath: [\"options\", \"where\"],\n  mapper: {\n    serializedName: \"where\",\n    xmlName: \"where\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const restype2: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"container\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const metadata: OperationParameter = {\n  parameterPath: [\"options\", \"metadata\"],\n  mapper: {\n    serializedName: \"x-ms-meta\",\n    xmlName: \"x-ms-meta\",\n    headerCollectionPrefix: \"x-ms-meta-\",\n    type: {\n      name: \"Dictionary\",\n      value: { type: { name: \"String\" } },\n    },\n  },\n};\n\nexport const access: OperationParameter = {\n  parameterPath: [\"options\", \"access\"],\n  mapper: {\n    serializedName: \"x-ms-blob-public-access\",\n    xmlName: \"x-ms-blob-public-access\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"container\", \"blob\"],\n    },\n  },\n};\n\nexport const defaultEncryptionScope: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"containerEncryptionScope\",\n    \"defaultEncryptionScope\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-default-encryption-scope\",\n    xmlName: \"x-ms-default-encryption-scope\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const preventEncryptionScopeOverride: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"containerEncryptionScope\",\n    \"preventEncryptionScopeOverride\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-deny-encryption-scope-override\",\n    xmlName: \"x-ms-deny-encryption-scope-override\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const leaseId: OperationParameter = {\n  parameterPath: [\"options\", \"leaseAccessConditions\", \"leaseId\"],\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    xmlName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifModifiedSince: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifModifiedSince\"],\n  mapper: {\n    serializedName: \"If-Modified-Since\",\n    xmlName: \"If-Modified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const ifUnmodifiedSince: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifUnmodifiedSince\"],\n  mapper: {\n    serializedName: \"If-Unmodified-Since\",\n    xmlName: \"If-Unmodified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const comp6: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"metadata\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp7: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"acl\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const containerAcl: OperationParameter = {\n  parameterPath: [\"options\", \"containerAcl\"],\n  mapper: {\n    serializedName: \"containerAcl\",\n    xmlName: \"SignedIdentifiers\",\n    xmlIsWrapped: true,\n    xmlElementName: \"SignedIdentifier\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Composite\",\n          className: \"SignedIdentifier\",\n        },\n      },\n    },\n  },\n};\n\nexport const comp8: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"undelete\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const deletedContainerName: OperationParameter = {\n  parameterPath: [\"options\", \"deletedContainerName\"],\n  mapper: {\n    serializedName: \"x-ms-deleted-container-name\",\n    xmlName: \"x-ms-deleted-container-name\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const deletedContainerVersion: OperationParameter = {\n  parameterPath: [\"options\", \"deletedContainerVersion\"],\n  mapper: {\n    serializedName: \"x-ms-deleted-container-version\",\n    xmlName: \"x-ms-deleted-container-version\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp9: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"rename\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceContainerName: OperationParameter = {\n  parameterPath: \"sourceContainerName\",\n  mapper: {\n    serializedName: \"x-ms-source-container-name\",\n    required: true,\n    xmlName: \"x-ms-source-container-name\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceLeaseId: OperationParameter = {\n  parameterPath: [\"options\", \"sourceLeaseId\"],\n  mapper: {\n    serializedName: \"x-ms-source-lease-id\",\n    xmlName: \"x-ms-source-lease-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp10: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"lease\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const action: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"acquire\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const duration: OperationParameter = {\n  parameterPath: [\"options\", \"duration\"],\n  mapper: {\n    serializedName: \"x-ms-lease-duration\",\n    xmlName: \"x-ms-lease-duration\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const proposedLeaseId: OperationParameter = {\n  parameterPath: [\"options\", \"proposedLeaseId\"],\n  mapper: {\n    serializedName: \"x-ms-proposed-lease-id\",\n    xmlName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const action1: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"release\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const leaseId1: OperationParameter = {\n  parameterPath: \"leaseId\",\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    required: true,\n    xmlName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const action2: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"renew\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const action3: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"break\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const breakPeriod: OperationParameter = {\n  parameterPath: [\"options\", \"breakPeriod\"],\n  mapper: {\n    serializedName: \"x-ms-lease-break-period\",\n    xmlName: \"x-ms-lease-break-period\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const action4: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"change\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const proposedLeaseId1: OperationParameter = {\n  parameterPath: \"proposedLeaseId\",\n  mapper: {\n    serializedName: \"x-ms-proposed-lease-id\",\n    required: true,\n    xmlName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const include1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"include\",\n    xmlName: \"include\",\n    xmlElementName: \"ListBlobsIncludeItem\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"copy\",\n            \"deleted\",\n            \"metadata\",\n            \"snapshots\",\n            \"uncommittedblobs\",\n            \"versions\",\n            \"tags\",\n            \"immutabilitypolicy\",\n            \"legalhold\",\n            \"deletedwithversions\",\n          ],\n        },\n      },\n    },\n  },\n  collectionFormat: \"CSV\",\n};\n\nexport const delimiter: OperationQueryParameter = {\n  parameterPath: \"delimiter\",\n  mapper: {\n    serializedName: \"delimiter\",\n    required: true,\n    xmlName: \"delimiter\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const snapshot: OperationQueryParameter = {\n  parameterPath: [\"options\", \"snapshot\"],\n  mapper: {\n    serializedName: \"snapshot\",\n    xmlName: \"snapshot\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const versionId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"versionId\"],\n  mapper: {\n    serializedName: \"versionid\",\n    xmlName: \"versionid\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const range: OperationParameter = {\n  parameterPath: [\"options\", \"range\"],\n  mapper: {\n    serializedName: \"x-ms-range\",\n    xmlName: \"x-ms-range\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const rangeGetContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"rangeGetContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-md5\",\n    xmlName: \"x-ms-range-get-content-md5\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const rangeGetContentCRC64: OperationParameter = {\n  parameterPath: [\"options\", \"rangeGetContentCRC64\"],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-crc64\",\n    xmlName: \"x-ms-range-get-content-crc64\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const encryptionKey: OperationParameter = {\n  parameterPath: [\"options\", \"cpkInfo\", \"encryptionKey\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-key\",\n    xmlName: \"x-ms-encryption-key\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const encryptionKeySha256: OperationParameter = {\n  parameterPath: [\"options\", \"cpkInfo\", \"encryptionKeySha256\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-key-sha256\",\n    xmlName: \"x-ms-encryption-key-sha256\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const encryptionAlgorithm: OperationParameter = {\n  parameterPath: [\"options\", \"cpkInfo\", \"encryptionAlgorithm\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-algorithm\",\n    xmlName: \"x-ms-encryption-algorithm\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifMatch: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    xmlName: \"If-Match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifNoneMatch: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifNoneMatch\"],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    xmlName: \"If-None-Match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifTags: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifTags\"],\n  mapper: {\n    serializedName: \"x-ms-if-tags\",\n    xmlName: \"x-ms-if-tags\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const deleteSnapshots: OperationParameter = {\n  parameterPath: [\"options\", \"deleteSnapshots\"],\n  mapper: {\n    serializedName: \"x-ms-delete-snapshots\",\n    xmlName: \"x-ms-delete-snapshots\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"include\", \"only\"],\n    },\n  },\n};\n\nexport const blobDeleteType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"blobDeleteType\"],\n  mapper: {\n    serializedName: \"deletetype\",\n    xmlName: \"deletetype\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp11: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"expiry\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const expiryOptions: OperationParameter = {\n  parameterPath: \"expiryOptions\",\n  mapper: {\n    serializedName: \"x-ms-expiry-option\",\n    required: true,\n    xmlName: \"x-ms-expiry-option\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const expiresOn: OperationParameter = {\n  parameterPath: [\"options\", \"expiresOn\"],\n  mapper: {\n    serializedName: \"x-ms-expiry-time\",\n    xmlName: \"x-ms-expiry-time\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobCacheControl: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobCacheControl\"],\n  mapper: {\n    serializedName: \"x-ms-blob-cache-control\",\n    xmlName: \"x-ms-blob-cache-control\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContentType: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentType\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-type\",\n    xmlName: \"x-ms-blob-content-type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-md5\",\n    xmlName: \"x-ms-blob-content-md5\",\n    type: {\n      name: \"ByteArray\",\n    },\n  },\n};\n\nexport const blobContentEncoding: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentEncoding\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-encoding\",\n    xmlName: \"x-ms-blob-content-encoding\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContentLanguage: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentLanguage\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-language\",\n    xmlName: \"x-ms-blob-content-language\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContentDisposition: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentDisposition\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-disposition\",\n    xmlName: \"x-ms-blob-content-disposition\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp12: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"immutabilityPolicies\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const immutabilityPolicyExpiry: OperationParameter = {\n  parameterPath: [\"options\", \"immutabilityPolicyExpiry\"],\n  mapper: {\n    serializedName: \"x-ms-immutability-policy-until-date\",\n    xmlName: \"x-ms-immutability-policy-until-date\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const immutabilityPolicyMode: OperationParameter = {\n  parameterPath: [\"options\", \"immutabilityPolicyMode\"],\n  mapper: {\n    serializedName: \"x-ms-immutability-policy-mode\",\n    xmlName: \"x-ms-immutability-policy-mode\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"],\n    },\n  },\n};\n\nexport const comp13: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"legalhold\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const legalHold: OperationParameter = {\n  parameterPath: \"legalHold\",\n  mapper: {\n    serializedName: \"x-ms-legal-hold\",\n    required: true,\n    xmlName: \"x-ms-legal-hold\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const encryptionScope: OperationParameter = {\n  parameterPath: [\"options\", \"encryptionScope\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-scope\",\n    xmlName: \"x-ms-encryption-scope\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp14: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"snapshot\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const tier: OperationParameter = {\n  parameterPath: [\"options\", \"tier\"],\n  mapper: {\n    serializedName: \"x-ms-access-tier\",\n    xmlName: \"x-ms-access-tier\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"P4\",\n        \"P6\",\n        \"P10\",\n        \"P15\",\n        \"P20\",\n        \"P30\",\n        \"P40\",\n        \"P50\",\n        \"P60\",\n        \"P70\",\n        \"P80\",\n        \"Hot\",\n        \"Cool\",\n        \"Archive\",\n        \"Cold\",\n      ],\n    },\n  },\n};\n\nexport const rehydratePriority: OperationParameter = {\n  parameterPath: [\"options\", \"rehydratePriority\"],\n  mapper: {\n    serializedName: \"x-ms-rehydrate-priority\",\n    xmlName: \"x-ms-rehydrate-priority\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"High\", \"Standard\"],\n    },\n  },\n};\n\nexport const sourceIfModifiedSince: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfModifiedSince\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-modified-since\",\n    xmlName: \"x-ms-source-if-modified-since\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const sourceIfUnmodifiedSince: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfUnmodifiedSince\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-unmodified-since\",\n    xmlName: \"x-ms-source-if-unmodified-since\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const sourceIfMatch: OperationParameter = {\n  parameterPath: [\"options\", \"sourceModifiedAccessConditions\", \"sourceIfMatch\"],\n  mapper: {\n    serializedName: \"x-ms-source-if-match\",\n    xmlName: \"x-ms-source-if-match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceIfNoneMatch: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfNoneMatch\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-none-match\",\n    xmlName: \"x-ms-source-if-none-match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceIfTags: OperationParameter = {\n  parameterPath: [\"options\", \"sourceModifiedAccessConditions\", \"sourceIfTags\"],\n  mapper: {\n    serializedName: \"x-ms-source-if-tags\",\n    xmlName: \"x-ms-source-if-tags\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const copySource: OperationParameter = {\n  parameterPath: \"copySource\",\n  mapper: {\n    serializedName: \"x-ms-copy-source\",\n    required: true,\n    xmlName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobTagsString: OperationParameter = {\n  parameterPath: [\"options\", \"blobTagsString\"],\n  mapper: {\n    serializedName: \"x-ms-tags\",\n    xmlName: \"x-ms-tags\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sealBlob: OperationParameter = {\n  parameterPath: [\"options\", \"sealBlob\"],\n  mapper: {\n    serializedName: \"x-ms-seal-blob\",\n    xmlName: \"x-ms-seal-blob\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const legalHold1: OperationParameter = {\n  parameterPath: [\"options\", \"legalHold\"],\n  mapper: {\n    serializedName: \"x-ms-legal-hold\",\n    xmlName: \"x-ms-legal-hold\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const xMsRequiresSync: OperationParameter = {\n  parameterPath: \"xMsRequiresSync\",\n  mapper: {\n    defaultValue: \"true\",\n    isConstant: true,\n    serializedName: \"x-ms-requires-sync\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"sourceContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-source-content-md5\",\n    xmlName: \"x-ms-source-content-md5\",\n    type: {\n      name: \"ByteArray\",\n    },\n  },\n};\n\nexport const copySourceAuthorization: OperationParameter = {\n  parameterPath: [\"options\", \"copySourceAuthorization\"],\n  mapper: {\n    serializedName: \"x-ms-copy-source-authorization\",\n    xmlName: \"x-ms-copy-source-authorization\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const copySourceTags: OperationParameter = {\n  parameterPath: [\"options\", \"copySourceTags\"],\n  mapper: {\n    serializedName: \"x-ms-copy-source-tag-option\",\n    xmlName: \"x-ms-copy-source-tag-option\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"REPLACE\", \"COPY\"],\n    },\n  },\n};\n\nexport const comp15: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"copy\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const copyActionAbortConstant: OperationParameter = {\n  parameterPath: \"copyActionAbortConstant\",\n  mapper: {\n    defaultValue: \"abort\",\n    isConstant: true,\n    serializedName: \"x-ms-copy-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const copyId: OperationQueryParameter = {\n  parameterPath: \"copyId\",\n  mapper: {\n    serializedName: \"copyid\",\n    required: true,\n    xmlName: \"copyid\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp16: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"tier\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const tier1: OperationParameter = {\n  parameterPath: \"tier\",\n  mapper: {\n    serializedName: \"x-ms-access-tier\",\n    required: true,\n    xmlName: \"x-ms-access-tier\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"P4\",\n        \"P6\",\n        \"P10\",\n        \"P15\",\n        \"P20\",\n        \"P30\",\n        \"P40\",\n        \"P50\",\n        \"P60\",\n        \"P70\",\n        \"P80\",\n        \"Hot\",\n        \"Cool\",\n        \"Archive\",\n        \"Cold\",\n      ],\n    },\n  },\n};\n\nexport const queryRequest: OperationParameter = {\n  parameterPath: [\"options\", \"queryRequest\"],\n  mapper: QueryRequestMapper,\n};\n\nexport const comp17: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"query\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp18: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"tags\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const tags: OperationParameter = {\n  parameterPath: [\"options\", \"tags\"],\n  mapper: BlobTagsMapper,\n};\n\nexport const transactionalContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"transactionalContentMD5\"],\n  mapper: {\n    serializedName: \"Content-MD5\",\n    xmlName: \"Content-MD5\",\n    type: {\n      name: \"ByteArray\",\n    },\n  },\n};\n\nexport const transactionalContentCrc64: OperationParameter = {\n  parameterPath: [\"options\", \"transactionalContentCrc64\"],\n  mapper: {\n    serializedName: \"x-ms-content-crc64\",\n    xmlName: \"x-ms-content-crc64\",\n    type: {\n      name: \"ByteArray\",\n    },\n  },\n};\n\nexport const blobType: OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    defaultValue: \"PageBlob\",\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContentLength: OperationParameter = {\n  parameterPath: \"blobContentLength\",\n  mapper: {\n    serializedName: \"x-ms-blob-content-length\",\n    required: true,\n    xmlName: \"x-ms-blob-content-length\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const blobSequenceNumber: OperationParameter = {\n  parameterPath: [\"options\", \"blobSequenceNumber\"],\n  mapper: {\n    defaultValue: 0,\n    serializedName: \"x-ms-blob-sequence-number\",\n    xmlName: \"x-ms-blob-sequence-number\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const contentType1: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/octet-stream\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: {\n    serializedName: \"body\",\n    required: true,\n    xmlName: \"body\",\n    type: {\n      name: \"Stream\",\n    },\n  },\n};\n\nexport const accept2: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp19: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"page\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const pageWrite: OperationParameter = {\n  parameterPath: \"pageWrite\",\n  mapper: {\n    defaultValue: \"update\",\n    isConstant: true,\n    serializedName: \"x-ms-page-write\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifSequenceNumberLessThanOrEqualTo: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberLessThanOrEqualTo\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-le\",\n    xmlName: \"x-ms-if-sequence-number-le\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const ifSequenceNumberLessThan: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberLessThan\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-lt\",\n    xmlName: \"x-ms-if-sequence-number-lt\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const ifSequenceNumberEqualTo: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberEqualTo\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-eq\",\n    xmlName: \"x-ms-if-sequence-number-eq\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const pageWrite1: OperationParameter = {\n  parameterPath: \"pageWrite\",\n  mapper: {\n    defaultValue: \"clear\",\n    isConstant: true,\n    serializedName: \"x-ms-page-write\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceUrl: OperationParameter = {\n  parameterPath: \"sourceUrl\",\n  mapper: {\n    serializedName: \"x-ms-copy-source\",\n    required: true,\n    xmlName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceRange: OperationParameter = {\n  parameterPath: \"sourceRange\",\n  mapper: {\n    serializedName: \"x-ms-source-range\",\n    required: true,\n    xmlName: \"x-ms-source-range\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceContentCrc64: OperationParameter = {\n  parameterPath: [\"options\", \"sourceContentCrc64\"],\n  mapper: {\n    serializedName: \"x-ms-source-content-crc64\",\n    xmlName: \"x-ms-source-content-crc64\",\n    type: {\n      name: \"ByteArray\",\n    },\n  },\n};\n\nexport const range1: OperationParameter = {\n  parameterPath: \"range\",\n  mapper: {\n    serializedName: \"x-ms-range\",\n    required: true,\n    xmlName: \"x-ms-range\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp20: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"pagelist\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const prevsnapshot: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prevsnapshot\"],\n  mapper: {\n    serializedName: \"prevsnapshot\",\n    xmlName: \"prevsnapshot\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const prevSnapshotUrl: OperationParameter = {\n  parameterPath: [\"options\", \"prevSnapshotUrl\"],\n  mapper: {\n    serializedName: \"x-ms-previous-snapshot-url\",\n    xmlName: \"x-ms-previous-snapshot-url\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sequenceNumberAction: OperationParameter = {\n  parameterPath: \"sequenceNumberAction\",\n  mapper: {\n    serializedName: \"x-ms-sequence-number-action\",\n    required: true,\n    xmlName: \"x-ms-sequence-number-action\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"max\", \"update\", \"increment\"],\n    },\n  },\n};\n\nexport const comp21: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"incrementalcopy\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobType1: OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    defaultValue: \"AppendBlob\",\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp22: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"appendblock\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const maxSize: OperationParameter = {\n  parameterPath: [\"options\", \"appendPositionAccessConditions\", \"maxSize\"],\n  mapper: {\n    serializedName: \"x-ms-blob-condition-maxsize\",\n    xmlName: \"x-ms-blob-condition-maxsize\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const appendPosition: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"appendPositionAccessConditions\",\n    \"appendPosition\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-condition-appendpos\",\n    xmlName: \"x-ms-blob-condition-appendpos\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const sourceRange1: OperationParameter = {\n  parameterPath: [\"options\", \"sourceRange\"],\n  mapper: {\n    serializedName: \"x-ms-source-range\",\n    xmlName: \"x-ms-source-range\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp23: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"seal\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobType2: OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    defaultValue: \"BlockBlob\",\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const copySourceBlobProperties: OperationParameter = {\n  parameterPath: [\"options\", \"copySourceBlobProperties\"],\n  mapper: {\n    serializedName: \"x-ms-copy-source-blob-properties\",\n    xmlName: \"x-ms-copy-source-blob-properties\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const comp24: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"block\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blockId: OperationQueryParameter = {\n  parameterPath: \"blockId\",\n  mapper: {\n    serializedName: \"blockid\",\n    required: true,\n    xmlName: \"blockid\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blocks: OperationParameter = {\n  parameterPath: \"blocks\",\n  mapper: BlockLookupListMapper,\n};\n\nexport const comp25: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"blocklist\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const listType: OperationQueryParameter = {\n  parameterPath: \"listType\",\n  mapper: {\n    defaultValue: \"committed\",\n    serializedName: \"blocklisttype\",\n    required: true,\n    xmlName: \"blocklisttype\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"committed\", \"uncommitted\", \"all\"],\n    },\n  },\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Service } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  BlobServiceProperties,\n  ServiceSetPropertiesOptionalParams,\n  ServiceSetPropertiesResponse,\n  ServiceGetPropertiesOptionalParams,\n  ServiceGetPropertiesResponse,\n  ServiceGetStatisticsOptionalParams,\n  ServiceGetStatisticsResponse,\n  ServiceListContainersSegmentOptionalParams,\n  ServiceListContainersSegmentResponse,\n  KeyInfo,\n  ServiceGetUserDelegationKeyOptionalParams,\n  ServiceGetUserDelegationKeyResponse,\n  ServiceGetAccountInfoOptionalParams,\n  ServiceGetAccountInfoResponse,\n  ServiceSubmitBatchOptionalParams,\n  ServiceSubmitBatchResponse,\n  ServiceFilterBlobsOptionalParams,\n  ServiceFilterBlobsResponse,\n} from \"../models\";\n\n/** Class containing Service operations. */\nexport class ServiceImpl implements Service {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class Service class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * Sets properties for a storage account's Blob service endpoint, including properties for Storage\n   * Analytics and CORS (Cross-Origin Resource Sharing) rules\n   * @param blobServiceProperties The StorageService properties.\n   * @param options The options parameters.\n   */\n  setProperties(\n    blobServiceProperties: BlobServiceProperties,\n    options?: ServiceSetPropertiesOptionalParams,\n  ): Promise<ServiceSetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { blobServiceProperties, options },\n      setPropertiesOperationSpec,\n    );\n  }\n\n  /**\n   * gets the properties of a storage account's Blob service, including properties for Storage Analytics\n   * and CORS (Cross-Origin Resource Sharing) rules.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: ServiceGetPropertiesOptionalParams,\n  ): Promise<ServiceGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPropertiesOperationSpec,\n    );\n  }\n\n  /**\n   * Retrieves statistics related to replication for the Blob service. It is only available on the\n   * secondary location endpoint when read-access geo-redundant replication is enabled for the storage\n   * account.\n   * @param options The options parameters.\n   */\n  getStatistics(\n    options?: ServiceGetStatisticsOptionalParams,\n  ): Promise<ServiceGetStatisticsResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getStatisticsOperationSpec,\n    );\n  }\n\n  /**\n   * The List Containers Segment operation returns a list of the containers under the specified account\n   * @param options The options parameters.\n   */\n  listContainersSegment(\n    options?: ServiceListContainersSegmentOptionalParams,\n  ): Promise<ServiceListContainersSegmentResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listContainersSegmentOperationSpec,\n    );\n  }\n\n  /**\n   * Retrieves a user delegation key for the Blob service. This is only a valid operation when using\n   * bearer token authentication.\n   * @param keyInfo Key information\n   * @param options The options parameters.\n   */\n  getUserDelegationKey(\n    keyInfo: KeyInfo,\n    options?: ServiceGetUserDelegationKeyOptionalParams,\n  ): Promise<ServiceGetUserDelegationKeyResponse> {\n    return this.client.sendOperationRequest(\n      { keyInfo, options },\n      getUserDelegationKeyOperationSpec,\n    );\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param options The options parameters.\n   */\n  getAccountInfo(\n    options?: ServiceGetAccountInfoOptionalParams,\n  ): Promise<ServiceGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getAccountInfoOperationSpec,\n    );\n  }\n\n  /**\n   * The Batch operation allows multiple API calls to be embedded into a single HTTP request.\n   * @param contentLength The length of the request.\n   * @param multipartContentType Required. The value of this header must be multipart/mixed with a batch\n   *                             boundary. Example header value: multipart/mixed; boundary=batch_<GUID>\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  submitBatch(\n    contentLength: number,\n    multipartContentType: string,\n    body: coreRestPipeline.RequestBodyType,\n    options?: ServiceSubmitBatchOptionalParams,\n  ): Promise<ServiceSubmitBatchResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, multipartContentType, body, options },\n      submitBatchOperationSpec,\n    );\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs across all containers whose tags match a\n   * given search expression.  Filter blobs searches across all containers within a storage account but\n   * can be scoped within the expression to a single container.\n   * @param options The options parameters.\n   */\n  filterBlobs(\n    options?: ServiceFilterBlobsOptionalParams,\n  ): Promise<ServiceFilterBlobsResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      filterBlobsOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst setPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ServiceSetPropertiesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceSetPropertiesExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.blobServiceProperties,\n  queryParameters: [\n    Parameters.restype,\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst getPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceProperties,\n      headersMapper: Mappers.ServiceGetPropertiesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetPropertiesExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.restype,\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getStatisticsOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceStatistics,\n      headersMapper: Mappers.ServiceGetStatisticsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetStatisticsExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.restype,\n    Parameters.timeoutInSeconds,\n    Parameters.comp1,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst listContainersSegmentOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListContainersSegmentResponse,\n      headersMapper: Mappers.ServiceListContainersSegmentHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceListContainersSegmentExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp2,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.include,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getUserDelegationKeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UserDelegationKey,\n      headersMapper: Mappers.ServiceGetUserDelegationKeyHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetUserDelegationKeyExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.keyInfo,\n  queryParameters: [\n    Parameters.restype,\n    Parameters.timeoutInSeconds,\n    Parameters.comp3,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst getAccountInfoOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ServiceGetAccountInfoHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetAccountInfoExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst submitBatchOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.ServiceSubmitBatchHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceSubmitBatchExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp4],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.multipartContentType,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst filterBlobsOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FilterBlobSegment,\n      headersMapper: Mappers.ServiceFilterBlobsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceFilterBlobsExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.comp5,\n    Parameters.where,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Container } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  ContainerCreateOptionalParams,\n  ContainerCreateResponse,\n  ContainerGetPropertiesOptionalParams,\n  ContainerGetPropertiesResponse,\n  ContainerDeleteOptionalParams,\n  ContainerDeleteResponse,\n  ContainerSetMetadataOptionalParams,\n  ContainerSetMetadataResponse,\n  ContainerGetAccessPolicyOptionalParams,\n  ContainerGetAccessPolicyResponse,\n  ContainerSetAccessPolicyOptionalParams,\n  ContainerSetAccessPolicyResponse,\n  ContainerRestoreOptionalParams,\n  ContainerRestoreResponse,\n  ContainerRenameOptionalParams,\n  ContainerRenameResponse,\n  ContainerSubmitBatchOptionalParams,\n  ContainerSubmitBatchResponse,\n  ContainerFilterBlobsOptionalParams,\n  ContainerFilterBlobsResponse,\n  ContainerAcquireLeaseOptionalParams,\n  ContainerAcquireLeaseResponse,\n  ContainerReleaseLeaseOptionalParams,\n  ContainerReleaseLeaseResponse,\n  ContainerRenewLeaseOptionalParams,\n  ContainerRenewLeaseResponse,\n  ContainerBreakLeaseOptionalParams,\n  ContainerBreakLeaseResponse,\n  ContainerChangeLeaseOptionalParams,\n  ContainerChangeLeaseResponse,\n  ContainerListBlobFlatSegmentOptionalParams,\n  ContainerListBlobFlatSegmentResponse,\n  ContainerListBlobHierarchySegmentOptionalParams,\n  ContainerListBlobHierarchySegmentResponse,\n  ContainerGetAccountInfoOptionalParams,\n  ContainerGetAccountInfoResponse,\n} from \"../models\";\n\n/** Class containing Container operations. */\nexport class ContainerImpl implements Container {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class Container class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * creates a new container under the specified account. If the container with the same name already\n   * exists, the operation fails\n   * @param options The options parameters.\n   */\n  create(\n    options?: ContainerCreateOptionalParams,\n  ): Promise<ContainerCreateResponse> {\n    return this.client.sendOperationRequest({ options }, createOperationSpec);\n  }\n\n  /**\n   * returns all user-defined metadata and system properties for the specified container. The data\n   * returned does not include the container's list of blobs\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: ContainerGetPropertiesOptionalParams,\n  ): Promise<ContainerGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPropertiesOperationSpec,\n    );\n  }\n\n  /**\n   * operation marks the specified container for deletion. The container and any blobs contained within\n   * it are later deleted during garbage collection\n   * @param options The options parameters.\n   */\n  delete(\n    options?: ContainerDeleteOptionalParams,\n  ): Promise<ContainerDeleteResponse> {\n    return this.client.sendOperationRequest({ options }, deleteOperationSpec);\n  }\n\n  /**\n   * operation sets one or more user-defined name-value pairs for the specified container.\n   * @param options The options parameters.\n   */\n  setMetadata(\n    options?: ContainerSetMetadataOptionalParams,\n  ): Promise<ContainerSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      setMetadataOperationSpec,\n    );\n  }\n\n  /**\n   * gets the permissions for the specified container. The permissions indicate whether container data\n   * may be accessed publicly.\n   * @param options The options parameters.\n   */\n  getAccessPolicy(\n    options?: ContainerGetAccessPolicyOptionalParams,\n  ): Promise<ContainerGetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getAccessPolicyOperationSpec,\n    );\n  }\n\n  /**\n   * sets the permissions for the specified container. The permissions indicate whether blobs in a\n   * container may be accessed publicly.\n   * @param options The options parameters.\n   */\n  setAccessPolicy(\n    options?: ContainerSetAccessPolicyOptionalParams,\n  ): Promise<ContainerSetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      setAccessPolicyOperationSpec,\n    );\n  }\n\n  /**\n   * Restores a previously-deleted container.\n   * @param options The options parameters.\n   */\n  restore(\n    options?: ContainerRestoreOptionalParams,\n  ): Promise<ContainerRestoreResponse> {\n    return this.client.sendOperationRequest({ options }, restoreOperationSpec);\n  }\n\n  /**\n   * Renames an existing container.\n   * @param sourceContainerName Required.  Specifies the name of the container to rename.\n   * @param options The options parameters.\n   */\n  rename(\n    sourceContainerName: string,\n    options?: ContainerRenameOptionalParams,\n  ): Promise<ContainerRenameResponse> {\n    return this.client.sendOperationRequest(\n      { sourceContainerName, options },\n      renameOperationSpec,\n    );\n  }\n\n  /**\n   * The Batch operation allows multiple API calls to be embedded into a single HTTP request.\n   * @param contentLength The length of the request.\n   * @param multipartContentType Required. The value of this header must be multipart/mixed with a batch\n   *                             boundary. Example header value: multipart/mixed; boundary=batch_<GUID>\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  submitBatch(\n    contentLength: number,\n    multipartContentType: string,\n    body: coreRestPipeline.RequestBodyType,\n    options?: ContainerSubmitBatchOptionalParams,\n  ): Promise<ContainerSubmitBatchResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, multipartContentType, body, options },\n      submitBatchOperationSpec,\n    );\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs in a container whose tags match a given\n   * search expression.  Filter blobs searches within the given container.\n   * @param options The options parameters.\n   */\n  filterBlobs(\n    options?: ContainerFilterBlobsOptionalParams,\n  ): Promise<ContainerFilterBlobsResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      filterBlobsOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param options The options parameters.\n   */\n  acquireLease(\n    options?: ContainerAcquireLeaseOptionalParams,\n  ): Promise<ContainerAcquireLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      acquireLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  releaseLease(\n    leaseId: string,\n    options?: ContainerReleaseLeaseOptionalParams,\n  ): Promise<ContainerReleaseLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, options },\n      releaseLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  renewLease(\n    leaseId: string,\n    options?: ContainerRenewLeaseOptionalParams,\n  ): Promise<ContainerRenewLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, options },\n      renewLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param options The options parameters.\n   */\n  breakLease(\n    options?: ContainerBreakLeaseOptionalParams,\n  ): Promise<ContainerBreakLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      breakLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   *                        (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   *                        (String) for a list of valid GUID string formats.\n   * @param options The options parameters.\n   */\n  changeLease(\n    leaseId: string,\n    proposedLeaseId: string,\n    options?: ContainerChangeLeaseOptionalParams,\n  ): Promise<ContainerChangeLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, proposedLeaseId, options },\n      changeLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param options The options parameters.\n   */\n  listBlobFlatSegment(\n    options?: ContainerListBlobFlatSegmentOptionalParams,\n  ): Promise<ContainerListBlobFlatSegmentResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBlobFlatSegmentOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param delimiter When the request includes this parameter, the operation returns a BlobPrefix\n   *                  element in the response body that acts as a placeholder for all blobs whose names begin with the\n   *                  same substring up to the appearance of the delimiter character. The delimiter may be a single\n   *                  character or a string.\n   * @param options The options parameters.\n   */\n  listBlobHierarchySegment(\n    delimiter: string,\n    options?: ContainerListBlobHierarchySegmentOptionalParams,\n  ): Promise<ContainerListBlobHierarchySegmentResponse> {\n    return this.client.sendOperationRequest(\n      { delimiter, options },\n      listBlobHierarchySegmentOperationSpec,\n    );\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param options The options parameters.\n   */\n  getAccountInfo(\n    options?: ContainerGetAccountInfoOptionalParams,\n  ): Promise<ContainerGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getAccountInfoOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerCreateHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerCreateExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.access,\n    Parameters.defaultEncryptionScope,\n    Parameters.preventEncryptionScopeOverride,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerGetPropertiesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerGetPropertiesExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ContainerDeleteHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerDeleteExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setMetadataOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerSetMetadataHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerSetMetadataExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp6,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getAccessPolicyOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"SignedIdentifier\" },\n          },\n        },\n        serializedName: \"SignedIdentifiers\",\n        xmlName: \"SignedIdentifiers\",\n        xmlIsWrapped: true,\n        xmlElementName: \"SignedIdentifier\",\n      },\n      headersMapper: Mappers.ContainerGetAccessPolicyHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerGetAccessPolicyExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp7,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setAccessPolicyOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerSetAccessPolicyHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerSetAccessPolicyExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.containerAcl,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp7,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.access,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst restoreOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerRestoreHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerRestoreExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp8,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.deletedContainerName,\n    Parameters.deletedContainerVersion,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst renameOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerRenameHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerRenameExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp9,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.sourceContainerName,\n    Parameters.sourceLeaseId,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst submitBatchOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.ContainerSubmitBatchHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerSubmitBatchExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp4,\n    Parameters.restype2,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.multipartContentType,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst filterBlobsOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FilterBlobSegment,\n      headersMapper: Mappers.ContainerFilterBlobsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerFilterBlobsExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.comp5,\n    Parameters.where,\n    Parameters.restype2,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst acquireLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerAcquireLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerAcquireLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action,\n    Parameters.duration,\n    Parameters.proposedLeaseId,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst releaseLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerReleaseLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerReleaseLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action1,\n    Parameters.leaseId1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst renewLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerRenewLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerRenewLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action2,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst breakLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ContainerBreakLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerBreakLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action3,\n    Parameters.breakPeriod,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst changeLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerChangeLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerChangeLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action4,\n    Parameters.proposedLeaseId1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst listBlobFlatSegmentOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsFlatSegmentResponse,\n      headersMapper: Mappers.ContainerListBlobFlatSegmentHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerListBlobFlatSegmentExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp2,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.restype2,\n    Parameters.include1,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst listBlobHierarchySegmentOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsHierarchySegmentResponse,\n      headersMapper: Mappers.ContainerListBlobHierarchySegmentHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerListBlobHierarchySegmentExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp2,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.restype2,\n    Parameters.include1,\n    Parameters.delimiter,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getAccountInfoOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerGetAccountInfoHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerGetAccountInfoExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Blob } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  BlobDownloadOptionalParams,\n  BlobDownloadResponse,\n  BlobGetPropertiesOptionalParams,\n  BlobGetPropertiesResponse,\n  BlobDeleteOptionalParams,\n  BlobDeleteResponse,\n  BlobUndeleteOptionalParams,\n  BlobUndeleteResponse,\n  BlobExpiryOptions,\n  BlobSetExpiryOptionalParams,\n  BlobSetExpiryResponse,\n  BlobSetHttpHeadersOptionalParams,\n  BlobSetHttpHeadersResponse,\n  BlobSetImmutabilityPolicyOptionalParams,\n  BlobSetImmutabilityPolicyResponse,\n  BlobDeleteImmutabilityPolicyOptionalParams,\n  BlobDeleteImmutabilityPolicyResponse,\n  BlobSetLegalHoldOptionalParams,\n  BlobSetLegalHoldResponse,\n  BlobSetMetadataOptionalParams,\n  BlobSetMetadataResponse,\n  BlobAcquireLeaseOptionalParams,\n  BlobAcquireLeaseResponse,\n  BlobReleaseLeaseOptionalParams,\n  BlobReleaseLeaseResponse,\n  BlobRenewLeaseOptionalParams,\n  BlobRenewLeaseResponse,\n  BlobChangeLeaseOptionalParams,\n  BlobChangeLeaseResponse,\n  BlobBreakLeaseOptionalParams,\n  BlobBreakLeaseResponse,\n  BlobCreateSnapshotOptionalParams,\n  BlobCreateSnapshotResponse,\n  BlobStartCopyFromURLOptionalParams,\n  BlobStartCopyFromURLResponse,\n  BlobCopyFromURLOptionalParams,\n  BlobCopyFromURLResponse,\n  BlobAbortCopyFromURLOptionalParams,\n  BlobAbortCopyFromURLResponse,\n  AccessTier,\n  BlobSetTierOptionalParams,\n  BlobSetTierResponse,\n  BlobGetAccountInfoOptionalParams,\n  BlobGetAccountInfoResponse,\n  BlobQueryOptionalParams,\n  BlobQueryResponse,\n  BlobGetTagsOptionalParams,\n  BlobGetTagsResponse,\n  BlobSetTagsOptionalParams,\n  BlobSetTagsResponse,\n} from \"../models\";\n\n/** Class containing Blob operations. */\nexport class BlobImpl implements Blob {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class Blob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * The Download operation reads or downloads a blob from the system, including its metadata and\n   * properties. You can also call Download to read a snapshot.\n   * @param options The options parameters.\n   */\n  download(\n    options?: BlobDownloadOptionalParams,\n  ): Promise<BlobDownloadResponse> {\n    return this.client.sendOperationRequest({ options }, downloadOperationSpec);\n  }\n\n  /**\n   * The Get Properties operation returns all user-defined metadata, standard HTTP properties, and system\n   * properties for the blob. It does not return the content of the blob.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: BlobGetPropertiesOptionalParams,\n  ): Promise<BlobGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPropertiesOperationSpec,\n    );\n  }\n\n  /**\n   * If the storage account's soft delete feature is disabled then, when a blob is deleted, it is\n   * permanently removed from the storage account. If the storage account's soft delete feature is\n   * enabled, then, when a blob is deleted, it is marked for deletion and becomes inaccessible\n   * immediately. However, the blob service retains the blob or snapshot for the number of days specified\n   * by the DeleteRetentionPolicy section of [Storage service properties]\n   * (Set-Blob-Service-Properties.md). After the specified number of days has passed, the blob's data is\n   * permanently removed from the storage account. Note that you continue to be charged for the\n   * soft-deleted blob's storage until it is permanently removed. Use the List Blobs API and specify the\n   * \"include=deleted\" query parameter to discover which blobs and snapshots have been soft deleted. You\n   * can then use the Undelete Blob API to restore a soft-deleted blob. All other operations on a\n   * soft-deleted blob or snapshot causes the service to return an HTTP status code of 404\n   * (ResourceNotFound).\n   * @param options The options parameters.\n   */\n  delete(options?: BlobDeleteOptionalParams): Promise<BlobDeleteResponse> {\n    return this.client.sendOperationRequest({ options }, deleteOperationSpec);\n  }\n\n  /**\n   * Undelete a blob that was previously soft deleted\n   * @param options The options parameters.\n   */\n  undelete(\n    options?: BlobUndeleteOptionalParams,\n  ): Promise<BlobUndeleteResponse> {\n    return this.client.sendOperationRequest({ options }, undeleteOperationSpec);\n  }\n\n  /**\n   * Sets the time a blob will expire and be deleted.\n   * @param expiryOptions Required. Indicates mode of the expiry time\n   * @param options The options parameters.\n   */\n  setExpiry(\n    expiryOptions: BlobExpiryOptions,\n    options?: BlobSetExpiryOptionalParams,\n  ): Promise<BlobSetExpiryResponse> {\n    return this.client.sendOperationRequest(\n      { expiryOptions, options },\n      setExpiryOperationSpec,\n    );\n  }\n\n  /**\n   * The Set HTTP Headers operation sets system properties on the blob\n   * @param options The options parameters.\n   */\n  setHttpHeaders(\n    options?: BlobSetHttpHeadersOptionalParams,\n  ): Promise<BlobSetHttpHeadersResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      setHttpHeadersOperationSpec,\n    );\n  }\n\n  /**\n   * The Set Immutability Policy operation sets the immutability policy on the blob\n   * @param options The options parameters.\n   */\n  setImmutabilityPolicy(\n    options?: BlobSetImmutabilityPolicyOptionalParams,\n  ): Promise<BlobSetImmutabilityPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      setImmutabilityPolicyOperationSpec,\n    );\n  }\n\n  /**\n   * The Delete Immutability Policy operation deletes the immutability policy on the blob\n   * @param options The options parameters.\n   */\n  deleteImmutabilityPolicy(\n    options?: BlobDeleteImmutabilityPolicyOptionalParams,\n  ): Promise<BlobDeleteImmutabilityPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      deleteImmutabilityPolicyOperationSpec,\n    );\n  }\n\n  /**\n   * The Set Legal Hold operation sets a legal hold on the blob.\n   * @param legalHold Specified if a legal hold should be set on the blob.\n   * @param options The options parameters.\n   */\n  setLegalHold(\n    legalHold: boolean,\n    options?: BlobSetLegalHoldOptionalParams,\n  ): Promise<BlobSetLegalHoldResponse> {\n    return this.client.sendOperationRequest(\n      { legalHold, options },\n      setLegalHoldOperationSpec,\n    );\n  }\n\n  /**\n   * The Set Blob Metadata operation sets user-defined metadata for the specified blob as one or more\n   * name-value pairs\n   * @param options The options parameters.\n   */\n  setMetadata(\n    options?: BlobSetMetadataOptionalParams,\n  ): Promise<BlobSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      setMetadataOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param options The options parameters.\n   */\n  acquireLease(\n    options?: BlobAcquireLeaseOptionalParams,\n  ): Promise<BlobAcquireLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      acquireLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  releaseLease(\n    leaseId: string,\n    options?: BlobReleaseLeaseOptionalParams,\n  ): Promise<BlobReleaseLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, options },\n      releaseLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  renewLease(\n    leaseId: string,\n    options?: BlobRenewLeaseOptionalParams,\n  ): Promise<BlobRenewLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, options },\n      renewLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   *                        (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   *                        (String) for a list of valid GUID string formats.\n   * @param options The options parameters.\n   */\n  changeLease(\n    leaseId: string,\n    proposedLeaseId: string,\n    options?: BlobChangeLeaseOptionalParams,\n  ): Promise<BlobChangeLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, proposedLeaseId, options },\n      changeLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param options The options parameters.\n   */\n  breakLease(\n    options?: BlobBreakLeaseOptionalParams,\n  ): Promise<BlobBreakLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      breakLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * The Create Snapshot operation creates a read-only snapshot of a blob\n   * @param options The options parameters.\n   */\n  createSnapshot(\n    options?: BlobCreateSnapshotOptionalParams,\n  ): Promise<BlobCreateSnapshotResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      createSnapshotOperationSpec,\n    );\n  }\n\n  /**\n   * The Start Copy From URL operation copies a blob or an internet resource to a new blob.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  startCopyFromURL(\n    copySource: string,\n    options?: BlobStartCopyFromURLOptionalParams,\n  ): Promise<BlobStartCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      { copySource, options },\n      startCopyFromURLOperationSpec,\n    );\n  }\n\n  /**\n   * The Copy From URL operation copies a blob or an internet resource to a new blob. It will not return\n   * a response until the copy is complete.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  copyFromURL(\n    copySource: string,\n    options?: BlobCopyFromURLOptionalParams,\n  ): Promise<BlobCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      { copySource, options },\n      copyFromURLOperationSpec,\n    );\n  }\n\n  /**\n   * The Abort Copy From URL operation aborts a pending Copy From URL operation, and leaves a destination\n   * blob with zero length and full metadata.\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy Blob\n   *               operation.\n   * @param options The options parameters.\n   */\n  abortCopyFromURL(\n    copyId: string,\n    options?: BlobAbortCopyFromURLOptionalParams,\n  ): Promise<BlobAbortCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      { copyId, options },\n      abortCopyFromURLOperationSpec,\n    );\n  }\n\n  /**\n   * The Set Tier operation sets the tier on a blob. The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant storage only). A\n   * premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block\n   * blob's tier determines Hot/Cool/Archive storage type. This operation does not update the blob's\n   * ETag.\n   * @param tier Indicates the tier to be set on the blob.\n   * @param options The options parameters.\n   */\n  setTier(\n    tier: AccessTier,\n    options?: BlobSetTierOptionalParams,\n  ): Promise<BlobSetTierResponse> {\n    return this.client.sendOperationRequest(\n      { tier, options },\n      setTierOperationSpec,\n    );\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param options The options parameters.\n   */\n  getAccountInfo(\n    options?: BlobGetAccountInfoOptionalParams,\n  ): Promise<BlobGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getAccountInfoOperationSpec,\n    );\n  }\n\n  /**\n   * The Query operation enables users to select/project on blob data by providing simple query\n   * expressions.\n   * @param options The options parameters.\n   */\n  query(options?: BlobQueryOptionalParams): Promise<BlobQueryResponse> {\n    return this.client.sendOperationRequest({ options }, queryOperationSpec);\n  }\n\n  /**\n   * The Get Tags operation enables users to get the tags associated with a blob.\n   * @param options The options parameters.\n   */\n  getTags(options?: BlobGetTagsOptionalParams): Promise<BlobGetTagsResponse> {\n    return this.client.sendOperationRequest({ options }, getTagsOperationSpec);\n  }\n\n  /**\n   * The Set Tags operation enables users to set tags on a blob.\n   * @param options The options parameters.\n   */\n  setTags(options?: BlobSetTagsOptionalParams): Promise<BlobSetTagsResponse> {\n    return this.client.sendOperationRequest({ options }, setTagsOperationSpec);\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst downloadOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.BlobDownloadHeaders,\n    },\n    206: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.BlobDownloadHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobDownloadExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.rangeGetContentMD5,\n    Parameters.rangeGetContentCRC64,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobGetPropertiesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobGetPropertiesExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobDeleteHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobDeleteExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.blobDeleteType,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.deleteSnapshots,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst undeleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobUndeleteHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobUndeleteExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp8],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setExpiryOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetExpiryHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetExpiryExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp11],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.expiryOptions,\n    Parameters.expiresOn,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setHttpHeadersOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetHttpHeadersHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetHttpHeadersExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setImmutabilityPolicyOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetImmutabilityPolicyHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetImmutabilityPolicyExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.comp12,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifUnmodifiedSince,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst deleteImmutabilityPolicyOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobDeleteImmutabilityPolicyHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobDeleteImmutabilityPolicyExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.comp12,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setLegalHoldOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetLegalHoldHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetLegalHoldExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.comp13,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.legalHold,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setMetadataOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetMetadataHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetMetadataExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp6],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst acquireLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlobAcquireLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobAcquireLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action,\n    Parameters.duration,\n    Parameters.proposedLeaseId,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst releaseLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobReleaseLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobReleaseLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action1,\n    Parameters.leaseId1,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst renewLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobRenewLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobRenewLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action2,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst changeLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobChangeLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobChangeLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action4,\n    Parameters.proposedLeaseId1,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst breakLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobBreakLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobBreakLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action3,\n    Parameters.breakPeriod,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst createSnapshotOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlobCreateSnapshotHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobCreateSnapshotExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp14],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst startCopyFromURLOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobStartCopyFromURLHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobStartCopyFromURLExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.tier,\n    Parameters.rehydratePriority,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceIfTags,\n    Parameters.copySource,\n    Parameters.blobTagsString,\n    Parameters.sealBlob,\n    Parameters.legalHold1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst copyFromURLOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobCopyFromURLHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobCopyFromURLExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.copySource,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.xMsRequiresSync,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.copySourceTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst abortCopyFromURLOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    204: {\n      headersMapper: Mappers.BlobAbortCopyFromURLHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobAbortCopyFromURLExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp15,\n    Parameters.copyId,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.copyActionAbortConstant,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setTierOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetTierHeaders,\n    },\n    202: {\n      headersMapper: Mappers.BlobSetTierHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetTierExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.comp16,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifTags,\n    Parameters.rehydratePriority,\n    Parameters.tier1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getAccountInfoOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobGetAccountInfoHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobGetAccountInfoExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst queryOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.BlobQueryHeaders,\n    },\n    206: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.BlobQueryHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobQueryExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.queryRequest,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.comp17,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst getTagsOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobTags,\n      headersMapper: Mappers.BlobGetTagsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobGetTagsExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.comp18,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setTagsOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    204: {\n      headersMapper: Mappers.BlobSetTagsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetTagsExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.tags,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.versionId,\n    Parameters.comp18,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId,\n    Parameters.ifTags,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PageBlob } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  PageBlobCreateOptionalParams,\n  PageBlobCreateResponse,\n  PageBlobUploadPagesOptionalParams,\n  PageBlobUploadPagesResponse,\n  PageBlobClearPagesOptionalParams,\n  PageBlobClearPagesResponse,\n  PageBlobUploadPagesFromURLOptionalParams,\n  PageBlobUploadPagesFromURLResponse,\n  PageBlobGetPageRangesOptionalParams,\n  PageBlobGetPageRangesResponse,\n  PageBlobGetPageRangesDiffOptionalParams,\n  PageBlobGetPageRangesDiffResponse,\n  PageBlobResizeOptionalParams,\n  PageBlobResizeResponse,\n  SequenceNumberActionType,\n  PageBlobUpdateSequenceNumberOptionalParams,\n  PageBlobUpdateSequenceNumberResponse,\n  PageBlobCopyIncrementalOptionalParams,\n  PageBlobCopyIncrementalResponse,\n} from \"../models\";\n\n/** Class containing PageBlob operations. */\nexport class PageBlobImpl implements PageBlob {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class PageBlob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * The Create operation creates a new page blob.\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The\n   *                          page blob size must be aligned to a 512-byte boundary.\n   * @param options The options parameters.\n   */\n  create(\n    contentLength: number,\n    blobContentLength: number,\n    options?: PageBlobCreateOptionalParams,\n  ): Promise<PageBlobCreateResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, blobContentLength, options },\n      createOperationSpec,\n    );\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  uploadPages(\n    contentLength: number,\n    body: coreRestPipeline.RequestBodyType,\n    options?: PageBlobUploadPagesOptionalParams,\n  ): Promise<PageBlobUploadPagesResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, body, options },\n      uploadPagesOperationSpec,\n    );\n  }\n\n  /**\n   * The Clear Pages operation clears a set of pages from a page blob\n   * @param contentLength The length of the request.\n   * @param options The options parameters.\n   */\n  clearPages(\n    contentLength: number,\n    options?: PageBlobClearPagesOptionalParams,\n  ): Promise<PageBlobClearPagesResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, options },\n      clearPagesOperationSpec,\n    );\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob where the contents are read from a\n   * URL\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param sourceRange Bytes of source data in the specified range. The length of this range should\n   *                    match the ContentLength header and x-ms-range/Range destination range header.\n   * @param contentLength The length of the request.\n   * @param range The range of bytes to which the source range would be written. The range should be 512\n   *              aligned and range-end is required.\n   * @param options The options parameters.\n   */\n  uploadPagesFromURL(\n    sourceUrl: string,\n    sourceRange: string,\n    contentLength: number,\n    range: string,\n    options?: PageBlobUploadPagesFromURLOptionalParams,\n  ): Promise<PageBlobUploadPagesFromURLResponse> {\n    return this.client.sendOperationRequest(\n      { sourceUrl, sourceRange, contentLength, range, options },\n      uploadPagesFromURLOperationSpec,\n    );\n  }\n\n  /**\n   * The Get Page Ranges operation returns the list of valid page ranges for a page blob or snapshot of a\n   * page blob\n   * @param options The options parameters.\n   */\n  getPageRanges(\n    options?: PageBlobGetPageRangesOptionalParams,\n  ): Promise<PageBlobGetPageRangesResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPageRangesOperationSpec,\n    );\n  }\n\n  /**\n   * The Get Page Ranges Diff operation returns the list of valid page ranges for a page blob that were\n   * changed between target blob and previous snapshot.\n   * @param options The options parameters.\n   */\n  getPageRangesDiff(\n    options?: PageBlobGetPageRangesDiffOptionalParams,\n  ): Promise<PageBlobGetPageRangesDiffResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPageRangesDiffOperationSpec,\n    );\n  }\n\n  /**\n   * Resize the Blob\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The\n   *                          page blob size must be aligned to a 512-byte boundary.\n   * @param options The options parameters.\n   */\n  resize(\n    blobContentLength: number,\n    options?: PageBlobResizeOptionalParams,\n  ): Promise<PageBlobResizeResponse> {\n    return this.client.sendOperationRequest(\n      { blobContentLength, options },\n      resizeOperationSpec,\n    );\n  }\n\n  /**\n   * Update the sequence number of the blob\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the request.\n   *                             This property applies to page blobs only. This property indicates how the service should modify the\n   *                             blob's sequence number\n   * @param options The options parameters.\n   */\n  updateSequenceNumber(\n    sequenceNumberAction: SequenceNumberActionType,\n    options?: PageBlobUpdateSequenceNumberOptionalParams,\n  ): Promise<PageBlobUpdateSequenceNumberResponse> {\n    return this.client.sendOperationRequest(\n      { sequenceNumberAction, options },\n      updateSequenceNumberOperationSpec,\n    );\n  }\n\n  /**\n   * The Copy Incremental operation copies a snapshot of the source page blob to a destination page blob.\n   * The snapshot is copied such that only the differential changes between the previously copied\n   * snapshot are transferred to the destination. The copied snapshots are complete copies of the\n   * original snapshot and can be read or copied from as usual. This API is supported since REST version\n   * 2016-05-31.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  copyIncremental(\n    copySource: string,\n    options?: PageBlobCopyIncrementalOptionalParams,\n  ): Promise<PageBlobCopyIncrementalResponse> {\n    return this.client.sendOperationRequest(\n      { copySource, options },\n      copyIncrementalOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobCreateHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobCreateExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.blobType,\n    Parameters.blobContentLength,\n    Parameters.blobSequenceNumber,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst uploadPagesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobUploadPagesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUploadPagesExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp19],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.contentType1,\n    Parameters.accept2,\n    Parameters.pageWrite,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"binary\",\n  serializer: xmlSerializer,\n};\nconst clearPagesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobClearPagesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobClearPagesExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp19],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.pageWrite1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst uploadPagesFromURLOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobUploadPagesFromURLHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUploadPagesFromURLExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp19],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.pageWrite,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.sourceUrl,\n    Parameters.sourceRange,\n    Parameters.sourceContentCrc64,\n    Parameters.range1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getPageRangesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobGetPageRangesExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.snapshot,\n    Parameters.comp20,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getPageRangesDiffOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesDiffHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobGetPageRangesDiffExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.snapshot,\n    Parameters.comp20,\n    Parameters.prevsnapshot,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.prevSnapshotUrl,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst resizeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobResizeHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobResizeExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.blobContentLength,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst updateSequenceNumberOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobUpdateSequenceNumberHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUpdateSequenceNumberExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobSequenceNumber,\n    Parameters.sequenceNumberAction,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst copyIncrementalOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.PageBlobCopyIncrementalHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobCopyIncrementalExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp21],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.copySource,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { AppendBlob } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  AppendBlobCreateOptionalParams,\n  AppendBlobCreateResponse,\n  AppendBlobAppendBlockOptionalParams,\n  AppendBlobAppendBlockResponse,\n  AppendBlobAppendBlockFromUrlOptionalParams,\n  AppendBlobAppendBlockFromUrlResponse,\n  AppendBlobSealOptionalParams,\n  AppendBlobSealResponse,\n} from \"../models\";\n\n/** Class containing AppendBlob operations. */\nexport class AppendBlobImpl implements AppendBlob {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class AppendBlob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * The Create Append Blob operation creates a new append blob.\n   * @param contentLength The length of the request.\n   * @param options The options parameters.\n   */\n  create(\n    contentLength: number,\n    options?: AppendBlobCreateOptionalParams,\n  ): Promise<AppendBlobCreateResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, options },\n      createOperationSpec,\n    );\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob. The\n   * Append Block operation is permitted only if the blob was created with x-ms-blob-type set to\n   * AppendBlob. Append Block is supported only on version 2015-02-21 version or later.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  appendBlock(\n    contentLength: number,\n    body: coreRestPipeline.RequestBodyType,\n    options?: AppendBlobAppendBlockOptionalParams,\n  ): Promise<AppendBlobAppendBlockResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, body, options },\n      appendBlockOperationSpec,\n    );\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob where\n   * the contents are read from a source url. The Append Block operation is permitted only if the blob\n   * was created with x-ms-blob-type set to AppendBlob. Append Block is supported only on version\n   * 2015-02-21 version or later.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param contentLength The length of the request.\n   * @param options The options parameters.\n   */\n  appendBlockFromUrl(\n    sourceUrl: string,\n    contentLength: number,\n    options?: AppendBlobAppendBlockFromUrlOptionalParams,\n  ): Promise<AppendBlobAppendBlockFromUrlResponse> {\n    return this.client.sendOperationRequest(\n      { sourceUrl, contentLength, options },\n      appendBlockFromUrlOperationSpec,\n    );\n  }\n\n  /**\n   * The Seal operation seals the Append Blob to make it read-only. Seal is supported only on version\n   * 2019-12-12 version or later.\n   * @param options The options parameters.\n   */\n  seal(\n    options?: AppendBlobSealOptionalParams,\n  ): Promise<AppendBlobSealResponse> {\n    return this.client.sendOperationRequest({ options }, sealOperationSpec);\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobCreateHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobCreateExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.blobType1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst appendBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobAppendBlockHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobAppendBlockExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp22],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.contentType1,\n    Parameters.accept2,\n    Parameters.maxSize,\n    Parameters.appendPosition,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"binary\",\n  serializer: xmlSerializer,\n};\nconst appendBlockFromUrlOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobAppendBlockFromUrlHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobAppendBlockFromUrlExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp22],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.transactionalContentMD5,\n    Parameters.sourceUrl,\n    Parameters.sourceContentCrc64,\n    Parameters.maxSize,\n    Parameters.appendPosition,\n    Parameters.sourceRange1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst sealOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.AppendBlobSealHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobSealExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp23],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.appendPosition,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { BlockBlob } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  BlockBlobUploadOptionalParams,\n  BlockBlobUploadResponse,\n  BlockBlobPutBlobFromUrlOptionalParams,\n  BlockBlobPutBlobFromUrlResponse,\n  BlockBlobStageBlockOptionalParams,\n  BlockBlobStageBlockResponse,\n  BlockBlobStageBlockFromURLOptionalParams,\n  BlockBlobStageBlockFromURLResponse,\n  BlockLookupList,\n  BlockBlobCommitBlockListOptionalParams,\n  BlockBlobCommitBlockListResponse,\n  BlockListType,\n  BlockBlobGetBlockListOptionalParams,\n  BlockBlobGetBlockListResponse,\n} from \"../models\";\n\n/** Class containing BlockBlob operations. */\nexport class BlockBlobImpl implements BlockBlob {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class BlockBlob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * The Upload Block Blob operation updates the content of an existing block blob. Updating an existing\n   * block blob overwrites any existing metadata on the blob. Partial updates are not supported with Put\n   * Blob; the content of the existing blob is overwritten with the content of the new blob. To perform a\n   * partial update of the content of a block blob, use the Put Block List operation.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  upload(\n    contentLength: number,\n    body: coreRestPipeline.RequestBodyType,\n    options?: BlockBlobUploadOptionalParams,\n  ): Promise<BlockBlobUploadResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, body, options },\n      uploadOperationSpec,\n    );\n  }\n\n  /**\n   * The Put Blob from URL operation creates a new Block Blob where the contents of the blob are read\n   * from a given URL.  This API is supported beginning with the 2020-04-08 version. Partial updates are\n   * not supported with Put Blob from URL; the content of an existing blob is overwritten with the\n   * content of the new blob.  To perform partial updates to a block blob’s contents using a source URL,\n   * use the Put Block from URL API in conjunction with Put Block List.\n   * @param contentLength The length of the request.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  putBlobFromUrl(\n    contentLength: number,\n    copySource: string,\n    options?: BlockBlobPutBlobFromUrlOptionalParams,\n  ): Promise<BlockBlobPutBlobFromUrlResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, copySource, options },\n      putBlobFromUrlOperationSpec,\n    );\n  }\n\n  /**\n   * The Stage Block operation creates a new block to be committed as part of a blob\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the string\n   *                must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n   *                for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  stageBlock(\n    blockId: string,\n    contentLength: number,\n    body: coreRestPipeline.RequestBodyType,\n    options?: BlockBlobStageBlockOptionalParams,\n  ): Promise<BlockBlobStageBlockResponse> {\n    return this.client.sendOperationRequest(\n      { blockId, contentLength, body, options },\n      stageBlockOperationSpec,\n    );\n  }\n\n  /**\n   * The Stage Block operation creates a new block to be committed as part of a blob where the contents\n   * are read from a URL.\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the string\n   *                must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n   *                for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param options The options parameters.\n   */\n  stageBlockFromURL(\n    blockId: string,\n    contentLength: number,\n    sourceUrl: string,\n    options?: BlockBlobStageBlockFromURLOptionalParams,\n  ): Promise<BlockBlobStageBlockFromURLResponse> {\n    return this.client.sendOperationRequest(\n      { blockId, contentLength, sourceUrl, options },\n      stageBlockFromURLOperationSpec,\n    );\n  }\n\n  /**\n   * The Commit Block List operation writes a blob by specifying the list of block IDs that make up the\n   * blob. In order to be written as part of a blob, a block must have been successfully written to the\n   * server in a prior Put Block operation. You can call Put Block List to update a blob by uploading\n   * only those blocks that have changed, then committing the new and existing blocks together. You can\n   * do this by specifying whether to commit a block from the committed block list or from the\n   * uncommitted block list, or to commit the most recently uploaded version of the block, whichever list\n   * it may belong to.\n   * @param blocks Blob Blocks.\n   * @param options The options parameters.\n   */\n  commitBlockList(\n    blocks: BlockLookupList,\n    options?: BlockBlobCommitBlockListOptionalParams,\n  ): Promise<BlockBlobCommitBlockListResponse> {\n    return this.client.sendOperationRequest(\n      { blocks, options },\n      commitBlockListOperationSpec,\n    );\n  }\n\n  /**\n   * The Get Block List operation retrieves the list of blocks that have been uploaded as part of a block\n   * blob\n   * @param listType Specifies whether to return the list of committed blocks, the list of uncommitted\n   *                 blocks, or both lists together.\n   * @param options The options parameters.\n   */\n  getBlockList(\n    listType: BlockListType,\n    options?: BlockBlobGetBlockListOptionalParams,\n  ): Promise<BlockBlobGetBlockListResponse> {\n    return this.client.sendOperationRequest(\n      { listType, options },\n      getBlockListOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst uploadOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobUploadHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobUploadExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.contentType1,\n    Parameters.accept2,\n    Parameters.blobType2,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"binary\",\n  serializer: xmlSerializer,\n};\nconst putBlobFromUrlOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobPutBlobFromUrlHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobPutBlobFromUrlExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceIfTags,\n    Parameters.copySource,\n    Parameters.blobTagsString,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.copySourceTags,\n    Parameters.transactionalContentMD5,\n    Parameters.blobType2,\n    Parameters.copySourceBlobProperties,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst stageBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobStageBlockHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobStageBlockExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp24,\n    Parameters.blockId,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.encryptionScope,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.contentType1,\n    Parameters.accept2,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"binary\",\n  serializer: xmlSerializer,\n};\nconst stageBlockFromURLOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobStageBlockFromURLHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobStageBlockFromURLExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp24,\n    Parameters.blockId,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.encryptionScope,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.sourceUrl,\n    Parameters.sourceContentCrc64,\n    Parameters.sourceRange1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst commitBlockListOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobCommitBlockListHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobCommitBlockListExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.blocks,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp25],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst getBlockListOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlockList,\n      headersMapper: Mappers.BlockBlobGetBlockListHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobGetBlockListExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.comp25,\n    Parameters.listType,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttpCompat from \"@azure/core-http-compat\";\nimport {\n  ServiceImpl,\n  ContainerImpl,\n  BlobImpl,\n  PageBlobImpl,\n  AppendBlobImpl,\n  BlockBlobImpl,\n} from \"./operations\";\nimport {\n  Service,\n  Container,\n  Blob,\n  PageBlob,\n  AppendBlob,\n  BlockBlob,\n} from \"./operationsInterfaces\";\nimport { StorageClientOptionalParams } from \"./models\";\n\nexport class StorageClient extends coreHttpCompat.ExtendedServiceClient {\n  url: string;\n  version: string;\n\n  /**\n   * Initializes a new instance of the StorageClient class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  constructor(url: string, options?: StorageClientOptionalParams) {\n    if (url === undefined) {\n      throw new Error(\"'url' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: StorageClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n    };\n\n    const packageDetails = `azsdk-js-azure-storage-blob/12.27.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{url}\",\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.url = url;\n\n    // Assigning values to Constant parameters\n    this.version = options.version || \"2025-05-05\";\n    this.service = new ServiceImpl(this);\n    this.container = new ContainerImpl(this);\n    this.blob = new BlobImpl(this);\n    this.pageBlob = new PageBlobImpl(this);\n    this.appendBlob = new AppendBlobImpl(this);\n    this.blockBlob = new BlockBlobImpl(this);\n  }\n\n  service: Service;\n  container: Container;\n  blob: Blob;\n  pageBlob: PageBlob;\n  appendBlob: AppendBlob;\n  blockBlob: BlockBlob;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { OperationArguments, OperationSpec } from \"@azure/core-client\";\nimport { StorageClient } from \"./generated/src\";\n\n/**\n * @internal\n */\nexport class StorageContextClient extends StorageClient {\n  async sendOperationRequest<T>(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<T> {\n    const operationSpecToSend = { ...operationSpec };\n\n    if (\n      operationSpecToSend.path === \"/{containerName}\" ||\n      operationSpecToSend.path === \"/{containerName}/{blob}\"\n    ) {\n      operationSpecToSend.path = \"\";\n    }\n    return super.sendOperationRequest(operationArguments, operationSpecToSend);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { StorageClient as StorageClientContext } from \"./generated/src/\";\nimport { StorageContextClient } from \"./StorageContextClient\";\nimport type { PipelineLike } from \"./Pipeline\";\nimport { getCoreClientOptions, getCredentialFromPipeline } from \"./Pipeline\";\nimport { escapeURLPath, getURLScheme, iEqual, getAccountNameFromUrl } from \"./utils/utils.common\";\nimport type { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport type { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport type { OperationTracingOptions } from \"@azure/core-tracing\";\n\n/**\n * An interface for options common to every remote operation.\n */\nexport interface CommonOptions {\n  /**\n   * Options to configure spans created when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n}\n\n/**\n * A StorageClient represents a based URL class for {@link BlobServiceClient}, {@link ContainerClient}\n * and etc.\n */\nexport abstract class StorageClient {\n  /**\n   * Encoded URL string value.\n   */\n  public readonly url: string;\n  public readonly accountName: string;\n  /**\n   * Request policy pipeline.\n   *\n   * @internal\n   */\n  protected readonly pipeline: PipelineLike;\n  /**\n   * Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   */\n  public readonly credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n  /**\n   * StorageClient is a reference to protocol layer operations entry, which is\n   * generated by AutoRest generator.\n   */\n  protected readonly storageClientContext: StorageClientContext;\n  /**\n   */\n  protected readonly isHttps: boolean;\n\n  /**\n   * Creates an instance of StorageClient.\n   * @param url - url to resource\n   * @param pipeline - request policy pipeline.\n   */\n  protected constructor(url: string, pipeline: PipelineLike) {\n    // URL should be encoded and only once, protocol layer shouldn't encode URL again\n    this.url = escapeURLPath(url);\n    this.accountName = getAccountNameFromUrl(url);\n    this.pipeline = pipeline;\n    this.storageClientContext = new StorageContextClient(this.url, getCoreClientOptions(pipeline));\n\n    this.isHttps = iEqual(getURLScheme(this.url) || \"\", \"https\");\n\n    this.credential = getCredentialFromPipeline(pipeline);\n\n    // Override protocol layer's default content-type\n    const storageClientContext = this.storageClientContext as any;\n    storageClientContext.requestContentType = undefined;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createTracingClient } from \"@azure/core-tracing\";\nimport { SDK_VERSION } from \"./constants\";\n\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nexport const tracingClient = createTracingClient({\n  packageName: \"@azure/storage-blob\",\n  packageVersion: SDK_VERSION,\n  namespace: \"Microsoft.Storage\",\n});\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a blob. Setting\n * a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all\n * the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class BlobSASPermissions {\n  /**\n   * Creates a {@link BlobSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): BlobSASPermissions {\n    const blobSASPermissions = new BlobSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          blobSASPermissions.read = true;\n          break;\n        case \"a\":\n          blobSASPermissions.add = true;\n          break;\n        case \"c\":\n          blobSASPermissions.create = true;\n          break;\n        case \"w\":\n          blobSASPermissions.write = true;\n          break;\n        case \"d\":\n          blobSASPermissions.delete = true;\n          break;\n        case \"x\":\n          blobSASPermissions.deleteVersion = true;\n          break;\n        case \"t\":\n          blobSASPermissions.tag = true;\n          break;\n        case \"m\":\n          blobSASPermissions.move = true;\n          break;\n        case \"e\":\n          blobSASPermissions.execute = true;\n          break;\n        case \"i\":\n          blobSASPermissions.setImmutabilityPolicy = true;\n          break;\n        case \"y\":\n          blobSASPermissions.permanentDelete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission: ${char}`);\n      }\n    }\n\n    return blobSASPermissions;\n  }\n\n  /**\n   * Creates a {@link BlobSASPermissions} from a raw object which contains same keys as it\n   * and boolean values for them.\n   *\n   * @param permissionLike -\n   */\n  public static from(permissionLike: BlobSASPermissionsLike): BlobSASPermissions {\n    const blobSASPermissions = new BlobSASPermissions();\n    if (permissionLike.read) {\n      blobSASPermissions.read = true;\n    }\n    if (permissionLike.add) {\n      blobSASPermissions.add = true;\n    }\n    if (permissionLike.create) {\n      blobSASPermissions.create = true;\n    }\n    if (permissionLike.write) {\n      blobSASPermissions.write = true;\n    }\n    if (permissionLike.delete) {\n      blobSASPermissions.delete = true;\n    }\n    if (permissionLike.deleteVersion) {\n      blobSASPermissions.deleteVersion = true;\n    }\n    if (permissionLike.tag) {\n      blobSASPermissions.tag = true;\n    }\n    if (permissionLike.move) {\n      blobSASPermissions.move = true;\n    }\n    if (permissionLike.execute) {\n      blobSASPermissions.execute = true;\n    }\n    if (permissionLike.setImmutabilityPolicy) {\n      blobSASPermissions.setImmutabilityPolicy = true;\n    }\n    if (permissionLike.permanentDelete) {\n      blobSASPermissions.permanentDelete = true;\n    }\n    return blobSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  public deleteVersion: boolean = false;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  public tag: boolean = false;\n\n  /**\n   * Specifies Move access granted.\n   */\n  public move: boolean = false;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  public execute: boolean = false;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  public setImmutabilityPolicy: boolean = false;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  public permanentDelete: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * @returns A string which represents the BlobSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.deleteVersion) {\n      permissions.push(\"x\");\n    }\n    if (this.tag) {\n      permissions.push(\"t\");\n    }\n    if (this.move) {\n      permissions.push(\"m\");\n    }\n    if (this.execute) {\n      permissions.push(\"e\");\n    }\n    if (this.setImmutabilityPolicy) {\n      permissions.push(\"i\");\n    }\n    if (this.permanentDelete) {\n      permissions.push(\"y\");\n    }\n    return permissions.join(\"\");\n  }\n}\n\n/**\n * A type that looks like a Blob SAS permission.\n * Used in {@link BlobSASPermissions} to parse SAS permissions from raw objects.\n */\nexport interface BlobSASPermissionsLike {\n  /**\n   * Specifies Read access granted.\n   */\n  read?: boolean;\n\n  /**\n   * Specifies Add access granted.\n   */\n  add?: boolean;\n\n  /**\n   * Specifies Create access granted.\n   */\n  create?: boolean;\n\n  /**\n   * Specifies Write access granted.\n   */\n  write?: boolean;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  delete?: boolean;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  deleteVersion?: boolean;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  tag?: boolean;\n\n  /**\n   * Specifies Move access granted.\n   */\n  move?: boolean;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  execute?: boolean;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  setImmutabilityPolicy?: boolean;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  permanentDelete?: boolean;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a container.\n * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.\n * Once all the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class ContainerSASPermissions {\n  /**\n   * Creates an {@link ContainerSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): ContainerSASPermissions {\n    const containerSASPermissions = new ContainerSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          containerSASPermissions.read = true;\n          break;\n        case \"a\":\n          containerSASPermissions.add = true;\n          break;\n        case \"c\":\n          containerSASPermissions.create = true;\n          break;\n        case \"w\":\n          containerSASPermissions.write = true;\n          break;\n        case \"d\":\n          containerSASPermissions.delete = true;\n          break;\n        case \"l\":\n          containerSASPermissions.list = true;\n          break;\n        case \"t\":\n          containerSASPermissions.tag = true;\n          break;\n        case \"x\":\n          containerSASPermissions.deleteVersion = true;\n          break;\n        case \"m\":\n          containerSASPermissions.move = true;\n          break;\n        case \"e\":\n          containerSASPermissions.execute = true;\n          break;\n        case \"i\":\n          containerSASPermissions.setImmutabilityPolicy = true;\n          break;\n        case \"y\":\n          containerSASPermissions.permanentDelete = true;\n          break;\n        case \"f\":\n          containerSASPermissions.filterByTags = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission ${char}`);\n      }\n    }\n\n    return containerSASPermissions;\n  }\n\n  /**\n   * Creates a {@link ContainerSASPermissions} from a raw object which contains same keys as it\n   * and boolean values for them.\n   *\n   * @param permissionLike -\n   */\n  public static from(permissionLike: ContainerSASPermissionsLike): ContainerSASPermissions {\n    const containerSASPermissions = new ContainerSASPermissions();\n    if (permissionLike.read) {\n      containerSASPermissions.read = true;\n    }\n    if (permissionLike.add) {\n      containerSASPermissions.add = true;\n    }\n    if (permissionLike.create) {\n      containerSASPermissions.create = true;\n    }\n    if (permissionLike.write) {\n      containerSASPermissions.write = true;\n    }\n    if (permissionLike.delete) {\n      containerSASPermissions.delete = true;\n    }\n    if (permissionLike.list) {\n      containerSASPermissions.list = true;\n    }\n    if (permissionLike.deleteVersion) {\n      containerSASPermissions.deleteVersion = true;\n    }\n    if (permissionLike.tag) {\n      containerSASPermissions.tag = true;\n    }\n    if (permissionLike.move) {\n      containerSASPermissions.move = true;\n    }\n    if (permissionLike.execute) {\n      containerSASPermissions.execute = true;\n    }\n    if (permissionLike.setImmutabilityPolicy) {\n      containerSASPermissions.setImmutabilityPolicy = true;\n    }\n    if (permissionLike.permanentDelete) {\n      containerSASPermissions.permanentDelete = true;\n    }\n    if (permissionLike.filterByTags) {\n      containerSASPermissions.filterByTags = true;\n    }\n    return containerSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  public deleteVersion: boolean = false;\n\n  /**\n   * Specifies List access granted.\n   */\n  public list: boolean = false;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  public tag: boolean = false;\n\n  /**\n   * Specifies Move access granted.\n   */\n  public move: boolean = false;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  public execute: boolean = false;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  public setImmutabilityPolicy: boolean = false;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  public permanentDelete: boolean = false;\n\n  /**\n   * Specifies that Filter Blobs by Tags is permitted.\n   */\n  public filterByTags: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * The order of the characters should be as specified here to ensure correctness.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.deleteVersion) {\n      permissions.push(\"x\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.tag) {\n      permissions.push(\"t\");\n    }\n    if (this.move) {\n      permissions.push(\"m\");\n    }\n    if (this.execute) {\n      permissions.push(\"e\");\n    }\n    if (this.setImmutabilityPolicy) {\n      permissions.push(\"i\");\n    }\n    if (this.permanentDelete) {\n      permissions.push(\"y\");\n    }\n    if (this.filterByTags) {\n      permissions.push(\"f\");\n    }\n    return permissions.join(\"\");\n  }\n}\n\n/**\n * A type that looks like a Container SAS permission.\n * Used in {@link ContainerSASPermissions} to parse SAS permissions from raw objects.\n */\nexport interface ContainerSASPermissionsLike {\n  /**\n   * Specifies Read access granted.\n   */\n  read?: boolean;\n\n  /**\n   * Specifies Add access granted.\n   */\n  add?: boolean;\n\n  /**\n   * Specifies Create access granted.\n   */\n  create?: boolean;\n\n  /**\n   * Specifies Write access granted.\n   */\n  write?: boolean;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  delete?: boolean;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  deleteVersion?: boolean;\n\n  /**\n   * Specifies List access granted.\n   */\n  list?: boolean;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  tag?: boolean;\n\n  /**\n   * Specifies Move access granted.\n   */\n  move?: boolean;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  execute?: boolean;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  setImmutabilityPolicy?: boolean;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  permanentDelete?: boolean;\n\n  /**\n   * Specifies that Filter Blobs by Tags is permitted.\n   */\n  filterByTags?: boolean;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createHmac } from \"crypto\";\nimport type { UserDelegationKey } from \"../BlobServiceClient\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * UserDelegationKeyCredential is only used for generation of user delegation SAS.\n * @see https://learn.microsoft.com/en-us/rest/api/storageservices/create-user-delegation-sas\n */\nexport class UserDelegationKeyCredential {\n  /**\n   * Azure Storage account name; readonly.\n   */\n  public readonly accountName: string;\n\n  /**\n   * Azure Storage user delegation key; readonly.\n   */\n  public readonly userDelegationKey: UserDelegationKey;\n\n  /**\n   * Key value in Buffer type.\n   */\n  private readonly key: Buffer;\n\n  /**\n   * Creates an instance of UserDelegationKeyCredential.\n   * @param accountName -\n   * @param userDelegationKey -\n   */\n  constructor(accountName: string, userDelegationKey: UserDelegationKey) {\n    this.accountName = accountName;\n    this.userDelegationKey = userDelegationKey;\n    this.key = Buffer.from(userDelegationKey.value, \"base64\");\n  }\n\n  /**\n   * Generates a hash signature for an HTTP request or for a SAS.\n   *\n   * @param stringToSign -\n   */\n  public computeHMACSHA256(stringToSign: string): string {\n    // console.log(`stringToSign: ${JSON.stringify(stringToSign)}`);\n\n    return createHmac(\"sha256\", this.key).update(stringToSign, \"utf8\").digest(\"base64\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Allowed IP range for a SAS.\n */\nexport interface SasIPRange {\n  /**\n   * Starting IP address in the IP range.\n   * If end IP doesn't provide, start IP will the only IP allowed.\n   */\n  start: string;\n  /**\n   * Optional. IP address that ends the IP range.\n   * If not provided, start IP will the only IP allowed.\n   */\n  end?: string;\n}\n\n/**\n * Generate SasIPRange format string. For example:\n *\n * \"8.8.8.8\" or \"1.1.1.1-255.255.255.255\"\n *\n * @param ipRange -\n */\nexport function ipRangeToString(ipRange: SasIPRange): string {\n  return ipRange.end ? `${ipRange.start}-${ipRange.end}` : ipRange.start;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { SasIPRange } from \"./SasIPRange\";\nimport { ipRangeToString } from \"./SasIPRange\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\nimport type { UserDelegationKey } from \"../BlobServiceClient\";\n\n/**\n * Protocols for generated SAS.\n */\nexport enum SASProtocol {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  Https = \"https\",\n\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  HttpsAndHttp = \"https,http\",\n}\n\n/**\n * Options to construct {@link SASQueryParameters}.\n */\nexport interface SASQueryParametersOptions {\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   */\n  permissions?: string;\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   */\n  services?: string;\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   */\n  resourceTypes?: string;\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   */\n  protocol?: SASProtocol;\n  /**\n   * Optional. The start time for this SAS token.\n   */\n  startsOn?: Date;\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   */\n  expiresOn?: Date;\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies which resources are accessible via the SAS (only for {@link BlobSASSignatureValues}).\n   * @see https://learn.microsoft.com/rest/api/storageservices/create-service-sas#specifying-the-signed-resource-blob-service-only\n   */\n  resource?: string;\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   */\n  cacheControl?: string;\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   */\n  contentDisposition?: string;\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   */\n  contentEncoding?: string;\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   */\n  contentLanguage?: string;\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   */\n  contentType?: string;\n  /**\n   * User delegation key properties.\n   */\n  userDelegationKey?: UserDelegationKey;\n  /**\n   * Authorized AAD Object ID in GUID format. The AAD Object ID of a user authorized by the owner of the User Delegation Key\n   * to perform the action granted by the SAS. The Azure Storage service will ensure that the owner of the user delegation key\n   * has the required permissions before granting access but no additional permission check for the user specified in\n   * this value will be performed. This cannot be used in conjuction with {@link signedUnauthorizedUserObjectId}.\n   * This is only used for User Delegation SAS.\n   */\n  preauthorizedAgentObjectId?: string;\n  /**\n   * A GUID value that will be logged in the storage diagnostic logs and can be used to correlate SAS generation with storage resource access.\n   * This is only used for User Delegation SAS.\n   */\n  correlationId?: string;\n}\n\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link BlobSASSignatureValues}\n * types. Once generated, it can be encoded into a {@link String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n */\nexport class SASQueryParameters {\n  /**\n   * The storage API version.\n   */\n  public readonly version: string;\n\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   */\n  public readonly protocol?: SASProtocol;\n\n  /**\n   * Optional. The start time for this SAS token.\n   */\n  public readonly startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   */\n  public readonly expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   */\n  public readonly permissions?: string;\n\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   */\n  public readonly services?: string;\n\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   */\n  public readonly resourceTypes?: string;\n\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  public readonly identifier?: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  public readonly encryptionScope?: string;\n\n  /**\n   * Optional. Specifies which resources are accessible via the SAS (only for {@link BlobSASSignatureValues}).\n   * @see https://learn.microsoft.com/rest/api/storageservices/create-service-sas#specifying-the-signed-resource-blob-service-only\n   */\n  public readonly resource?: string;\n\n  /**\n   * The signature for the SAS token.\n   */\n  public readonly signature: string;\n\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   */\n  public readonly cacheControl?: string;\n\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   */\n  public readonly contentDisposition?: string;\n\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   */\n  public readonly contentEncoding?: string;\n\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   */\n  public readonly contentLanguage?: string;\n\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   */\n  public readonly contentType?: string;\n\n  /**\n   * Inner value of getter ipRange.\n   */\n  private readonly ipRangeInner?: SasIPRange;\n\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   * Property of user delegation key.\n   */\n  private readonly signedOid?: string;\n\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   * Property of user delegation key.\n   */\n  private readonly signedTenantId?: string;\n\n  /**\n   * The date-time the key is active.\n   * Property of user delegation key.\n   */\n  private readonly signedStartsOn?: Date;\n\n  /**\n   * The date-time the key expires.\n   * Property of user delegation key.\n   */\n  private readonly signedExpiresOn?: Date;\n\n  /**\n   * Abbreviation of the Azure Storage service that accepts the user delegation key.\n   * Property of user delegation key.\n   */\n  private readonly signedService?: string;\n\n  /**\n   * The service version that created the user delegation key.\n   * Property of user delegation key.\n   */\n  private readonly signedVersion?: string;\n\n  /**\n   * Authorized AAD Object ID in GUID format. The AAD Object ID of a user authorized by the owner of the User Delegation Key\n   * to perform the action granted by the SAS. The Azure Storage service will ensure that the owner of the user delegation key\n   * has the required permissions before granting access but no additional permission check for the user specified in\n   * this value will be performed. This is only used for User Delegation SAS.\n   */\n  public readonly preauthorizedAgentObjectId?: string;\n\n  /**\n   * A GUID value that will be logged in the storage diagnostic logs and can be used to correlate SAS generation with storage resource access.\n   * This is only used for User Delegation SAS.\n   */\n  public readonly correlationId?: string;\n\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   */\n  public get ipRange(): SasIPRange | undefined {\n    if (this.ipRangeInner) {\n      return {\n        end: this.ipRangeInner.end,\n        start: this.ipRangeInner.start,\n      };\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param version - Representing the storage version\n   * @param signature - Representing the signature for the SAS token\n   * @param permissions - Representing the storage permissions\n   * @param services - Representing the storage services being accessed (only for Account SAS)\n   * @param resourceTypes - Representing the storage resource types being accessed (only for Account SAS)\n   * @param protocol - Representing the allowed HTTP protocol(s)\n   * @param startsOn - Representing the start time for this SAS token\n   * @param expiresOn - Representing the expiry time for this SAS token\n   * @param ipRange - Representing the range of valid IP addresses for this SAS token\n   * @param identifier - Representing the signed identifier (only for Service SAS)\n   * @param resource - Representing the storage container or blob (only for Service SAS)\n   * @param cacheControl - Representing the cache-control header (only for Blob/File Service SAS)\n   * @param contentDisposition - Representing the content-disposition header (only for Blob/File Service SAS)\n   * @param contentEncoding - Representing the content-encoding header (only for Blob/File Service SAS)\n   * @param contentLanguage - Representing the content-language header (only for Blob/File Service SAS)\n   * @param contentType - Representing the content-type header (only for Blob/File Service SAS)\n   * @param userDelegationKey - Representing the user delegation key properties\n   * @param preauthorizedAgentObjectId - Representing the authorized AAD Object ID (only for User Delegation SAS)\n   * @param correlationId - Representing the correlation ID (only for User Delegation SAS)\n   * @param encryptionScope -\n   */\n  constructor(\n    version: string,\n    signature: string,\n    permissions?: string,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey,\n    preauthorizedAgentObjectId?: string,\n    correlationId?: string,\n    encryptionScope?: string,\n  );\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param version - Representing the storage version\n   * @param signature - Representing the signature for the SAS token\n   * @param options - Optional. Options to construct the SASQueryParameters.\n   */\n  constructor(version: string, signature: string, options?: SASQueryParametersOptions);\n\n  constructor(\n    version: string,\n    signature: string,\n    permissionsOrOptions?: string | SASQueryParametersOptions,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey,\n    preauthorizedAgentObjectId?: string,\n    correlationId?: string,\n    encryptionScope?: string,\n  ) {\n    this.version = version;\n    this.signature = signature;\n\n    if (permissionsOrOptions !== undefined && typeof permissionsOrOptions !== \"string\") {\n      // SASQueryParametersOptions\n      this.permissions = permissionsOrOptions.permissions;\n      this.services = permissionsOrOptions.services;\n      this.resourceTypes = permissionsOrOptions.resourceTypes;\n      this.protocol = permissionsOrOptions.protocol;\n      this.startsOn = permissionsOrOptions.startsOn;\n      this.expiresOn = permissionsOrOptions.expiresOn;\n      this.ipRangeInner = permissionsOrOptions.ipRange;\n      this.identifier = permissionsOrOptions.identifier;\n      this.encryptionScope = permissionsOrOptions.encryptionScope;\n      this.resource = permissionsOrOptions.resource;\n      this.cacheControl = permissionsOrOptions.cacheControl;\n      this.contentDisposition = permissionsOrOptions.contentDisposition;\n      this.contentEncoding = permissionsOrOptions.contentEncoding;\n      this.contentLanguage = permissionsOrOptions.contentLanguage;\n      this.contentType = permissionsOrOptions.contentType;\n\n      if (permissionsOrOptions.userDelegationKey) {\n        this.signedOid = permissionsOrOptions.userDelegationKey.signedObjectId;\n        this.signedTenantId = permissionsOrOptions.userDelegationKey.signedTenantId;\n        this.signedStartsOn = permissionsOrOptions.userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = permissionsOrOptions.userDelegationKey.signedExpiresOn;\n        this.signedService = permissionsOrOptions.userDelegationKey.signedService;\n        this.signedVersion = permissionsOrOptions.userDelegationKey.signedVersion;\n\n        this.preauthorizedAgentObjectId = permissionsOrOptions.preauthorizedAgentObjectId;\n        this.correlationId = permissionsOrOptions.correlationId;\n      }\n    } else {\n      this.services = services;\n      this.resourceTypes = resourceTypes;\n      this.expiresOn = expiresOn;\n      this.permissions = permissionsOrOptions;\n      this.protocol = protocol;\n      this.startsOn = startsOn;\n      this.ipRangeInner = ipRange;\n      this.encryptionScope = encryptionScope;\n      this.identifier = identifier;\n      this.resource = resource;\n      this.cacheControl = cacheControl;\n      this.contentDisposition = contentDisposition;\n      this.contentEncoding = contentEncoding;\n      this.contentLanguage = contentLanguage;\n      this.contentType = contentType;\n\n      if (userDelegationKey) {\n        this.signedOid = userDelegationKey.signedObjectId;\n        this.signedTenantId = userDelegationKey.signedTenantId;\n        this.signedStartsOn = userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = userDelegationKey.signedExpiresOn;\n        this.signedService = userDelegationKey.signedService;\n        this.signedVersion = userDelegationKey.signedVersion;\n\n        this.preauthorizedAgentObjectId = preauthorizedAgentObjectId;\n        this.correlationId = correlationId;\n      }\n    }\n  }\n\n  /**\n   * Encodes all SAS query parameters into a string that can be appended to a URL.\n   *\n   */\n  public toString(): string {\n    const params: string[] = [\n      \"sv\",\n      \"ss\",\n      \"srt\",\n      \"spr\",\n      \"st\",\n      \"se\",\n      \"sip\",\n      \"si\",\n      \"ses\",\n      \"skoid\", // Signed object ID\n      \"sktid\", // Signed tenant ID\n      \"skt\", // Signed key start time\n      \"ske\", // Signed key expiry time\n      \"sks\", // Signed key service\n      \"skv\", // Signed key version\n      \"sr\",\n      \"sp\",\n      \"sig\",\n      \"rscc\",\n      \"rscd\",\n      \"rsce\",\n      \"rscl\",\n      \"rsct\",\n      \"saoid\",\n      \"scid\",\n    ];\n    const queries: string[] = [];\n\n    for (const param of params) {\n      switch (param) {\n        case \"sv\":\n          this.tryAppendQueryParameter(queries, param, this.version);\n          break;\n        case \"ss\":\n          this.tryAppendQueryParameter(queries, param, this.services);\n          break;\n        case \"srt\":\n          this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n          break;\n        case \"spr\":\n          this.tryAppendQueryParameter(queries, param, this.protocol);\n          break;\n        case \"st\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.startsOn ? truncatedISO8061Date(this.startsOn, false) : undefined,\n          );\n          break;\n        case \"se\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.expiresOn ? truncatedISO8061Date(this.expiresOn, false) : undefined,\n          );\n          break;\n        case \"sip\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.ipRange ? ipRangeToString(this.ipRange) : undefined,\n          );\n          break;\n        case \"si\":\n          this.tryAppendQueryParameter(queries, param, this.identifier);\n          break;\n        case \"ses\":\n          this.tryAppendQueryParameter(queries, param, this.encryptionScope);\n          break;\n        case \"skoid\": // Signed object ID\n          this.tryAppendQueryParameter(queries, param, this.signedOid);\n          break;\n        case \"sktid\": // Signed tenant ID\n          this.tryAppendQueryParameter(queries, param, this.signedTenantId);\n          break;\n        case \"skt\": // Signed key start time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedStartsOn ? truncatedISO8061Date(this.signedStartsOn, false) : undefined,\n          );\n          break;\n        case \"ske\": // Signed key expiry time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedExpiresOn ? truncatedISO8061Date(this.signedExpiresOn, false) : undefined,\n          );\n          break;\n        case \"sks\": // Signed key service\n          this.tryAppendQueryParameter(queries, param, this.signedService);\n          break;\n        case \"skv\": // Signed key version\n          this.tryAppendQueryParameter(queries, param, this.signedVersion);\n          break;\n        case \"sr\":\n          this.tryAppendQueryParameter(queries, param, this.resource);\n          break;\n        case \"sp\":\n          this.tryAppendQueryParameter(queries, param, this.permissions);\n          break;\n        case \"sig\":\n          this.tryAppendQueryParameter(queries, param, this.signature);\n          break;\n        case \"rscc\":\n          this.tryAppendQueryParameter(queries, param, this.cacheControl);\n          break;\n        case \"rscd\":\n          this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n          break;\n        case \"rsce\":\n          this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n          break;\n        case \"rscl\":\n          this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n          break;\n        case \"rsct\":\n          this.tryAppendQueryParameter(queries, param, this.contentType);\n          break;\n        case \"saoid\":\n          this.tryAppendQueryParameter(queries, param, this.preauthorizedAgentObjectId);\n          break;\n        case \"scid\":\n          this.tryAppendQueryParameter(queries, param, this.correlationId);\n          break;\n      }\n    }\n    return queries.join(\"&\");\n  }\n\n  /**\n   * A private helper method used to filter and append query key/value pairs into an array.\n   *\n   * @param queries -\n   * @param key -\n   * @param value -\n   */\n  private tryAppendQueryParameter(queries: string[], key: string, value?: string): void {\n    if (!value) {\n      return;\n    }\n\n    key = encodeURIComponent(key);\n    value = encodeURIComponent(value);\n    if (key.length > 0 && value.length > 0) {\n      queries.push(`${key}=${value}`);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { BlobSASPermissions } from \"./BlobSASPermissions\";\nimport type { UserDelegationKey } from \"../BlobServiceClient\";\nimport { ContainerSASPermissions } from \"./ContainerSASPermissions\";\nimport { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport { UserDelegationKeyCredential } from \"../credentials/UserDelegationKeyCredential\";\nimport type { SasIPRange } from \"./SasIPRange\";\nimport { ipRangeToString } from \"./SasIPRange\";\nimport type { SASProtocol } from \"./SASQueryParameters\";\nimport { SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"../utils/constants\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * BlobSASSignatureValues is used to help generating Blob service SAS tokens for containers or blobs.\n */\nexport interface BlobSASSignatureValues {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   */\n  expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to either {@link ContainerSASPermissions} or {@link BlobSASPermissions} depending on the resource\n   * being accessed for help constructing the permissions string.\n   */\n  permissions?: BlobSASPermissions | ContainerSASPermissions;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The name of the container the SAS user may access.\n   */\n  containerName: string;\n\n  /**\n   * Optional. The blob name of the SAS user may access. Required if snapshotTime or versionId is provided.\n   */\n  blobName?: string;\n\n  /**\n   * Optional. Snapshot timestamp string the SAS user may access. Only supported from API version 2018-11-09.\n   */\n  snapshotTime?: string;\n\n  /**\n   * Optional. VersionId of the blob version the SAS user may access. Only supported from API version 2019-10-10.\n   */\n  versionId?: string;\n\n  /**\n   * Optional. The name of the access policy on the container this SAS references if any.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   */\n  contentType?: string;\n\n  /**\n   * Optional. Beginning in version 2020-02-10, specifies the Authorized AAD Object ID in GUID format. The AAD Object ID of a user\n   * authorized by the owner of the user delegation key to perform the action granted by the SAS. The Azure Storage service will\n   * ensure that the owner of the user delegation key has the required permissions before granting access but no additional permission\n   * check for the user specified in this value will be performed. This is only used for User Delegation SAS.\n   */\n  preauthorizedAgentObjectId?: string;\n\n  /**\n   * Optional. Beginning in version 2020-02-10, this is a GUID value that will be logged in the storage diagnostic logs and can be used to\n   * correlate SAS generation with storage resource access. This is only used for User Delegation SAS.\n   */\n  correlationId?: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * Fill in the required details before running the following snippets.\n *\n * Example usage:\n *\n * ```js\n * // Generate service level SAS for a container\n * const containerSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     permissions: ContainerSASPermissions.parse(\"racwdl\"), // Required\n *     startsOn: new Date(), // Optional\n *     expiresOn: new Date(new Date().valueOf() + 86400 * 1000), // Required. Date type\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2016-05-31\" // Optional\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * Example using an identifier:\n *\n * ```js\n * // Generate service level SAS for a container with identifier\n * // startsOn & permissions are optional when identifier is provided\n * const identifier = \"unique-id\";\n * await containerClient.setAccessPolicy(undefined, [\n *   {\n *     accessPolicy: {\n *       expiresOn: new Date(new Date().valueOf() + 86400 * 1000), // Date type\n *       permissions: ContainerSASPermissions.parse(\"racwdl\").toString(),\n *       startsOn: new Date() // Date type\n *     },\n *     id: identifier\n *   }\n * ]);\n *\n * const containerSAS = generateBlobSASQueryParameters(\n *   {\n *     containerName, // Required\n *     identifier // Required\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * Example using a blob name:\n *\n * ```js\n * // Generate service level SAS for a blob\n * const blobSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     blobName, // Required\n *     permissions: BlobSASPermissions.parse(\"racwd\"), // Required\n *     startsOn: new Date(), // Optional\n *     expiresOn: new Date(new Date().valueOf() + 86400 * 1000), // Required. Date type\n *     cacheControl: \"cache-control-override\", // Optional\n *     contentDisposition: \"content-disposition-override\", // Optional\n *     contentEncoding: \"content-encoding-override\", // Optional\n *     contentLanguage: \"content-language-override\", // Optional\n *     contentType: \"content-type-override\", // Optional\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2016-05-31\" // Optional\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): SASQueryParameters;\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n * WARNING: identifier will be ignored when generating user delegation SAS, permissions and expiresOn are required.\n *\n * Example usage:\n *\n * ```js\n * // Generate user delegation SAS for a container\n * const userDelegationKey = await blobServiceClient.getUserDelegationKey(startsOn, expiresOn);\n * const containerSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     permissions: ContainerSASPermissions.parse(\"racwdl\"), // Required\n *     startsOn, // Optional. Date type\n *     expiresOn, // Required. Date type\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2018-11-09\" // Must greater than or equal to 2018-11-09 to generate user delegation SAS\n *   },\n *   userDelegationKey, // UserDelegationKey\n *   accountName\n * ).toString();\n * ```\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKey - Return value of `blobServiceClient.getUserDelegationKey()`\n * @param accountName -\n */\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKey: UserDelegationKey,\n  accountName: string,\n): SASQueryParameters;\n\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredentialOrUserDelegationKey: StorageSharedKeyCredential | UserDelegationKey,\n  accountName?: string,\n): SASQueryParameters {\n  return generateBlobSASQueryParametersInternal(\n    blobSASSignatureValues,\n    sharedKeyCredentialOrUserDelegationKey,\n    accountName,\n  ).sasQueryParameters;\n}\n\nexport function generateBlobSASQueryParametersInternal(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredentialOrUserDelegationKey: StorageSharedKeyCredential | UserDelegationKey,\n  accountName?: string,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n\n  const sharedKeyCredential =\n    sharedKeyCredentialOrUserDelegationKey instanceof StorageSharedKeyCredential\n      ? sharedKeyCredentialOrUserDelegationKey\n      : undefined;\n  let userDelegationKeyCredential: UserDelegationKeyCredential | undefined;\n\n  if (sharedKeyCredential === undefined && accountName !== undefined) {\n    userDelegationKeyCredential = new UserDelegationKeyCredential(\n      accountName,\n      sharedKeyCredentialOrUserDelegationKey as UserDelegationKey,\n    );\n  }\n\n  if (sharedKeyCredential === undefined && userDelegationKeyCredential === undefined) {\n    throw TypeError(\"Invalid sharedKeyCredential, userDelegationKey or accountName.\");\n  }\n\n  // Version 2020-12-06 adds support for encryptionscope in SAS.\n  if (version >= \"2020-12-06\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20201206(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      return generateBlobSASQueryParametersUDK20201206(\n        blobSASSignatureValues,\n        userDelegationKeyCredential!,\n      );\n    }\n  }\n\n  // Version 2019-12-12 adds support for the blob tags permission.\n  // Version 2018-11-09 adds support for the signed resource and signed blob snapshot time fields.\n  // https://learn.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas#constructing-the-signature-string\n  if (version >= \"2018-11-09\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20181109(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      // Version 2020-02-10 delegation SAS signature construction includes preauthorizedAgentObjectId, agentObjectId, correlationId.\n      if (version >= \"2020-02-10\") {\n        return generateBlobSASQueryParametersUDK20200210(\n          blobSASSignatureValues,\n          userDelegationKeyCredential!,\n        );\n      } else {\n        return generateBlobSASQueryParametersUDK20181109(\n          blobSASSignatureValues,\n          userDelegationKeyCredential!,\n        );\n      }\n    }\n  }\n\n  if (version >= \"2015-04-05\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20150405(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      throw new RangeError(\n        \"'version' must be >= '2018-11-09' when generating user delegation SAS using user delegation key.\",\n      );\n    }\n  }\n\n  throw new RangeError(\"'version' must be >= '2015-04-05'.\");\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2015-04-05 AND BEFORE 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nfunction generateBlobSASQueryParameters20150405(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  if (\n    !blobSASSignatureValues.identifier &&\n    !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\",\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return {\n    sasQueryParameters: new SASQueryParameters(\n      blobSASSignatureValues.version!,\n      signature,\n      verifiedPermissions,\n      undefined,\n      undefined,\n      blobSASSignatureValues.protocol,\n      blobSASSignatureValues.startsOn,\n      blobSASSignatureValues.expiresOn,\n      blobSASSignatureValues.ipRange,\n      blobSASSignatureValues.identifier,\n      resource,\n      blobSASSignatureValues.cacheControl,\n      blobSASSignatureValues.contentDisposition,\n      blobSASSignatureValues.contentEncoding,\n      blobSASSignatureValues.contentLanguage,\n      blobSASSignatureValues.contentType,\n    ),\n    stringToSign: stringToSign,\n  };\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nfunction generateBlobSASQueryParameters20181109(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  if (\n    !blobSASSignatureValues.identifier &&\n    !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\",\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return {\n    sasQueryParameters: new SASQueryParameters(\n      blobSASSignatureValues.version!,\n      signature,\n      verifiedPermissions,\n      undefined,\n      undefined,\n      blobSASSignatureValues.protocol,\n      blobSASSignatureValues.startsOn,\n      blobSASSignatureValues.expiresOn,\n      blobSASSignatureValues.ipRange,\n      blobSASSignatureValues.identifier,\n      resource,\n      blobSASSignatureValues.cacheControl,\n      blobSASSignatureValues.contentDisposition,\n      blobSASSignatureValues.contentEncoding,\n      blobSASSignatureValues.contentLanguage,\n      blobSASSignatureValues.contentType,\n    ),\n    stringToSign: stringToSign,\n  };\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2020-12-06.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nfunction generateBlobSASQueryParameters20201206(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  if (\n    !blobSASSignatureValues.identifier &&\n    !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.encryptionScope,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\",\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return {\n    sasQueryParameters: new SASQueryParameters(\n      blobSASSignatureValues.version!,\n      signature,\n      verifiedPermissions,\n      undefined,\n      undefined,\n      blobSASSignatureValues.protocol,\n      blobSASSignatureValues.startsOn,\n      blobSASSignatureValues.expiresOn,\n      blobSASSignatureValues.ipRange,\n      blobSASSignatureValues.identifier,\n      resource,\n      blobSASSignatureValues.cacheControl,\n      blobSASSignatureValues.contentDisposition,\n      blobSASSignatureValues.contentEncoding,\n      blobSASSignatureValues.contentLanguage,\n      blobSASSignatureValues.contentType,\n      undefined,\n      undefined,\n      undefined,\n      blobSASSignatureValues.encryptionScope,\n    ),\n    stringToSign: stringToSign,\n  };\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKeyCredential -\n */\nfunction generateBlobSASQueryParametersUDK20181109(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKeyCredential: UserDelegationKeyCredential,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  // Stored access policies are not supported for a user delegation SAS.\n  if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      userDelegationKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    userDelegationKeyCredential.userDelegationKey.signedObjectId,\n    userDelegationKeyCredential.userDelegationKey.signedTenantId,\n    userDelegationKeyCredential.userDelegationKey.signedStartsOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedService,\n    userDelegationKeyCredential.userDelegationKey.signedVersion,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n  ].join(\"\\n\");\n\n  const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n  return {\n    sasQueryParameters: new SASQueryParameters(\n      blobSASSignatureValues.version!,\n      signature,\n      verifiedPermissions,\n      undefined,\n      undefined,\n      blobSASSignatureValues.protocol,\n      blobSASSignatureValues.startsOn,\n      blobSASSignatureValues.expiresOn,\n      blobSASSignatureValues.ipRange,\n      blobSASSignatureValues.identifier,\n      resource,\n      blobSASSignatureValues.cacheControl,\n      blobSASSignatureValues.contentDisposition,\n      blobSASSignatureValues.contentEncoding,\n      blobSASSignatureValues.contentLanguage,\n      blobSASSignatureValues.contentType,\n      userDelegationKeyCredential.userDelegationKey,\n    ),\n    stringToSign: stringToSign,\n  };\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2020-02-10.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKeyCredential -\n */\nfunction generateBlobSASQueryParametersUDK20200210(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKeyCredential: UserDelegationKeyCredential,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  // Stored access policies are not supported for a user delegation SAS.\n  if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      userDelegationKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    userDelegationKeyCredential.userDelegationKey.signedObjectId,\n    userDelegationKeyCredential.userDelegationKey.signedTenantId,\n    userDelegationKeyCredential.userDelegationKey.signedStartsOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedService,\n    userDelegationKeyCredential.userDelegationKey.signedVersion,\n    blobSASSignatureValues.preauthorizedAgentObjectId,\n    undefined, // agentObjectId\n    blobSASSignatureValues.correlationId,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n  ].join(\"\\n\");\n\n  const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n  return {\n    sasQueryParameters: new SASQueryParameters(\n      blobSASSignatureValues.version!,\n      signature,\n      verifiedPermissions,\n      undefined,\n      undefined,\n      blobSASSignatureValues.protocol,\n      blobSASSignatureValues.startsOn,\n      blobSASSignatureValues.expiresOn,\n      blobSASSignatureValues.ipRange,\n      blobSASSignatureValues.identifier,\n      resource,\n      blobSASSignatureValues.cacheControl,\n      blobSASSignatureValues.contentDisposition,\n      blobSASSignatureValues.contentEncoding,\n      blobSASSignatureValues.contentLanguage,\n      blobSASSignatureValues.contentType,\n      userDelegationKeyCredential.userDelegationKey,\n      blobSASSignatureValues.preauthorizedAgentObjectId,\n      blobSASSignatureValues.correlationId,\n    ),\n    stringToSign: stringToSign,\n  };\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2020-12-06.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKeyCredential -\n */\nfunction generateBlobSASQueryParametersUDK20201206(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKeyCredential: UserDelegationKeyCredential,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  // Stored access policies are not supported for a user delegation SAS.\n  if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      userDelegationKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    userDelegationKeyCredential.userDelegationKey.signedObjectId,\n    userDelegationKeyCredential.userDelegationKey.signedTenantId,\n    userDelegationKeyCredential.userDelegationKey.signedStartsOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedService,\n    userDelegationKeyCredential.userDelegationKey.signedVersion,\n    blobSASSignatureValues.preauthorizedAgentObjectId,\n    undefined, // agentObjectId\n    blobSASSignatureValues.correlationId,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.encryptionScope,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n  ].join(\"\\n\");\n\n  const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n  return {\n    sasQueryParameters: new SASQueryParameters(\n      blobSASSignatureValues.version!,\n      signature,\n      verifiedPermissions,\n      undefined,\n      undefined,\n      blobSASSignatureValues.protocol,\n      blobSASSignatureValues.startsOn,\n      blobSASSignatureValues.expiresOn,\n      blobSASSignatureValues.ipRange,\n      blobSASSignatureValues.identifier,\n      resource,\n      blobSASSignatureValues.cacheControl,\n      blobSASSignatureValues.contentDisposition,\n      blobSASSignatureValues.contentEncoding,\n      blobSASSignatureValues.contentLanguage,\n      blobSASSignatureValues.contentType,\n      userDelegationKeyCredential.userDelegationKey,\n      blobSASSignatureValues.preauthorizedAgentObjectId,\n      blobSASSignatureValues.correlationId,\n      blobSASSignatureValues.encryptionScope,\n    ),\n    stringToSign: stringToSign,\n  };\n}\n\nfunction getCanonicalName(accountName: string, containerName: string, blobName?: string): string {\n  // Container: \"/blob/account/containerName\"\n  // Blob:      \"/blob/account/containerName/blobName\"\n  const elements: string[] = [`/blob/${accountName}/${containerName}`];\n  if (blobName) {\n    elements.push(`/${blobName}`);\n  }\n  return elements.join(\"\");\n}\n\nfunction SASSignatureValuesSanityCheckAndAutofill(\n  blobSASSignatureValues: BlobSASSignatureValues,\n): BlobSASSignatureValues {\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n  if (blobSASSignatureValues.snapshotTime && version < \"2018-11-09\") {\n    throw RangeError(\"'version' must be >= '2018-11-09' when providing 'snapshotTime'.\");\n  }\n  if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.snapshotTime) {\n    throw RangeError(\"Must provide 'blobName' when providing 'snapshotTime'.\");\n  }\n\n  if (blobSASSignatureValues.versionId && version < \"2019-10-10\") {\n    throw RangeError(\"'version' must be >= '2019-10-10' when providing 'versionId'.\");\n  }\n  if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.versionId) {\n    throw RangeError(\"Must provide 'blobName' when providing 'versionId'.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.setImmutabilityPolicy &&\n    version < \"2020-08-04\"\n  ) {\n    throw RangeError(\"'version' must be >= '2020-08-04' when provided 'i' permission.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.deleteVersion &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when providing 'x' permission.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.permanentDelete &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when providing 'y' permission.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.tag &&\n    version < \"2019-12-12\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-12-12' when providing 't' permission.\");\n  }\n\n  if (\n    version < \"2020-02-10\" &&\n    blobSASSignatureValues.permissions &&\n    (blobSASSignatureValues.permissions.move || blobSASSignatureValues.permissions.execute)\n  ) {\n    throw RangeError(\"'version' must be >= '2020-02-10' when providing the 'm' or 'e' permission.\");\n  }\n\n  if (\n    version < \"2021-04-10\" &&\n    blobSASSignatureValues.permissions &&\n    (blobSASSignatureValues.permissions as ContainerSASPermissions).filterByTags\n  ) {\n    throw RangeError(\"'version' must be >= '2021-04-10' when providing the 'f' permission.\");\n  }\n\n  if (\n    version < \"2020-02-10\" &&\n    (blobSASSignatureValues.preauthorizedAgentObjectId || blobSASSignatureValues.correlationId)\n  ) {\n    throw RangeError(\n      \"'version' must be >= '2020-02-10' when providing 'preauthorizedAgentObjectId' or 'correlationId'.\",\n    );\n  }\n\n  if (blobSASSignatureValues.encryptionScope && version < \"2020-12-06\") {\n    throw RangeError(\"'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.\");\n  }\n\n  blobSASSignatureValues.version = version;\n  return blobSASSignatureValues;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { randomUUID } from \"@azure/core-util\";\nimport type { ContainerBreakLeaseOptionalParams } from \"./generatedModels\";\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { Blob as StorageBlob, Container } from \"./generated/src/operationsInterfaces\";\nimport type { ModifiedAccessConditions } from \"./models\";\nimport type { CommonOptions } from \"./StorageClient\";\nimport { ETagNone } from \"./utils/constants\";\nimport { tracingClient } from \"./utils/tracing\";\nimport type { BlobClient } from \"./Clients\";\nimport type { ContainerClient } from \"./ContainerClient\";\nimport type { WithResponse } from \"./utils/utils.common\";\nimport { assertResponse } from \"./utils/utils.common\";\nimport type {\n  ContainerAcquireLeaseHeaders,\n  ContainerBreakLeaseHeaders,\n  ContainerReleaseLeaseHeaders,\n} from \"./generated/src\";\n\n/**\n * The details for a specific lease.\n */\nexport interface Lease {\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally. If the request version is 2011-08-18 or\n   * newer, the ETag value will be in quotes.\n   */\n  etag?: string;\n  /**\n   * Returns the date and time the container was\n   * last modified. Any operation that modifies the blob, including an update\n   * of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a container's lease\n   */\n  leaseId?: string;\n  /**\n   * Approximate time remaining in the lease\n   * period, in seconds.\n   */\n  leaseTime?: number;\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used\n   * to execute the request. This header is returned for requests made against\n   * version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated\n   */\n  date?: Date;\n  /**\n   * Error code if any associated with the response that returned\n   * the Lease information.\n   */\n  errorCode?: string;\n}\n\n/**\n * Contains the response data for operations that create, modify, or delete a lease.\n *\n * See {@link BlobLeaseClient}.\n */\nexport type LeaseOperationResponse = WithResponse<Lease, Lease>;\n\n/**\n * Configures lease operations.\n */\nexport interface LeaseOperationOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when changing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * A client that manages leases for a {@link ContainerClient} or a {@link BlobClient}.\n */\nexport class BlobLeaseClient {\n  private _leaseId: string;\n  private _url: string;\n  private _containerOrBlobOperation: Container | StorageBlob;\n  private _isContainer: boolean;\n\n  /**\n   * Gets the lease Id.\n   *\n   * @readonly\n   */\n  public get leaseId(): string {\n    return this._leaseId;\n  }\n\n  /**\n   * Gets the url.\n   *\n   * @readonly\n   */\n  public get url(): string {\n    return this._url;\n  }\n\n  /**\n   * Creates an instance of BlobLeaseClient.\n   * @param client - The client to make the lease operation requests.\n   * @param leaseId - Initial proposed lease id.\n   */\n  constructor(client: ContainerClient | BlobClient, leaseId?: string) {\n    const clientContext = (client as any).storageClientContext;\n    this._url = client.url;\n\n    if ((client as BlobClient).name === undefined) {\n      this._isContainer = true;\n      this._containerOrBlobOperation = clientContext.container;\n    } else {\n      this._isContainer = false;\n      this._containerOrBlobOperation = clientContext.blob;\n    }\n\n    if (!leaseId) {\n      leaseId = randomUUID();\n    }\n    this._leaseId = leaseId;\n  }\n\n  /**\n   * Establishes and manages a lock on a container for delete operations, or on a blob\n   * for write and delete operations.\n   * The lock duration can be 15 to 60 seconds, or can be infinite.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param duration - Must be between 15 to 60 seconds, or infinite (-1)\n   * @param options - option to configure lease management operations.\n   * @returns Response data for acquire lease operation.\n   */\n  public async acquireLease(\n    duration: number,\n    options: LeaseOperationOptions = {},\n  ): Promise<LeaseOperationResponse> {\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\",\n      );\n    }\n    return tracingClient.withSpan(\n      \"BlobLeaseClient-acquireLease\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ContainerAcquireLeaseHeaders, ContainerAcquireLeaseHeaders>(\n          await this._containerOrBlobOperation.acquireLease({\n            abortSignal: options.abortSignal,\n            duration,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            proposedLeaseId: this._leaseId,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * To change the ID of the lease.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param proposedLeaseId - the proposed new lease Id.\n   * @param options - option to configure lease management operations.\n   * @returns Response data for change lease operation.\n   */\n  public async changeLease(\n    proposedLeaseId: string,\n    options: LeaseOperationOptions = {},\n  ): Promise<LeaseOperationResponse> {\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\",\n      );\n    }\n\n    return tracingClient.withSpan(\n      \"BlobLeaseClient-changeLease\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<Lease, Lease>(\n          await this._containerOrBlobOperation.changeLease(this._leaseId, proposedLeaseId, {\n            abortSignal: options.abortSignal,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n        this._leaseId = proposedLeaseId;\n        return response;\n      },\n    );\n  }\n\n  /**\n   * To free the lease if it is no longer needed so that another client may\n   * immediately acquire a lease against the container or the blob.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param options - option to configure lease management operations.\n   * @returns Response data for release lease operation.\n   */\n  public async releaseLease(options: LeaseOperationOptions = {}): Promise<LeaseOperationResponse> {\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\",\n      );\n    }\n    return tracingClient.withSpan(\n      \"BlobLeaseClient-releaseLease\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ContainerReleaseLeaseHeaders, ContainerReleaseLeaseHeaders>(\n          await this._containerOrBlobOperation.releaseLease(this._leaseId, {\n            abortSignal: options.abortSignal,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * To renew the lease.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param options - Optional option to configure lease management operations.\n   * @returns Response data for renew lease operation.\n   */\n  public async renewLease(options: LeaseOperationOptions = {}): Promise<Lease> {\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\",\n      );\n    }\n    return tracingClient.withSpan(\"BlobLeaseClient-renewLease\", options, async (updatedOptions) => {\n      return this._containerOrBlobOperation.renewLease(this._leaseId, {\n        abortSignal: options.abortSignal,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        tracingOptions: updatedOptions.tracingOptions,\n      });\n    });\n  }\n\n  /**\n   * To end the lease but ensure that another client cannot acquire a new lease\n   * until the current lease period has expired.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param breakPeriod - Break period\n   * @param options - Optional options to configure lease management operations.\n   * @returns Response data for break lease operation.\n   */\n  public async breakLease(\n    breakPeriod: number,\n    options: LeaseOperationOptions = {},\n  ): Promise<LeaseOperationResponse> {\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\",\n      );\n    }\n\n    return tracingClient.withSpan(\"BlobLeaseClient-breakLease\", options, async (updatedOptions) => {\n      const operationOptions: ContainerBreakLeaseOptionalParams = {\n        abortSignal: options.abortSignal,\n        breakPeriod,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        tracingOptions: updatedOptions.tracingOptions,\n      };\n      return assertResponse<ContainerBreakLeaseHeaders, ContainerBreakLeaseHeaders>(\n        await this._containerOrBlobOperation.breakLease(operationOptions),\n      );\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport type { TransferProgressEvent } from \"@azure/core-rest-pipeline\";\nimport { Readable } from \"stream\";\n\nexport type ReadableStreamGetter = (offset: number) => Promise<NodeJS.ReadableStream>;\n\nexport interface RetriableReadableStreamOptions {\n  /**\n   * Max retry count (greater than or equal to 0), undefined or invalid value means no retry\n   */\n  maxRetryRequests?: number;\n\n  /**\n   * Read progress event handler\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Debug purpose only. Used to inject an unexpected end to existing internal stream,\n   * to test stream retry works well or not.\n   *\n   * When assign it to true, for next incoming \"data\" event of internal stream,\n   * RetriableReadableStream will try to emit an \"end\" event to existing internal\n   * stream to force it end and start retry from the breaking point.\n   * The value will then update to \"undefined\", once the injection works.\n   */\n  doInjectErrorOnce?: boolean;\n\n  /**\n   * A threshold, not a limit. Dictates the amount of data that a stream buffers before it stops asking for more data.\n   */\n  highWaterMark?: number;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * A Node.js ReadableStream will internally retry when internal ReadableStream unexpected ends.\n */\nexport class RetriableReadableStream extends Readable {\n  private start: number;\n  private offset: number;\n  private end: number;\n  private getter: ReadableStreamGetter;\n  private source: NodeJS.ReadableStream;\n  private retries: number = 0;\n  private maxRetryRequests: number;\n  private onProgress?: (progress: TransferProgressEvent) => void;\n  private options: RetriableReadableStreamOptions;\n\n  /**\n   * Creates an instance of RetriableReadableStream.\n   *\n   * @param source - The current ReadableStream returned from getter\n   * @param getter - A method calling downloading request returning\n   *                                      a new ReadableStream from specified offset\n   * @param offset - Offset position in original data source to read\n   * @param count - How much data in original data source to read\n   * @param options -\n   */\n  public constructor(\n    source: NodeJS.ReadableStream,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: RetriableReadableStreamOptions = {},\n  ) {\n    super({ highWaterMark: options.highWaterMark });\n    this.getter = getter;\n    this.source = source;\n    this.start = offset;\n    this.offset = offset;\n    this.end = offset + count - 1;\n    this.maxRetryRequests =\n      options.maxRetryRequests && options.maxRetryRequests >= 0 ? options.maxRetryRequests : 0;\n    this.onProgress = options.onProgress;\n    this.options = options;\n\n    this.setSourceEventHandlers();\n  }\n\n  public _read(): void {\n    this.source.resume();\n  }\n\n  private setSourceEventHandlers() {\n    this.source.on(\"data\", this.sourceDataHandler);\n    this.source.on(\"end\", this.sourceErrorOrEndHandler);\n    this.source.on(\"error\", this.sourceErrorOrEndHandler);\n    // needed for Node14\n    this.source.on(\"aborted\", this.sourceAbortedHandler);\n  }\n\n  private removeSourceEventHandlers() {\n    this.source.removeListener(\"data\", this.sourceDataHandler);\n    this.source.removeListener(\"end\", this.sourceErrorOrEndHandler);\n    this.source.removeListener(\"error\", this.sourceErrorOrEndHandler);\n    this.source.removeListener(\"aborted\", this.sourceAbortedHandler);\n  }\n\n  private sourceDataHandler = (data: Buffer) => {\n    if (this.options.doInjectErrorOnce) {\n      this.options.doInjectErrorOnce = undefined;\n      this.source.pause();\n      this.sourceErrorOrEndHandler();\n      (this.source as Readable).destroy();\n      return;\n    }\n\n    // console.log(\n    //   `Offset: ${this.offset}, Received ${data.length} from internal stream`\n    // );\n    this.offset += data.length;\n    if (this.onProgress) {\n      this.onProgress({ loadedBytes: this.offset - this.start });\n    }\n    if (!this.push(data)) {\n      this.source.pause();\n    }\n  };\n\n  private sourceAbortedHandler = () => {\n    const abortError = new AbortError(\"The operation was aborted.\");\n    this.destroy(abortError);\n  };\n\n  private sourceErrorOrEndHandler = (err?: Error) => {\n    if (err && err.name === \"AbortError\") {\n      this.destroy(err);\n      return;\n    }\n\n    // console.log(\n    //   `Source stream emits end or error, offset: ${\n    //     this.offset\n    //   }, dest end : ${this.end}`\n    // );\n    this.removeSourceEventHandlers();\n    if (this.offset - 1 === this.end) {\n      this.push(null);\n    } else if (this.offset <= this.end) {\n      // console.log(\n      //   `retries: ${this.retries}, max retries: ${this.maxRetries}`\n      // );\n      if (this.retries < this.maxRetryRequests) {\n        this.retries += 1;\n        this.getter(this.offset)\n          .then((newSource) => {\n            this.source = newSource;\n            this.setSourceEventHandlers();\n            return;\n          })\n          .catch((error) => {\n            this.destroy(error);\n          });\n      } else {\n        this.destroy(\n          new Error(\n            `Data corruption failure: received less data than required and reached maxRetires limitation. Received data offset: ${\n              this.offset - 1\n            }, data needed offset: ${this.end}, retries: ${this.retries}, max retries: ${\n              this.maxRetryRequests\n            }`,\n          ),\n        );\n      }\n    } else {\n      this.destroy(\n        new Error(\n          `Data corruption failure: Received more data than original request, data needed offset is ${\n            this.end\n          }, received offset: ${this.offset - 1}`,\n        ),\n      );\n    }\n  };\n\n  _destroy(error: Error | null, callback: (error?: Error) => void): void {\n    // remove listener from source and release source\n    this.removeSourceEventHandlers();\n    (this.source as Readable).destroy();\n\n    callback(error === null ? undefined : error);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isNode } from \"@azure/core-util\";\nimport type { BlobImmutabilityPolicyMode } from \"./generatedModels\";\n\nimport type {\n  BlobDownloadHeaders,\n  BlobType,\n  CopyStatusType,\n  LeaseDurationType,\n  LeaseStateType,\n  LeaseStatusType,\n} from \"./generatedModels\";\nimport type { BlobDownloadResponseParsed, Metadata, ObjectReplicationPolicy } from \"./models\";\nimport type {\n  ReadableStreamGetter,\n  RetriableReadableStreamOptions,\n} from \"./utils/RetriableReadableStream\";\nimport { RetriableReadableStream } from \"./utils/RetriableReadableStream\";\nimport type { ResponseWithHeaders } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * BlobDownloadResponse implements BlobDownloadResponseParsed interface, and in Node.js runtime it will\n * automatically retry when internal read stream unexpected ends. (This kind of unexpected ends cannot\n * trigger retries defined in pipeline retry policy.)\n *\n * The {@link readableStreamBody} stream will retry underlayer, you can just use it as a normal Node.js\n * Readable stream.\n */\nexport class BlobDownloadResponse implements BlobDownloadResponseParsed {\n  /**\n   * Indicates that the service supports\n   * requests for partial file content.\n   *\n   * @readonly\n   */\n  public get acceptRanges(): string | undefined {\n    return this.originalResponse.acceptRanges;\n  }\n\n  /**\n   * Returns if it was previously specified\n   * for the file.\n   *\n   * @readonly\n   */\n  public get cacheControl(): string | undefined {\n    return this.originalResponse.cacheControl;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the 'x-ms-content-disposition' header and specifies how to process the\n   * response.\n   *\n   * @readonly\n   */\n  public get contentDisposition(): string | undefined {\n    return this.originalResponse.contentDisposition;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Encoding request header.\n   *\n   * @readonly\n   */\n  public get contentEncoding(): string | undefined {\n    return this.originalResponse.contentEncoding;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Language request header.\n   *\n   * @readonly\n   */\n  public get contentLanguage(): string | undefined {\n    return this.originalResponse.contentLanguage;\n  }\n\n  /**\n   * The current sequence number for a\n   * page blob. This header is not returned for block blobs or append blobs.\n   *\n   * @readonly\n   */\n  public get blobSequenceNumber(): number | undefined {\n    return this.originalResponse.blobSequenceNumber;\n  }\n\n  /**\n   * The blob's type. Possible values include:\n   * 'BlockBlob', 'PageBlob', 'AppendBlob'.\n   *\n   * @readonly\n   */\n  public get blobType(): BlobType | undefined {\n    return this.originalResponse.blobType;\n  }\n\n  /**\n   * The number of bytes present in the\n   * response body.\n   *\n   * @readonly\n   */\n  public get contentLength(): number | undefined {\n    return this.originalResponse.contentLength;\n  }\n\n  /**\n   * If the file has an MD5 hash and the\n   * request is to read the full file, this response header is returned so that\n   * the client can check for message content integrity. If the request is to\n   * read a specified range and the 'x-ms-range-get-content-md5' is set to\n   * true, then the request returns an MD5 hash for the range, as long as the\n   * range size is less than or equal to 4 MB. If neither of these sets of\n   * conditions is true, then no value is returned for the 'Content-MD5'\n   * header.\n   *\n   * @readonly\n   */\n  public get contentMD5(): Uint8Array | undefined {\n    return this.originalResponse.contentMD5;\n  }\n\n  /**\n   * Indicates the range of bytes returned if\n   * the client requested a subset of the file by setting the Range request\n   * header.\n   *\n   * @readonly\n   */\n  public get contentRange(): string | undefined {\n    return this.originalResponse.contentRange;\n  }\n\n  /**\n   * The content type specified for the file.\n   * The default content type is 'application/octet-stream'\n   *\n   * @readonly\n   */\n  public get contentType(): string | undefined {\n    return this.originalResponse.contentType;\n  }\n\n  /**\n   * Conclusion time of the last attempted\n   * Copy File operation where this file was the destination file. This value\n   * can specify the time of a completed, aborted, or failed copy attempt.\n   *\n   * @readonly\n   */\n  public get copyCompletedOn(): Date | undefined {\n    return this.originalResponse.copyCompletedOn;\n  }\n\n  /**\n   * String identifier for the last attempted Copy\n   * File operation where this file was the destination file.\n   *\n   * @readonly\n   */\n  public get copyId(): string | undefined {\n    return this.originalResponse.copyId;\n  }\n\n  /**\n   * Contains the number of bytes copied and\n   * the total bytes in the source in the last attempted Copy File operation\n   * where this file was the destination file. Can show between 0 and\n   * Content-Length bytes copied.\n   *\n   * @readonly\n   */\n  public get copyProgress(): string | undefined {\n    return this.originalResponse.copyProgress;\n  }\n\n  /**\n   * URL up to 2KB in length that specifies the\n   * source file used in the last attempted Copy File operation where this file\n   * was the destination file.\n   *\n   * @readonly\n   */\n  public get copySource(): string | undefined {\n    return this.originalResponse.copySource;\n  }\n\n  /**\n   * State of the copy operation\n   * identified by 'x-ms-copy-id'. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   *\n   * @readonly\n   */\n  public get copyStatus(): CopyStatusType | undefined {\n    return this.originalResponse.copyStatus;\n  }\n\n  /**\n   * Only appears when\n   * x-ms-copy-status is failed or pending. Describes cause of fatal or\n   * non-fatal copy operation failure.\n   *\n   * @readonly\n   */\n  public get copyStatusDescription(): string | undefined {\n    return this.originalResponse.copyStatusDescription;\n  }\n\n  /**\n   * When a blob is leased,\n   * specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'.\n   *\n   * @readonly\n   */\n  public get leaseDuration(): LeaseDurationType | undefined {\n    return this.originalResponse.leaseDuration;\n  }\n\n  /**\n   * Lease state of the blob. Possible\n   * values include: 'available', 'leased', 'expired', 'breaking', 'broken'.\n   *\n   * @readonly\n   */\n  public get leaseState(): LeaseStateType | undefined {\n    return this.originalResponse.leaseState;\n  }\n\n  /**\n   * The current lease status of the\n   * blob. Possible values include: 'locked', 'unlocked'.\n   *\n   * @readonly\n   */\n  public get leaseStatus(): LeaseStatusType | undefined {\n    return this.originalResponse.leaseStatus;\n  }\n\n  /**\n   * A UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated.\n   *\n   * @readonly\n   */\n  public get date(): Date | undefined {\n    return this.originalResponse.date;\n  }\n\n  /**\n   * The number of committed blocks\n   * present in the blob. This header is returned only for append blobs.\n   *\n   * @readonly\n   */\n  public get blobCommittedBlockCount(): number | undefined {\n    return this.originalResponse.blobCommittedBlockCount;\n  }\n\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally, in quotes.\n   *\n   * @readonly\n   */\n  public get etag(): string | undefined {\n    return this.originalResponse.etag;\n  }\n\n  /**\n   * The number of tags associated with the blob\n   *\n   * @readonly\n   */\n  public get tagCount(): number | undefined {\n    return this.originalResponse.tagCount;\n  }\n\n  /**\n   * The error code.\n   *\n   * @readonly\n   */\n  public get errorCode(): string | undefined {\n    return this.originalResponse.errorCode;\n  }\n\n  /**\n   * The value of this header is set to\n   * true if the file data and application metadata are completely encrypted\n   * using the specified algorithm. Otherwise, the value is set to false (when\n   * the file is unencrypted, or if only parts of the file/application metadata\n   * are encrypted).\n   *\n   * @readonly\n   */\n  public get isServerEncrypted(): boolean | undefined {\n    return this.originalResponse.isServerEncrypted;\n  }\n\n  /**\n   * If the blob has a MD5 hash, and if\n   * request contains range header (Range or x-ms-range), this response header\n   * is returned with the value of the whole blob's MD5 value. This value may\n   * or may not be equal to the value returned in Content-MD5 header, with the\n   * latter calculated from the requested range.\n   *\n   * @readonly\n   */\n  public get blobContentMD5(): Uint8Array | undefined {\n    return this.originalResponse.blobContentMD5;\n  }\n\n  /**\n   * Returns the date and time the file was last\n   * modified. Any operation that modifies the file or its properties updates\n   * the last modified time.\n   *\n   * @readonly\n   */\n  public get lastModified(): Date | undefined {\n    return this.originalResponse.lastModified;\n  }\n\n  /**\n   * Returns the UTC date and time generated by the service that indicates the time at which the blob was\n   * last read or written to.\n   *\n   * @readonly\n   */\n  public get lastAccessed(): Date | undefined {\n    return this.originalResponse.lastAccessed;\n  }\n\n  /**\n   * Returns the date and time the blob was created.\n   *\n   * @readonly\n   */\n  public get createdOn(): Date | undefined {\n    return this.originalResponse.createdOn;\n  }\n\n  /**\n   * A name-value pair\n   * to associate with a file storage object.\n   *\n   * @readonly\n   */\n  public get metadata(): Metadata | undefined {\n    return this.originalResponse.metadata;\n  }\n\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   *\n   * @readonly\n   */\n  public get requestId(): string | undefined {\n    return this.originalResponse.requestId;\n  }\n\n  /**\n   * If a client request id header is sent in the request, this header will be present in the\n   * response with the same value.\n   *\n   * @readonly\n   */\n  public get clientRequestId(): string | undefined {\n    return this.originalResponse.clientRequestId;\n  }\n\n  /**\n   * Indicates the version of the Blob service used\n   * to execute the request.\n   *\n   * @readonly\n   */\n  public get version(): string | undefined {\n    return this.originalResponse.version;\n  }\n\n  /**\n   * Indicates the versionId of the downloaded blob version.\n   *\n   * @readonly\n   */\n  public get versionId(): string | undefined {\n    return this.originalResponse.versionId;\n  }\n\n  /**\n   * Indicates whether version of this blob is a current version.\n   *\n   * @readonly\n   */\n  public get isCurrentVersion(): boolean | undefined {\n    return this.originalResponse.isCurrentVersion;\n  }\n\n  /**\n   * The SHA-256 hash of the encryption key used to encrypt the blob. This value is only returned\n   * when the blob was encrypted with a customer-provided key.\n   *\n   * @readonly\n   */\n  public get encryptionKeySha256(): string | undefined {\n    return this.originalResponse.encryptionKeySha256;\n  }\n\n  /**\n   * If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to\n   * true, then the request returns a crc64 for the range, as long as the range size is less than\n   * or equal to 4 MB. If both x-ms-range-get-content-crc64 & x-ms-range-get-content-md5 is\n   * specified in the same request, it will fail with 400(Bad Request)\n   */\n  public get contentCrc64(): Uint8Array | undefined {\n    return this.originalResponse.contentCrc64;\n  }\n\n  /**\n   * Object Replication Policy Id of the destination blob.\n   *\n   * @readonly\n   */\n  public get objectReplicationDestinationPolicyId(): string | undefined {\n    return this.originalResponse.objectReplicationDestinationPolicyId;\n  }\n\n  /**\n   * Parsed Object Replication Policy Id, Rule Id(s) and status of the source blob.\n   *\n   * @readonly\n   */\n  public get objectReplicationSourceProperties(): ObjectReplicationPolicy[] | undefined {\n    return this.originalResponse.objectReplicationSourceProperties;\n  }\n\n  /**\n   * If this blob has been sealed.\n   *\n   * @readonly\n   */\n  public get isSealed(): boolean | undefined {\n    return this.originalResponse.isSealed;\n  }\n\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the blob immutability policy will expire.\n   *\n   * @readonly\n   */\n  public get immutabilityPolicyExpiresOn(): Date | undefined {\n    return this.originalResponse.immutabilityPolicyExpiresOn;\n  }\n\n  /**\n   * Indicates immutability policy mode.\n   *\n   * @readonly\n   */\n  public get immutabilityPolicyMode(): BlobImmutabilityPolicyMode | undefined {\n    return this.originalResponse.immutabilityPolicyMode;\n  }\n\n  /**\n   * Indicates if a legal hold is present on the blob.\n   *\n   * @readonly\n   */\n  public get legalHold(): boolean | undefined {\n    return this.originalResponse.legalHold;\n  }\n\n  /**\n   * The response body as a browser Blob.\n   * Always undefined in node.js.\n   *\n   * @readonly\n   */\n  public get contentAsBlob(): Promise<Blob> | undefined {\n    return this.originalResponse.blobBody;\n  }\n\n  /**\n   * The response body as a node.js Readable stream.\n   * Always undefined in the browser.\n   *\n   * It will automatically retry when internal read stream unexpected ends.\n   *\n   * @readonly\n   */\n  public get readableStreamBody(): NodeJS.ReadableStream | undefined {\n    return isNode ? this.blobDownloadStream : undefined;\n  }\n\n  /**\n   * The HTTP response.\n   */\n  public get _response(): ResponseWithHeaders<BlobDownloadHeaders>[\"_response\"] {\n    return this.originalResponse._response;\n  }\n\n  private originalResponse: BlobDownloadResponseParsed;\n  private blobDownloadStream?: RetriableReadableStream;\n\n  /**\n   * Creates an instance of BlobDownloadResponse.\n   *\n   * @param originalResponse -\n   * @param getter -\n   * @param offset -\n   * @param count -\n   * @param options -\n   */\n  public constructor(\n    originalResponse: BlobDownloadResponseParsed,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: RetriableReadableStreamOptions = {},\n  ) {\n    this.originalResponse = originalResponse;\n    this.blobDownloadStream = new RetriableReadableStream(\n      this.originalResponse.readableStreamBody!,\n      getter,\n      offset,\n      count,\n      options,\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport const AVRO_SYNC_MARKER_SIZE: number = 16;\nexport const AVRO_INIT_BYTES: Uint8Array = new Uint8Array([79, 98, 106, 1]);\nexport const AVRO_CODEC_KEY: string = \"avro.codec\";\nexport const AVRO_SCHEMA_KEY: string = \"avro.schema\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// TODO: Do a review of the Object usage and non-interfaces\n/* eslint-disable @azure/azure-sdk/ts-use-interface-parameters */\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { AvroReadable } from \"./AvroReadable\";\nimport type { KeyValuePair } from \"./utils/utils.common\";\n\n/**\n * Options to configure the AvroParser read methods.\n * See {@link AvroParser.readFixedBytes}, {@link AvroParser.readMap} and etc.\n */\ninterface AvroParserReadOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\nexport class AvroParser {\n  /**\n   * Reads a fixed number of bytes from the stream.\n   *\n   * @param stream -\n   * @param length -\n   * @param options -\n   */\n  public static async readFixedBytes(\n    stream: AvroReadable,\n    length: number,\n    options: AvroParserReadOptions = {},\n  ): Promise<Uint8Array> {\n    const bytes = await stream.read(length, { abortSignal: options.abortSignal });\n    if (bytes.length !== length) {\n      throw new Error(\"Hit stream end.\");\n    }\n    return bytes;\n  }\n\n  /**\n   * Reads a single byte from the stream.\n   *\n   * @param stream -\n   * @param options -\n   */\n  private static async readByte(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {},\n  ): Promise<number> {\n    const buf = await AvroParser.readFixedBytes(stream, 1, options);\n    return buf[0];\n  }\n\n  // int and long are stored in variable-length zig-zag coding.\n  // variable-length: https://lucene.apache.org/core/3_5_0/fileformats.html#VInt\n  // zig-zag: https://developers.google.com/protocol-buffers/docs/encoding?csw=1#types\n  private static async readZigZagLong(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {},\n  ): Promise<number> {\n    let zigZagEncoded = 0;\n    let significanceInBit = 0;\n    let byte, haveMoreByte, significanceInFloat;\n\n    do {\n      byte = await AvroParser.readByte(stream, options);\n      haveMoreByte = byte & 0x80;\n      zigZagEncoded |= (byte & 0x7f) << significanceInBit;\n      significanceInBit += 7;\n    } while (haveMoreByte && significanceInBit < 28); // bitwise operation only works for 32-bit integers\n\n    if (haveMoreByte) {\n      // Switch to float arithmetic\n      // eslint-disable-next-line no-self-assign\n      zigZagEncoded = zigZagEncoded;\n      significanceInFloat = 268435456; // 2 ** 28.\n      do {\n        byte = await AvroParser.readByte(stream, options);\n        zigZagEncoded += (byte & 0x7f) * significanceInFloat;\n        significanceInFloat *= 128; // 2 ** 7\n      } while (byte & 0x80);\n\n      const res = (zigZagEncoded % 2 ? -(zigZagEncoded + 1) : zigZagEncoded) / 2;\n      if (res < Number.MIN_SAFE_INTEGER || res > Number.MAX_SAFE_INTEGER) {\n        throw new Error(\"Integer overflow.\");\n      }\n      return res;\n    }\n\n    return (zigZagEncoded >> 1) ^ -(zigZagEncoded & 1);\n  }\n\n  public static async readLong(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {},\n  ): Promise<number> {\n    return AvroParser.readZigZagLong(stream, options);\n  }\n\n  public static async readInt(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {},\n  ): Promise<number> {\n    return AvroParser.readZigZagLong(stream, options);\n  }\n\n  public static async readNull(): Promise<null> {\n    return null;\n  }\n\n  public static async readBoolean(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {},\n  ): Promise<boolean> {\n    const b = await AvroParser.readByte(stream, options);\n    if (b === 1) {\n      return true;\n    } else if (b === 0) {\n      return false;\n    } else {\n      throw new Error(\"Byte was not a boolean.\");\n    }\n  }\n\n  public static async readFloat(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {},\n  ): Promise<number> {\n    const u8arr = await AvroParser.readFixedBytes(stream, 4, options);\n    const view = new DataView(u8arr.buffer, u8arr.byteOffset, u8arr.byteLength);\n    return view.getFloat32(0, true); // littleEndian = true\n  }\n\n  public static async readDouble(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {},\n  ): Promise<number> {\n    const u8arr = await AvroParser.readFixedBytes(stream, 8, options);\n    const view = new DataView(u8arr.buffer, u8arr.byteOffset, u8arr.byteLength);\n    return view.getFloat64(0, true); // littleEndian = true\n  }\n\n  public static async readBytes(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {},\n  ): Promise<Uint8Array> {\n    const size = await AvroParser.readLong(stream, options);\n    if (size < 0) {\n      throw new Error(\"Bytes size was negative.\");\n    }\n\n    return stream.read(size, { abortSignal: options.abortSignal });\n  }\n\n  public static async readString(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {},\n  ): Promise<string> {\n    const u8arr = await AvroParser.readBytes(stream, options);\n    const utf8decoder = new TextDecoder();\n    return utf8decoder.decode(u8arr);\n  }\n\n  private static async readMapPair<T>(\n    stream: AvroReadable,\n    readItemMethod: (s: AvroReadable, options?: AvroParserReadOptions) => Promise<T>,\n    options: AvroParserReadOptions = {},\n  ): Promise<KeyValuePair<T>> {\n    const key = await AvroParser.readString(stream, options);\n    // FUTURE: this won't work with readFixed (currently not supported) which needs a length as the parameter.\n    const value = await readItemMethod(stream, options);\n    return { key, value };\n  }\n\n  public static async readMap<T>(\n    stream: AvroReadable,\n    readItemMethod: (s: AvroReadable, options?: AvroParserReadOptions) => Promise<T>,\n    options: AvroParserReadOptions = {},\n  ): Promise<Record<string, T>> {\n    const readPairMethod = (\n      s: AvroReadable,\n      opts: AvroParserReadOptions = {},\n    ): Promise<KeyValuePair<T>> => {\n      return AvroParser.readMapPair(s, readItemMethod, opts);\n    };\n\n    const pairs: KeyValuePair<T>[] = await AvroParser.readArray(stream, readPairMethod, options);\n\n    const dict: Record<string, T> = {};\n    for (const pair of pairs) {\n      dict[pair.key] = pair.value;\n    }\n    return dict;\n  }\n\n  private static async readArray<T>(\n    stream: AvroReadable,\n    readItemMethod: (s: AvroReadable, options?: AvroParserReadOptions) => Promise<T>,\n    options: AvroParserReadOptions = {},\n  ): Promise<T[]> {\n    const items: T[] = [];\n    for (\n      let count = await AvroParser.readLong(stream, options);\n      count !== 0;\n      count = await AvroParser.readLong(stream, options)\n    ) {\n      if (count < 0) {\n        // Ignore block sizes\n        await AvroParser.readLong(stream, options);\n        count = -count;\n      }\n\n      while (count--) {\n        const item: T = await readItemMethod(stream, options);\n        items.push(item);\n      }\n    }\n    return items;\n  }\n}\n\ninterface RecordField {\n  name: string;\n  type: string | ObjectSchema | (string | ObjectSchema)[]; // Unions may not immediately contain other unions.\n}\n\nenum AvroComplex {\n  RECORD = \"record\",\n  ENUM = \"enum\",\n  ARRAY = \"array\",\n  MAP = \"map\",\n  UNION = \"union\",\n  FIXED = \"fixed\",\n}\n\ninterface ObjectSchema {\n  type: Exclude<AvroComplex, AvroComplex.UNION>;\n  name?: string;\n  aliases?: string;\n  fields?: RecordField[];\n  symbols?: string[];\n  values?: string;\n  size?: number;\n}\n\nenum AvroPrimitive {\n  NULL = \"null\",\n  BOOLEAN = \"boolean\",\n  INT = \"int\",\n  LONG = \"long\",\n  FLOAT = \"float\",\n  DOUBLE = \"double\",\n  BYTES = \"bytes\",\n  STRING = \"string\",\n}\n\nexport abstract class AvroType {\n  /**\n   * Reads an object from the stream.\n   */\n  public abstract read(\n    stream: AvroReadable,\n    options?: AvroParserReadOptions,\n  ): Promise<Object | null>; // eslint-disable-line @typescript-eslint/no-wrapper-object-types\n\n  /**\n   * Determines the AvroType from the Avro Schema.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-wrapper-object-types\n  public static fromSchema(schema: string | Object): AvroType {\n    if (typeof schema === \"string\") {\n      return AvroType.fromStringSchema(schema);\n    } else if (Array.isArray(schema)) {\n      return AvroType.fromArraySchema(schema);\n    } else {\n      return AvroType.fromObjectSchema(schema as ObjectSchema);\n    }\n  }\n\n  private static fromStringSchema(schema: string): AvroType {\n    switch (schema) {\n      case AvroPrimitive.NULL:\n      case AvroPrimitive.BOOLEAN:\n      case AvroPrimitive.INT:\n      case AvroPrimitive.LONG:\n      case AvroPrimitive.FLOAT:\n      case AvroPrimitive.DOUBLE:\n      case AvroPrimitive.BYTES:\n      case AvroPrimitive.STRING:\n        return new AvroPrimitiveType(schema as AvroPrimitive);\n      default:\n        throw new Error(`Unexpected Avro type ${schema}`);\n    }\n  }\n\n  private static fromArraySchema(schema: any[]): AvroType {\n    return new AvroUnionType(schema.map(AvroType.fromSchema));\n  }\n\n  private static fromObjectSchema(schema: ObjectSchema): AvroType {\n    const type = schema.type;\n    // Primitives can be defined as strings or objects\n    try {\n      return AvroType.fromStringSchema(type);\n    } catch {\n      // no-op\n    }\n\n    switch (type) {\n      case AvroComplex.RECORD:\n        if (schema.aliases) {\n          throw new Error(`aliases currently is not supported, schema: ${schema}`);\n        }\n        if (!schema.name) {\n          throw new Error(`Required attribute 'name' doesn't exist on schema: ${schema}`);\n        }\n\n        // eslint-disable-next-line no-case-declarations\n        const fields: Record<string, AvroType> = {};\n        if (!schema.fields) {\n          throw new Error(`Required attribute 'fields' doesn't exist on schema: ${schema}`);\n        }\n        for (const field of schema.fields) {\n          fields[field.name] = AvroType.fromSchema(field.type);\n        }\n        return new AvroRecordType(fields, schema.name);\n      case AvroComplex.ENUM:\n        if (schema.aliases) {\n          throw new Error(`aliases currently is not supported, schema: ${schema}`);\n        }\n        if (!schema.symbols) {\n          throw new Error(`Required attribute 'symbols' doesn't exist on schema: ${schema}`);\n        }\n        return new AvroEnumType(schema.symbols);\n      case AvroComplex.MAP:\n        if (!schema.values) {\n          throw new Error(`Required attribute 'values' doesn't exist on schema: ${schema}`);\n        }\n        return new AvroMapType(AvroType.fromSchema(schema.values));\n      case AvroComplex.ARRAY: // Unused today\n      case AvroComplex.FIXED: // Unused today\n      default:\n        throw new Error(`Unexpected Avro type ${type} in ${schema}`);\n    }\n  }\n}\n\nclass AvroPrimitiveType extends AvroType {\n  private _primitive: AvroPrimitive;\n\n  constructor(primitive: AvroPrimitive) {\n    super();\n    this._primitive = primitive;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-wrapper-object-types\n  public read(stream: AvroReadable, options: AvroParserReadOptions = {}): Promise<Object | null> {\n    switch (this._primitive) {\n      case AvroPrimitive.NULL:\n        return AvroParser.readNull();\n      case AvroPrimitive.BOOLEAN:\n        return AvroParser.readBoolean(stream, options);\n      case AvroPrimitive.INT:\n        return AvroParser.readInt(stream, options);\n      case AvroPrimitive.LONG:\n        return AvroParser.readLong(stream, options);\n      case AvroPrimitive.FLOAT:\n        return AvroParser.readFloat(stream, options);\n      case AvroPrimitive.DOUBLE:\n        return AvroParser.readDouble(stream, options);\n      case AvroPrimitive.BYTES:\n        return AvroParser.readBytes(stream, options);\n      case AvroPrimitive.STRING:\n        return AvroParser.readString(stream, options);\n      default:\n        throw new Error(\"Unknown Avro Primitive\");\n    }\n  }\n}\n\nclass AvroEnumType extends AvroType {\n  private readonly _symbols: string[];\n\n  constructor(symbols: string[]) {\n    super();\n    this._symbols = symbols;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-wrapper-object-types\n  public async read(stream: AvroReadable, options: AvroParserReadOptions = {}): Promise<Object> {\n    const value = await AvroParser.readInt(stream, options);\n    return this._symbols[value];\n  }\n}\n\nclass AvroUnionType extends AvroType {\n  private readonly _types: AvroType[];\n\n  constructor(types: AvroType[]) {\n    super();\n    this._types = types;\n  }\n\n  public async read(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {},\n    // eslint-disable-next-line @typescript-eslint/no-wrapper-object-types\n  ): Promise<Object | null> {\n    const typeIndex = await AvroParser.readInt(stream, options);\n    return this._types[typeIndex].read(stream, options);\n  }\n}\n\nclass AvroMapType extends AvroType {\n  private readonly _itemType: AvroType;\n\n  constructor(itemType: AvroType) {\n    super();\n    this._itemType = itemType;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-wrapper-object-types\n  public read(stream: AvroReadable, options: AvroParserReadOptions = {}): Promise<Object> {\n    const readItemMethod = (\n      s: AvroReadable,\n      opts?: AvroParserReadOptions,\n      // eslint-disable-next-line @typescript-eslint/no-wrapper-object-types\n    ): Promise<Object | null> => {\n      return this._itemType.read(s, opts);\n    };\n    return AvroParser.readMap(stream, readItemMethod, options);\n  }\n}\n\nclass AvroRecordType extends AvroType {\n  private readonly _name: string;\n  private readonly _fields: Record<string, AvroType>;\n\n  constructor(fields: Record<string, AvroType>, name: string) {\n    super();\n    this._fields = fields;\n    this._name = name;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-wrapper-object-types\n  public async read(stream: AvroReadable, options: AvroParserReadOptions = {}): Promise<Object> {\n    // eslint-disable-next-line @typescript-eslint/no-wrapper-object-types\n    const record: Record<string, Object | null> = {};\n    record[\"$schema\"] = this._name;\n    for (const key in this._fields) {\n      if (Object.prototype.hasOwnProperty.call(this._fields, key)) {\n        record[key] = await this._fields[key].read(stream, options);\n      }\n    }\n    return record;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport interface KeyValuePair<T> {\n  key: string;\n  value: T;\n}\n\nexport function arraysEqual(a: Uint8Array, b: Uint8Array): boolean {\n  if (a === b) return true;\n\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// TODO: Do a review of non-interfaces\n/* eslint-disable @azure/azure-sdk/ts-use-interface-parameters */\n\nimport {\n  AVRO_CODEC_KEY,\n  AVRO_INIT_BYTES,\n  AVRO_SCHEMA_KEY,\n  AVRO_SYNC_MARKER_SIZE,\n} from \"./AvroConstants\";\nimport { AvroParser, AvroType } from \"./AvroParser\";\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { AvroReadable } from \"./AvroReadable\";\nimport { arraysEqual } from \"./utils/utils.common\";\n\n/**\n * Options to configure the {@link AvroReader.parseObjects} operation.\n */\nexport interface AvroParseOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\nexport class AvroReader {\n  private readonly _dataStream: AvroReadable;\n\n  private readonly _headerStream: AvroReadable;\n\n  private _syncMarker?: Uint8Array;\n\n  private _metadata?: Record<string, string>;\n\n  private _itemType?: AvroType;\n\n  private _itemsRemainingInBlock?: number;\n\n  // Remembers where we started if partial data stream was provided.\n  private readonly _initialBlockOffset: number;\n\n  /// The byte offset within the Avro file (both header and data)\n  /// of the start of the current block.\n  private _blockOffset: number;\n  public get blockOffset(): number {\n    return this._blockOffset;\n  }\n\n  private _objectIndex: number;\n  public get objectIndex(): number {\n    return this._objectIndex;\n  }\n\n  private _initialized: boolean;\n\n  constructor(dataStream: AvroReadable);\n\n  constructor(\n    dataStream: AvroReadable,\n    headerStream: AvroReadable,\n    currentBlockOffset: number,\n    indexWithinCurrentBlock: number,\n  );\n\n  constructor(\n    dataStream: AvroReadable,\n    headerStream?: AvroReadable,\n    currentBlockOffset?: number,\n    indexWithinCurrentBlock?: number,\n  ) {\n    this._dataStream = dataStream;\n    this._headerStream = headerStream || dataStream;\n    this._initialized = false;\n    this._blockOffset = currentBlockOffset || 0;\n    this._objectIndex = indexWithinCurrentBlock || 0;\n    this._initialBlockOffset = currentBlockOffset || 0;\n  }\n\n  private async initialize(options: AvroParseOptions = {}): Promise<void> {\n    const header = await AvroParser.readFixedBytes(this._headerStream, AVRO_INIT_BYTES.length, {\n      abortSignal: options.abortSignal,\n    });\n    if (!arraysEqual(header, AVRO_INIT_BYTES)) {\n      throw new Error(\"Stream is not an Avro file.\");\n    }\n\n    // File metadata is written as if defined by the following map schema:\n    // { \"type\": \"map\", \"values\": \"bytes\"}\n    this._metadata = await AvroParser.readMap(this._headerStream, AvroParser.readString, {\n      abortSignal: options.abortSignal,\n    });\n\n    // Validate codec\n    const codec = this._metadata![AVRO_CODEC_KEY];\n    if (!(codec === undefined || codec === null || codec === \"null\")) {\n      throw new Error(\"Codecs are not supported\");\n    }\n\n    // The 16-byte, randomly-generated sync marker for this file.\n    this._syncMarker = await AvroParser.readFixedBytes(this._headerStream, AVRO_SYNC_MARKER_SIZE, {\n      abortSignal: options.abortSignal,\n    });\n\n    // Parse the schema\n    const schema = JSON.parse(this._metadata![AVRO_SCHEMA_KEY]);\n    this._itemType = AvroType.fromSchema(schema);\n\n    if (this._blockOffset === 0) {\n      this._blockOffset = this._initialBlockOffset + this._dataStream.position;\n    }\n\n    this._itemsRemainingInBlock = await AvroParser.readLong(this._dataStream, {\n      abortSignal: options.abortSignal,\n    });\n    // skip block length\n    await AvroParser.readLong(this._dataStream, { abortSignal: options.abortSignal });\n\n    this._initialized = true;\n    if (this._objectIndex && this._objectIndex > 0) {\n      for (let i = 0; i < this._objectIndex; i++) {\n        await this._itemType.read(this._dataStream, { abortSignal: options.abortSignal });\n        this._itemsRemainingInBlock!--;\n      }\n    }\n  }\n\n  public hasNext(): boolean {\n    return !this._initialized || this._itemsRemainingInBlock! > 0;\n  }\n\n  public async *parseObjects(\n    options: AvroParseOptions = {},\n  ): AsyncIterableIterator<Record<string, any> | null> {\n    if (!this._initialized) {\n      await this.initialize(options);\n    }\n\n    while (this.hasNext()) {\n      const result = await this._itemType!.read(this._dataStream, {\n        abortSignal: options.abortSignal,\n      });\n\n      this._itemsRemainingInBlock!--;\n      this._objectIndex!++;\n\n      if (this._itemsRemainingInBlock === 0) {\n        const marker = await AvroParser.readFixedBytes(this._dataStream, AVRO_SYNC_MARKER_SIZE, {\n          abortSignal: options.abortSignal,\n        });\n\n        this._blockOffset = this._initialBlockOffset + this._dataStream.position;\n        this._objectIndex = 0;\n\n        if (!arraysEqual(this._syncMarker!, marker)) {\n          throw new Error(\"Stream is not a valid Avro file.\");\n        }\n\n        try {\n          this._itemsRemainingInBlock = await AvroParser.readLong(this._dataStream, {\n            abortSignal: options.abortSignal,\n          });\n        } catch {\n          // We hit the end of the stream.\n          this._itemsRemainingInBlock = 0;\n        }\n\n        if (this._itemsRemainingInBlock! > 0) {\n          // Ignore block size\n          await AvroParser.readLong(this._dataStream, { abortSignal: options.abortSignal });\n        }\n      }\n      yield result;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\n\n/**\n * Options to configure the {@link AvroReadable.read} operation.\n */\nexport interface AvroReadableReadOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\nexport abstract class AvroReadable {\n  public abstract get position(): number;\n  public abstract read(size: number, options?: AvroReadableReadOptions): Promise<Uint8Array>;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AvroReadableReadOptions } from \"./AvroReadable\";\nimport { AvroReadable } from \"./AvroReadable\";\nimport { AbortError } from \"@azure/abort-controller\";\n\nconst ABORT_ERROR = new AbortError(\"Reading from the avro stream was aborted.\");\n\nexport class AvroReadableFromStream extends AvroReadable {\n  private _position: number;\n  private _readable: NodeJS.ReadableStream;\n\n  private toUint8Array(data: string | Buffer): Uint8Array {\n    if (typeof data === \"string\") {\n      return Buffer.from(data);\n    }\n    return data;\n  }\n\n  constructor(readable: NodeJS.ReadableStream) {\n    super();\n    this._readable = readable;\n    this._position = 0;\n  }\n  public get position(): number {\n    return this._position;\n  }\n  public async read(size: number, options: AvroReadableReadOptions = {}): Promise<Uint8Array> {\n    if (options.abortSignal?.aborted) {\n      throw ABORT_ERROR;\n    }\n\n    if (size < 0) {\n      throw new Error(`size parameter should be positive: ${size}`);\n    }\n\n    if (size === 0) {\n      return new Uint8Array();\n    }\n\n    if (!this._readable.readable) {\n      throw new Error(\"Stream no longer readable.\");\n    }\n    // See if there is already enough data.\n    const chunk = this._readable.read(size);\n    if (chunk) {\n      this._position += chunk.length;\n      // chunk.length maybe less than desired size if the stream ends.\n      return this.toUint8Array(chunk);\n    } else {\n      // register callback to wait for enough data to read\n      return new Promise((resolve, reject) => {\n        /* eslint-disable @typescript-eslint/no-use-before-define */\n        const cleanUp: () => void = () => {\n          this._readable.removeListener(\"readable\", readableCallback);\n          this._readable.removeListener(\"error\", rejectCallback);\n          this._readable.removeListener(\"end\", rejectCallback);\n          this._readable.removeListener(\"close\", rejectCallback);\n\n          if (options.abortSignal) {\n            options.abortSignal!.removeEventListener(\"abort\", abortHandler);\n          }\n        };\n\n        const readableCallback: () => void = () => {\n          const callbackChunk = this._readable.read(size);\n          if (callbackChunk) {\n            this._position += callbackChunk.length;\n            cleanUp();\n            // callbackChunk.length maybe less than desired size if the stream ends.\n            resolve(this.toUint8Array(callbackChunk));\n          }\n        };\n\n        const rejectCallback: () => void = () => {\n          cleanUp();\n          reject();\n        };\n\n        const abortHandler: () => void = () => {\n          cleanUp();\n          reject(ABORT_ERROR);\n        };\n\n        this._readable.on(\"readable\", readableCallback);\n        this._readable.once(\"error\", rejectCallback);\n        this._readable.once(\"end\", rejectCallback);\n        this._readable.once(\"close\", rejectCallback);\n        if (options.abortSignal) {\n          options.abortSignal!.addEventListener(\"abort\", abortHandler);\n        }\n        /* eslint-enable @typescript-eslint/no-use-before-define */\n      });\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { Readable } from \"stream\";\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { TransferProgressEvent } from \"@azure/core-rest-pipeline\";\n\nimport { AvroReadableFromStream, AvroReader } from \"../../../storage-internal-avro/src\";\nimport type { BlobQueryError } from \"../Clients\";\n\nexport interface BlobQuickQueryStreamOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Read progress event handler\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Callback to receive error events during the query operaiton.\n   */\n  onError?: (error: BlobQueryError) => void;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * A Node.js BlobQuickQueryStream will internally parse avro data stream for blob query.\n */\nexport class BlobQuickQueryStream extends Readable {\n  private source: NodeJS.ReadableStream;\n  private avroReader: AvroReader;\n  private avroIter: AsyncIterableIterator<unknown | null>;\n  private avroPaused: boolean = true;\n  private onProgress?: (progress: TransferProgressEvent) => void;\n  private onError?: (error: BlobQueryError) => void;\n\n  /**\n   * Creates an instance of BlobQuickQueryStream.\n   *\n   * @param source - The current ReadableStream returned from getter\n   * @param options -\n   */\n  public constructor(source: NodeJS.ReadableStream, options: BlobQuickQueryStreamOptions = {}) {\n    super();\n    this.source = source;\n    this.onProgress = options.onProgress;\n    this.onError = options.onError;\n    this.avroReader = new AvroReader(new AvroReadableFromStream(this.source));\n    this.avroIter = this.avroReader.parseObjects({ abortSignal: options.abortSignal });\n  }\n\n  public _read(): void {\n    if (this.avroPaused) {\n      this.readInternal().catch((err) => {\n        this.emit(\"error\", err);\n      });\n    }\n  }\n\n  private async readInternal() {\n    this.avroPaused = false;\n    let avroNext;\n    do {\n      avroNext = await this.avroIter.next();\n      if (avroNext.done) {\n        break;\n      }\n      const obj = avroNext.value;\n      const schema = (obj as any).$schema;\n      if (typeof schema !== \"string\") {\n        throw Error(\"Missing schema in avro record.\");\n      }\n\n      switch (schema) {\n        case \"com.microsoft.azure.storage.queryBlobContents.resultData\":\n          {\n            const data = (obj as any).data;\n            if (data instanceof Uint8Array === false) {\n              throw Error(\"Invalid data in avro result record.\");\n            }\n            if (!this.push(Buffer.from(data))) {\n              this.avroPaused = true;\n            }\n          }\n          break;\n        case \"com.microsoft.azure.storage.queryBlobContents.progress\":\n          {\n            const bytesScanned = (obj as any).bytesScanned;\n            if (typeof bytesScanned !== \"number\") {\n              throw Error(\"Invalid bytesScanned in avro progress record.\");\n            }\n            if (this.onProgress) {\n              this.onProgress({ loadedBytes: bytesScanned });\n            }\n          }\n          break;\n        case \"com.microsoft.azure.storage.queryBlobContents.end\":\n          if (this.onProgress) {\n            const totalBytes = (obj as any).totalBytes;\n            if (typeof totalBytes !== \"number\") {\n              throw Error(\"Invalid totalBytes in avro end record.\");\n            }\n            this.onProgress({ loadedBytes: totalBytes });\n          }\n          this.push(null);\n          break;\n        case \"com.microsoft.azure.storage.queryBlobContents.error\":\n          if (this.onError) {\n            const fatal = (obj as any).fatal;\n            if (typeof fatal !== \"boolean\") {\n              throw Error(\"Invalid fatal in avro error record.\");\n            }\n            const name = (obj as any).name;\n            if (typeof name !== \"string\") {\n              throw Error(\"Invalid name in avro error record.\");\n            }\n            const description = (obj as any).description;\n            if (typeof description !== \"string\") {\n              throw Error(\"Invalid description in avro error record.\");\n            }\n            const position = (obj as any).position;\n            if (typeof position !== \"number\") {\n              throw Error(\"Invalid position in avro error record.\");\n            }\n            this.onError({\n              position,\n              name,\n              isFatal: fatal,\n              description,\n            });\n          }\n          break;\n        default:\n          throw Error(`Unknown schema ${schema} in avro progress record.`);\n      }\n    } while (!avroNext.done && !this.avroPaused);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isNode } from \"@azure/core-util\";\n\nimport type {\n  BlobDownloadResponseModel,\n  BlobType,\n  CopyStatusType,\n  LeaseDurationType,\n  LeaseStateType,\n  LeaseStatusType,\n  BlobQueryHeaders,\n  BlobQueryResponseModel,\n} from \"./generatedModels\";\nimport type { Metadata } from \"./models\";\nimport type { BlobQuickQueryStreamOptions } from \"./utils/BlobQuickQueryStream\";\nimport { BlobQuickQueryStream } from \"./utils/BlobQuickQueryStream\";\nimport type { ResponseWithHeaders } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * BlobQueryResponse implements BlobDownloadResponseModel interface, and in Node.js runtime it will\n * parse avor data returned by blob query.\n */\nexport class BlobQueryResponse implements BlobDownloadResponseModel {\n  /**\n   * Indicates that the service supports\n   * requests for partial file content.\n   *\n   * @readonly\n   */\n  public get acceptRanges(): string | undefined {\n    return this.originalResponse.acceptRanges;\n  }\n\n  /**\n   * Returns if it was previously specified\n   * for the file.\n   *\n   * @readonly\n   */\n  public get cacheControl(): string | undefined {\n    return this.originalResponse.cacheControl;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the 'x-ms-content-disposition' header and specifies how to process the\n   * response.\n   *\n   * @readonly\n   */\n  public get contentDisposition(): string | undefined {\n    return this.originalResponse.contentDisposition;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Encoding request header.\n   *\n   * @readonly\n   */\n  public get contentEncoding(): string | undefined {\n    return this.originalResponse.contentEncoding;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Language request header.\n   *\n   * @readonly\n   */\n  public get contentLanguage(): string | undefined {\n    return this.originalResponse.contentLanguage;\n  }\n\n  /**\n   * The current sequence number for a\n   * page blob. This header is not returned for block blobs or append blobs.\n   *\n   * @readonly\n   */\n  public get blobSequenceNumber(): number | undefined {\n    return this.originalResponse.blobSequenceNumber;\n  }\n\n  /**\n   * The blob's type. Possible values include:\n   * 'BlockBlob', 'PageBlob', 'AppendBlob'.\n   *\n   * @readonly\n   */\n  public get blobType(): BlobType | undefined {\n    return this.originalResponse.blobType;\n  }\n\n  /**\n   * The number of bytes present in the\n   * response body.\n   *\n   * @readonly\n   */\n  public get contentLength(): number | undefined {\n    return this.originalResponse.contentLength;\n  }\n\n  /**\n   * If the file has an MD5 hash and the\n   * request is to read the full file, this response header is returned so that\n   * the client can check for message content integrity. If the request is to\n   * read a specified range and the 'x-ms-range-get-content-md5' is set to\n   * true, then the request returns an MD5 hash for the range, as long as the\n   * range size is less than or equal to 4 MB. If neither of these sets of\n   * conditions is true, then no value is returned for the 'Content-MD5'\n   * header.\n   *\n   * @readonly\n   */\n  public get contentMD5(): Uint8Array | undefined {\n    return this.originalResponse.contentMD5;\n  }\n\n  /**\n   * Indicates the range of bytes returned if\n   * the client requested a subset of the file by setting the Range request\n   * header.\n   *\n   * @readonly\n   */\n  public get contentRange(): string | undefined {\n    return this.originalResponse.contentRange;\n  }\n\n  /**\n   * The content type specified for the file.\n   * The default content type is 'application/octet-stream'\n   *\n   * @readonly\n   */\n  public get contentType(): string | undefined {\n    return this.originalResponse.contentType;\n  }\n\n  /**\n   * Conclusion time of the last attempted\n   * Copy File operation where this file was the destination file. This value\n   * can specify the time of a completed, aborted, or failed copy attempt.\n   *\n   * @readonly\n   */\n  public get copyCompletedOn(): Date | undefined {\n    return undefined;\n  }\n\n  /**\n   * String identifier for the last attempted Copy\n   * File operation where this file was the destination file.\n   *\n   * @readonly\n   */\n  public get copyId(): string | undefined {\n    return this.originalResponse.copyId;\n  }\n\n  /**\n   * Contains the number of bytes copied and\n   * the total bytes in the source in the last attempted Copy File operation\n   * where this file was the destination file. Can show between 0 and\n   * Content-Length bytes copied.\n   *\n   * @readonly\n   */\n  public get copyProgress(): string | undefined {\n    return this.originalResponse.copyProgress;\n  }\n\n  /**\n   * URL up to 2KB in length that specifies the\n   * source file used in the last attempted Copy File operation where this file\n   * was the destination file.\n   *\n   * @readonly\n   */\n  public get copySource(): string | undefined {\n    return this.originalResponse.copySource;\n  }\n\n  /**\n   * State of the copy operation\n   * identified by 'x-ms-copy-id'. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   *\n   * @readonly\n   */\n  public get copyStatus(): CopyStatusType | undefined {\n    return this.originalResponse.copyStatus;\n  }\n\n  /**\n   * Only appears when\n   * x-ms-copy-status is failed or pending. Describes cause of fatal or\n   * non-fatal copy operation failure.\n   *\n   * @readonly\n   */\n  public get copyStatusDescription(): string | undefined {\n    return this.originalResponse.copyStatusDescription;\n  }\n\n  /**\n   * When a blob is leased,\n   * specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'.\n   *\n   * @readonly\n   */\n  public get leaseDuration(): LeaseDurationType | undefined {\n    return this.originalResponse.leaseDuration;\n  }\n\n  /**\n   * Lease state of the blob. Possible\n   * values include: 'available', 'leased', 'expired', 'breaking', 'broken'.\n   *\n   * @readonly\n   */\n  public get leaseState(): LeaseStateType | undefined {\n    return this.originalResponse.leaseState;\n  }\n\n  /**\n   * The current lease status of the\n   * blob. Possible values include: 'locked', 'unlocked'.\n   *\n   * @readonly\n   */\n  public get leaseStatus(): LeaseStatusType | undefined {\n    return this.originalResponse.leaseStatus;\n  }\n\n  /**\n   * A UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated.\n   *\n   * @readonly\n   */\n  public get date(): Date | undefined {\n    return this.originalResponse.date;\n  }\n\n  /**\n   * The number of committed blocks\n   * present in the blob. This header is returned only for append blobs.\n   *\n   * @readonly\n   */\n  public get blobCommittedBlockCount(): number | undefined {\n    return this.originalResponse.blobCommittedBlockCount;\n  }\n\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally, in quotes.\n   *\n   * @readonly\n   */\n  public get etag(): string | undefined {\n    return this.originalResponse.etag;\n  }\n\n  /**\n   * The error code.\n   *\n   * @readonly\n   */\n  public get errorCode(): string | undefined {\n    return this.originalResponse.errorCode;\n  }\n\n  /**\n   * The value of this header is set to\n   * true if the file data and application metadata are completely encrypted\n   * using the specified algorithm. Otherwise, the value is set to false (when\n   * the file is unencrypted, or if only parts of the file/application metadata\n   * are encrypted).\n   *\n   * @readonly\n   */\n  public get isServerEncrypted(): boolean | undefined {\n    return this.originalResponse.isServerEncrypted;\n  }\n\n  /**\n   * If the blob has a MD5 hash, and if\n   * request contains range header (Range or x-ms-range), this response header\n   * is returned with the value of the whole blob's MD5 value. This value may\n   * or may not be equal to the value returned in Content-MD5 header, with the\n   * latter calculated from the requested range.\n   *\n   * @readonly\n   */\n  public get blobContentMD5(): Uint8Array | undefined {\n    return this.originalResponse.blobContentMD5;\n  }\n\n  /**\n   * Returns the date and time the file was last\n   * modified. Any operation that modifies the file or its properties updates\n   * the last modified time.\n   *\n   * @readonly\n   */\n  public get lastModified(): Date | undefined {\n    return this.originalResponse.lastModified;\n  }\n\n  /**\n   * A name-value pair\n   * to associate with a file storage object.\n   *\n   * @readonly\n   */\n  public get metadata(): Metadata | undefined {\n    return this.originalResponse.metadata;\n  }\n\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   *\n   * @readonly\n   */\n  public get requestId(): string | undefined {\n    return this.originalResponse.requestId;\n  }\n\n  /**\n   * If a client request id header is sent in the request, this header will be present in the\n   * response with the same value.\n   *\n   * @readonly\n   */\n  public get clientRequestId(): string | undefined {\n    return this.originalResponse.clientRequestId;\n  }\n\n  /**\n   * Indicates the version of the File service used\n   * to execute the request.\n   *\n   * @readonly\n   */\n  public get version(): string | undefined {\n    return this.originalResponse.version;\n  }\n\n  /**\n   * The SHA-256 hash of the encryption key used to encrypt the blob. This value is only returned\n   * when the blob was encrypted with a customer-provided key.\n   *\n   * @readonly\n   */\n  public get encryptionKeySha256(): string | undefined {\n    return this.originalResponse.encryptionKeySha256;\n  }\n\n  /**\n   * If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to\n   * true, then the request returns a crc64 for the range, as long as the range size is less than\n   * or equal to 4 MB. If both x-ms-range-get-content-crc64 & x-ms-range-get-content-md5 is\n   * specified in the same request, it will fail with 400(Bad Request)\n   */\n  public get contentCrc64(): Uint8Array | undefined {\n    return this.originalResponse.contentCrc64;\n  }\n\n  /**\n   * The response body as a browser Blob.\n   * Always undefined in node.js.\n   *\n   * @readonly\n   */\n  public get blobBody(): Promise<Blob> | undefined {\n    return undefined;\n  }\n\n  /**\n   * The response body as a node.js Readable stream.\n   * Always undefined in the browser.\n   *\n   * It will parse avor data returned by blob query.\n   *\n   * @readonly\n   */\n  public get readableStreamBody(): NodeJS.ReadableStream | undefined {\n    return isNode ? this.blobDownloadStream : undefined;\n  }\n\n  /**\n   * The HTTP response.\n   */\n  public get _response(): ResponseWithHeaders<BlobQueryHeaders>[\"_response\"] {\n    return this.originalResponse._response;\n  }\n\n  private originalResponse: BlobQueryResponseModel;\n  private blobDownloadStream?: BlobQuickQueryStream;\n\n  /**\n   * Creates an instance of BlobQueryResponse.\n   *\n   * @param originalResponse -\n   * @param options -\n   */\n  public constructor(\n    originalResponse: BlobQueryResponseModel,\n    options: BlobQuickQueryStreamOptions = {},\n  ) {\n    this.originalResponse = originalResponse;\n    this.blobDownloadStream = new BlobQuickQueryStream(\n      this.originalResponse.readableStreamBody!,\n      options,\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { CancelOnProgress, PollOperationState } from \"@azure/core-lro\";\nimport type { BlobImmutabilityPolicyMode } from \"./generatedModels\";\nimport type {\n  LeaseAccessConditions,\n  SequenceNumberAccessConditions,\n  AppendPositionAccessConditions,\n  AccessTier,\n  CpkInfo,\n  BlobDownloadResponseModel,\n} from \"./generatedModels\";\nimport { EncryptionAlgorithmAES25 } from \"./utils/constants\";\n\n/**\n * Blob tags.\n */\nexport type Tags = Record<string, string>;\n\n/**\n * A map of name-value pairs to associate with the resource.\n */\nexport interface Metadata {\n  /**\n   * A name-value pair.\n   */\n  [propertyName: string]: string;\n}\n\n/**\n * standard HTTP conditional headers and tags condition.\n */\nexport interface ModifiedAccessConditions\n  extends MatchConditions,\n    ModificationConditions,\n    TagConditions {}\n\n/**\n * standard HTTP conditional headers, tags condition and lease condition\n */\nexport interface BlobRequestConditions extends ModifiedAccessConditions, LeaseAccessConditions {}\n\n/**\n * Conditions to add to the creation of this page blob.\n */\nexport interface PageBlobRequestConditions\n  extends BlobRequestConditions,\n    SequenceNumberAccessConditions {}\n\n/**\n * Conditions to add to the creation of this append blob.\n */\nexport interface AppendBlobRequestConditions\n  extends BlobRequestConditions,\n    AppendPositionAccessConditions {}\n\n/**\n * Specifies HTTP options for conditional requests based on modification time.\n */\nexport interface ModificationConditions {\n  /**\n   * Specify this header value to operate only on a blob if it has been modified since the\n   * specified date/time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * Specify this header value to operate only on a blob if it has not been modified since the\n   * specified date/time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * Specifies HTTP options for conditional requests based on ETag matching.\n */\nexport interface MatchConditions {\n  /**\n   * Specify an ETag value to operate only on blobs with a matching value.\n   */\n  ifMatch?: string;\n  /**\n   * Specify an ETag value to operate only on blobs without a matching value.\n   */\n  ifNoneMatch?: string;\n}\n\n/**\n * Specifies HTTP options for conditional requests based on blob tags.\n */\nexport interface TagConditions {\n  /**\n   * Optional SQL statement to apply to the tags of the blob.\n   */\n  tagConditions?: string;\n}\n\n/**\n * Conditions to meet for the container.\n */\nexport interface ContainerRequestConditions extends LeaseAccessConditions, ModificationConditions {}\n\n/**\n * Represents the access tier on a blob.\n * For detailed information about block blob level tiering see {@link https://learn.microsoft.com/azure/storage/blobs/storage-blob-storage-tiers|Hot, cool and archive storage tiers.}\n */\nexport enum BlockBlobTier {\n  /**\n   * Optimized for storing data that is accessed frequently.\n   */\n  Hot = \"Hot\",\n  /**\n   * Optimized for storing data that is infrequently accessed and stored for at least 30 days.\n   */\n  Cool = \"Cool\",\n  /**\n   * Optimized for storing data that is rarely accessed.\n   */\n  Cold = \"Cold\",\n  /**\n   * Optimized for storing data that is rarely accessed and stored for at least 180 days\n   * with flexible latency requirements (on the order of hours).\n   */\n  Archive = \"Archive\",\n}\n\n/**\n * Specifies the page blob tier to set the blob to. This is only applicable to page blobs on premium storage accounts.\n * Please see {@link https://learn.microsoft.com/azure/storage/storage-premium-storage#scalability-and-performance-targets|here}\n * for detailed information on the corresponding IOPS and throughput per PageBlobTier.\n */\nexport enum PremiumPageBlobTier {\n  /**\n   * P4 Tier.\n   */\n  P4 = \"P4\",\n  /**\n   * P6 Tier.\n   */\n  P6 = \"P6\",\n  /**\n   * P10 Tier.\n   */\n  P10 = \"P10\",\n  /**\n   * P15 Tier.\n   */\n  P15 = \"P15\",\n  /**\n   * P20 Tier.\n   */\n  P20 = \"P20\",\n  /**\n   * P30 Tier.\n   */\n  P30 = \"P30\",\n  /**\n   * P40 Tier.\n   */\n  P40 = \"P40\",\n  /**\n   * P50 Tier.\n   */\n  P50 = \"P50\",\n  /**\n   * P60 Tier.\n   */\n  P60 = \"P60\",\n  /**\n   * P70 Tier.\n   */\n  P70 = \"P70\",\n  /**\n   * P80 Tier.\n   */\n  P80 = \"P80\",\n}\n\nexport function toAccessTier(\n  tier: BlockBlobTier | PremiumPageBlobTier | string | undefined,\n): AccessTier | undefined {\n  if (tier === undefined) {\n    return undefined;\n  }\n\n  return tier as AccessTier; // No more check if string is a valid AccessTier, and left this to underlay logic to decide(service).\n}\n\nexport function ensureCpkIfSpecified(cpk: CpkInfo | undefined, isHttps: boolean): void {\n  if (cpk && !isHttps) {\n    throw new RangeError(\"Customer-provided encryption key must be used over HTTPS.\");\n  }\n\n  if (cpk && !cpk.encryptionAlgorithm) {\n    cpk.encryptionAlgorithm = EncryptionAlgorithmAES25;\n  }\n}\n\n/**\n * Specifies the Replication Status of a blob. This is used when a storage account has\n * Object Replication Policy(s) applied. See {@link ObjectReplicationPolicy} and {@link ObjectReplicationRule}.\n */\nexport type ObjectReplicationStatus = \"complete\" | \"failed\";\n\n/**\n * Contains the Object Replication Rule ID and {@link ObjectReplicationStatus} of a blob.\n * There can be more than one {@link ObjectReplicationRule} under a {@link ObjectReplicationPolicy}.\n */\nexport interface ObjectReplicationRule {\n  /**\n   * The Object Replication Rule ID.\n   */\n  ruleId: string;\n\n  /**\n   * The Replication Status\n   */\n  replicationStatus: ObjectReplicationStatus;\n}\n\n/**\n * Contains Object Replication Policy ID and the respective list of {@link ObjectReplicationRule}.\n * This is used when retrieving the Object Replication Properties on the source blob. The policy id for the\n * destination blob is set in ObjectReplicationDestinationPolicyId of the respective method responses\n * (e.g. {@link BlobProperties.ObjectReplicationDestinationPolicyId}.\n */\nexport interface ObjectReplicationPolicy {\n  /**\n   * The Object Replication Policy ID.\n   */\n  policyId: string;\n\n  /**\n   * The Rule ID(s) and respective Replication Status(s) that are under the Policy ID.\n   */\n  rules: ObjectReplicationRule[];\n}\n\n/**\n * Contains response data for the {@link BlobClient.download} operation.\n */\nexport interface BlobDownloadResponseParsed extends BlobDownloadResponseModel {\n  /**\n   * Parsed Object Replication Policy Id, Rule Id(s) and status of the source blob.\n   */\n  objectReplicationSourceProperties?: ObjectReplicationPolicy[];\n\n  /**\n   * Object Replication Policy Id of the destination blob.\n   */\n  objectReplicationDestinationPolicyId?: string;\n}\n\n/**\n * The type of a {@link BlobQueryArrowField}.\n */\nexport type BlobQueryArrowFieldType =\n  | \"int64\"\n  | \"bool\"\n  | \"timestamp[ms]\"\n  | \"string\"\n  | \"double\"\n  | \"decimal\";\n\n/**\n * Describe a field in {@link BlobQueryArrowConfiguration}.\n */\nexport interface BlobQueryArrowField {\n  /**\n   * The type of the field.\n   */\n  type: BlobQueryArrowFieldType;\n\n  /**\n   * The name of the field.\n   */\n  name?: string;\n\n  /**\n   * The precision of the field. Required if type is \"decimal\".\n   */\n  precision?: number;\n\n  /**\n   * The scale of the field.  Required if type is is \"decimal\".\n   */\n  scale?: number;\n}\n\n/**\n * Describe immutable policy for blob.\n */\nexport interface BlobImmutabilityPolicy {\n  /**\n   * Specifies the date time when the blobs immutability policy is set to expire.\n   */\n  expiriesOn?: Date;\n  /**\n   * Specifies the immutability policy mode to set on the blob.\n   */\n  policyMode?: BlobImmutabilityPolicyMode;\n}\n\n/**\n * Represents authentication information in Authorization, ProxyAuthorization,\n * WWW-Authenticate, and Proxy-Authenticate header values.\n */\nexport interface HttpAuthorization {\n  /**\n   * The scheme to use for authorization.\n   */\n  scheme: string;\n\n  /**\n   * the credentials containing the authentication information of the user agent for the resource being requested.\n   */\n  value: string;\n}\n\n/**\n * Defines the known cloud audiences for Storage.\n */\nexport enum StorageBlobAudience {\n  /**\n   * The OAuth scope to use to retrieve an AAD token for Azure Storage.\n   */\n  StorageOAuthScopes = \"https://storage.azure.com/.default\",\n  /**\n   * The OAuth scope to use to retrieve an AAD token for Azure Disk.\n   */\n  DiskComputeOAuthScopes = \"https://disk.compute.azure.com/.default\",\n}\n\n/**\n *\n * To get OAuth audience for a storage account for blob service.\n */\nexport function getBlobServiceAccountAudience(storageAccountName: string): string {\n  return `https://${storageAccountName}.blob.core.windows.net/.default`;\n}\n\n/**\n * Abstract representation of a poller, intended to expose just the minimal API that the user needs to work with.\n */\nexport interface PollerLikeWithCancellation<TState extends PollOperationState<TResult>, TResult> {\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   */\n  poll(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  pollUntilDone(): Promise<TResult>;\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  onProgress(callback: (state: TState) => void): CancelOnProgress;\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  isDone(): boolean;\n  /**\n   * Stops the poller. After this, no manual or automated requests can be sent.\n   */\n  stopPolling(): void;\n  /**\n   * Returns true if the poller is stopped.\n   */\n  isStopped(): boolean;\n  /**\n   * Attempts to cancel the underlying operation.\n   */\n  cancelOperation(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns the state of the operation.\n   * The TState defined in PollerLike can be a subset of the TState defined in\n   * the Poller implementation.\n   */\n  getOperationState(): TState;\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  getResult(): TResult | undefined;\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  toString(): string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  PageBlobGetPageRangesHeaders,\n  PageBlobGetPageRangesDiffHeaders,\n  PageBlobGetPageRangesResponseModel,\n  PageBlobGetPageRangesDiffResponseModel,\n} from \"./generatedModels\";\nimport type { Range } from \"./Range\";\nimport type { ResponseWithBody } from \"./utils/utils.common\";\n\n/**\n * List of page ranges for a blob.\n */\nexport interface PageList {\n  /**\n   * Valid non-overlapping page ranges.\n   */\n  pageRange?: Range[];\n  /**\n   * Present if the prevSnapshot parameter was specified and there were cleared\n   * pages between the previous snapshot and the target snapshot.\n   */\n  clearRange?: Range[];\n}\n\n/**\n * Contains response data for the {@link BlobClient.getPageRanges} operation.\n */\nexport interface PageBlobGetPageRangesResponse\n  extends PageList,\n    PageBlobGetPageRangesHeaders,\n    ResponseWithBody<PageBlobGetPageRangesHeaders, PageList> {}\n\n/**\n * Contains response data for the {@link BlobClient.getPageRangesDiff} operation.\n */\nexport interface PageBlobGetPageRangesDiffResponse\n  extends PageList,\n    PageBlobGetPageRangesDiffHeaders,\n    ResponseWithBody<PageBlobGetPageRangesDiffHeaders, PageList> {}\n\n/**\n * Function that converts PageRange and ClearRange to a common Range object.\n * PageRange and ClearRange have start and end while Range offset and count\n * this function normalizes to Range.\n * @param response - Model PageBlob Range response\n */\nexport function rangeResponseFromModel(\n  response: PageBlobGetPageRangesResponseModel | PageBlobGetPageRangesDiffResponseModel,\n): PageBlobGetPageRangesResponse | PageBlobGetPageRangesDiffResponse {\n  const pageRange = (response._response.parsedBody.pageRange || []).map((x) => ({\n    offset: x.start,\n    count: x.end - x.start,\n  }));\n\n  const clearRange = (response._response.parsedBody.clearRange || []).map((x) => ({\n    offset: x.start,\n    count: x.end - x.start,\n  }));\n\n  return {\n    ...response,\n    pageRange,\n    clearRange,\n    _response: {\n      ...response._response,\n      parsedBody: {\n        pageRange,\n        clearRange,\n      },\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The `@azure/logger` configuration for this package.\n * @internal\n */\nexport const logger = createClientLogger(\"core-lro\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PollOperation, PollOperationState } from \"./pollOperation.js\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { CancelOnProgress } from \"../poller/models.js\";\nimport { PollerLike } from \"./models.js\";\n\n/**\n * PollProgressCallback<TState> is the type of the callback functions sent to onProgress.\n * These functions will receive a TState that is defined by your implementation of\n * the Poller class.\n */\nexport type PollProgressCallback<TState> = (state: TState) => void;\n\n/**\n * When a poller is manually stopped through the `stopPolling` method,\n * the poller will be rejected with an instance of the PollerStoppedError.\n */\nexport class PollerStoppedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerStoppedError\";\n    Object.setPrototypeOf(this, PollerStoppedError.prototype);\n  }\n}\n\n/**\n * When the operation is cancelled, the poller will be rejected with an instance\n * of the PollerCancelledError.\n */\nexport class PollerCancelledError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerCancelledError\";\n    Object.setPrototypeOf(this, PollerCancelledError.prototype);\n  }\n}\n\n/**\n * A class that represents the definition of a program that polls through consecutive requests\n * until it reaches a state of completion.\n *\n * A poller can be executed manually, by polling request by request by calling to the `poll()` method repeatedly, until its operation is completed.\n * It also provides a way to wait until the operation completes, by calling `pollUntilDone()` and waiting until the operation finishes.\n * Pollers can also request the cancellation of the ongoing process to whom is providing the underlying long running operation.\n *\n * ```ts\n * const poller = new MyPoller();\n *\n * // Polling just once:\n * await poller.poll();\n *\n * // We can try to cancel the request here, by calling:\n * //\n * //     await poller.cancelOperation();\n * //\n *\n * // Getting the final result:\n * const result = await poller.pollUntilDone();\n * ```\n *\n * The Poller is defined by two types, a type representing the state of the poller, which\n * must include a basic set of properties from `PollOperationState<TResult>`,\n * and a return type defined by `TResult`, which can be anything.\n *\n * The Poller class implements the `PollerLike` interface, which allows poller implementations to avoid having\n * to export the Poller's class directly, and instead only export the already instantiated poller with the PollerLike type.\n *\n * ```ts\n * class Client {\n *   public async makePoller: PollerLike<MyOperationState, MyResult> {\n *     const poller = new MyPoller({});\n *     // It might be preferred to return the poller after the first request is made,\n *     // so that some information can be obtained right away.\n *     await poller.poll();\n *     return poller;\n *   }\n * }\n *\n * const poller: PollerLike<MyOperationState, MyResult> = myClient.makePoller();\n * ```\n *\n * A poller can be created through its constructor, then it can be polled until it's completed.\n * At any point in time, the state of the poller can be obtained without delay through the getOperationState method.\n * At any point in time, the intermediate forms of the result type can be requested without delay.\n * Once the underlying operation is marked as completed, the poller will stop and the final value will be returned.\n *\n * ```ts\n * const poller = myClient.makePoller();\n * const state: MyOperationState = poller.getOperationState();\n *\n * // The intermediate result can be obtained at any time.\n * const result: MyResult | undefined = poller.getResult();\n *\n * // The final result can only be obtained after the poller finishes.\n * const result: MyResult = await poller.pollUntilDone();\n * ```\n *\n */\n// eslint-disable-next-line no-use-before-define\nexport abstract class Poller<TState extends PollOperationState<TResult>, TResult>\n  implements PollerLike<TState, TResult>\n{\n  /** controls whether to throw an error if the operation failed or was canceled. */\n  protected resolveOnUnsuccessful: boolean = false;\n  private stopped: boolean = true;\n  private resolve?: (value: TResult) => void;\n  private reject?: (error: PollerStoppedError | PollerCancelledError | Error) => void;\n  private pollOncePromise?: Promise<void>;\n  private cancelPromise?: Promise<void>;\n  private promise: Promise<TResult>;\n  private pollProgressCallbacks: PollProgressCallback<TState>[] = [];\n\n  /**\n   * The poller's operation is available in full to any of the methods of the Poller class\n   * and any class extending the Poller class.\n   */\n  protected operation: PollOperation<TState, TResult>;\n\n  /**\n   * A poller needs to be initialized by passing in at least the basic properties of the `PollOperation<TState, TResult>`.\n   *\n   * When writing an implementation of a Poller, this implementation needs to deal with the initialization\n   * of any custom state beyond the basic definition of the poller. The basic poller assumes that the poller's\n   * operation has already been defined, at least its basic properties. The code below shows how to approach\n   * the definition of the constructor of a new custom poller.\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor({\n   *     // Anything you might need outside of the basics\n   *   }) {\n   *     let state: MyOperationState = {\n   *       privateProperty: private,\n   *       publicProperty: public,\n   *     };\n   *\n   *     const operation = {\n   *       state,\n   *       update,\n   *       cancel,\n   *       toString\n   *     }\n   *\n   *     // Sending the operation to the parent's constructor.\n   *     super(operation);\n   *\n   *     // You can assign more local properties here.\n   *   }\n   * }\n   * ```\n   *\n   * Inside of this constructor, a new promise is created. This will be used to\n   * tell the user when the poller finishes (see `pollUntilDone()`). The promise's\n   * resolve and reject methods are also used internally to control when to resolve\n   * or reject anyone waiting for the poller to finish.\n   *\n   * The constructor of a custom implementation of a poller is where any serialized version of\n   * a previous poller's operation should be deserialized into the operation sent to the\n   * base constructor. For example:\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor(\n   *     baseOperation: string | undefined\n   *   ) {\n   *     let state: MyOperationState = {};\n   *     if (baseOperation) {\n   *       state = {\n   *         ...JSON.parse(baseOperation).state,\n   *         ...state\n   *       };\n   *     }\n   *     const operation = {\n   *       state,\n   *       // ...\n   *     }\n   *     super(operation);\n   *   }\n   * }\n   * ```\n   *\n   * @param operation - Must contain the basic properties of `PollOperation<State, TResult>`.\n   */\n  constructor(operation: PollOperation<TState, TResult>) {\n    this.operation = operation;\n    this.promise = new Promise<TResult>(\n      (\n        resolve: (result: TResult) => void,\n        reject: (error: PollerStoppedError | PollerCancelledError | Error) => void,\n      ) => {\n        this.resolve = resolve;\n        this.reject = reject;\n      },\n    );\n    // This prevents the UnhandledPromiseRejectionWarning in node.js from being thrown.\n    // The above warning would get thrown if `poller.poll` is called, it returns an error,\n    // and pullUntilDone did not have a .catch or await try/catch on it's return value.\n    this.promise.catch(() => {\n      /* intentionally blank */\n    });\n  }\n\n  /**\n   * Defines how much to wait between each poll request.\n   * This has to be implemented by your custom poller.\n   *\n   * \\@azure/core-util has a simple implementation of a delay function that waits as many milliseconds as specified.\n   * This can be used as follows:\n   *\n   * ```ts\n   * import { delay } from \"@azure/core-util\";\n   *\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   // The other necessary definitions.\n   *\n   *   async delay(): Promise<void> {\n   *     const milliseconds = 1000;\n   *     return delay(milliseconds);\n   *   }\n   * }\n   * ```\n   *\n   */\n  protected abstract delay(): Promise<void>;\n\n  /**\n   * Starts a loop that will break only if the poller is done\n   * or if the poller is stopped.\n   */\n  private async startPolling(pollOptions: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (this.stopped) {\n      this.stopped = false;\n    }\n    while (!this.isStopped() && !this.isDone()) {\n      await this.poll(pollOptions);\n      await this.delay();\n    }\n  }\n\n  /**\n   * pollOnce does one polling, by calling to the update method of the underlying\n   * poll operation to make any relevant change effective.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  private async pollOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.isDone()) {\n      this.operation = await this.operation.update({\n        abortSignal: options.abortSignal,\n        fireProgress: this.fireProgress.bind(this),\n      });\n    }\n    this.processUpdatedState();\n  }\n\n  /**\n   * fireProgress calls the functions passed in via onProgress the method of the poller.\n   *\n   * It loops over all of the callbacks received from onProgress, and executes them, sending them\n   * the current operation state.\n   *\n   * @param state - The current operation state.\n   */\n  private fireProgress(state: TState): void {\n    for (const callback of this.pollProgressCallbacks) {\n      callback(state);\n    }\n  }\n\n  /**\n   * Invokes the underlying operation's cancel method.\n   */\n  private async cancelOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    this.operation = await this.operation.cancel(options);\n  }\n\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public poll(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.pollOncePromise) {\n      this.pollOncePromise = this.pollOnce(options);\n      const clearPollOncePromise = (): void => {\n        this.pollOncePromise = undefined;\n      };\n      this.pollOncePromise.then(clearPollOncePromise, clearPollOncePromise).catch(this.reject);\n    }\n    return this.pollOncePromise;\n  }\n\n  private processUpdatedState(): void {\n    if (this.operation.state.error) {\n      this.stopped = true;\n      if (!this.resolveOnUnsuccessful) {\n        this.reject!(this.operation.state.error);\n        throw this.operation.state.error;\n      }\n    }\n    if (this.operation.state.isCancelled) {\n      this.stopped = true;\n      if (!this.resolveOnUnsuccessful) {\n        const error = new PollerCancelledError(\"Operation was canceled\");\n        this.reject!(error);\n        throw error;\n      }\n    }\n    if (this.isDone() && this.resolve) {\n      // If the poller has finished polling, this means we now have a result.\n      // However, it can be the case that TResult is instantiated to void, so\n      // we are not expecting a result anyway. To assert that we might not\n      // have a result eventually after finishing polling, we cast the result\n      // to TResult.\n      this.resolve(this.getResult() as TResult);\n    }\n  }\n\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  public async pollUntilDone(\n    pollOptions: { abortSignal?: AbortSignalLike } = {},\n  ): Promise<TResult> {\n    if (this.stopped) {\n      this.startPolling(pollOptions).catch(this.reject);\n    }\n    // This is needed because the state could have been updated by\n    // `cancelOperation`, e.g. the operation is canceled or an error occurred.\n    this.processUpdatedState();\n    return this.promise;\n  }\n\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  public onProgress(callback: (state: TState) => void): CancelOnProgress {\n    this.pollProgressCallbacks.push(callback);\n    return (): void => {\n      this.pollProgressCallbacks = this.pollProgressCallbacks.filter((c) => c !== callback);\n    };\n  }\n\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  public isDone(): boolean {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return Boolean(state.isCompleted || state.isCancelled || state.error);\n  }\n\n  /**\n   * Stops the poller from continuing to poll.\n   */\n  public stopPolling(): void {\n    if (!this.stopped) {\n      this.stopped = true;\n      if (this.reject) {\n        this.reject(new PollerStoppedError(\"This poller is already stopped\"));\n      }\n    }\n  }\n\n  /**\n   * Returns true if the poller is stopped.\n   */\n  public isStopped(): boolean {\n    return this.stopped;\n  }\n\n  /**\n   * Attempts to cancel the underlying operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * If it's called again before it finishes, it will throw an error.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public cancelOperation(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.cancelPromise) {\n      this.cancelPromise = this.cancelOnce(options);\n    } else if (options.abortSignal) {\n      throw new Error(\"A cancel request is currently pending\");\n    }\n    return this.cancelPromise;\n  }\n\n  /**\n   * Returns the state of the operation.\n   *\n   * Even though TState will be the same type inside any of the methods of any extension of the Poller class,\n   * implementations of the pollers can customize what's shared with the public by writing their own\n   * version of the `getOperationState` method, and by defining two types, one representing the internal state of the poller\n   * and a public type representing a safe to share subset of the properties of the internal state.\n   * Their definition of getOperationState can then return their public type.\n   *\n   * Example:\n   *\n   * ```ts\n   * // Let's say we have our poller's operation state defined as:\n   * interface MyOperationState extends PollOperationState<ResultType> {\n   *   privateProperty?: string;\n   *   publicProperty?: string;\n   * }\n   *\n   * // To allow us to have a true separation of public and private state, we have to define another interface:\n   * interface PublicState extends PollOperationState<ResultType> {\n   *   publicProperty?: string;\n   * }\n   *\n   * // Then, we define our Poller as follows:\n   * export class MyPoller extends Poller<MyOperationState, ResultType> {\n   *   // ... More content is needed here ...\n   *\n   *   public getOperationState(): PublicState {\n   *     const state: PublicState = this.operation.state;\n   *     return {\n   *       // Properties from PollOperationState<TResult>\n   *       isStarted: state.isStarted,\n   *       isCompleted: state.isCompleted,\n   *       isCancelled: state.isCancelled,\n   *       error: state.error,\n   *       result: state.result,\n   *\n   *       // The only other property needed by PublicState.\n   *       publicProperty: state.publicProperty\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * You can see this in the tests of this repository, go to the file:\n   * `../test/utils/testPoller.ts`\n   * and look for the getOperationState implementation.\n   */\n  public getOperationState(): TState {\n    return this.operation.state;\n  }\n\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  public getResult(): TResult | undefined {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return state.result;\n  }\n\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  public toString(): string {\n    return this.operation.toString();\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { delay } from \"@azure/core-util\";\nimport type { PollOperation, PollOperationState } from \"@azure/core-lro\";\nimport { Poller } from \"@azure/core-lro\";\nimport type {\n  BlobClient,\n  BlobStartCopyFromURLOptions,\n  BlobBeginCopyFromURLResponse,\n} from \"../Clients\";\n\n/**\n * Defines the operations from a {@link BlobClient} that are needed for the poller\n * returned by {@link BlobClient.beginCopyFromURL} to work.\n */\nexport type CopyPollerBlobClient = Pick<BlobClient, \"abortCopyFromURL\" | \"getProperties\"> & {\n  startCopyFromURL(\n    copySource: string,\n    options?: BlobStartCopyFromURLOptions,\n  ): Promise<BlobBeginCopyFromURLResponse>;\n};\n\n/**\n * The state used by the poller returned from {@link BlobClient.beginCopyFromURL}.\n *\n * This state is passed into the user-specified `onProgress` callback\n * whenever copy progress is detected.\n */\nexport interface BlobBeginCopyFromUrlPollState\n  extends PollOperationState<BlobBeginCopyFromURLResponse> {\n  /**\n   * The instance of {@link BlobClient} that was used when calling {@link BlobClient.beginCopyFromURL}.\n   */\n  readonly blobClient: CopyPollerBlobClient;\n  /**\n   * The copyId that identifies the in-progress blob copy.\n   */\n  copyId?: string;\n  /**\n   * the progress of the blob copy as reported by the service.\n   */\n  copyProgress?: string;\n  /**\n   * The source URL provided in {@link BlobClient.beginCopyFromURL}.\n   */\n  copySource: string;\n  /**\n   * The options that were passed to the initial {@link BlobClient.beginCopyFromURL} call.\n   * This is exposed for the poller and should not be modified directly.\n   */\n  readonly startCopyFromURLOptions?: BlobStartCopyFromURLOptions;\n}\n\n/**\n * The PollOperation responsible for:\n *  - performing the initial startCopyFromURL\n *  - checking the copy status via getProperties\n *  - cancellation via abortCopyFromURL\n * @hidden\n */\nexport interface BlobBeginCopyFromURLPollOperation\n  extends PollOperation<BlobBeginCopyFromUrlPollState, BlobBeginCopyFromURLResponse> {}\n\n/**\n * The set of options used to configure the poller.\n * This is an internal interface populated by {@link BlobClient.beginCopyFromURL}.\n *\n * @hidden\n */\nexport interface BlobBeginCopyFromUrlPollerOptions {\n  blobClient: CopyPollerBlobClient;\n  copySource: string;\n  intervalInMs?: number;\n  onProgress?: (state: BlobBeginCopyFromUrlPollState) => void;\n  resumeFrom?: string;\n  startCopyFromURLOptions?: BlobStartCopyFromURLOptions;\n}\n\n/**\n * This is the poller returned by {@link BlobClient.beginCopyFromURL}.\n * This can not be instantiated directly outside of this package.\n *\n * @hidden\n */\nexport class BlobBeginCopyFromUrlPoller extends Poller<\n  BlobBeginCopyFromUrlPollState,\n  BlobBeginCopyFromURLResponse\n> {\n  public intervalInMs: number;\n\n  constructor(options: BlobBeginCopyFromUrlPollerOptions) {\n    const {\n      blobClient,\n      copySource,\n      intervalInMs = 15000,\n      onProgress,\n      resumeFrom,\n      startCopyFromURLOptions,\n    } = options;\n\n    let state: BlobBeginCopyFromUrlPollState | undefined;\n\n    if (resumeFrom) {\n      state = JSON.parse(resumeFrom).state;\n    }\n\n    const operation = makeBlobBeginCopyFromURLPollOperation({\n      ...state,\n      blobClient,\n      copySource,\n      startCopyFromURLOptions,\n    });\n\n    super(operation);\n\n    if (typeof onProgress === \"function\") {\n      this.onProgress(onProgress);\n    }\n\n    this.intervalInMs = intervalInMs;\n  }\n\n  public delay(): Promise<void> {\n    return delay(this.intervalInMs);\n  }\n}\n\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @hidden\n */\nconst cancel: BlobBeginCopyFromURLPollOperation[\"cancel\"] = async function cancel(\n  this: BlobBeginCopyFromURLPollOperation,\n  options = {},\n) {\n  const state = this.state;\n  const { copyId } = state;\n  if (state.isCompleted) {\n    return makeBlobBeginCopyFromURLPollOperation(state);\n  }\n\n  if (!copyId) {\n    state.isCancelled = true;\n    return makeBlobBeginCopyFromURLPollOperation(state);\n  }\n\n  // if abortCopyFromURL throws, it will bubble up to user's poller.cancelOperation call\n  await state.blobClient.abortCopyFromURL(copyId, {\n    abortSignal: options.abortSignal,\n  });\n  state.isCancelled = true;\n\n  return makeBlobBeginCopyFromURLPollOperation(state);\n};\n\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @hidden\n */\nconst update: BlobBeginCopyFromURLPollOperation[\"update\"] = async function update(\n  this: BlobBeginCopyFromURLPollOperation,\n  options = {},\n): Promise<BlobBeginCopyFromURLPollOperation> {\n  const state = this.state;\n  const { blobClient, copySource, startCopyFromURLOptions } = state;\n\n  if (!state.isStarted) {\n    state.isStarted = true;\n    const result = await blobClient.startCopyFromURL(copySource, startCopyFromURLOptions);\n\n    // copyId is needed to abort\n    state.copyId = result.copyId;\n    if (result.copyStatus === \"success\") {\n      state.result = result;\n      state.isCompleted = true;\n    }\n  } else if (!state.isCompleted) {\n    try {\n      const result = await state.blobClient.getProperties({ abortSignal: options.abortSignal });\n      const { copyStatus, copyProgress } = result;\n      const prevCopyProgress = state.copyProgress;\n      if (copyProgress) {\n        state.copyProgress = copyProgress;\n      }\n      if (\n        copyStatus === \"pending\" &&\n        copyProgress !== prevCopyProgress &&\n        typeof options.fireProgress === \"function\"\n      ) {\n        // trigger in setTimeout, or swallow error?\n        options.fireProgress(state);\n      } else if (copyStatus === \"success\") {\n        state.result = result;\n        state.isCompleted = true;\n      } else if (copyStatus === \"failed\") {\n        state.error = new Error(\n          `Blob copy failed with reason: \"${result.copyStatusDescription || \"unknown\"}\"`,\n        );\n        state.isCompleted = true;\n      }\n    } catch (err: any) {\n      state.error = err;\n      state.isCompleted = true;\n    }\n  }\n\n  return makeBlobBeginCopyFromURLPollOperation(state);\n};\n\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @hidden\n */\nconst toString: BlobBeginCopyFromURLPollOperation[\"toString\"] = function toString(\n  this: BlobBeginCopyFromURLPollOperation,\n) {\n  return JSON.stringify({ state: this.state }, (key, value) => {\n    // remove blobClient from serialized state since a client can't be hydrated from this info.\n    if (key === \"blobClient\") {\n      return undefined;\n    }\n    return value;\n  });\n};\n\n/**\n * Creates a poll operation given the provided state.\n * @hidden\n */\nfunction makeBlobBeginCopyFromURLPollOperation(\n  state: BlobBeginCopyFromUrlPollState,\n): BlobBeginCopyFromURLPollOperation {\n  return {\n    state: { ...state },\n    cancel,\n    toString,\n    update,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Range for Blob Service Operations.\n * @see https://learn.microsoft.com/en-us/rest/api/storageservices/specifying-the-range-header-for-blob-service-operations\n */\nexport interface Range {\n  /**\n   * StartByte, larger than or equal 0.\n   */\n  offset: number;\n  /**\n   * Optional. Count of bytes, larger than 0.\n   * If not provided, will return bytes from offset to the end.\n   */\n  count?: number;\n}\n\n/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @param iRange -\n */\nexport function rangeToString(iRange: Range): string {\n  if (iRange.offset < 0) {\n    throw new RangeError(`Range.offset cannot be smaller than 0.`);\n  }\n  if (iRange.count && iRange.count <= 0) {\n    throw new RangeError(\n      `Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.`,\n    );\n  }\n  return iRange.count\n    ? `bytes=${iRange.offset}-${iRange.offset + iRange.count - 1}`\n    : `bytes=${iRange.offset}-`;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// In browser, during webpack or browserify bundling, this module will be replaced by 'events'\n// https://github.com/Gozala/events\nimport { EventEmitter } from \"events\";\n\n/**\n * Operation is an async function to be executed and managed by Batch.\n */\nexport declare type Operation = () => Promise<any>;\n\n/**\n * States for Batch.\n */\nenum BatchStates {\n  Good,\n  Error,\n}\n\n/**\n * Batch provides basic parallel execution with concurrency limits.\n * Will stop execute left operations when one of the executed operation throws an error.\n * But Batch cannot cancel ongoing operations, you need to cancel them by yourself.\n */\nexport class Batch {\n  /**\n   * Concurrency. Must be lager than 0.\n   */\n  private concurrency: number;\n\n  /**\n   * Number of active operations under execution.\n   */\n  private actives: number = 0;\n\n  /**\n   * Number of completed operations under execution.\n   */\n  private completed: number = 0;\n\n  /**\n   * Offset of next operation to be executed.\n   */\n  private offset: number = 0;\n\n  /**\n   * Operation array to be executed.\n   */\n  private operations: Operation[] = [];\n\n  /**\n   * States of Batch. When an error happens, state will turn into error.\n   * Batch will stop execute left operations.\n   */\n  private state: BatchStates = BatchStates.Good;\n\n  /**\n   * A private emitter used to pass events inside this class.\n   */\n  private emitter: EventEmitter;\n\n  /**\n   * Creates an instance of Batch.\n   * @param concurrency -\n   */\n  public constructor(concurrency: number = 5) {\n    if (concurrency < 1) {\n      throw new RangeError(\"concurrency must be larger than 0\");\n    }\n    this.concurrency = concurrency;\n    this.emitter = new EventEmitter();\n  }\n\n  /**\n   * Add a operation into queue.\n   *\n   * @param operation -\n   */\n  public addOperation(operation: Operation): void {\n    this.operations.push(async () => {\n      try {\n        this.actives++;\n        await operation();\n        this.actives--;\n        this.completed++;\n        this.parallelExecute();\n      } catch (error: any) {\n        this.emitter.emit(\"error\", error);\n      }\n    });\n  }\n\n  /**\n   * Start execute operations in the queue.\n   *\n   */\n  public async do(): Promise<void> {\n    if (this.operations.length === 0) {\n      return Promise.resolve();\n    }\n\n    this.parallelExecute();\n\n    return new Promise<void>((resolve, reject) => {\n      this.emitter.on(\"finish\", resolve);\n\n      this.emitter.on(\"error\", (error) => {\n        this.state = BatchStates.Error;\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Get next operation to be executed. Return null when reaching ends.\n   *\n   */\n  private nextOperation(): Operation | null {\n    if (this.offset < this.operations.length) {\n      return this.operations[this.offset++];\n    }\n    return null;\n  }\n\n  /**\n   * Start execute operations. One one the most important difference between\n   * this method with do() is that do() wraps as an sync method.\n   *\n   */\n  private parallelExecute(): void {\n    if (this.state === BatchStates.Error) {\n      return;\n    }\n\n    if (this.completed >= this.operations.length) {\n      this.emitter.emit(\"finish\");\n      return;\n    }\n\n    while (this.actives < this.concurrency) {\n      const operation = this.nextOperation();\n      if (operation) {\n        operation();\n      } else {\n        return;\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { Readable, ReadableOptions } from \"stream\";\n\n/**\n * Options to configure the BuffersStream.\n */\nexport interface BuffersStreamOptions extends ReadableOptions {}\n\n/**\n * This class generates a readable stream from the data in an array of buffers.\n */\nexport class BuffersStream extends Readable {\n  /**\n   * The offset of data to be read in the current buffer.\n   */\n  private byteOffsetInCurrentBuffer: number;\n\n  /**\n   * The index of buffer to be read in the array of buffers.\n   */\n  private bufferIndex: number;\n\n  /**\n   * The total length of data already read.\n   */\n  private pushedBytesLength: number;\n\n  /**\n   * Creates an instance of BuffersStream that will emit the data\n   * contained in the array of buffers.\n   *\n   * @param buffers - Array of buffers containing the data\n   * @param byteLength - The total length of data contained in the buffers\n   */\n  constructor(\n    private buffers: Buffer[],\n    private byteLength: number,\n    options?: BuffersStreamOptions\n  ) {\n    super(options);\n    this.byteOffsetInCurrentBuffer = 0;\n    this.bufferIndex = 0;\n    this.pushedBytesLength = 0;\n\n    // check byteLength is no larger than buffers[] total length\n    let buffersLength = 0;\n    for (const buf of this.buffers) {\n      buffersLength += buf.byteLength;\n    }\n    if (buffersLength < this.byteLength) {\n      throw new Error(\"Data size shouldn't be larger than the total length of buffers.\");\n    }\n  }\n\n  /**\n   * Internal _read() that will be called when the stream wants to pull more data in.\n   *\n   * @param size - Optional. The size of data to be read\n   */\n  public _read(size?: number) {\n    if (this.pushedBytesLength >= this.byteLength) {\n      this.push(null);\n    }\n\n    if (!size) {\n      size = this.readableHighWaterMark;\n    }\n\n    const outBuffers: Buffer[] = [];\n    let i = 0;\n    while (i < size && this.pushedBytesLength < this.byteLength) {\n      // The last buffer may be longer than the data it contains.\n      const remainingDataInAllBuffers = this.byteLength - this.pushedBytesLength;\n      const remainingCapacityInThisBuffer =\n        this.buffers[this.bufferIndex].byteLength - this.byteOffsetInCurrentBuffer;\n      const remaining = Math.min(remainingCapacityInThisBuffer, remainingDataInAllBuffers);\n      if (remaining > size - i) {\n        // chunkSize = size - i\n        const end = this.byteOffsetInCurrentBuffer + size - i;\n        outBuffers.push(this.buffers[this.bufferIndex].slice(this.byteOffsetInCurrentBuffer, end));\n        this.pushedBytesLength += size - i;\n        this.byteOffsetInCurrentBuffer = end;\n        i = size;\n        break;\n      } else {\n        // chunkSize = remaining\n        const end = this.byteOffsetInCurrentBuffer + remaining;\n        outBuffers.push(this.buffers[this.bufferIndex].slice(this.byteOffsetInCurrentBuffer, end));\n        if (remaining === remainingCapacityInThisBuffer) {\n          // this.buffers[this.bufferIndex] used up, shift to next one\n          this.byteOffsetInCurrentBuffer = 0;\n          this.bufferIndex++;\n        } else {\n          this.byteOffsetInCurrentBuffer = end;\n        }\n        this.pushedBytesLength += remaining;\n        i += remaining;\n      }\n    }\n\n    if (outBuffers.length > 1) {\n      this.push(Buffer.concat(outBuffers));\n    } else if (outBuffers.length === 1) {\n      this.push(outBuffers[0]);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { BuffersStream } from \"./BuffersStream\";\nimport { Readable } from \"stream\";\n\n/**\n * maxBufferLength is max size of each buffer in the pooled buffers.\n */\nimport buffer from \"buffer\";\nconst maxBufferLength = buffer.constants.MAX_LENGTH;\n\n/**\n * This class provides a buffer container which conceptually has no hard size limit.\n * It accepts a capacity, an array of input buffers and the total length of input data.\n * It will allocate an internal \"buffer\" of the capacity and fill the data in the input buffers\n * into the internal \"buffer\" serially with respect to the total length.\n * Then by calling PooledBuffer.getReadableStream(), you can get a readable stream\n * assembled from all the data in the internal \"buffer\".\n */\nexport class PooledBuffer {\n  /**\n   * Internal buffers used to keep the data.\n   * Each buffer has a length of the maxBufferLength except last one.\n   */\n  private buffers: Buffer[] = [];\n\n  /**\n   * The total size of internal buffers.\n   */\n  private readonly capacity: number;\n\n  /**\n   * The total size of data contained in internal buffers.\n   */\n  private _size: number;\n\n  /**\n   * The size of the data contained in the pooled buffers.\n   */\n  public get size(): number {\n    return this._size;\n  }\n\n  /**\n   * Creates an instance of PooledBuffer with given capacity.\n   * Internal buffers are allocated but contains no data.\n   * Users may call the {@link PooledBuffer.fill} method to fill this\n   * pooled buffer with data.\n   *\n   * @param capacity - Total capacity of the internal buffers\n   */\n  constructor(capacity: number);\n\n  /**\n   * Creates an instance of PooledBuffer with given capacity.\n   * Internal buffers are allocated and filled with data in the input buffers serially\n   * with respect to the total length.\n   *\n   * @param capacity - Total capacity of the internal buffers\n   * @param buffers - Input buffers containing the data to be filled in the pooled buffer\n   * @param totalLength - Total length of the data to be filled in.\n   */\n  constructor(capacity: number, buffers: Buffer[], totalLength: number);\n  constructor(capacity: number, buffers?: Buffer[], totalLength?: number) {\n    this.capacity = capacity;\n    this._size = 0;\n\n    // allocate\n    const bufferNum = Math.ceil(capacity / maxBufferLength);\n    for (let i = 0; i < bufferNum; i++) {\n      let len = i === bufferNum - 1 ? capacity % maxBufferLength : maxBufferLength;\n      if (len === 0) {\n        len = maxBufferLength;\n      }\n      this.buffers.push(Buffer.allocUnsafe(len));\n    }\n\n    if (buffers) {\n      this.fill(buffers, totalLength!);\n    }\n  }\n\n  /**\n   * Fill the internal buffers with data in the input buffers serially\n   * with respect to the total length and the total capacity of the internal buffers.\n   * Data copied will be shift out of the input buffers.\n   *\n   * @param buffers - Input buffers containing the data to be filled in the pooled buffer\n   * @param totalLength - Total length of the data to be filled in.\n   *\n   */\n  public fill(buffers: Buffer[], totalLength: number) {\n    this._size = Math.min(this.capacity, totalLength);\n\n    let i = 0,\n      j = 0,\n      targetOffset = 0,\n      sourceOffset = 0,\n      totalCopiedNum = 0;\n    while (totalCopiedNum < this._size) {\n      const source = buffers[i];\n      const target = this.buffers[j];\n      const copiedNum = source.copy(target, targetOffset, sourceOffset);\n\n      totalCopiedNum += copiedNum;\n      sourceOffset += copiedNum;\n      targetOffset += copiedNum;\n      if (sourceOffset === source.length) {\n        i++;\n        sourceOffset = 0;\n      }\n      if (targetOffset === target.length) {\n        j++;\n        targetOffset = 0;\n      }\n    }\n\n    // clear copied from source buffers\n    buffers.splice(0, i);\n    if (buffers.length > 0) {\n      buffers[0] = buffers[0].slice(sourceOffset);\n    }\n  }\n\n  /**\n   * Get the readable stream assembled from all the data in the internal buffers.\n   *\n   */\n  public getReadableStream(): Readable {\n    return new BuffersStream(this.buffers, this.size);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { EventEmitter } from \"events\";\nimport { Readable } from \"stream\";\nimport { PooledBuffer } from \"./PooledBuffer\";\n\n/**\n * OutgoingHandler is an async function triggered by BufferScheduler.\n */\nexport declare type OutgoingHandler = (\n  body: () => NodeJS.ReadableStream,\n  length: number,\n  offset?: number\n) => Promise<any>;\n\n/**\n * This class accepts a Node.js Readable stream as input, and keeps reading data\n * from the stream into the internal buffer structure, until it reaches maxBuffers.\n * Every available buffer will try to trigger outgoingHandler.\n *\n * The internal buffer structure includes an incoming buffer array, and a outgoing\n * buffer array. The incoming buffer array includes the \"empty\" buffers can be filled\n * with new incoming data. The outgoing array includes the filled buffers to be\n * handled by outgoingHandler. Every above buffer size is defined by parameter bufferSize.\n *\n * NUM_OF_ALL_BUFFERS = BUFFERS_IN_INCOMING + BUFFERS_IN_OUTGOING + BUFFERS_UNDER_HANDLING\n *\n * NUM_OF_ALL_BUFFERS lesser than or equal to maxBuffers\n *\n * PERFORMANCE IMPROVEMENT TIPS:\n * 1. Input stream highWaterMark is better to set a same value with bufferSize\n *    parameter, which will avoid Buffer.concat() operations.\n * 2. concurrency should set a smaller value than maxBuffers, which is helpful to\n *    reduce the possibility when a outgoing handler waits for the stream data.\n *    in this situation, outgoing handlers are blocked.\n *    Outgoing queue shouldn't be empty.\n */\nexport class BufferScheduler {\n  /**\n   * Size of buffers in incoming and outgoing queues. This class will try to align\n   * data read from Readable stream into buffer chunks with bufferSize defined.\n   */\n  private readonly bufferSize: number;\n\n  /**\n   * How many buffers can be created or maintained.\n   */\n  private readonly maxBuffers: number;\n\n  /**\n   * A Node.js Readable stream.\n   */\n  private readonly readable: Readable;\n\n  /**\n   * OutgoingHandler is an async function triggered by BufferScheduler when there\n   * are available buffers in outgoing array.\n   */\n  private readonly outgoingHandler: OutgoingHandler;\n\n  /**\n   * An internal event emitter.\n   */\n  private readonly emitter: EventEmitter = new EventEmitter();\n\n  /**\n   * Concurrency of executing outgoingHandlers. (0 lesser than concurrency lesser than or equal to maxBuffers)\n   */\n  private readonly concurrency: number;\n\n  /**\n   * An internal offset marker to track data offset in bytes of next outgoingHandler.\n   */\n  private offset: number = 0;\n\n  /**\n   * An internal marker to track whether stream is end.\n   */\n  private isStreamEnd: boolean = false;\n\n  /**\n   * An internal marker to track whether stream or outgoingHandler returns error.\n   */\n  private isError: boolean = false;\n\n  /**\n   * How many handlers are executing.\n   */\n  private executingOutgoingHandlers: number = 0;\n\n  /**\n   * Encoding of the input Readable stream which has string data type instead of Buffer.\n   */\n  private encoding?: BufferEncoding;\n\n  /**\n   * How many buffers have been allocated.\n   */\n  private numBuffers: number = 0;\n\n  /**\n   * Because this class doesn't know how much data every time stream pops, which\n   * is defined by highWaterMarker of the stream. So BufferScheduler will cache\n   * data received from the stream, when data in unresolvedDataArray exceeds the\n   * blockSize defined, it will try to concat a blockSize of buffer, fill into available\n   * buffers from incoming and push to outgoing array.\n   */\n  private unresolvedDataArray: Buffer[] = [];\n\n  /**\n   * How much data consisted in unresolvedDataArray.\n   */\n  private unresolvedLength: number = 0;\n\n  /**\n   * The array includes all the available buffers can be used to fill data from stream.\n   */\n  private incoming: PooledBuffer[] = [];\n\n  /**\n   * The array (queue) includes all the buffers filled from stream data.\n   */\n  private outgoing: PooledBuffer[] = [];\n\n  /**\n   * Creates an instance of BufferScheduler.\n   *\n   * @param readable - A Node.js Readable stream\n   * @param bufferSize - Buffer size of every maintained buffer\n   * @param maxBuffers - How many buffers can be allocated\n   * @param outgoingHandler - An async function scheduled to be\n   *                                          triggered when a buffer fully filled\n   *                                          with stream data\n   * @param concurrency - Concurrency of executing outgoingHandlers (>0)\n   * @param encoding - [Optional] Encoding of Readable stream when it's a string stream\n   */\n  constructor(\n    readable: Readable,\n    bufferSize: number,\n    maxBuffers: number,\n    outgoingHandler: OutgoingHandler,\n    concurrency: number,\n    encoding?: BufferEncoding\n  ) {\n    if (bufferSize <= 0) {\n      throw new RangeError(`bufferSize must be larger than 0, current is ${bufferSize}`);\n    }\n\n    if (maxBuffers <= 0) {\n      throw new RangeError(`maxBuffers must be larger than 0, current is ${maxBuffers}`);\n    }\n\n    if (concurrency <= 0) {\n      throw new RangeError(`concurrency must be larger than 0, current is ${concurrency}`);\n    }\n\n    this.bufferSize = bufferSize;\n    this.maxBuffers = maxBuffers;\n    this.readable = readable;\n    this.outgoingHandler = outgoingHandler;\n    this.concurrency = concurrency;\n    this.encoding = encoding;\n  }\n\n  /**\n   * Start the scheduler, will return error when stream of any of the outgoingHandlers\n   * returns error.\n   *\n   */\n  public async do(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.readable.on(\"data\", (data) => {\n        data = typeof data === \"string\" ? Buffer.from(data, this.encoding) : data;\n        this.appendUnresolvedData(data);\n\n        if (!this.resolveData()) {\n          this.readable.pause();\n        }\n      });\n\n      this.readable.on(\"error\", (err) => {\n        this.emitter.emit(\"error\", err);\n      });\n\n      this.readable.on(\"end\", () => {\n        this.isStreamEnd = true;\n        this.emitter.emit(\"checkEnd\");\n      });\n\n      this.emitter.on(\"error\", (err) => {\n        this.isError = true;\n        this.readable.pause();\n        reject(err);\n      });\n\n      this.emitter.on(\"checkEnd\", () => {\n        if (this.outgoing.length > 0) {\n          this.triggerOutgoingHandlers();\n          return;\n        }\n\n        if (this.isStreamEnd && this.executingOutgoingHandlers === 0) {\n          if (this.unresolvedLength > 0 && this.unresolvedLength < this.bufferSize) {\n            const buffer = this.shiftBufferFromUnresolvedDataArray();\n            this.outgoingHandler(() => buffer.getReadableStream(), buffer.size, this.offset)\n              .then(resolve)\n              .catch(reject);\n          } else if (this.unresolvedLength >= this.bufferSize) {\n            return;\n          } else {\n            resolve();\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Insert a new data into unresolved array.\n   *\n   * @param data -\n   */\n  private appendUnresolvedData(data: Buffer) {\n    this.unresolvedDataArray.push(data);\n    this.unresolvedLength += data.length;\n  }\n\n  /**\n   * Try to shift a buffer with size in blockSize. The buffer returned may be less\n   * than blockSize when data in unresolvedDataArray is less than bufferSize.\n   *\n   */\n  private shiftBufferFromUnresolvedDataArray(buffer?: PooledBuffer): PooledBuffer {\n    if (!buffer) {\n      buffer = new PooledBuffer(this.bufferSize, this.unresolvedDataArray, this.unresolvedLength);\n    } else {\n      buffer.fill(this.unresolvedDataArray, this.unresolvedLength);\n    }\n\n    this.unresolvedLength -= buffer.size;\n    return buffer;\n  }\n\n  /**\n   * Resolve data in unresolvedDataArray. For every buffer with size in blockSize\n   * shifted, it will try to get (or allocate a buffer) from incoming, and fill it,\n   * then push it into outgoing to be handled by outgoing handler.\n   *\n   * Return false when available buffers in incoming are not enough, else true.\n   *\n   * @returns Return false when buffers in incoming are not enough, else true.\n   */\n  private resolveData(): boolean {\n    while (this.unresolvedLength >= this.bufferSize) {\n      let buffer: PooledBuffer;\n\n      if (this.incoming.length > 0) {\n        buffer = this.incoming.shift()!;\n        this.shiftBufferFromUnresolvedDataArray(buffer);\n      } else {\n        if (this.numBuffers < this.maxBuffers) {\n          buffer = this.shiftBufferFromUnresolvedDataArray();\n          this.numBuffers++;\n        } else {\n          // No available buffer, wait for buffer returned\n          return false;\n        }\n      }\n\n      this.outgoing.push(buffer);\n      this.triggerOutgoingHandlers();\n    }\n    return true;\n  }\n\n  /**\n   * Try to trigger a outgoing handler for every buffer in outgoing. Stop when\n   * concurrency reaches.\n   */\n  private async triggerOutgoingHandlers() {\n    let buffer: PooledBuffer | undefined;\n    do {\n      if (this.executingOutgoingHandlers >= this.concurrency) {\n        return;\n      }\n\n      buffer = this.outgoing.shift();\n      if (buffer) {\n        this.triggerOutgoingHandler(buffer);\n      }\n    } while (buffer);\n  }\n\n  /**\n   * Trigger a outgoing handler for a buffer shifted from outgoing.\n   *\n   * @param buffer -\n   */\n  private async triggerOutgoingHandler(buffer: PooledBuffer): Promise<any> {\n    const bufferLength = buffer.size;\n\n    this.executingOutgoingHandlers++;\n    this.offset += bufferLength;\n\n    try {\n      await this.outgoingHandler(\n        () => buffer.getReadableStream(),\n        bufferLength,\n        this.offset - bufferLength\n      );\n    } catch (err: any) {\n      this.emitter.emit(\"error\", err);\n      return;\n    }\n\n    this.executingOutgoingHandlers--;\n    this.reuseBuffer(buffer);\n    this.emitter.emit(\"checkEnd\");\n  }\n\n  /**\n   * Return buffer used by outgoing handler into incoming.\n   *\n   * @param buffer -\n   */\n  private reuseBuffer(buffer: PooledBuffer) {\n    this.incoming.push(buffer);\n    if (!this.isError && this.resolveData() && !this.isStreamEnd) {\n      this.readable.resume();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as fs from \"fs\";\nimport * as util from \"util\";\nimport { REQUEST_TIMEOUT } from \"./constants\";\n\n/**\n * Reads a readable stream into buffer. Fill the buffer from offset to end.\n *\n * @param stream - A Node.js Readable stream\n * @param buffer - Buffer to be filled, length must greater than or equal to offset\n * @param offset - From which position in the buffer to be filled, inclusive\n * @param end - To which position in the buffer to be filled, exclusive\n * @param encoding - Encoding of the Readable stream\n */\nexport async function streamToBuffer(\n  stream: NodeJS.ReadableStream,\n  buffer: Buffer,\n  offset: number,\n  end: number,\n  encoding?: BufferEncoding,\n): Promise<void> {\n  let pos = 0; // Position in stream\n  const count = end - offset; // Total amount of data needed in stream\n\n  return new Promise<void>((resolve, reject) => {\n    const timeout = setTimeout(\n      () => reject(new Error(`The operation cannot be completed in timeout.`)),\n      REQUEST_TIMEOUT,\n    );\n\n    stream.on(\"readable\", () => {\n      if (pos >= count) {\n        clearTimeout(timeout);\n        resolve();\n        return;\n      }\n\n      let chunk = stream.read();\n      if (!chunk) {\n        return;\n      }\n      if (typeof chunk === \"string\") {\n        chunk = Buffer.from(chunk, encoding);\n      }\n\n      // How much data needed in this chunk\n      const chunkLength = pos + chunk.length > count ? count - pos : chunk.length;\n\n      buffer.fill(chunk.slice(0, chunkLength), offset + pos, offset + pos + chunkLength);\n      pos += chunkLength;\n    });\n\n    stream.on(\"end\", () => {\n      clearTimeout(timeout);\n      if (pos < count) {\n        reject(\n          new Error(\n            `Stream drains before getting enough data needed. Data read: ${pos}, data need: ${count}`,\n          ),\n        );\n      }\n      resolve();\n    });\n\n    stream.on(\"error\", (msg) => {\n      clearTimeout(timeout);\n      reject(msg);\n    });\n  });\n}\n\n/**\n * Reads a readable stream into buffer entirely.\n *\n * @param stream - A Node.js Readable stream\n * @param buffer - Buffer to be filled, length must greater than or equal to offset\n * @param encoding - Encoding of the Readable stream\n * @returns with the count of bytes read.\n * @throws `RangeError` If buffer size is not big enough.\n */\nexport async function streamToBuffer2(\n  stream: NodeJS.ReadableStream,\n  buffer: Buffer,\n  encoding?: BufferEncoding,\n): Promise<number> {\n  let pos = 0; // Position in stream\n  const bufferSize = buffer.length;\n\n  return new Promise<number>((resolve, reject) => {\n    stream.on(\"readable\", () => {\n      let chunk = stream.read();\n      if (!chunk) {\n        return;\n      }\n      if (typeof chunk === \"string\") {\n        chunk = Buffer.from(chunk, encoding);\n      }\n\n      if (pos + chunk.length > bufferSize) {\n        reject(new Error(`Stream exceeds buffer size. Buffer size: ${bufferSize}`));\n        return;\n      }\n\n      buffer.fill(chunk, pos, pos + chunk.length);\n      pos += chunk.length;\n    });\n\n    stream.on(\"end\", () => {\n      resolve(pos);\n    });\n\n    stream.on(\"error\", reject);\n  });\n}\n\n/**\n * Reads a readable stream into a buffer.\n *\n * @param stream - A Node.js Readable stream\n * @param encoding - Encoding of the Readable stream\n * @returns with the count of bytes read.\n */\nexport async function streamToBuffer3(\n  readableStream: NodeJS.ReadableStream,\n  encoding?: BufferEncoding,\n): Promise<Buffer> {\n  return new Promise((resolve, reject) => {\n    const chunks: Buffer[] = [];\n    readableStream.on(\"data\", (data: Buffer | string) => {\n      chunks.push(typeof data === \"string\" ? Buffer.from(data, encoding) : data);\n    });\n    readableStream.on(\"end\", () => {\n      resolve(Buffer.concat(chunks));\n    });\n    readableStream.on(\"error\", reject);\n  });\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Writes the content of a readstream to a local file. Returns a Promise which is completed after the file handle is closed.\n *\n * @param rs - The read stream.\n * @param file - Destination file path.\n */\nexport async function readStreamToLocalFile(\n  rs: NodeJS.ReadableStream,\n  file: string,\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    const ws = fs.createWriteStream(file);\n\n    rs.on(\"error\", (err: Error) => {\n      reject(err);\n    });\n\n    ws.on(\"error\", (err: Error) => {\n      reject(err);\n    });\n\n    ws.on(\"close\", resolve);\n\n    rs.pipe(ws);\n  });\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Promisified version of fs.stat().\n */\nexport const fsStat = util.promisify(fs.stat);\n\nexport const fsCreateReadStream = fs.createReadStream;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type {\n  RequestBodyType as HttpRequestBody,\n  TransferProgressEvent,\n} from \"@azure/core-rest-pipeline\";\nimport { getDefaultProxySettings } from \"@azure/core-rest-pipeline\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport { isNode } from \"@azure/core-util\";\nimport type { PollOperationState } from \"@azure/core-lro\";\nimport { randomUUID } from \"@azure/core-util\";\nimport type { Readable } from \"stream\";\n\nimport { BlobDownloadResponse } from \"./BlobDownloadResponse\";\nimport { BlobQueryResponse } from \"./BlobQueryResponse\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport type {\n  AppendBlob,\n  Blob as StorageBlob,\n  BlockBlob,\n  PageBlob,\n} from \"./generated/src/operationsInterfaces\";\nimport type {\n  AppendBlobAppendBlockFromUrlHeaders,\n  AppendBlobAppendBlockHeaders,\n  AppendBlobCreateHeaders,\n  AppendBlobSealHeaders,\n  BlobAbortCopyFromURLHeaders,\n  BlobCopyFromURLHeaders,\n  BlobCreateSnapshotHeaders,\n  BlobDeleteHeaders,\n  BlobDeleteImmutabilityPolicyHeaders,\n  BlobGetAccountInfoHeaders,\n  BlobGetPropertiesResponse as BlobGetPropertiesResponseInternal,\n  BlobGetTagsResponse as BlobGetTagsResponseInternal,\n  BlobSetHttpHeadersHeaders,\n  BlobSetImmutabilityPolicyHeaders,\n  BlobSetLegalHoldHeaders,\n  BlobSetMetadataHeaders,\n  BlobSetTagsHeaders,\n  BlobSetTierHeaders,\n  BlobStartCopyFromURLHeaders,\n  BlobUndeleteHeaders,\n  BlockBlobCommitBlockListHeaders,\n  BlockBlobPutBlobFromUrlHeaders,\n  BlockBlobStageBlockFromURLHeaders,\n  BlockBlobStageBlockHeaders,\n  PageBlobClearPagesHeaders,\n  PageBlobCopyIncrementalHeaders,\n  PageBlobCreateHeaders,\n  PageBlobResizeHeaders,\n  PageBlobUpdateSequenceNumberHeaders,\n  PageBlobUploadPagesFromURLHeaders,\n  PageBlobUploadPagesHeaders,\n} from \"./generated/src\";\nimport type {\n  AppendBlobAppendBlockFromUrlResponse,\n  AppendBlobAppendBlockResponse,\n  AppendBlobCreateResponse,\n  BlobAbortCopyFromURLResponse,\n  BlobCopyFromURLResponse,\n  BlobCreateSnapshotResponse,\n  BlobDeleteResponse,\n  BlobDownloadOptionalParams,\n  BlobDownloadResponseModel,\n  BlobGetAccountInfoResponse,\n  BlobGetPropertiesResponseModel,\n  BlobGetTagsHeaders,\n  BlobSetHTTPHeadersResponse,\n  BlobSetTagsResponse,\n  BlobSetTierResponse,\n  BlobStartCopyFromURLResponse,\n  BlobTags,\n  BlobUndeleteResponse,\n  BlockBlobCommitBlockListResponse,\n  BlockBlobGetBlockListResponse,\n  BlockBlobStageBlockFromURLResponse,\n  BlockBlobStageBlockResponse,\n  BlockBlobUploadHeaders,\n  BlockBlobUploadResponse,\n  BlockListType,\n  CpkInfo,\n  DeleteSnapshotsOptionType,\n  LeaseAccessConditions,\n  PageBlobClearPagesResponse,\n  PageBlobCopyIncrementalResponse,\n  PageBlobCreateResponse,\n  PageBlobResizeResponse,\n  PageBlobUpdateSequenceNumberResponse,\n  PageBlobUploadPagesFromURLResponse,\n  PageBlobUploadPagesResponse,\n  RehydratePriority,\n  SequenceNumberActionType,\n  BlockBlobPutBlobFromUrlResponse,\n  BlobHTTPHeaders,\n  PageBlobGetPageRangesResponseModel,\n  PageRangeInfo,\n  PageBlobGetPageRangesDiffResponseModel,\n  BlobCopySourceTags,\n  BlobDownloadResponseInternal,\n  BlobDownloadHeaders,\n  BlobGetPropertiesHeaders,\n  BlobQueryResponseInternal,\n  BlobQueryHeaders,\n  BlockBlobGetBlockListHeaders,\n  BlockBlobGetBlockListResponseInternal,\n  PageBlobGetPageRangesResponseInternal,\n  PageBlobGetPageRangesHeaders,\n  PageListInternal,\n  PageBlobGetPageRangesDiffResponseInternal,\n  PageBlobGetPageRangesDiffHeaders,\n  BlobDeleteImmutabilityPolicyResponse,\n  BlobSetImmutabilityPolicyResponse,\n  BlobSetLegalHoldResponse,\n  BlobSetMetadataResponse,\n} from \"./generatedModels\";\nimport type {\n  AppendBlobRequestConditions,\n  BlobDownloadResponseParsed,\n  BlobRequestConditions,\n  BlockBlobTier,\n  Metadata,\n  ObjectReplicationPolicy,\n  PageBlobRequestConditions,\n  PremiumPageBlobTier,\n  Tags,\n  TagConditions,\n  MatchConditions,\n  ModificationConditions,\n  ModifiedAccessConditions,\n  BlobQueryArrowField,\n  BlobImmutabilityPolicy,\n  HttpAuthorization,\n  PollerLikeWithCancellation,\n} from \"./models\";\nimport { ensureCpkIfSpecified, toAccessTier } from \"./models\";\nimport type {\n  PageBlobGetPageRangesDiffResponse,\n  PageBlobGetPageRangesResponse,\n} from \"./PageBlobRangeResponse\";\nimport { rangeResponseFromModel } from \"./PageBlobRangeResponse\";\nimport type { PipelineLike, StoragePipelineOptions } from \"./Pipeline\";\nimport { newPipeline, isPipelineLike } from \"./Pipeline\";\nimport type {\n  BlobBeginCopyFromUrlPollState,\n  CopyPollerBlobClient,\n} from \"./pollers/BlobStartCopyFromUrlPoller\";\nimport { BlobBeginCopyFromUrlPoller } from \"./pollers/BlobStartCopyFromUrlPoller\";\nimport type { Range } from \"./Range\";\nimport { rangeToString } from \"./Range\";\nimport type { CommonOptions } from \"./StorageClient\";\nimport { StorageClient } from \"./StorageClient\";\nimport { Batch } from \"./utils/Batch\";\nimport { BufferScheduler } from \"../../storage-common/src\";\nimport {\n  BlobDoesNotUseCustomerSpecifiedEncryption,\n  BlobUsesCustomerSpecifiedEncryptionMsg,\n  BLOCK_BLOB_MAX_BLOCKS,\n  BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES,\n  BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES,\n  DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES,\n  DEFAULT_BLOCK_BUFFER_SIZE_BYTES,\n  DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS,\n  ETagAny,\n  URLConstants,\n} from \"./utils/constants\";\nimport { tracingClient } from \"./utils/tracing\";\nimport type { WithResponse } from \"./utils/utils.common\";\nimport {\n  appendToURLPath,\n  appendToURLQuery,\n  assertResponse,\n  extractConnectionStringParts,\n  ExtractPageRangeInfoItems,\n  generateBlockID,\n  getURLParameter,\n  httpAuthorizationToString,\n  isIpEndpointStyle,\n  parseObjectReplicationRecord,\n  setURLParameter,\n  toBlobTags,\n  toBlobTagsString,\n  toQuerySerialization,\n  toTags,\n} from \"./utils/utils.common\";\nimport {\n  fsCreateReadStream,\n  fsStat,\n  readStreamToLocalFile,\n  streamToBuffer,\n} from \"./utils/utils.node\";\nimport type { SASProtocol } from \"./sas/SASQueryParameters\";\nimport type { SasIPRange } from \"./sas/SasIPRange\";\nimport {\n  generateBlobSASQueryParameters,\n  generateBlobSASQueryParametersInternal,\n} from \"./sas/BlobSASSignatureValues\";\nimport type { BlobSASPermissions } from \"./sas/BlobSASPermissions\";\nimport { BlobLeaseClient } from \"./BlobLeaseClient\";\nimport type { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport type { UserDelegationKey } from \"./BlobServiceClient\";\n\n/**\n * Options to configure the {@link BlobClient.beginCopyFromURL} operation.\n */\nexport interface BlobBeginCopyFromURLOptions extends BlobStartCopyFromURLOptions {\n  /**\n   * The amount of time in milliseconds the poller should wait between\n   * calls to the service to determine the status of the Blob copy.\n   * Defaults to 15 seconds.\n   */\n  intervalInMs?: number;\n  /**\n   * Callback to receive the state of the copy progress.\n   */\n  onProgress?: (state: BlobBeginCopyFromUrlPollState) => void;\n  /**\n   * Serialized poller state that can be used to resume polling from.\n   * This may be useful when starting a copy on one process or thread\n   * and you wish to continue polling on another process or thread.\n   *\n   * To get serialized poller state, call `poller.toString()` on an existing\n   * poller.\n   */\n  resumeFrom?: string;\n}\n\n/**\n * Contains response data for the {@link BlobClient.beginCopyFromURL} operation.\n */\nexport interface BlobBeginCopyFromURLResponse extends BlobStartCopyFromURLResponse {}\n\n/**\n * Options to configure the {@link BlobClient.download} operation.\n */\nexport interface BlobDownloadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * An opaque DateTime string value that, when present, specifies the blob snapshot to retrieve.\n   */\n  snapshot?: string;\n  /**\n   * When this is set to true and download range of blob, the service returns the MD5 hash for the range,\n   * as long as the range is less than or equal to 4 MB in size.\n   *\n   * rangeGetContentCrc64 and rangeGetContentMD5 cannot be set at same time.\n   */\n  rangeGetContentMD5?: boolean;\n  /**\n   * When this is set to true and download range of blob, the service returns the CRC64 hash for the range,\n   * as long as the range is less than or equal to 4 MB in size.\n   *\n   * rangeGetContentCrc64 and rangeGetContentMD5 cannot be set at same time.\n   */\n  rangeGetContentCrc64?: boolean;\n  /**\n   * Conditions to meet when downloading blobs.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Call back to receive events on the progress of download operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original body download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional `FileClient.download()` request will be made\n   * from the broken point, until the requested range has been successfully downloaded or maxRetryRequests is reached.\n   *\n   * Default value is 5, please set a larger value when loading large files in poor network.\n   */\n  maxRetryRequests?: number;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.exists} operation.\n */\nexport interface BlobExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Conditions to meet.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.getProperties} operation.\n */\nexport interface BlobGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting blob properties.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.delete} operation.\n */\nexport interface BlobDeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when deleting blobs.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Specifies options to delete blobs that have associated snapshots.\n   * - `include`: Delete the base blob and all of its snapshots.\n   * - `only`: Delete only the blob's snapshots and not the blob itself.\n   */\n  deleteSnapshots?: DeleteSnapshotsOptionType;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.undelete} operation.\n */\nexport interface BlobUndeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.setHTTPHeaders} operation.\n */\nexport interface BlobSetHTTPHeadersOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when setting blob HTTP headers.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.setMetadata} operation.\n */\nexport interface BlobSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when setting blob metadata.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link BlobClient.setTags} operation.\n */\nexport interface BlobSetTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet for the blob to perform this operation.\n   */\n  conditions?: TagConditions & LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.getTags} operation.\n */\nexport interface BlobGetTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet for the blob to perform this operation.\n   */\n  conditions?: TagConditions & LeaseAccessConditions;\n}\n\n/**\n * Contains response data for the {@link BlobClient.getTags} operation.\n */\nexport type BlobGetTagsResponse = WithResponse<\n  { tags: Tags } & BlobGetTagsHeaders,\n  BlobGetTagsHeaders,\n  BlobTags\n>;\n\n/**\n * Options to configure Blob - Acquire Lease operation.\n */\nexport interface BlobAcquireLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when acquiring the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Release Lease operation.\n */\nexport interface BlobReleaseLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when releasing the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Renew Lease operation.\n */\nexport interface BlobRenewLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when renewing the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Change Lease operation.\n */\nexport interface BlobChangeLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when changing the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Break Lease operation.\n */\nexport interface BlobBreakLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when breaking the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.createSnapshot} operation.\n */\nexport interface BlobCreateSnapshotOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the snapshot.\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet when creating blob snapshots.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link BlobClient.beginCopyFromURL} operation.\n */\nexport interface BlobStartCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the blob that are being copied.\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet for the destination blob when copying from a URL to the blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: ModifiedAccessConditions;\n  /**\n   * Access tier.\n   * More Details - https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | PremiumPageBlobTier | string;\n  /**\n   * Rehydrate Priority - possible values include 'High', 'Standard'.\n   * More Details - https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-rehydration#rehydrate-an-archived-blob-to-an-online-tier\n   */\n  rehydratePriority?: RehydratePriority;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n  /**\n   * Overrides the sealed state of the destination blob. Default true.\n   */\n  sealBlob?: boolean;\n}\n\n/**\n * Options to configure the {@link BlobClient.abortCopyFromURL} operation.\n */\nexport interface BlobAbortCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.syncCopyFromURL} operation.\n */\nexport interface BlobSyncCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the snapshot.\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet for the destination blob when copying from a URL to the blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: MatchConditions & ModificationConditions;\n  /**\n   * Access tier.\n   * More Details - https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | PremiumPageBlobTier | string;\n  /**\n   * Specify the md5 calculated for the range of bytes that must be read from the copy source.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Default 'REPLACE'.  Indicates if source tags should be copied or replaced with the tags specified by {@link tags}.\n   */\n  copySourceTags?: BlobCopySourceTags;\n}\n\n/**\n * Options to configure the {@link BlobClient.setAccessTier} operation.\n */\nexport interface BlobSetTierOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions & TagConditions;\n  /**\n   * Rehydrate Priority - possible values include 'High', 'Standard'.\n   * More Details - https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-rehydration#rehydrate-an-archived-blob-to-an-online-tier\n   */\n  rehydratePriority?: RehydratePriority;\n}\n\n/**\n * Option interface for the {@link BlobClient.downloadToBuffer} operation.\n */\nexport interface BlobDownloadToBufferOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * blockSize is the data every request trying to download.\n   * Must be greater than or equal to 0.\n   * If set to 0 or undefined, blockSize will automatically calculated according to the blob size.\n   */\n  blockSize?: number;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original block download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional FileClient.download() request will be made\n   * from the broken point, until the requested block has been successfully downloaded or\n   * maxRetryRequestsPerBlock is reached.\n   *\n   * Default value is 5, please set a larger value when in poor network.\n   */\n  maxRetryRequestsPerBlock?: number;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Access conditions headers.\n   */\n  conditions?: BlobRequestConditions;\n\n  /**\n   * Concurrency of parallel download.\n   */\n  concurrency?: number;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Contains response data for the {@link BlobClient.deleteIfExists} operation.\n */\nexport interface BlobDeleteIfExistsResponse extends BlobDeleteResponse {\n  /**\n   * Indicate whether the blob is successfully deleted. Is false if the blob does not exist in the first place.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Contains response data for the {@link BlobClient.getProperties} operation.\n */\nexport interface BlobGetPropertiesResponse extends BlobGetPropertiesResponseModel {\n  /**\n   * Parsed Object Replication Policy Id, Rule Id(s) and status of the source blob.\n   */\n  objectReplicationSourceProperties?: ObjectReplicationPolicy[];\n\n  /**\n   * Object Replication Policy Id of the destination blob.\n   */\n  objectReplicationDestinationPolicyId?: string;\n}\n\n/**\n * Common options of {@link BlobGenerateSasUrlOptions} and {@link ContainerGenerateSasUrlOptions}.\n */\nexport interface CommonGenerateSasUrlOptions {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   */\n  expiresOn?: Date;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * Optional. The name of the access policy on the container this SAS references if any.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   */\n  contentType?: string;\n}\n\n/**\n * Options to configure {@link BlobClient.generateSasUrl} operation.\n */\nexport interface BlobGenerateSasUrlOptions extends CommonGenerateSasUrlOptions {\n  /**\n   * Optional only when identifier is provided. Specifies the list of permissions to be associated with the SAS.\n   */\n  permissions?: BlobSASPermissions;\n}\n\n/**\n * Options for deleting immutability policy {@link BlobClient.deleteImmutabilityPolicy} operation.\n */\nexport interface BlobDeleteImmutabilityPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options for setting immutability policy {@link BlobClient.setImmutabilityPolicy} operation.\n */\nexport interface BlobSetImmutabilityPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  modifiedAccessCondition?: ModificationConditions;\n}\n\n/**\n * Options for setting legal hold {@link BlobClient.setLegalHold} operation.\n */\nexport interface BlobSetLegalHoldOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobClient.getAccountInfo} operation.\n */\nexport interface BlobGetAccountInfoOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * A BlobClient represents a URL to an Azure Storage blob; the blob may be a block blob,\n * append blob, or page blob.\n */\nexport class BlobClient extends StorageClient {\n  /**\n   * blobContext provided by protocol layer.\n   */\n  private blobContext: StorageBlob;\n\n  private _name: string;\n  private _containerName: string;\n\n  private _versionId?: string;\n  private _snapshot?: string;\n\n  /**\n   * The name of the blob.\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * The name of the storage container the blob is associated with.\n   */\n  public get containerName(): string {\n    return this._containerName;\n  }\n\n  /**\n   *\n   * Creates an instance of BlobClient from connection string.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of BlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of BlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob\".\n   *                     You can append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    options = options || {};\n    let pipeline: PipelineLike;\n    let url: string;\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      if (blobNameOrOptions && typeof blobNameOrOptions !== \"string\") {\n        options = blobNameOrOptions as StoragePipelineOptions;\n      }\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey,\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\",\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n\n    super(url, pipeline);\n    ({ blobName: this._name, containerName: this._containerName } =\n      this.getBlobAndContainerNamesFromUrl());\n    this.blobContext = this.storageClientContext.blob;\n\n    this._snapshot = getURLParameter(this.url, URLConstants.Parameters.SNAPSHOT) as string;\n    this._versionId = getURLParameter(this.url, URLConstants.Parameters.VERSIONID) as string;\n  }\n\n  /**\n   * Creates a new BlobClient object identical to the source but with the specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new BlobClient object identical to the source but with the specified snapshot timestamp\n   */\n  public withSnapshot(snapshot: string): BlobClient {\n    return new BlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot,\n      ),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * Creates a new BlobClient object pointing to a version of this blob.\n   * Provide \"\" will remove the versionId and return a Client to the base blob.\n   *\n   * @param versionId - The versionId.\n   * @returns A new BlobClient object pointing to the version of this blob.\n   */\n  public withVersion(versionId: string): BlobClient {\n    return new BlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.VERSIONID,\n        versionId.length === 0 ? undefined : versionId,\n      ),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * Creates a AppendBlobClient object.\n   *\n   */\n  public getAppendBlobClient(): AppendBlobClient {\n    return new AppendBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Creates a BlockBlobClient object.\n   *\n   */\n  public getBlockBlobClient(): BlockBlobClient {\n    return new BlockBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Creates a PageBlobClient object.\n   *\n   */\n  public getPageBlobClient(): PageBlobClient {\n    return new PageBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Reads or downloads a blob from the system, including its metadata and properties.\n   * You can also call Get Blob to read a snapshot.\n   *\n   * * In Node.js, data returns in a Readable stream readableStreamBody\n   * * In browsers, data returns in a promise blobBody\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/get-blob\n   *\n   * @param offset - From which position of the blob to download, greater than or equal to 0\n   * @param count - How much data to be downloaded, greater than 0. Will download to the end when undefined\n   * @param options - Optional options to Blob Download operation.\n   *\n   *\n   * Example usage (Node.js):\n   *\n   * ```js\n   * // Download and convert a blob to a string\n   * const downloadBlockBlobResponse = await blobClient.download();\n   * const downloaded = await streamToBuffer(downloadBlockBlobResponse.readableStreamBody);\n   * console.log(\"Downloaded blob content:\", downloaded.toString());\n   *\n   * async function streamToBuffer(readableStream) {\n   *   return new Promise((resolve, reject) => {\n   *     const chunks = [];\n   *     readableStream.on(\"data\", (data) => {\n   *       chunks.push(typeof data === \"string\" ? Buffer.from(data) : data);\n   *     });\n   *     readableStream.on(\"end\", () => {\n   *       resolve(Buffer.concat(chunks));\n   *     });\n   *     readableStream.on(\"error\", reject);\n   *   });\n   * }\n   * ```\n   *\n   * Example usage (browser):\n   *\n   * ```js\n   * // Download and convert a blob to a string\n   * const downloadBlockBlobResponse = await blobClient.download();\n   * const downloaded = await blobToString(await downloadBlockBlobResponse.blobBody);\n   * console.log(\n   *   \"Downloaded blob content\",\n   *   downloaded\n   * );\n   *\n   * async function blobToString(blob: Blob): Promise<string> {\n   *   const fileReader = new FileReader();\n   *   return new Promise<string>((resolve, reject) => {\n   *     fileReader.onloadend = (ev: any) => {\n   *       resolve(ev.target!.result);\n   *     };\n   *     fileReader.onerror = reject;\n   *     fileReader.readAsText(blob);\n   *   });\n   * }\n   * ```\n   */\n  public async download(\n    offset: number = 0,\n    count?: number,\n    options: BlobDownloadOptions = {},\n  ): Promise<BlobDownloadResponseParsed> {\n    options.conditions = options.conditions || {};\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n\n    return tracingClient.withSpan(\"BlobClient-download\", options, async (updatedOptions) => {\n      const res = assertResponse<BlobDownloadResponseInternal, BlobDownloadHeaders>(\n        await this.blobContext.download({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          requestOptions: {\n            onDownloadProgress: isNode ? undefined : options.onProgress, // for Node.js, progress is reported by RetriableReadableStream\n          },\n          range: offset === 0 && !count ? undefined : rangeToString({ offset, count }),\n          rangeGetContentMD5: options.rangeGetContentMD5,\n          rangeGetContentCRC64: options.rangeGetContentCrc64,\n          snapshot: options.snapshot,\n          cpkInfo: options.customerProvidedKey,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n\n      const wrappedRes: BlobDownloadResponseParsed = {\n        ...res,\n        _response: res._response, // _response is made non-enumerable\n        objectReplicationDestinationPolicyId: res.objectReplicationPolicyId,\n        objectReplicationSourceProperties: parseObjectReplicationRecord(res.objectReplicationRules),\n      };\n      // Return browser response immediately\n      if (!isNode) {\n        return wrappedRes;\n      }\n\n      // We support retrying when download stream unexpected ends in Node.js runtime\n      // Following code shouldn't be bundled into browser build, however some\n      // bundlers may try to bundle following code and \"FileReadResponse.ts\".\n      // In this case, \"FileDownloadResponse.browser.ts\" will be used as a shim of \"FileDownloadResponse.ts\"\n      // The config is in package.json \"browser\" field\n      if (options.maxRetryRequests === undefined || options.maxRetryRequests < 0) {\n        // TODO: Default value or make it a required parameter?\n        options.maxRetryRequests = DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS;\n      }\n\n      if (res.contentLength === undefined) {\n        throw new RangeError(`File download response doesn't contain valid content length header`);\n      }\n\n      if (!res.etag) {\n        throw new RangeError(`File download response doesn't contain valid etag header`);\n      }\n\n      return new BlobDownloadResponse(\n        wrappedRes,\n        async (start: number): Promise<NodeJS.ReadableStream> => {\n          const updatedDownloadOptions: BlobDownloadOptionalParams = {\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ifMatch: options.conditions!.ifMatch || res.etag,\n              ifModifiedSince: options.conditions!.ifModifiedSince,\n              ifNoneMatch: options.conditions!.ifNoneMatch,\n              ifUnmodifiedSince: options.conditions!.ifUnmodifiedSince,\n              ifTags: options.conditions?.tagConditions,\n            },\n            range: rangeToString({\n              count: offset + res.contentLength! - start,\n              offset: start,\n            }),\n            rangeGetContentMD5: options.rangeGetContentMD5,\n            rangeGetContentCRC64: options.rangeGetContentCrc64,\n            snapshot: options.snapshot,\n            cpkInfo: options.customerProvidedKey,\n          };\n\n          // Debug purpose only\n          // console.log(\n          //   `Read from internal stream, range: ${\n          //     updatedOptions.range\n          //   }, options: ${JSON.stringify(updatedOptions)}`\n          // );\n\n          return (\n            await this.blobContext.download({\n              abortSignal: options.abortSignal,\n              ...updatedDownloadOptions,\n            })\n          ).readableStreamBody!;\n        },\n        offset,\n        res.contentLength!,\n        {\n          maxRetryRequests: options.maxRetryRequests,\n          onProgress: options.onProgress,\n        },\n      );\n    });\n  }\n\n  /**\n   * Returns true if the Azure blob resource represented by this client exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing blob might be deleted by other clients or\n   * applications. Vice versa new blobs might be added by other clients or applications after this\n   * function completes.\n   *\n   * @param options - options to Exists operation.\n   */\n  public async exists(options: BlobExistsOptions = {}): Promise<boolean> {\n    return tracingClient.withSpan(\"BlobClient-exists\", options, async (updatedOptions) => {\n      try {\n        ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n        await this.getProperties({\n          abortSignal: options.abortSignal,\n          customerProvidedKey: options.customerProvidedKey,\n          conditions: options.conditions,\n          tracingOptions: updatedOptions.tracingOptions,\n        });\n        return true;\n      } catch (e: any) {\n        if (e.statusCode === 404) {\n          // Expected exception when checking blob existence\n          return false;\n        } else if (\n          e.statusCode === 409 &&\n          (e.details.errorCode === BlobUsesCustomerSpecifiedEncryptionMsg ||\n            e.details.errorCode === BlobDoesNotUseCustomerSpecifiedEncryption)\n        ) {\n          // Expected exception when checking blob existence\n          return true;\n        }\n        throw e;\n      }\n    });\n  }\n\n  /**\n   * Returns all user-defined metadata, standard HTTP properties, and system properties\n   * for the blob. It does not return the content of the blob.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/get-blob-properties\n   *\n   * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n   * they originally contained uppercase characters. This differs from the metadata keys returned by\n   * the methods of {@link ContainerClient} that list blobs using the `includeMetadata` option, which\n   * will retain their original casing.\n   *\n   * @param options - Optional options to Get Properties operation.\n   */\n  public async getProperties(\n    options: BlobGetPropertiesOptions = {},\n  ): Promise<BlobGetPropertiesResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlobClient-getProperties\", options, async (updatedOptions) => {\n      const res = assertResponse<BlobGetPropertiesResponseInternal, BlobGetPropertiesHeaders>(\n        await this.blobContext.getProperties({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n\n      return {\n        ...res,\n        _response: res._response, // _response is made non-enumerable\n        objectReplicationDestinationPolicyId: res.objectReplicationPolicyId,\n        objectReplicationSourceProperties: parseObjectReplicationRecord(res.objectReplicationRules),\n      };\n    });\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param options - Optional options to Blob Delete operation.\n   */\n  public async delete(options: BlobDeleteOptions = {}): Promise<BlobDeleteResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\"BlobClient-delete\", options, async (updatedOptions) => {\n      return assertResponse<BlobDeleteHeaders, BlobDeleteHeaders>(\n        await this.blobContext.delete({\n          abortSignal: options.abortSignal,\n          deleteSnapshots: options.deleteSnapshots,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion if it exists. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param options - Optional options to Blob Delete operation.\n   */\n  public async deleteIfExists(\n    options: BlobDeleteOptions = {},\n  ): Promise<BlobDeleteIfExistsResponse> {\n    return tracingClient.withSpan(\"BlobClient-deleteIfExists\", options, async (updatedOptions) => {\n      try {\n        const res = assertResponse(await this.delete(updatedOptions));\n        return {\n          succeeded: true,\n          ...res,\n          _response: res._response, // _response is made non-enumerable\n        };\n      } catch (e: any) {\n        if (e.details?.errorCode === \"BlobNotFound\") {\n          return {\n            succeeded: false,\n            ...e.response?.parsedHeaders,\n            _response: e.response,\n          };\n        }\n        throw e;\n      }\n    });\n  }\n\n  /**\n   * Restores the contents and metadata of soft deleted blob and any associated\n   * soft deleted snapshots. Undelete Blob is supported only on version 2017-07-29\n   * or later.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/undelete-blob\n   *\n   * @param options - Optional options to Blob Undelete operation.\n   */\n  public async undelete(options: BlobUndeleteOptions = {}): Promise<BlobUndeleteResponse> {\n    return tracingClient.withSpan(\"BlobClient-undelete\", options, async (updatedOptions) => {\n      return assertResponse<BlobUndeleteHeaders, BlobUndeleteHeaders>(\n        await this.blobContext.undelete({\n          abortSignal: options.abortSignal,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Sets system properties on the blob.\n   *\n   * If no value provided, or no value provided for the specified blob HTTP headers,\n   * these blob HTTP headers without a value will be cleared.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n   *\n   * @param blobHTTPHeaders - If no value provided, or no value provided for\n   *                                                   the specified blob HTTP headers, these blob HTTP\n   *                                                   headers without a value will be cleared.\n   *                                                   A common header to set is `blobContentType`\n   *                                                   enabling the browser to provide functionality\n   *                                                   based on file type.\n   * @param options - Optional options to Blob Set HTTP Headers operation.\n   */\n  public async setHTTPHeaders(\n    blobHTTPHeaders?: BlobHTTPHeaders,\n    options: BlobSetHTTPHeadersOptions = {},\n  ): Promise<BlobSetHTTPHeadersResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlobClient-setHTTPHeaders\", options, async (updatedOptions) => {\n      return assertResponse<BlobSetHttpHeadersHeaders, BlobSetHttpHeadersHeaders>(\n        await this.blobContext.setHttpHeaders({\n          abortSignal: options.abortSignal,\n          blobHttpHeaders: blobHTTPHeaders,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          // cpkInfo: options.customerProvidedKey, // CPK is not included in Swagger, should change this back when this issue is fixed in Swagger.\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Sets user-defined metadata for the specified blob as one or more name-value pairs.\n   *\n   * If no option provided, or no metadata defined in the parameter, the blob\n   * metadata will be removed.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata\n   *\n   * @param metadata - Replace existing metadata with this value.\n   *                               If no value provided the existing metadata will be removed.\n   * @param options - Optional options to Set Metadata operation.\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: BlobSetMetadataOptions = {},\n  ): Promise<BlobSetMetadataResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlobClient-setMetadata\", options, async (updatedOptions) => {\n      return assertResponse<BlobSetMetadataHeaders, BlobSetMetadataHeaders>(\n        await this.blobContext.setMetadata({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Sets tags on the underlying blob.\n   * A blob can have up to 10 tags. Tag keys must be between 1 and 128 characters.  Tag values must be between 0 and 256 characters.\n   * Valid tag key and value characters include lower and upper case letters, digits (0-9),\n   * space (' '), plus ('+'), minus ('-'), period ('.'), foward slash ('/'), colon (':'), equals ('='), and underscore ('_').\n   *\n   * @param tags -\n   * @param options -\n   */\n  public async setTags(tags: Tags, options: BlobSetTagsOptions = {}): Promise<BlobSetTagsResponse> {\n    return tracingClient.withSpan(\"BlobClient-setTags\", options, async (updatedOptions) => {\n      return assertResponse<BlobSetTagsHeaders, BlobSetTagsHeaders>(\n        await this.blobContext.setTags({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          tracingOptions: updatedOptions.tracingOptions,\n          tags: toBlobTags(tags),\n        }),\n      );\n    });\n  }\n\n  /**\n   * Gets the tags associated with the underlying blob.\n   *\n   * @param options -\n   */\n  public async getTags(options: BlobGetTagsOptions = {}): Promise<BlobGetTagsResponse> {\n    return tracingClient.withSpan(\"BlobClient-getTags\", options, async (updatedOptions) => {\n      const response = assertResponse<BlobGetTagsResponseInternal, BlobGetTagsHeaders, BlobTags>(\n        await this.blobContext.getTags({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n      const wrappedResponse: BlobGetTagsResponse = {\n        ...response,\n        _response: response._response, // _response is made non-enumerable\n        tags: toTags({ blobTagSet: response.blobTagSet }) || {},\n      };\n      return wrappedResponse;\n    });\n  }\n\n  /**\n   * Get a {@link BlobLeaseClient} that manages leases on the blob.\n   *\n   * @param proposeLeaseId - Initial proposed lease Id.\n   * @returns A new BlobLeaseClient object for managing leases on the blob.\n   */\n  public getBlobLeaseClient(proposeLeaseId?: string): BlobLeaseClient {\n    return new BlobLeaseClient(this, proposeLeaseId);\n  }\n\n  /**\n   * Creates a read-only snapshot of a blob.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/snapshot-blob\n   *\n   * @param options - Optional options to the Blob Create Snapshot operation.\n   */\n  public async createSnapshot(\n    options: BlobCreateSnapshotOptions = {},\n  ): Promise<BlobCreateSnapshotResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlobClient-createSnapshot\", options, async (updatedOptions) => {\n      return assertResponse<BlobCreateSnapshotHeaders, BlobCreateSnapshotHeaders>(\n        await this.blobContext.createSnapshot({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          metadata: options.metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Asynchronously copies a blob to a destination within the storage account.\n   * This method returns a long running operation poller that allows you to wait\n   * indefinitely until the copy is completed.\n   * You can also cancel a copy before it is completed by calling `cancelOperation` on the poller.\n   * Note that the onProgress callback will not be invoked if the operation completes in the first\n   * request, and attempting to cancel a completed copy will result in an error being thrown.\n   *\n   * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n   * a committed blob in any Azure storage account.\n   * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n   * an Azure file in any Azure storage account.\n   * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n   * operation to copy from another storage account.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/copy-blob\n   *\n   * Example using automatic polling:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url');\n   * const result = await copyPoller.pollUntilDone();\n   * ```\n   *\n   * Example using manual polling:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url');\n   * while (!poller.isDone()) {\n   *    await poller.poll();\n   * }\n   * const result = copyPoller.getResult();\n   * ```\n   *\n   * Example using progress updates:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url', {\n   *   onProgress(state) {\n   *     console.log(`Progress: ${state.copyProgress}`);\n   *   }\n   * });\n   * const result = await copyPoller.pollUntilDone();\n   * ```\n   *\n   * Example using a changing polling interval (default 15 seconds):\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url', {\n   *   intervalInMs: 1000 // poll blob every 1 second for copy progress\n   * });\n   * const result = await copyPoller.pollUntilDone();\n   * ```\n   *\n   * Example using copy cancellation:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url');\n   * // cancel operation after starting it.\n   * try {\n   *   await copyPoller.cancelOperation();\n   *   // calls to get the result now throw PollerCancelledError\n   *   await copyPoller.getResult();\n   * } catch (err) {\n   *   if (err.name === 'PollerCancelledError') {\n   *     console.log('The copy was cancelled.');\n   *   }\n   * }\n   * ```\n   *\n   * @param copySource - url to the source Azure Blob/File.\n   * @param options - Optional options to the Blob Start Copy From URL operation.\n   */\n  public async beginCopyFromURL(\n    copySource: string,\n    options: BlobBeginCopyFromURLOptions = {},\n  ): Promise<\n    PollerLikeWithCancellation<\n      PollOperationState<BlobBeginCopyFromURLResponse>,\n      BlobBeginCopyFromURLResponse\n    >\n  > {\n    const client: CopyPollerBlobClient = {\n      abortCopyFromURL: (...args) => this.abortCopyFromURL(...args),\n      getProperties: (...args) => this.getProperties(...args),\n      startCopyFromURL: (...args) => this.startCopyFromURL(...args),\n    };\n    const poller = new BlobBeginCopyFromUrlPoller({\n      blobClient: client,\n      copySource,\n      intervalInMs: options.intervalInMs,\n      onProgress: options.onProgress,\n      resumeFrom: options.resumeFrom,\n      startCopyFromURLOptions: options,\n    });\n\n    // Trigger the startCopyFromURL call by calling poll.\n    // Any errors from this method should be surfaced to the user.\n    await poller.poll();\n\n    return poller;\n  }\n\n  /**\n   * Aborts a pending asynchronous Copy Blob operation, and leaves a destination blob with zero\n   * length and full metadata. Version 2012-02-12 and newer.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob\n   *\n   * @param copyId - Id of the Copy From URL operation.\n   * @param options - Optional options to the Blob Abort Copy From URL operation.\n   */\n  public async abortCopyFromURL(\n    copyId: string,\n    options: BlobAbortCopyFromURLOptions = {},\n  ): Promise<BlobAbortCopyFromURLResponse> {\n    return tracingClient.withSpan(\n      \"BlobClient-abortCopyFromURL\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<BlobAbortCopyFromURLHeaders, BlobAbortCopyFromURLHeaders>(\n          await this.blobContext.abortCopyFromURL(copyId, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * The synchronous Copy From URL operation copies a blob or an internet resource to a new blob. It will not\n   * return a response until the copy is complete.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/copy-blob-from-url\n   *\n   * @param copySource - The source URL to copy from, Shared Access Signature(SAS) maybe needed for authentication\n   * @param options -\n   */\n  public async syncCopyFromURL(\n    copySource: string,\n    options: BlobSyncCopyFromURLOptions = {},\n  ): Promise<BlobCopyFromURLResponse> {\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n    return tracingClient.withSpan(\"BlobClient-syncCopyFromURL\", options, async (updatedOptions) => {\n      return assertResponse<BlobCopyFromURLHeaders, BlobCopyFromURLHeaders>(\n        await this.blobContext.copyFromURL(copySource, {\n          abortSignal: options.abortSignal,\n          metadata: options.metadata,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          sourceModifiedAccessConditions: {\n            sourceIfMatch: options.sourceConditions?.ifMatch,\n            sourceIfModifiedSince: options.sourceConditions?.ifModifiedSince,\n            sourceIfNoneMatch: options.sourceConditions?.ifNoneMatch,\n            sourceIfUnmodifiedSince: options.sourceConditions?.ifUnmodifiedSince,\n          },\n          sourceContentMD5: options.sourceContentMD5,\n          copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n          tier: toAccessTier(options.tier),\n          blobTagsString: toBlobTagsString(options.tags),\n          immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n          immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n          legalHold: options.legalHold,\n          encryptionScope: options.encryptionScope,\n          copySourceTags: options.copySourceTags,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Sets the tier on a blob. The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/set-blob-tier\n   *\n   * @param tier - The tier to be set on the blob. Valid values are Hot, Cool, or Archive.\n   * @param options - Optional options to the Blob Set Tier operation.\n   */\n  public async setAccessTier(\n    tier: BlockBlobTier | PremiumPageBlobTier | string,\n    options: BlobSetTierOptions = {},\n  ): Promise<BlobSetTierResponse> {\n    return tracingClient.withSpan(\"BlobClient-setAccessTier\", options, async (updatedOptions) => {\n      return assertResponse<BlobSetTierHeaders, BlobSetTierHeaders>(\n        await this.blobContext.setTier(toAccessTier(tier)!, {\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          rehydratePriority: options.rehydratePriority,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  // High level function\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob in parallel to a buffer.\n   * Offset and count are optional, downloads the entire blob if they are not provided.\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For blobs larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @param offset - From which position of the block blob to download(in bytes)\n   * @param count - How much data(in bytes) to be downloaded. Will download to the end when passing undefined\n   * @param options - BlobDownloadToBufferOptions\n   */\n  public async downloadToBuffer(\n    offset?: number,\n    count?: number,\n    options?: BlobDownloadToBufferOptions,\n  ): Promise<Buffer>;\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob in parallel to a buffer.\n   * Offset and count are optional, downloads the entire blob if they are not provided.\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For blobs larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @param buffer - Buffer to be fill, must have length larger than count\n   * @param offset - From which position of the block blob to download(in bytes)\n   * @param count - How much data(in bytes) to be downloaded. Will download to the end when passing undefined\n   * @param options - BlobDownloadToBufferOptions\n   */\n  public async downloadToBuffer(\n    buffer: Buffer,\n    offset?: number,\n    count?: number,\n    options?: BlobDownloadToBufferOptions,\n  ): Promise<Buffer>;\n\n  public async downloadToBuffer(\n    param1?: Buffer | number,\n    param2?: number,\n    param3?: BlobDownloadToBufferOptions | number,\n    param4: BlobDownloadToBufferOptions = {},\n  ): Promise<Buffer | undefined> {\n    let buffer: Buffer | undefined;\n    let offset = 0;\n    let count = 0;\n    let options = param4;\n    if (param1 instanceof Buffer) {\n      buffer = param1;\n      offset = param2 || 0;\n      count = typeof param3 === \"number\" ? param3 : 0;\n    } else {\n      offset = typeof param1 === \"number\" ? param1 : 0;\n      count = typeof param2 === \"number\" ? param2 : 0;\n      options = (param3 as BlobDownloadToBufferOptions) || {};\n    }\n\n    let blockSize = options.blockSize ?? 0;\n\n    if (blockSize < 0) {\n      throw new RangeError(\"blockSize option must be >= 0\");\n    }\n    if (blockSize === 0) {\n      blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n    }\n\n    if (offset < 0) {\n      throw new RangeError(\"offset option must be >= 0\");\n    }\n\n    if (count && count <= 0) {\n      throw new RangeError(\"count option must be greater than 0\");\n    }\n\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\n      \"BlobClient-downloadToBuffer\",\n      options,\n      async (updatedOptions) => {\n        // Customer doesn't specify length, get it\n        if (!count) {\n          const response = await this.getProperties({\n            ...options,\n            tracingOptions: updatedOptions.tracingOptions,\n          });\n          count = response.contentLength! - offset;\n          if (count < 0) {\n            throw new RangeError(\n              `offset ${offset} shouldn't be larger than blob size ${response.contentLength!}`,\n            );\n          }\n        }\n\n        // Allocate the buffer of size = count if the buffer is not provided\n        if (!buffer) {\n          try {\n            buffer = Buffer.alloc(count);\n          } catch (error: any) {\n            throw new Error(\n              `Unable to allocate the buffer of size: ${count}(in bytes). Please try passing your own buffer to the \"downloadToBuffer\" method or try using other methods like \"download\" or \"downloadToFile\".\\t ${error.message}`,\n            );\n          }\n        }\n\n        if (buffer.length < count) {\n          throw new RangeError(\n            `The buffer's size should be equal to or larger than the request count of bytes: ${count}`,\n          );\n        }\n\n        let transferProgress: number = 0;\n        const batch = new Batch(options.concurrency);\n        for (let off = offset; off < offset + count; off = off + blockSize) {\n          batch.addOperation(async () => {\n            // Exclusive chunk end position\n            let chunkEnd = offset + count!;\n            if (off + blockSize < chunkEnd) {\n              chunkEnd = off + blockSize;\n            }\n            const response = await this.download(off, chunkEnd - off, {\n              abortSignal: options.abortSignal,\n              conditions: options.conditions,\n              maxRetryRequests: options.maxRetryRequestsPerBlock,\n              customerProvidedKey: options.customerProvidedKey,\n              tracingOptions: updatedOptions.tracingOptions,\n            });\n            const stream = response.readableStreamBody!;\n            await streamToBuffer(stream, buffer!, off - offset, chunkEnd - offset);\n            // Update progress after block is downloaded, in case of block trying\n            // Could provide finer grained progress updating inside HTTP requests,\n            // only if convenience layer download try is enabled\n            transferProgress += chunkEnd - off;\n            if (options.onProgress) {\n              options.onProgress({ loadedBytes: transferProgress });\n            }\n          });\n        }\n        await batch.do();\n        return buffer;\n      },\n    );\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob to a local file.\n   * Fails if the the given file path already exits.\n   * Offset and count are optional, pass 0 and undefined respectively to download the entire blob.\n   *\n   * @param filePath -\n   * @param offset - From which position of the block blob to download.\n   * @param count - How much data to be downloaded. Will download to the end when passing undefined.\n   * @param options - Options to Blob download options.\n   * @returns The response data for blob download operation,\n   *                                                 but with readableStreamBody set to undefined since its\n   *                                                 content is already read and written into a local file\n   *                                                 at the specified path.\n   */\n  public async downloadToFile(\n    filePath: string,\n    offset: number = 0,\n    count?: number,\n    options: BlobDownloadOptions = {},\n  ): Promise<BlobDownloadResponseParsed> {\n    return tracingClient.withSpan(\"BlobClient-downloadToFile\", options, async (updatedOptions) => {\n      const response = await this.download(offset, count, {\n        ...options,\n        tracingOptions: updatedOptions.tracingOptions,\n      });\n      if (response.readableStreamBody) {\n        await readStreamToLocalFile(response.readableStreamBody, filePath);\n      }\n\n      // The stream is no longer accessible so setting it to undefined.\n      (response as any).blobDownloadStream = undefined;\n      return response;\n    });\n  }\n\n  private getBlobAndContainerNamesFromUrl(): { blobName: string; containerName: string } {\n    let containerName;\n    let blobName;\n    try {\n      //  URL may look like the following\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob/a.txt?sasString\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob/a.txt\";\n      // IPv4/IPv6 address hosts, Endpoints - `http://127.0.0.1:10000/devstoreaccount1/containername/blob`\n      // http://localhost:10001/devstoreaccount1/containername/blob\n\n      const parsedUrl = new URL(this.url);\n\n      if (parsedUrl.host.split(\".\")[1] === \"blob\") {\n        // \"https://myaccount.blob.core.windows.net/containername/blob\".\n        // .getPath() -> /containername/blob\n        const pathComponents = parsedUrl.pathname.match(\"/([^/]*)(/(.*))?\");\n        containerName = pathComponents![1];\n        blobName = pathComponents![3];\n      } else if (isIpEndpointStyle(parsedUrl)) {\n        // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/containername/blob\n        // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/containername/blob\n        // .getPath() -> /devstoreaccount1/containername/blob\n        const pathComponents = parsedUrl.pathname.match(\"/([^/]*)/([^/]*)(/(.*))?\");\n        containerName = pathComponents![2];\n        blobName = pathComponents![4];\n      } else {\n        // \"https://customdomain.com/containername/blob\".\n        // .getPath() -> /containername/blob\n        const pathComponents = parsedUrl.pathname.match(\"/([^/]*)(/(.*))?\");\n        containerName = pathComponents![1];\n        blobName = pathComponents![3];\n      }\n\n      // decode the encoded blobName, containerName - to get all the special characters that might be present in them\n      containerName = decodeURIComponent(containerName);\n      blobName = decodeURIComponent(blobName);\n\n      // Azure Storage Server will replace \"\\\" with \"/\" in the blob names\n      //   doing the same in the SDK side so that the user doesn't have to replace \"\\\" instances in the blobName\n      blobName = blobName.replace(/\\\\/g, \"/\");\n\n      if (!containerName) {\n        throw new Error(\"Provided containerName is invalid.\");\n      }\n\n      return { blobName, containerName };\n    } catch (error: any) {\n      throw new Error(\"Unable to extract blobName and containerName with provided information.\");\n    }\n  }\n\n  /**\n   * Asynchronously copies a blob to a destination within the storage account.\n   * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n   * a committed blob in any Azure storage account.\n   * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n   * an Azure file in any Azure storage account.\n   * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n   * operation to copy from another storage account.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/copy-blob\n   *\n   * @param copySource - url to the source Azure Blob/File.\n   * @param options - Optional options to the Blob Start Copy From URL operation.\n   */\n  private async startCopyFromURL(\n    copySource: string,\n    options: BlobStartCopyFromURLOptions = {},\n  ): Promise<BlobStartCopyFromURLResponse> {\n    return tracingClient.withSpan(\n      \"BlobClient-startCopyFromURL\",\n      options,\n      async (updatedOptions) => {\n        options.conditions = options.conditions || {};\n        options.sourceConditions = options.sourceConditions || {};\n        return assertResponse<BlobStartCopyFromURLHeaders, BlobStartCopyFromURLHeaders>(\n          await this.blobContext.startCopyFromURL(copySource, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            metadata: options.metadata,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            sourceModifiedAccessConditions: {\n              sourceIfMatch: options.sourceConditions.ifMatch,\n              sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,\n              sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,\n              sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince,\n              sourceIfTags: options.sourceConditions.tagConditions,\n            },\n            immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n            immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n            legalHold: options.legalHold,\n            rehydratePriority: options.rehydratePriority,\n            tier: toAccessTier(options.tier),\n            blobTagsString: toBlobTagsString(options.tags),\n            sealBlob: options.sealBlob,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Only available for BlobClient constructed with a shared key credential.\n   *\n   * Generates a Blob Service Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateSasUrl(options: BlobGenerateSasUrlOptions): Promise<string> {\n    return new Promise((resolve) => {\n      if (!(this.credential instanceof StorageSharedKeyCredential)) {\n        throw new RangeError(\n          \"Can only generate the SAS when the client is initialized with a shared key credential\",\n        );\n      }\n\n      const sas = generateBlobSASQueryParameters(\n        {\n          containerName: this._containerName,\n          blobName: this._name,\n          snapshotTime: this._snapshot,\n          versionId: this._versionId,\n          ...options,\n        },\n        this.credential,\n      ).toString();\n\n      resolve(appendToURLQuery(this.url, sas));\n    });\n  }\n\n  /**\n   * Only available for BlobClient constructed with a shared key credential.\n   *\n   * Generates string to sign for a Blob Service Shared Access Signature (SAS) URI based on\n   * the client properties and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n  public generateSasStringToSign(options: BlobGenerateSasUrlOptions): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw new RangeError(\n        \"Can only generate the SAS when the client is initialized with a shared key credential\",\n      );\n    }\n\n    return generateBlobSASQueryParametersInternal(\n      {\n        containerName: this._containerName,\n        blobName: this._name,\n        snapshotTime: this._snapshot,\n        versionId: this._versionId,\n        ...options,\n      },\n      this.credential,\n    ).stringToSign;\n  }\n\n  /**\n   *\n   * Generates a Blob Service Shared Access Signature (SAS) URI based on\n   * the client properties and parameters passed in. The SAS is signed by the input user delegation key.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @param userDelegationKey -  Return value of `blobServiceClient.getUserDelegationKey()`\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateUserDelegationSasUrl(\n    options: BlobGenerateSasUrlOptions,\n    userDelegationKey: UserDelegationKey,\n  ): Promise<string> {\n    return new Promise((resolve) => {\n      const sas = generateBlobSASQueryParameters(\n        {\n          containerName: this._containerName,\n          blobName: this._name,\n          snapshotTime: this._snapshot,\n          versionId: this._versionId,\n          ...options,\n        },\n        userDelegationKey,\n        this.accountName,\n      ).toString();\n\n      resolve(appendToURLQuery(this.url, sas));\n    });\n  }\n\n  /**\n   * Only available for BlobClient constructed with a shared key credential.\n   *\n   * Generates string to sign for a Blob Service Shared Access Signature (SAS) URI based on\n   * the client properties and parameters passed in. The SAS is signed by the input user delegation key.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @param userDelegationKey -  Return value of `blobServiceClient.getUserDelegationKey()`\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n\n  public generateUserDelegationSasStringToSign(\n    options: BlobGenerateSasUrlOptions,\n    userDelegationKey: UserDelegationKey,\n  ): string {\n    return generateBlobSASQueryParametersInternal(\n      {\n        containerName: this._containerName,\n        blobName: this._name,\n        snapshotTime: this._snapshot,\n        versionId: this._versionId,\n        ...options,\n      },\n      userDelegationKey,\n      this.accountName,\n    ).stringToSign;\n  }\n\n  /**\n   * Delete the immutablility policy on the blob.\n   *\n   * @param options - Optional options to delete immutability policy on the blob.\n   */\n  public async deleteImmutabilityPolicy(\n    options: BlobDeleteImmutabilityPolicyOptions = {},\n  ): Promise<BlobDeleteImmutabilityPolicyResponse> {\n    return tracingClient.withSpan(\n      \"BlobClient-deleteImmutabilityPolicy\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          BlobDeleteImmutabilityPolicyHeaders,\n          BlobDeleteImmutabilityPolicyHeaders\n        >(\n          await this.blobContext.deleteImmutabilityPolicy({\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Set immutability policy on the blob.\n   *\n   * @param options - Optional options to set immutability policy on the blob.\n   */\n  public async setImmutabilityPolicy(\n    immutabilityPolicy: BlobImmutabilityPolicy,\n    options: BlobSetImmutabilityPolicyOptions = {},\n  ): Promise<BlobSetImmutabilityPolicyResponse> {\n    return tracingClient.withSpan(\n      \"BlobClient-setImmutabilityPolicy\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<BlobSetImmutabilityPolicyHeaders, BlobSetImmutabilityPolicyHeaders>(\n          await this.blobContext.setImmutabilityPolicy({\n            immutabilityPolicyExpiry: immutabilityPolicy.expiriesOn,\n            immutabilityPolicyMode: immutabilityPolicy.policyMode,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Set legal hold on the blob.\n   *\n   * @param options - Optional options to set legal hold on the blob.\n   */\n  public async setLegalHold(\n    legalHoldEnabled: boolean,\n    options: BlobSetLegalHoldOptions = {},\n  ): Promise<BlobSetLegalHoldResponse> {\n    return tracingClient.withSpan(\"BlobClient-setLegalHold\", options, async (updatedOptions) => {\n      return assertResponse<BlobSetLegalHoldHeaders, BlobSetLegalHoldHeaders>(\n        await this.blobContext.setLegalHold(legalHoldEnabled, {\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * The Get Account Information operation returns the sku name and account kind\n   * for the specified account.\n   * The Get Account Information operation is available on service versions beginning\n   * with version 2018-03-28.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/get-account-information\n   *\n   * @param options - Options to the Service Get Account Info operation.\n   * @returns Response data for the Service Get Account Info operation.\n   */\n  public async getAccountInfo(\n    options: BlobGetAccountInfoOptions = {},\n  ): Promise<BlobGetAccountInfoResponse> {\n    return tracingClient.withSpan(\"BlobClient-getAccountInfo\", options, async (updatedOptions) => {\n      return assertResponse<BlobGetAccountInfoHeaders, BlobGetAccountInfoHeaders>(\n        await this.blobContext.getAccountInfo({\n          abortSignal: options.abortSignal,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n}\n\n/**\n * Options to configure {@link AppendBlobClient.create} operation.\n */\nexport interface AppendBlobCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Conditions to meet when creating append blobs.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * HTTP headers to set when creating append blobs. A common header\n   * to set is `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure {@link AppendBlobClient.createIfNotExists} operation.\n */\nexport interface AppendBlobCreateIfNotExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * HTTP headers to set when creating append blobs. A common header to set is\n   * `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n}\n\n/**\n * Options to configure {@link AppendBlobClient.seal} operation.\n */\nexport interface AppendBlobSealOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet.\n   */\n  conditions?: AppendBlobRequestConditions;\n}\n\n/**\n * Options to configure the {@link AppendBlobClient.appendBlock} operation.\n */\nexport interface AppendBlobAppendBlockOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when appending append blob blocks.\n   */\n  conditions?: AppendBlobRequestConditions;\n  /**\n   * Callback to receive events on the progress of append block operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * An MD5 hash of the block content. This hash is used to verify the integrity of the block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the append block content. This hash is used to verify the integrity of the append block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link AppendBlobClient.appendBlockFromURL} operation.\n */\nexport interface AppendBlobAppendBlockFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when appending append blob blocks.\n   */\n  conditions?: AppendBlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: MatchConditions & ModificationConditions;\n  /**\n   * An MD5 hash of the append block content from the URI.\n   * This hash is used to verify the integrity of the append block during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the append block content from the URI.\n   * This hash is used to verify the integrity of the append block during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n}\n\n/**\n * Contains response data for the {@link appendBlobClient.createIfNotExists} operation.\n */\nexport interface AppendBlobCreateIfNotExistsResponse extends AppendBlobCreateResponse {\n  /**\n   * Indicate whether the blob is successfully created. Is false when the blob is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * AppendBlobClient defines a set of operations applicable to append blobs.\n */\nexport class AppendBlobClient extends BlobClient {\n  /**\n   * appendBlobsContext provided by protocol layer.\n   */\n  private appendBlobContext: AppendBlob;\n\n  /**\n   *\n   * Creates an instance of AppendBlobClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of AppendBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage append blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of AppendBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage append blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)      url = urlOrConnectionString;\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey,\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\",\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(url, pipeline);\n    this.appendBlobContext = this.storageClientContext.appendBlob;\n  }\n\n  /**\n   * Creates a new AppendBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new AppendBlobClient object identical to the source but with the specified snapshot timestamp.\n   */\n  public withSnapshot(snapshot: string): AppendBlobClient {\n    return new AppendBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot,\n      ),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n   * @see https://learn.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param options - Options to the Append Block Create operation.\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const appendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n   * await appendBlobClient.create();\n   * ```\n   */\n  public async create(options: AppendBlobCreateOptions = {}): Promise<AppendBlobCreateResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"AppendBlobClient-create\", options, async (updatedOptions) => {\n      return assertResponse<AppendBlobCreateHeaders, AppendBlobCreateHeaders>(\n        await this.appendBlobContext.create(0, {\n          abortSignal: options.abortSignal,\n          blobHttpHeaders: options.blobHTTPHeaders,\n          leaseAccessConditions: options.conditions,\n          metadata: options.metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n          immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n          legalHold: options.legalHold,\n          blobTagsString: toBlobTagsString(options.tags),\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n   * If the blob with the same name already exists, the content of the existing blob will remain unchanged.\n   * @see https://learn.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param options -\n   */\n  public async createIfNotExists(\n    options: AppendBlobCreateIfNotExistsOptions = {},\n  ): Promise<AppendBlobCreateIfNotExistsResponse> {\n    const conditions = { ifNoneMatch: ETagAny };\n    return tracingClient.withSpan(\n      \"AppendBlobClient-createIfNotExists\",\n      options,\n      async (updatedOptions) => {\n        try {\n          const res = assertResponse(\n            await this.create({\n              ...updatedOptions,\n              conditions,\n            }),\n          );\n          return {\n            succeeded: true,\n            ...res,\n            _response: res._response, // _response is made non-enumerable\n          };\n        } catch (e: any) {\n          if (e.details?.errorCode === \"BlobAlreadyExists\") {\n            return {\n              succeeded: false,\n              ...e.response?.parsedHeaders,\n              _response: e.response,\n            };\n          }\n          throw e;\n        }\n      },\n    );\n  }\n\n  /**\n   * Seals the append blob, making it read only.\n   *\n   * @param options -\n   */\n  public async seal(options: AppendBlobSealOptions = {}): Promise<AppendBlobAppendBlockResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\"AppendBlobClient-seal\", options, async (updatedOptions) => {\n      return assertResponse<AppendBlobSealHeaders, AppendBlobSealHeaders>(\n        await this.appendBlobContext.seal({\n          abortSignal: options.abortSignal,\n          appendPositionAccessConditions: options.conditions,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Commits a new block of data to the end of the existing append blob.\n   * @see https://learn.microsoft.com/rest/api/storageservices/append-block\n   *\n   * @param body - Data to be appended.\n   * @param contentLength - Length of the body in bytes.\n   * @param options - Options to the Append Block operation.\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello World!\";\n   *\n   * // Create a new append blob and append data to the blob.\n   * const newAppendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n   * await newAppendBlobClient.create();\n   * await newAppendBlobClient.appendBlock(content, content.length);\n   *\n   * // Append data to an existing append blob.\n   * const existingAppendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n   * await existingAppendBlobClient.appendBlock(content, content.length);\n   * ```\n   */\n  public async appendBlock(\n    body: HttpRequestBody,\n    contentLength: number,\n    options: AppendBlobAppendBlockOptions = {},\n  ): Promise<AppendBlobAppendBlockResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"AppendBlobClient-appendBlock\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<AppendBlobAppendBlockHeaders, AppendBlobAppendBlockHeaders>(\n          await this.appendBlobContext.appendBlock(contentLength, body, {\n            abortSignal: options.abortSignal,\n            appendPositionAccessConditions: options.conditions,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            requestOptions: {\n              onUploadProgress: options.onProgress,\n            },\n            transactionalContentMD5: options.transactionalContentMD5,\n            transactionalContentCrc64: options.transactionalContentCrc64,\n            cpkInfo: options.customerProvidedKey,\n            encryptionScope: options.encryptionScope,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob\n   * where the contents are read from a source url.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/append-block-from-url\n   *\n   * @param sourceURL -\n   *                 The url to the blob that will be the source of the copy. A source blob in the same storage account can\n   *                 be authenticated via Shared Key. However, if the source is a blob in another account, the source blob\n   *                 must either be public or must be authenticated via a shared access signature. If the source blob is\n   *                 public, no authentication is required to perform the operation.\n   * @param sourceOffset - Offset in source to be appended\n   * @param count - Number of bytes to be appended as a block\n   * @param options -\n   */\n  public async appendBlockFromURL(\n    sourceURL: string,\n    sourceOffset: number,\n    count: number,\n    options: AppendBlobAppendBlockFromURLOptions = {},\n  ): Promise<AppendBlobAppendBlockFromUrlResponse> {\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"AppendBlobClient-appendBlockFromURL\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          AppendBlobAppendBlockFromUrlHeaders,\n          AppendBlobAppendBlockFromUrlHeaders\n        >(\n          await this.appendBlobContext.appendBlockFromUrl(sourceURL, 0, {\n            abortSignal: options.abortSignal,\n            sourceRange: rangeToString({ offset: sourceOffset, count }),\n            sourceContentMD5: options.sourceContentMD5,\n            sourceContentCrc64: options.sourceContentCrc64,\n            leaseAccessConditions: options.conditions,\n            appendPositionAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            sourceModifiedAccessConditions: {\n              sourceIfMatch: options.sourceConditions?.ifMatch,\n              sourceIfModifiedSince: options.sourceConditions?.ifModifiedSince,\n              sourceIfNoneMatch: options.sourceConditions?.ifNoneMatch,\n              sourceIfUnmodifiedSince: options.sourceConditions?.ifUnmodifiedSince,\n            },\n            copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n            cpkInfo: options.customerProvidedKey,\n            encryptionScope: options.encryptionScope,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n}\n\n/**\n * Options to configure {@link BlockBlobClient.upload} operation.\n */\nexport interface BlockBlobUploadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when uploading to the block blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * HTTP headers to set when uploading to a block blob. A common header to set is\n   * `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when uploading to a block blob.\n   */\n  metadata?: Metadata;\n  /**\n   * Callback to receive events on the progress of upload operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Access tier.\n   * More Details - https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.syncUploadFromURL} operation.\n */\nexport interface BlockBlobSyncUploadFromURLOptions extends CommonOptions {\n  /**\n   * Server timeout in seconds.\n   * For more information, @see https://learn.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\n   */\n  timeoutInSeconds?: number;\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: Metadata;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Access tier.\n   * More Details - https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n  /**\n   * Specify the md5 calculated for the range of bytes that must be read from the copy source.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n  /**\n   * Optional, default is true.  Indicates if properties from the source blob should be copied.\n   */\n  copySourceBlobProperties?: boolean;\n  /**\n   * HTTP headers to set when uploading to a block blob.\n   *\n   * A common header to set is `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * Conditions to meet for the destination Azure Blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Conditions to meet for the source Azure Blob.\n   */\n  sourceConditions?: ModifiedAccessConditions;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n  /**\n   * Optional, default 'replace'.  Indicates if source tags should be copied or replaced with the tags specified by {@link tags}.\n   */\n  copySourceTags?: BlobCopySourceTags;\n}\n\n/**\n * Blob query error type.\n */\nexport interface BlobQueryError {\n  /**\n   * Whether error is fatal. Fatal error will stop query.\n   */\n  isFatal: boolean;\n  /**\n   * Error name.\n   */\n  name: string;\n  /**\n   * Position in bytes of the query.\n   */\n  position: number;\n  /**\n   * Error description.\n   */\n  description: string;\n}\n\n/**\n * Options to query blob with JSON format.\n */\nexport interface BlobQueryJsonTextConfiguration {\n  /**\n   * Record separator.\n   */\n  recordSeparator: string;\n  /**\n   * Query for a JSON format blob.\n   */\n  kind: \"json\";\n}\n\n/**\n * Options to query blob with CSV format.\n */\nexport interface BlobQueryCsvTextConfiguration {\n  /**\n   * Record separator.\n   */\n  recordSeparator: string;\n  /**\n   * Query for a CSV format blob.\n   */\n  kind: \"csv\";\n  /**\n   * Column separator. Default is \",\".\n   */\n  columnSeparator?: string;\n  /**\n   * Field quote.\n   */\n  fieldQuote?: string;\n  /**\n   * Escape character.\n   */\n  escapeCharacter?: string;\n  /**\n   * Has headers. Default is false.\n   */\n  hasHeaders?: boolean;\n}\n\n/**\n * Options to query blob with Apache Arrow format. Only valid for {@link BlockBlobQueryOptions.outputTextConfiguration}.\n */\nexport interface BlobQueryArrowConfiguration {\n  /**\n   * Kind.\n   */\n  kind: \"arrow\";\n\n  /**\n   * List of {@link BlobQueryArrowField} describing the schema of the data.\n   */\n  schema: BlobQueryArrowField[];\n}\n\n/**\n * Options to query blob with Parquet format. Only valid for {@link BlockBlobQueryOptions.inputTextConfiguration}.\n */\nexport interface BlobQueryParquetConfiguration {\n  /**\n   * Kind.\n   */\n  kind: \"parquet\";\n}\n\n/**\n * Options to configure {@link BlockBlobClient.query} operation.\n */\nexport interface BlockBlobQueryOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Configurations for the query input.\n   */\n  inputTextConfiguration?:\n    | BlobQueryJsonTextConfiguration\n    | BlobQueryCsvTextConfiguration\n    | BlobQueryParquetConfiguration;\n  /**\n   * Configurations for the query output.\n   */\n  outputTextConfiguration?:\n    | BlobQueryJsonTextConfiguration\n    | BlobQueryCsvTextConfiguration\n    | BlobQueryArrowConfiguration;\n  /**\n   * Callback to receive events on the progress of query operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Callback to receive error events during the query operaiton.\n   */\n  onError?: (error: BlobQueryError) => void;\n  /**\n   * Conditions to meet when uploading to the block blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.stageBlock} operation.\n */\nexport interface BlockBlobStageBlockOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n  /**\n   * Callback to receive events on the progress of stage block operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * An MD5 hash of the block content. This hash is used to verify the integrity of the block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentMD5?: Uint8Array;\n\n  /**\n   * A CRC64 hash of the block content. This hash is used to verify the integrity of the block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.stageBlockFromURL} operation.\n */\nexport interface BlockBlobStageBlockFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the bytes of the source Blob/File to upload.\n   * If not specified, the entire content is uploaded as a single block.\n   */\n  range?: Range;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n  /**\n   * An MD5 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.commitBlockList} operation.\n */\nexport interface BlockBlobCommitBlockListOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when committing the block list.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * HTTP headers to set when committing block list.\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when committing block list.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Access tier.\n   * More Details - https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.getBlockList} operation.\n */\nexport interface BlockBlobGetBlockListOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions & TagConditions;\n}\n\n/**\n * Option interface for the {@link BlockBlobClient.uploadStream} operation.\n */\nexport interface BlockBlobUploadStreamOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Blob HTTP Headers.\n   *\n   * A common header to set is `blobContentType`, enabling the\n   * browser to provide functionality based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n\n  /**\n   * Metadata of block blob.\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Access conditions headers.\n   */\n  conditions?: BlobRequestConditions;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n\n  /**\n   * Access tier.\n   * More Details - https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n}\n/**\n * Option interface for {@link BlockBlobClient.uploadFile} and {@link BlockBlobClient.uploadSeekableStream}.\n */\nexport interface BlockBlobParallelUploadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Destination block blob size in bytes.\n   */\n  blockSize?: number;\n\n  /**\n   * Blob size threshold in bytes to start concurrency uploading.\n   * Default value is 256MB, blob size less than this option will\n   * be uploaded via one I/O operation without concurrency.\n   * You can customize a value less equal than the default value.\n   */\n  maxSingleShotSize?: number;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Blob HTTP Headers. A common header to set is\n   * `blobContentType`, enabling the browser to provide\n   * functionality based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n\n  /**\n   * Metadata of block blob.\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Access conditions headers.\n   */\n  conditions?: BlobRequestConditions;\n\n  /**\n   * Concurrency of parallel uploading. Must be greater than or equal to 0.\n   */\n  concurrency?: number;\n\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n\n  /**\n   * Access tier.\n   * More Details - https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n}\n\n/**\n * Response type for {@link BlockBlobClient.uploadFile}, {@link BlockBlobClient.uploadStream}, and\n * {@link BlockBlobClient.uploadBrowserDate}.\n */\nexport type BlobUploadCommonResponse = WithResponse<BlockBlobUploadHeaders>;\n\n/**\n * BlockBlobClient defines a set of operations applicable to block blobs.\n */\nexport class BlockBlobClient extends BlobClient {\n  /**\n   * blobContext provided by protocol layer.\n   *\n   * Note. Ideally BlobClient should set BlobClient.blobContext to protected. However, API\n   * extractor has issue blocking that. Here we redecelare _blobContext in BlockBlobClient.\n   */\n  private _blobContext: StorageBlob;\n\n  /**\n   * blockBlobContext provided by protocol layer.\n   */\n  private blockBlobContext: BlockBlob;\n\n  /**\n   *\n   * Creates an instance of BlockBlobClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of BlockBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage block blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of BlockBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage block blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      if (blobNameOrOptions && typeof blobNameOrOptions !== \"string\") {\n        options = blobNameOrOptions as StoragePipelineOptions;\n      }\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey,\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\",\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(url, pipeline);\n    this.blockBlobContext = this.storageClientContext.blockBlob;\n    this._blobContext = this.storageClientContext.blob;\n  }\n\n  /**\n   * Creates a new BlockBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a URL to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new BlockBlobClient object identical to the source but with the specified snapshot timestamp.\n   */\n  public withSnapshot(snapshot: string): BlockBlobClient {\n    return new BlockBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot,\n      ),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Quick query for a JSON or CSV formatted blob.\n   *\n   * Example usage (Node.js):\n   *\n   * ```js\n   * // Query and convert a blob to a string\n   * const queryBlockBlobResponse = await blockBlobClient.query(\"select * from BlobStorage\");\n   * const downloaded = (await streamToBuffer(queryBlockBlobResponse.readableStreamBody)).toString();\n   * console.log(\"Query blob content:\", downloaded);\n   *\n   * async function streamToBuffer(readableStream) {\n   *   return new Promise((resolve, reject) => {\n   *     const chunks = [];\n   *     readableStream.on(\"data\", (data) => {\n   *       chunks.push(typeof data === \"string\" ? Buffer.from(data) : data);\n   *     });\n   *     readableStream.on(\"end\", () => {\n   *       resolve(Buffer.concat(chunks));\n   *     });\n   *     readableStream.on(\"error\", reject);\n   *   });\n   * }\n   * ```\n   *\n   * @param query -\n   * @param options -\n   */\n  public async query(\n    query: string,\n    options: BlockBlobQueryOptions = {},\n  ): Promise<BlobDownloadResponseModel> {\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    if (!isNode) {\n      throw new Error(\"This operation currently is only supported in Node.js.\");\n    }\n\n    return tracingClient.withSpan(\"BlockBlobClient-query\", options, async (updatedOptions) => {\n      const response = assertResponse<BlobQueryResponseInternal, BlobQueryHeaders>(\n        await this._blobContext.query({\n          abortSignal: options.abortSignal,\n          queryRequest: {\n            queryType: \"SQL\",\n            expression: query,\n            inputSerialization: toQuerySerialization(options.inputTextConfiguration),\n            outputSerialization: toQuerySerialization(options.outputTextConfiguration),\n          },\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n      return new BlobQueryResponse(response, {\n        abortSignal: options.abortSignal,\n        onProgress: options.onProgress,\n        onError: options.onError,\n      });\n    });\n  }\n\n  /**\n   * Creates a new block blob, or updates the content of an existing block blob.\n   * Updating an existing block blob overwrites any existing metadata on the blob.\n   * Partial updates are not supported; the content of the existing blob is\n   * overwritten with the new content. To perform a partial update of a block blob's,\n   * use {@link stageBlock} and {@link commitBlockList}.\n   *\n   * This is a non-parallel uploading method, please use {@link uploadFile},\n   * {@link uploadStream} or {@link uploadBrowserData} for better performance\n   * with concurrency uploading.\n   *\n   * @see https://learn.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param body - Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param contentLength - Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param options - Options to the Block Blob Upload operation.\n   * @returns Response data for the Block Blob Upload operation.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   * const uploadBlobResponse = await blockBlobClient.upload(content, content.length);\n   * ```\n   */\n  public async upload(\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobUploadOptions = {},\n  ): Promise<BlockBlobUploadResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlockBlobClient-upload\", options, async (updatedOptions) => {\n      return assertResponse<BlockBlobUploadHeaders, BlockBlobUploadHeaders>(\n        await this.blockBlobContext.upload(contentLength, body, {\n          abortSignal: options.abortSignal,\n          blobHttpHeaders: options.blobHTTPHeaders,\n          leaseAccessConditions: options.conditions,\n          metadata: options.metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          requestOptions: {\n            onUploadProgress: options.onProgress,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n          immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n          legalHold: options.legalHold,\n          tier: toAccessTier(options.tier),\n          blobTagsString: toBlobTagsString(options.tags),\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Creates a new Block Blob where the contents of the blob are read from a given URL.\n   * This API is supported beginning with the 2020-04-08 version. Partial updates\n   * are not supported with Put Blob from URL; the content of an existing blob is overwritten with\n   * the content of the new blob.  To perform partial updates to a block blob’s contents using a\n   * source URL, use {@link stageBlockFromURL} and {@link commitBlockList}.\n   *\n   * @param sourceURL - Specifies the URL of the blob. The value\n   *                           may be a URL of up to 2 KB in length that specifies a blob.\n   *                           The value should be URL-encoded as it would appear\n   *                           in a request URI. The source blob must either be public\n   *                           or must be authenticated via a shared access signature.\n   *                           If the source blob is public, no authentication is required\n   *                           to perform the operation. Here are some examples of source object URLs:\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param options - Optional parameters.\n   */\n\n  public async syncUploadFromURL(\n    sourceURL: string,\n    options: BlockBlobSyncUploadFromURLOptions = {},\n  ): Promise<BlockBlobPutBlobFromUrlResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"BlockBlobClient-syncUploadFromURL\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<BlockBlobPutBlobFromUrlHeaders, BlockBlobPutBlobFromUrlHeaders>(\n          await this.blockBlobContext.putBlobFromUrl(0, sourceURL, {\n            ...options,\n            blobHttpHeaders: options.blobHTTPHeaders,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            sourceModifiedAccessConditions: {\n              sourceIfMatch: options.sourceConditions?.ifMatch,\n              sourceIfModifiedSince: options.sourceConditions?.ifModifiedSince,\n              sourceIfNoneMatch: options.sourceConditions?.ifNoneMatch,\n              sourceIfUnmodifiedSince: options.sourceConditions?.ifUnmodifiedSince,\n              sourceIfTags: options.sourceConditions?.tagConditions,\n            },\n            cpkInfo: options.customerProvidedKey,\n            copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n            tier: toAccessTier(options.tier),\n            blobTagsString: toBlobTagsString(options.tags),\n            copySourceTags: options.copySourceTags,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Uploads the specified block to the block blob's \"staging area\" to be later\n   * committed by a call to commitBlockList.\n   * @see https://learn.microsoft.com/rest/api/storageservices/put-block\n   *\n   * @param blockId - A 64-byte value that is base64-encoded\n   * @param body - Data to upload to the staging area.\n   * @param contentLength - Number of bytes to upload.\n   * @param options - Options to the Block Blob Stage Block operation.\n   * @returns Response data for the Block Blob Stage Block operation.\n   */\n  public async stageBlock(\n    blockId: string,\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobStageBlockOptions = {},\n  ): Promise<BlockBlobStageBlockResponse> {\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlockBlobClient-stageBlock\", options, async (updatedOptions) => {\n      return assertResponse<BlockBlobStageBlockHeaders, BlockBlobStageBlockHeaders>(\n        await this.blockBlobContext.stageBlock(blockId, contentLength, body, {\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          requestOptions: {\n            onUploadProgress: options.onProgress,\n          },\n          transactionalContentMD5: options.transactionalContentMD5,\n          transactionalContentCrc64: options.transactionalContentCrc64,\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * The Stage Block From URL operation creates a new block to be committed as part\n   * of a blob where the contents are read from a URL.\n   * This API is available starting in version 2018-03-28.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/put-block-from-url\n   *\n   * @param blockId - A 64-byte value that is base64-encoded\n   * @param sourceURL - Specifies the URL of the blob. The value\n   *                           may be a URL of up to 2 KB in length that specifies a blob.\n   *                           The value should be URL-encoded as it would appear\n   *                           in a request URI. The source blob must either be public\n   *                           or must be authenticated via a shared access signature.\n   *                           If the source blob is public, no authentication is required\n   *                           to perform the operation. Here are some examples of source object URLs:\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param offset - From which position of the blob to download, greater than or equal to 0\n   * @param count - How much data to be downloaded, greater than 0. Will download to the end when undefined\n   * @param options - Options to the Block Blob Stage Block From URL operation.\n   * @returns Response data for the Block Blob Stage Block From URL operation.\n   */\n  public async stageBlockFromURL(\n    blockId: string,\n    sourceURL: string,\n    offset: number = 0,\n    count?: number,\n    options: BlockBlobStageBlockFromURLOptions = {},\n  ): Promise<BlockBlobStageBlockFromURLResponse> {\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"BlockBlobClient-stageBlockFromURL\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<BlockBlobStageBlockFromURLHeaders, BlockBlobStageBlockFromURLHeaders>(\n          await this.blockBlobContext.stageBlockFromURL(blockId, 0, sourceURL, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            sourceContentMD5: options.sourceContentMD5,\n            sourceContentCrc64: options.sourceContentCrc64,\n            sourceRange: offset === 0 && !count ? undefined : rangeToString({ offset, count }),\n            cpkInfo: options.customerProvidedKey,\n            encryptionScope: options.encryptionScope,\n            copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Writes a blob by specifying the list of block IDs that make up the blob.\n   * In order to be written as part of a blob, a block must have been successfully written\n   * to the server in a prior {@link stageBlock} operation. You can call {@link commitBlockList} to\n   * update a blob by uploading only those blocks that have changed, then committing the new and existing\n   * blocks together. Any blocks not specified in the block list and permanently deleted.\n   * @see https://learn.microsoft.com/rest/api/storageservices/put-block-list\n   *\n   * @param blocks -  Array of 64-byte value that is base64-encoded\n   * @param options - Options to the Block Blob Commit Block List operation.\n   * @returns Response data for the Block Blob Commit Block List operation.\n   */\n  public async commitBlockList(\n    blocks: string[],\n    options: BlockBlobCommitBlockListOptions = {},\n  ): Promise<BlockBlobCommitBlockListResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"BlockBlobClient-commitBlockList\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<BlockBlobCommitBlockListHeaders, BlockBlobCommitBlockListHeaders>(\n          await this.blockBlobContext.commitBlockList(\n            { latest: blocks },\n            {\n              abortSignal: options.abortSignal,\n              blobHttpHeaders: options.blobHTTPHeaders,\n              leaseAccessConditions: options.conditions,\n              metadata: options.metadata,\n              modifiedAccessConditions: {\n                ...options.conditions,\n                ifTags: options.conditions?.tagConditions,\n              },\n              cpkInfo: options.customerProvidedKey,\n              encryptionScope: options.encryptionScope,\n              immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n              immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n              legalHold: options.legalHold,\n              tier: toAccessTier(options.tier),\n              blobTagsString: toBlobTagsString(options.tags),\n              tracingOptions: updatedOptions.tracingOptions,\n            },\n          ),\n        );\n      },\n    );\n  }\n\n  /**\n   * Returns the list of blocks that have been uploaded as part of a block blob\n   * using the specified block list filter.\n   * @see https://learn.microsoft.com/rest/api/storageservices/get-block-list\n   *\n   * @param listType - Specifies whether to return the list of committed blocks,\n   *                                        the list of uncommitted blocks, or both lists together.\n   * @param options - Options to the Block Blob Get Block List operation.\n   * @returns Response data for the Block Blob Get Block List operation.\n   */\n  public async getBlockList(\n    listType: BlockListType,\n    options: BlockBlobGetBlockListOptions = {},\n  ): Promise<BlockBlobGetBlockListResponse> {\n    return tracingClient.withSpan(\n      \"BlockBlobClient-getBlockList\",\n      options,\n      async (updatedOptions) => {\n        const res = assertResponse<\n          BlockBlobGetBlockListResponseInternal,\n          BlockBlobGetBlockListHeaders\n        >(\n          await this.blockBlobContext.getBlockList(listType, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        if (!res.committedBlocks) {\n          res.committedBlocks = [];\n        }\n\n        if (!res.uncommittedBlocks) {\n          res.uncommittedBlocks = [];\n        }\n\n        return res;\n      },\n    );\n  }\n\n  // High level functions\n\n  /**\n   * Uploads a Buffer(Node.js)/Blob(browsers)/ArrayBuffer/ArrayBufferView object to a BlockBlob.\n   *\n   * When data length is no more than the specifiled {@link BlockBlobParallelUploadOptions.maxSingleShotSize} (default is\n   * {@link BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}), this method will use 1 {@link upload} call to finish the upload.\n   * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call {@link commitBlockList}\n   * to commit the block list.\n   *\n   * A common {@link BlockBlobParallelUploadOptions.blobHTTPHeaders} option to set is\n   * `blobContentType`, enabling the browser to provide\n   * functionality based on file type.\n   *\n   * @param data - Buffer(Node.js), Blob, ArrayBuffer or ArrayBufferView\n   * @param options -\n   */\n  public async uploadData(\n    data: Buffer | Blob | ArrayBuffer | ArrayBufferView,\n    options: BlockBlobParallelUploadOptions = {},\n  ): Promise<BlobUploadCommonResponse> {\n    return tracingClient.withSpan(\"BlockBlobClient-uploadData\", options, async (updatedOptions) => {\n      if (isNode) {\n        let buffer: Buffer;\n        if (data instanceof Buffer) {\n          buffer = data;\n        } else if (data instanceof ArrayBuffer) {\n          buffer = Buffer.from(data);\n        } else {\n          data = data as ArrayBufferView;\n          buffer = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n        }\n\n        return this.uploadSeekableInternal(\n          (offset: number, size: number): Buffer => buffer.slice(offset, offset + size),\n          buffer.byteLength,\n          updatedOptions,\n        );\n      } else {\n        const browserBlob = new Blob([data]);\n        return this.uploadSeekableInternal(\n          (offset: number, size: number): Blob => browserBlob.slice(offset, offset + size),\n          browserBlob.size,\n          updatedOptions,\n        );\n      }\n    });\n  }\n\n  /**\n   * ONLY AVAILABLE IN BROWSERS.\n   *\n   * Uploads a browser Blob/File/ArrayBuffer/ArrayBufferView object to block blob.\n   *\n   * When buffer length lesser than or equal to 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call\n   * {@link commitBlockList} to commit the block list.\n   *\n   * A common {@link BlockBlobParallelUploadOptions.blobHTTPHeaders} option to set is\n   * `blobContentType`, enabling the browser to provide\n   * functionality based on file type.\n   *\n   * @deprecated Use {@link uploadData} instead.\n   *\n   * @param browserData - Blob, File, ArrayBuffer or ArrayBufferView\n   * @param options - Options to upload browser data.\n   * @returns Response data for the Blob Upload operation.\n   */\n  public async uploadBrowserData(\n    browserData: Blob | ArrayBuffer | ArrayBufferView,\n    options: BlockBlobParallelUploadOptions = {},\n  ): Promise<BlobUploadCommonResponse> {\n    return tracingClient.withSpan(\n      \"BlockBlobClient-uploadBrowserData\",\n      options,\n      async (updatedOptions) => {\n        const browserBlob = new Blob([browserData]);\n        return this.uploadSeekableInternal(\n          (offset: number, size: number): Blob => browserBlob.slice(offset, offset + size),\n          browserBlob.size,\n          updatedOptions,\n        );\n      },\n    );\n  }\n\n  /**\n   *\n   * Uploads data to block blob. Requires a bodyFactory as the data source,\n   * which need to return a {@link HttpRequestBody} object with the offset and size provided.\n   *\n   * When data length is no more than the specified {@link BlockBlobParallelUploadOptions.maxSingleShotSize} (default is\n   * {@link BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}), this method will use 1 {@link upload} call to finish the upload.\n   * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call {@link commitBlockList}\n   * to commit the block list.\n   *\n   * @param bodyFactory -\n   * @param size - size of the data to upload.\n   * @param options - Options to Upload to Block Blob operation.\n   * @returns Response data for the Blob Upload operation.\n   */\n  private async uploadSeekableInternal(\n    bodyFactory: (offset: number, size: number) => HttpRequestBody,\n    size: number,\n    options: BlockBlobParallelUploadOptions = {},\n  ): Promise<BlobUploadCommonResponse> {\n    let blockSize = options.blockSize ?? 0;\n    if (blockSize < 0 || blockSize > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n      throw new RangeError(\n        `blockSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES}`,\n      );\n    }\n\n    const maxSingleShotSize = options.maxSingleShotSize ?? BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;\n\n    if (maxSingleShotSize < 0 || maxSingleShotSize > BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES) {\n      throw new RangeError(\n        `maxSingleShotSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}`,\n      );\n    }\n\n    if (blockSize === 0) {\n      if (size > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES * BLOCK_BLOB_MAX_BLOCKS) {\n        throw new RangeError(`${size} is too larger to upload to a block blob.`);\n      }\n      if (size > maxSingleShotSize) {\n        blockSize = Math.ceil(size / BLOCK_BLOB_MAX_BLOCKS);\n        if (blockSize < DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES) {\n          blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n        }\n      }\n    }\n    if (!options.blobHTTPHeaders) {\n      options.blobHTTPHeaders = {};\n    }\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\n      \"BlockBlobClient-uploadSeekableInternal\",\n      options,\n      async (updatedOptions) => {\n        if (size <= maxSingleShotSize) {\n          return assertResponse(await this.upload(bodyFactory(0, size), size, updatedOptions));\n        }\n\n        const numBlocks: number = Math.floor((size - 1) / blockSize) + 1;\n        if (numBlocks > BLOCK_BLOB_MAX_BLOCKS) {\n          throw new RangeError(\n            `The buffer's size is too big or the BlockSize is too small;` +\n              `the number of blocks must be <= ${BLOCK_BLOB_MAX_BLOCKS}`,\n          );\n        }\n\n        const blockList: string[] = [];\n        const blockIDPrefix = randomUUID();\n        let transferProgress: number = 0;\n\n        const batch = new Batch(options.concurrency);\n        for (let i = 0; i < numBlocks; i++) {\n          batch.addOperation(async (): Promise<any> => {\n            const blockID = generateBlockID(blockIDPrefix, i);\n            const start = blockSize * i;\n            const end = i === numBlocks - 1 ? size : start + blockSize;\n            const contentLength = end - start;\n            blockList.push(blockID);\n            await this.stageBlock(blockID, bodyFactory(start, contentLength), contentLength, {\n              abortSignal: options.abortSignal,\n              conditions: options.conditions,\n              encryptionScope: options.encryptionScope,\n              tracingOptions: updatedOptions.tracingOptions,\n            });\n            // Update progress after block is successfully uploaded to server, in case of block trying\n            // TODO: Hook with convenience layer progress event in finer level\n            transferProgress += contentLength;\n            if (options.onProgress) {\n              options.onProgress!({\n                loadedBytes: transferProgress,\n              });\n            }\n          });\n        }\n        await batch.do();\n\n        return this.commitBlockList(blockList, updatedOptions);\n      },\n    );\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Uploads a local file in blocks to a block blob.\n   *\n   * When file size lesser than or equal to 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n   * to commit the block list.\n   *\n   * @param filePath - Full path of local file\n   * @param options - Options to Upload to Block Blob operation.\n   * @returns Response data for the Blob Upload operation.\n   */\n  public async uploadFile(\n    filePath: string,\n    options: BlockBlobParallelUploadOptions = {},\n  ): Promise<BlobUploadCommonResponse> {\n    return tracingClient.withSpan(\"BlockBlobClient-uploadFile\", options, async (updatedOptions) => {\n      const size = (await fsStat(filePath)).size;\n      return this.uploadSeekableInternal(\n        (offset, count) => {\n          return () =>\n            fsCreateReadStream(filePath, {\n              autoClose: true,\n              end: count ? offset + count - 1 : Infinity,\n              start: offset,\n            });\n        },\n        size,\n        {\n          ...options,\n          tracingOptions: updatedOptions.tracingOptions,\n        },\n      );\n    });\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Uploads a Node.js Readable stream into block blob.\n   *\n   * PERFORMANCE IMPROVEMENT TIPS:\n   * * Input stream highWaterMark is better to set a same value with bufferSize\n   *    parameter, which will avoid Buffer.concat() operations.\n   *\n   * @param stream - Node.js Readable stream\n   * @param bufferSize - Size of every buffer allocated, also the block size in the uploaded block blob. Default value is 8MB\n   * @param maxConcurrency -  Max concurrency indicates the max number of buffers that can be allocated,\n   *                                 positive correlation with max uploading concurrency. Default value is 5\n   * @param options - Options to Upload Stream to Block Blob operation.\n   * @returns Response data for the Blob Upload operation.\n   */\n  public async uploadStream(\n    stream: Readable,\n    bufferSize: number = DEFAULT_BLOCK_BUFFER_SIZE_BYTES,\n    maxConcurrency: number = 5,\n    options: BlockBlobUploadStreamOptions = {},\n  ): Promise<BlobUploadCommonResponse> {\n    if (!options.blobHTTPHeaders) {\n      options.blobHTTPHeaders = {};\n    }\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\n      \"BlockBlobClient-uploadStream\",\n      options,\n      async (updatedOptions) => {\n        let blockNum = 0;\n        const blockIDPrefix = randomUUID();\n        let transferProgress: number = 0;\n        const blockList: string[] = [];\n\n        const scheduler = new BufferScheduler(\n          stream,\n          bufferSize,\n          maxConcurrency,\n          async (body, length) => {\n            const blockID = generateBlockID(blockIDPrefix, blockNum);\n            blockList.push(blockID);\n            blockNum++;\n\n            await this.stageBlock(blockID, body, length, {\n              customerProvidedKey: options.customerProvidedKey,\n              conditions: options.conditions,\n              encryptionScope: options.encryptionScope,\n              tracingOptions: updatedOptions.tracingOptions,\n            });\n\n            // Update progress after block is successfully uploaded to server, in case of block trying\n            transferProgress += length;\n            if (options.onProgress) {\n              options.onProgress({ loadedBytes: transferProgress });\n            }\n          },\n          // concurrency should set a smaller value than maxConcurrency, which is helpful to\n          // reduce the possibility when a outgoing handler waits for stream data, in\n          // this situation, outgoing handlers are blocked.\n          // Outgoing queue shouldn't be empty.\n          Math.ceil((maxConcurrency / 4) * 3),\n        );\n        await scheduler.do();\n\n        return assertResponse(\n          await this.commitBlockList(blockList, {\n            ...options,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n}\n\n/**\n * Options to configure the {@link PageBlobClient.create} operation.\n */\nexport interface PageBlobCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when creating a page blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * A user-controlled value that can be used to track requests.\n   * The value must be between 0 and 2^63 - 1. The default value is 0.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * HTTP headers to set when creating a page blob.\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Access tier.\n   * More Details - https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: PremiumPageBlobTier | string;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.createIfNotExists} operation.\n */\nexport interface PageBlobCreateIfNotExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A user-controlled value that can be used to track requests.\n   * The value must be between 0 and 2^63 - 1. The default value is 0.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * HTTP headers to set when creating a page blob.\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Access tier.\n   * More Details - https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: PremiumPageBlobTier | string;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.uploadPages} operation.\n */\nexport interface PageBlobUploadPagesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when uploading pages.\n   */\n  conditions?: PageBlobRequestConditions;\n  /**\n   * Callback to receive events on the progress of upload pages operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * An MD5 hash of the content. This hash is used to verify the integrity of the content during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the content. This hash is used to verify the integrity of the content during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.clearPages} operation.\n */\nexport interface PageBlobClearPagesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when clearing pages.\n   */\n  conditions?: PageBlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.getPageRanges} operation.\n */\nexport interface PageBlobGetPageRangesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure page blob - get page ranges segment operations.\n *\n * See:\n * - {@link PageBlobClient.listPageRangesSegment}\n * - {@link PageBlobClient.listPageRangeItemSegments}\n * - {@link PageBlobClient.listPageRangeItems}\n */\ninterface PageBlobListPageRangesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.listPageRanges} operation.\n */\nexport interface PageBlobListPageRangesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.getRangesDiff} operation.\n */\nexport interface PageBlobGetPageRangesDiffOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges diff.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * (unused)\n   */\n  range?: string;\n}\n\n/**\n * Options to configure page blob - get page ranges diff segment operations.\n *\n * See:\n * - {@link PageBlobClient.listPageRangesDiffSegment}\n * - {@link PageBlobClient.listPageRangeDiffItemSegments}\n * - {@link PageBlobClient.listPageRangeDiffItems}\n */\ninterface PageBlobListPageRangesDiffSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.listPageRangesDiff} operation.\n */\nexport interface PageBlobListPageRangesDiffOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges diff.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure {@link PageBlobClient.resize} operation.\n */\nexport interface PageBlobResizeOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when resizing a page blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure {@link PageBlobClient.updateSequenceNumber} operation.\n */\nexport interface PageBlobUpdateSequenceNumberOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when updating sequence number.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure {@link PageBlobClient.startCopyIncremental} operation.\n */\nexport interface PageBlobStartCopyIncrementalOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when starting a copy incremental operation.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure {@link PageBlobClient.uploadPagesFromURL} operation.\n */\nexport interface PageBlobUploadPagesFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when updating sequence number.\n   */\n  conditions?: PageBlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: MatchConditions & ModificationConditions;\n  /**\n   * An MD5 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n}\n\n/**\n * Contains response data for the {@link PageBlobClient.createIfNotExists} operation.\n */\nexport interface PageBlobCreateIfNotExistsResponse extends PageBlobCreateResponse {\n  /**\n   * Indicate whether the blob is successfully created. Is false when the blob is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * PageBlobClient defines a set of operations applicable to page blobs.\n */\nexport class PageBlobClient extends BlobClient {\n  /**\n   * pageBlobsContext provided by protocol layer.\n   */\n  private pageBlobContext: PageBlob;\n\n  /**\n   *\n   * Creates an instance of PageBlobClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of PageBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A Client string pointing to Azure Storage page blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of PageBlobClient.\n   *\n   * @param url - A URL string pointing to Azure Storage page blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\".\n   *                     You can append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey,\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\",\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(url, pipeline);\n    this.pageBlobContext = this.storageClientContext.pageBlob;\n  }\n\n  /**\n   * Creates a new PageBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new PageBlobClient object identical to the source but with the specified snapshot timestamp.\n   */\n  public withSnapshot(snapshot: string): PageBlobClient {\n    return new PageBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot,\n      ),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * Creates a page blob of the specified length. Call uploadPages to upload data\n   * data to a page blob.\n   * @see https://learn.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param size - size of the page blob.\n   * @param options - Options to the Page Blob Create operation.\n   * @returns Response data for the Page Blob Create operation.\n   */\n  public async create(\n    size: number,\n    options: PageBlobCreateOptions = {},\n  ): Promise<PageBlobCreateResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"PageBlobClient-create\", options, async (updatedOptions) => {\n      return assertResponse<PageBlobCreateHeaders, PageBlobCreateHeaders>(\n        await this.pageBlobContext.create(0, size, {\n          abortSignal: options.abortSignal,\n          blobHttpHeaders: options.blobHTTPHeaders,\n          blobSequenceNumber: options.blobSequenceNumber,\n          leaseAccessConditions: options.conditions,\n          metadata: options.metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n          immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n          legalHold: options.legalHold,\n          tier: toAccessTier(options.tier),\n          blobTagsString: toBlobTagsString(options.tags),\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Creates a page blob of the specified length. Call uploadPages to upload data\n   * data to a page blob. If the blob with the same name already exists, the content\n   * of the existing blob will remain unchanged.\n   * @see https://learn.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param size - size of the page blob.\n   * @param options -\n   */\n  public async createIfNotExists(\n    size: number,\n    options: PageBlobCreateIfNotExistsOptions = {},\n  ): Promise<PageBlobCreateIfNotExistsResponse> {\n    return tracingClient.withSpan(\n      \"PageBlobClient-createIfNotExists\",\n      options,\n      async (updatedOptions) => {\n        try {\n          const conditions = { ifNoneMatch: ETagAny };\n          const res = assertResponse(\n            await this.create(size, {\n              ...options,\n              conditions,\n              tracingOptions: updatedOptions.tracingOptions,\n            }),\n          );\n          return {\n            succeeded: true,\n            ...res,\n            _response: res._response, // _response is made non-enumerable\n          };\n        } catch (e: any) {\n          if (e.details?.errorCode === \"BlobAlreadyExists\") {\n            return {\n              succeeded: false,\n              ...e.response?.parsedHeaders,\n              _response: e.response,\n            };\n          }\n\n          throw e;\n        }\n      },\n    );\n  }\n\n  /**\n   * Writes 1 or more pages to the page blob. The start and end offsets must be a multiple of 512.\n   * @see https://learn.microsoft.com/rest/api/storageservices/put-page\n   *\n   * @param body - Data to upload\n   * @param offset - Offset of destination page blob\n   * @param count - Content length of the body, also number of bytes to be uploaded\n   * @param options - Options to the Page Blob Upload Pages operation.\n   * @returns Response data for the Page Blob Upload Pages operation.\n   */\n  public async uploadPages(\n    body: HttpRequestBody,\n    offset: number,\n    count: number,\n    options: PageBlobUploadPagesOptions = {},\n  ): Promise<PageBlobUploadPagesResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"PageBlobClient-uploadPages\", options, async (updatedOptions) => {\n      return assertResponse<PageBlobUploadPagesHeaders, PageBlobUploadPagesHeaders>(\n        await this.pageBlobContext.uploadPages(count, body, {\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          requestOptions: {\n            onUploadProgress: options.onProgress,\n          },\n          range: rangeToString({ offset, count }),\n          sequenceNumberAccessConditions: options.conditions,\n          transactionalContentMD5: options.transactionalContentMD5,\n          transactionalContentCrc64: options.transactionalContentCrc64,\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob where the\n   * contents are read from a URL.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/put-page-from-url\n   *\n   * @param sourceURL - Specify a URL to the copy source, Shared Access Signature(SAS) maybe needed for authentication\n   * @param sourceOffset - The source offset to copy from. Pass 0 to copy from the beginning of source page blob\n   * @param destOffset - Offset of destination page blob\n   * @param count - Number of bytes to be uploaded from source page blob\n   * @param options -\n   */\n  public async uploadPagesFromURL(\n    sourceURL: string,\n    sourceOffset: number,\n    destOffset: number,\n    count: number,\n    options: PageBlobUploadPagesFromURLOptions = {},\n  ): Promise<PageBlobUploadPagesFromURLResponse> {\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"PageBlobClient-uploadPagesFromURL\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<PageBlobUploadPagesFromURLHeaders, PageBlobUploadPagesFromURLHeaders>(\n          await this.pageBlobContext.uploadPagesFromURL(\n            sourceURL,\n            rangeToString({ offset: sourceOffset, count }),\n            0,\n            rangeToString({ offset: destOffset, count }),\n            {\n              abortSignal: options.abortSignal,\n              sourceContentMD5: options.sourceContentMD5,\n              sourceContentCrc64: options.sourceContentCrc64,\n              leaseAccessConditions: options.conditions,\n              sequenceNumberAccessConditions: options.conditions,\n              modifiedAccessConditions: {\n                ...options.conditions,\n                ifTags: options.conditions?.tagConditions,\n              },\n              sourceModifiedAccessConditions: {\n                sourceIfMatch: options.sourceConditions?.ifMatch,\n                sourceIfModifiedSince: options.sourceConditions?.ifModifiedSince,\n                sourceIfNoneMatch: options.sourceConditions?.ifNoneMatch,\n                sourceIfUnmodifiedSince: options.sourceConditions?.ifUnmodifiedSince,\n              },\n              cpkInfo: options.customerProvidedKey,\n              encryptionScope: options.encryptionScope,\n              copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n              tracingOptions: updatedOptions.tracingOptions,\n            },\n          ),\n        );\n      },\n    );\n  }\n\n  /**\n   * Frees the specified pages from the page blob.\n   * @see https://learn.microsoft.com/rest/api/storageservices/put-page\n   *\n   * @param offset - Starting byte position of the pages to clear.\n   * @param count - Number of bytes to clear.\n   * @param options - Options to the Page Blob Clear Pages operation.\n   * @returns Response data for the Page Blob Clear Pages operation.\n   */\n  public async clearPages(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobClearPagesOptions = {},\n  ): Promise<PageBlobClearPagesResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\"PageBlobClient-clearPages\", options, async (updatedOptions) => {\n      return assertResponse<PageBlobClearPagesHeaders, PageBlobClearPagesHeaders>(\n        await this.pageBlobContext.clearPages(0, {\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          range: rangeToString({ offset, count }),\n          sequenceNumberAccessConditions: options.conditions,\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Returns the list of valid page ranges for a page blob or snapshot of a page blob.\n   * @see https://learn.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param options - Options to the Page Blob Get Ranges operation.\n   * @returns Response data for the Page Blob Get Ranges operation.\n   */\n  public async getPageRanges(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobGetPageRangesOptions = {},\n  ): Promise<PageBlobGetPageRangesResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\n      \"PageBlobClient-getPageRanges\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          PageBlobGetPageRangesResponseInternal,\n          PageBlobGetPageRangesHeaders,\n          PageListInternal\n        >(\n          await this.pageBlobContext.getPageRanges({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            range: rangeToString({ offset, count }),\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n        return rangeResponseFromModel(response);\n      },\n    );\n  }\n\n  /**\n   * getPageRangesSegment returns a single segment of page ranges starting from the\n   * specified Marker. Use an empty Marker to start enumeration from the beginning.\n   * After getting a segment, process it, and then call getPageRangesSegment again\n   * (passing the the previously-returned Marker) to get the next segment.\n   * @see https://learn.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param options - Options to PageBlob Get Page Ranges Segment operation.\n   */\n  private async listPageRangesSegment(\n    offset: number = 0,\n    count?: number,\n    marker?: string,\n    options: PageBlobListPageRangesSegmentOptions = {},\n  ): Promise<PageBlobGetPageRangesResponseModel> {\n    return tracingClient.withSpan(\n      \"PageBlobClient-getPageRangesSegment\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          PageBlobGetPageRangesResponseInternal,\n          PageBlobGetPageRangesHeaders,\n          PageListInternal\n        >(\n          await this.pageBlobContext.getPageRanges({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            range: rangeToString({ offset, count }),\n            marker: marker,\n            maxPageSize: options.maxPageSize,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n  /**\n   * Returns an AsyncIterableIterator for {@link PageBlobGetPageRangesResponseModel}\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param marker - A string value that identifies the portion of\n   *                          the get of page ranges to be returned with the next getting operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          getting operation did not return all page ranges remaining within the current page.\n   *                          The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of get\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to List Page Ranges operation.\n   */\n  private async *listPageRangeItemSegments(\n    offset: number = 0,\n    count?: number,\n    marker?: string,\n    options: PageBlobListPageRangesSegmentOptions = {},\n  ): AsyncIterableIterator<PageBlobGetPageRangesResponseModel> {\n    let getPageRangeItemSegmentsResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        getPageRangeItemSegmentsResponse = await this.listPageRangesSegment(\n          offset,\n          count,\n          marker,\n          options,\n        );\n        marker = getPageRangeItemSegmentsResponse.continuationToken;\n        yield await getPageRangeItemSegmentsResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator of {@link PageRangeInfo} objects\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param options - Options to List Page Ranges operation.\n   */\n  private async *listPageRangeItems(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobListPageRangesSegmentOptions = {},\n  ): AsyncIterableIterator<PageRangeInfo> {\n    let marker: string | undefined;\n    for await (const getPageRangesSegment of this.listPageRangeItemSegments(\n      offset,\n      count,\n      marker,\n      options,\n    )) {\n      yield* ExtractPageRangeInfoItems(getPageRangesSegment);\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list of page ranges for a page blob.\n   * @see https://learn.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   *  .byPage() returns an async iterable iterator to list of page ranges for a page blob.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * // Get the pageBlobClient before you run these snippets,\n   * // Can be obtained from `blobServiceClient.getContainerClient(\"<your-container-name>\").getPageBlobClient(\"<your-blob-name>\");`\n   * let i = 1;\n   * for await (const pageRange of pageBlobClient.listPageRanges()) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = pageBlobClient.listPageRanges();\n   * let pageRangeItem = await iter.next();\n   * while (!pageRangeItem.done) {\n   *   console.log(`Page range ${i++}: ${pageRangeItem.value.start} - ${pageRangeItem.value.end}, IsClear: ${pageRangeItem.value.isClear}`);\n   *   pageRangeItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of pageBlobClient.listPageRanges().byPage({ maxPageSize: 20 })) {\n   *   for (const pageRange of response) {\n   *     console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = pageBlobClient.listPageRanges().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 page ranges\n   * for (const pageRange of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   *\n   * iterator = pageBlobClient.listPageRanges().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 page ranges\n   * for (const blob of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param options - Options to the Page Blob Get Ranges operation.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listPageRanges(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobListPageRangesOptions = {},\n  ): PagedAsyncIterableIterator<PageRangeInfo, PageBlobGetPageRangesResponseModel> {\n    options.conditions = options.conditions || {};\n    // AsyncIterableIterator to iterate over blobs\n    const iter = this.listPageRangeItems(offset, count, options);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listPageRangeItemSegments(offset, count, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...options,\n        });\n      },\n    };\n  }\n\n  /**\n   * Gets the collection of page ranges that differ between a specified snapshot and this page blob.\n   * @see https://learn.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page blob\n   * @param count - Number of bytes to get ranges diff.\n   * @param prevSnapshot - Timestamp of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   * @returns Response data for the Page Blob Get Page Range Diff operation.\n   */\n  public async getPageRangesDiff(\n    offset: number,\n    count: number,\n    prevSnapshot: string,\n    options: PageBlobGetPageRangesDiffOptions = {},\n  ): Promise<PageBlobGetPageRangesDiffResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\n      \"PageBlobClient-getPageRangesDiff\",\n      options,\n      async (updatedOptions) => {\n        const result = assertResponse<\n          PageBlobGetPageRangesDiffResponseInternal,\n          PageBlobGetPageRangesDiffHeaders,\n          PageListInternal\n        >(\n          await this.pageBlobContext.getPageRangesDiff({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            prevsnapshot: prevSnapshot,\n            range: rangeToString({ offset, count }),\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n        return rangeResponseFromModel(result);\n      },\n    );\n  }\n\n  /**\n   * getPageRangesDiffSegment returns a single segment of page ranges starting from the\n   * specified Marker for difference between previous snapshot and the target page blob.\n   * Use an empty Marker to start enumeration from the beginning.\n   * After getting a segment, process it, and then call getPageRangesDiffSegment again\n   * (passing the the previously-returned Marker) to get the next segment.\n   * @see https://learn.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshotOrUrl - Timestamp of snapshot to retrieve the difference or URL of snapshot to retrieve the difference.\n   * @param marker - A string value that identifies the portion of the get to be returned with the next get operation.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   */\n  private async listPageRangesDiffSegment(\n    offset: number,\n    count: number,\n    prevSnapshotOrUrl: string,\n    marker?: string,\n    options: PageBlobListPageRangesDiffSegmentOptions = {},\n  ): Promise<PageBlobGetPageRangesResponseModel> {\n    return tracingClient.withSpan(\n      \"PageBlobClient-getPageRangesDiffSegment\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          PageBlobGetPageRangesResponseInternal,\n          PageBlobGetPageRangesHeaders,\n          PageListInternal\n        >(\n          await this.pageBlobContext.getPageRangesDiff({\n            abortSignal: options?.abortSignal,\n            leaseAccessConditions: options?.conditions,\n            modifiedAccessConditions: {\n              ...options?.conditions,\n              ifTags: options?.conditions?.tagConditions,\n            },\n            prevsnapshot: prevSnapshotOrUrl,\n            range: rangeToString({\n              offset: offset,\n              count: count,\n            }),\n            marker: marker,\n            maxPageSize: options?.maxPageSize,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n  /**\n   * Returns an AsyncIterableIterator for {@link PageBlobGetPageRangesDiffResponseModel}\n   *\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshotOrUrl - Timestamp of snapshot to retrieve the difference or URL of snapshot to retrieve the difference.\n   * @param marker - A string value that identifies the portion of\n   *                          the get of page ranges to be returned with the next getting operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          getting operation did not return all page ranges remaining within the current page.\n   *                          The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of get\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   */\n  private async *listPageRangeDiffItemSegments(\n    offset: number,\n    count: number,\n    prevSnapshotOrUrl: string,\n    marker?: string,\n    options?: PageBlobListPageRangesDiffSegmentOptions,\n  ): AsyncIterableIterator<PageBlobGetPageRangesDiffResponseModel> {\n    let getPageRangeItemSegmentsResponse: PageBlobGetPageRangesResponseModel;\n    if (!!marker || marker === undefined) {\n      do {\n        getPageRangeItemSegmentsResponse = await this.listPageRangesDiffSegment(\n          offset,\n          count,\n          prevSnapshotOrUrl,\n          marker,\n          options,\n        );\n        marker = getPageRangeItemSegmentsResponse.continuationToken;\n        yield await getPageRangeItemSegmentsResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator of {@link PageRangeInfo} objects\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshotOrUrl - Timestamp of snapshot to retrieve the difference or URL of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   */\n  private async *listPageRangeDiffItems(\n    offset: number,\n    count: number,\n    prevSnapshotOrUrl: string,\n    options?: PageBlobListPageRangesDiffSegmentOptions,\n  ): AsyncIterableIterator<PageRangeInfo> {\n    let marker: string | undefined;\n    for await (const getPageRangesSegment of this.listPageRangeDiffItemSegments(\n      offset,\n      count,\n      prevSnapshotOrUrl,\n      marker,\n      options,\n    )) {\n      yield* ExtractPageRangeInfoItems(getPageRangesSegment);\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list of page ranges that differ between a specified snapshot and this page blob.\n   * @see https://learn.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   *  .byPage() returns an async iterable iterator to list of page ranges that differ between a specified snapshot and this page blob.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * // Get the pageBlobClient before you run these snippets,\n   * // Can be obtained from `blobServiceClient.getContainerClient(\"<your-container-name>\").getPageBlobClient(\"<your-blob-name>\");`\n   * let i = 1;\n   * for await (const pageRange of pageBlobClient.listPageRangesDiff()) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = pageBlobClient.listPageRangesDiff();\n   * let pageRangeItem = await iter.next();\n   * while (!pageRangeItem.done) {\n   *   console.log(`Page range ${i++}: ${pageRangeItem.value.start} - ${pageRangeItem.value.end}, IsClear: ${pageRangeItem.value.isClear}`);\n   *   pageRangeItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of pageBlobClient.listPageRangesDiff().byPage({ maxPageSize: 20 })) {\n   *   for (const pageRange of response) {\n   *     console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = pageBlobClient.listPageRangesDiff().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 page ranges\n   * for (const pageRange of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   *\n   * iterator = pageBlobClient.listPageRangesDiff().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 page ranges\n   * for (const blob of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshot - Timestamp of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Ranges operation.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listPageRangesDiff(\n    offset: number,\n    count: number,\n    prevSnapshot: string,\n    options: PageBlobListPageRangesDiffOptions = {},\n  ): PagedAsyncIterableIterator<PageRangeInfo, PageBlobGetPageRangesDiffResponseModel> {\n    options.conditions = options.conditions || {};\n\n    // AsyncIterableIterator to iterate over blobs\n    const iter = this.listPageRangeDiffItems(offset, count, prevSnapshot, {\n      ...options,\n    });\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listPageRangeDiffItemSegments(\n          offset,\n          count,\n          prevSnapshot,\n          settings.continuationToken,\n          {\n            maxPageSize: settings.maxPageSize,\n            ...options,\n          },\n        );\n      },\n    };\n  }\n\n  /**\n   * Gets the collection of page ranges that differ between a specified snapshot and this page blob for managed disks.\n   * @see https://learn.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page blob\n   * @param count - Number of bytes to get ranges diff.\n   * @param prevSnapshotUrl - URL of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   * @returns Response data for the Page Blob Get Page Range Diff operation.\n   */\n  public async getPageRangesDiffForManagedDisks(\n    offset: number,\n    count: number,\n    prevSnapshotUrl: string,\n    options: PageBlobGetPageRangesDiffOptions = {},\n  ): Promise<PageBlobGetPageRangesDiffResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\n      \"PageBlobClient-GetPageRangesDiffForManagedDisks\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          PageBlobGetPageRangesDiffResponseInternal,\n          PageBlobGetPageRangesDiffHeaders,\n          PageListInternal\n        >(\n          await this.pageBlobContext.getPageRangesDiff({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            prevSnapshotUrl,\n            range: rangeToString({ offset, count }),\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n        return rangeResponseFromModel(response);\n      },\n    );\n  }\n\n  /**\n   * Resizes the page blob to the specified size (which must be a multiple of 512).\n   * @see https://learn.microsoft.com/rest/api/storageservices/set-blob-properties\n   *\n   * @param size - Target size\n   * @param options - Options to the Page Blob Resize operation.\n   * @returns Response data for the Page Blob Resize operation.\n   */\n  public async resize(\n    size: number,\n    options: PageBlobResizeOptions = {},\n  ): Promise<PageBlobResizeResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\"PageBlobClient-resize\", options, async (updatedOptions) => {\n      return assertResponse<PageBlobResizeHeaders, PageBlobResizeHeaders>(\n        await this.pageBlobContext.resize(size, {\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Sets a page blob's sequence number.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n   *\n   * @param sequenceNumberAction - Indicates how the service should modify the blob's sequence number.\n   * @param sequenceNumber - Required if sequenceNumberAction is max or update\n   * @param options - Options to the Page Blob Update Sequence Number operation.\n   * @returns Response data for the Page Blob Update Sequence Number operation.\n   */\n  public async updateSequenceNumber(\n    sequenceNumberAction: SequenceNumberActionType,\n    sequenceNumber?: number,\n    options: PageBlobUpdateSequenceNumberOptions = {},\n  ): Promise<PageBlobUpdateSequenceNumberResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\n      \"PageBlobClient-updateSequenceNumber\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          PageBlobUpdateSequenceNumberHeaders,\n          PageBlobUpdateSequenceNumberHeaders\n        >(\n          await this.pageBlobContext.updateSequenceNumber(sequenceNumberAction, {\n            abortSignal: options.abortSignal,\n            blobSequenceNumber: sequenceNumber,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Begins an operation to start an incremental copy from one page blob's snapshot to this page blob.\n   * The snapshot is copied such that only the differential changes between the previously\n   * copied snapshot are transferred to the destination.\n   * The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual.\n   * @see https://learn.microsoft.com/rest/api/storageservices/incremental-copy-blob\n   * @see https://learn.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots\n   *\n   * @param copySource - Specifies the name of the source page blob snapshot. For example,\n   *                            https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param options - Options to the Page Blob Copy Incremental operation.\n   * @returns Response data for the Page Blob Copy Incremental operation.\n   */\n  public async startCopyIncremental(\n    copySource: string,\n    options: PageBlobStartCopyIncrementalOptions = {},\n  ): Promise<PageBlobCopyIncrementalResponse> {\n    return tracingClient.withSpan(\n      \"PageBlobClient-startCopyIncremental\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<PageBlobCopyIncrementalHeaders, PageBlobCopyIncrementalHeaders>(\n          await this.pageBlobContext.copyIncremental(copySource, {\n            abortSignal: options.abortSignal,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { ServiceSubmitBatchResponseModel } from \"./generatedModels\";\nimport { streamToBuffer2 } from \"./utils/utils.node\";\nimport { BATCH_MAX_PAYLOAD_IN_BYTES } from \"./utils/constants\";\n\nexport async function getBodyAsText(\n  batchResponse: ServiceSubmitBatchResponseModel,\n): Promise<string> {\n  let buffer = Buffer.alloc(BATCH_MAX_PAYLOAD_IN_BYTES);\n\n  const responseLength = await streamToBuffer2(\n    batchResponse.readableStreamBody as NodeJS.ReadableStream,\n    buffer,\n  );\n\n  // Slice the buffer to trim the empty ending.\n  buffer = buffer.slice(0, responseLength);\n\n  return buffer.toString();\n}\n\nexport function utf8ByteLength(str: string): number {\n  return Buffer.byteLength(str);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createHttpHeaders } from \"@azure/core-rest-pipeline\";\nimport { toHttpHeadersLike } from \"@azure/core-http-compat\";\n\nimport type { ServiceSubmitBatchResponseModel } from \"./generatedModels\";\nimport {\n  HTTP_VERSION_1_1,\n  HTTP_LINE_ENDING,\n  HeaderConstants,\n  HTTPURLConnection,\n} from \"./utils/constants\";\nimport { getBodyAsText } from \"./BatchUtils\";\nimport type { BatchSubRequest } from \"./BlobBatch\";\nimport type { BatchSubResponse, ParsedBatchResponse } from \"./BatchResponse\";\nimport { logger } from \"./log\";\n\nconst HTTP_HEADER_DELIMITER = \": \";\nconst SPACE_DELIMITER = \" \";\nconst NOT_FOUND = -1;\n\n/**\n * Util class for parsing batch response.\n */\nexport class BatchResponseParser {\n  private readonly batchResponse: ServiceSubmitBatchResponseModel;\n  private readonly responseBatchBoundary: string;\n  private readonly perResponsePrefix: string;\n  private readonly batchResponseEnding: string;\n  private readonly subRequests: Map<number, BatchSubRequest>;\n\n  constructor(\n    batchResponse: ServiceSubmitBatchResponseModel,\n    subRequests: Map<number, BatchSubRequest>,\n  ) {\n    if (!batchResponse || !batchResponse.contentType) {\n      // In special case(reported), server may return invalid content-type which could not be parsed.\n      throw new RangeError(\"batchResponse is malformed or doesn't contain valid content-type.\");\n    }\n\n    if (!subRequests || subRequests.size === 0) {\n      // This should be prevent during coding.\n      throw new RangeError(\"Invalid state: subRequests is not provided or size is 0.\");\n    }\n\n    this.batchResponse = batchResponse;\n    this.subRequests = subRequests;\n    this.responseBatchBoundary = this.batchResponse.contentType!.split(\"=\")[1];\n    this.perResponsePrefix = `--${this.responseBatchBoundary}${HTTP_LINE_ENDING}`;\n    this.batchResponseEnding = `--${this.responseBatchBoundary}--`;\n  }\n\n  // For example of response, please refer to https://learn.microsoft.com/en-us/rest/api/storageservices/blob-batch#response\n  public async parseBatchResponse(): Promise<ParsedBatchResponse> {\n    // When logic reach here, suppose batch request has already succeeded with 202, so we can further parse\n    // sub request's response.\n    if (this.batchResponse._response.status !== HTTPURLConnection.HTTP_ACCEPTED) {\n      throw new Error(\n        `Invalid state: batch request failed with status: '${this.batchResponse._response.status}'.`,\n      );\n    }\n\n    const responseBodyAsText = await getBodyAsText(this.batchResponse);\n\n    const subResponses = responseBodyAsText\n      .split(this.batchResponseEnding)[0] // string after ending is useless\n      .split(this.perResponsePrefix)\n      .slice(1); // string before first response boundary is useless\n    const subResponseCount = subResponses.length;\n\n    // Defensive coding in case of potential error parsing.\n    // Note: subResponseCount == 1 is special case where sub request is invalid.\n    // We try to prevent such cases through early validation, e.g. validate sub request count >= 1.\n    // While in unexpected sub request invalid case, we allow sub response to be parsed and return to user.\n    if (subResponseCount !== this.subRequests.size && subResponseCount !== 1) {\n      throw new Error(\"Invalid state: sub responses' count is not equal to sub requests' count.\");\n    }\n\n    const deserializedSubResponses: Array<BatchSubResponse> = new Array(subResponseCount);\n    let subResponsesSucceededCount: number = 0;\n    let subResponsesFailedCount: number = 0;\n\n    // Parse sub subResponses.\n    for (let index = 0; index < subResponseCount; index++) {\n      const subResponse = subResponses[index];\n      const deserializedSubResponse = {} as BatchSubResponse;\n      deserializedSubResponse.headers = toHttpHeadersLike(createHttpHeaders());\n\n      const responseLines = subResponse.split(`${HTTP_LINE_ENDING}`);\n      let subRespHeaderStartFound = false;\n      let subRespHeaderEndFound = false;\n      let subRespFailed = false;\n      let contentId = NOT_FOUND;\n\n      for (const responseLine of responseLines) {\n        if (!subRespHeaderStartFound) {\n          // Convention line to indicate content ID\n          if (responseLine.startsWith(HeaderConstants.CONTENT_ID)) {\n            contentId = parseInt(responseLine.split(HTTP_HEADER_DELIMITER)[1]);\n          }\n\n          // Http version line with status code indicates the start of sub request's response.\n          // Example: HTTP/1.1 202 Accepted\n          if (responseLine.startsWith(HTTP_VERSION_1_1)) {\n            subRespHeaderStartFound = true;\n\n            const tokens = responseLine.split(SPACE_DELIMITER);\n            deserializedSubResponse.status = parseInt(tokens[1]);\n            deserializedSubResponse.statusMessage = tokens.slice(2).join(SPACE_DELIMITER);\n          }\n\n          continue; // Skip convention headers not specifically for sub request i.e. Content-Type: application/http and Content-ID: *\n        }\n\n        if (responseLine.trim() === \"\") {\n          // Sub response's header start line already found, and the first empty line indicates header end line found.\n          if (!subRespHeaderEndFound) {\n            subRespHeaderEndFound = true;\n          }\n\n          continue; // Skip empty line\n        }\n\n        // Note: when code reach here, it indicates subRespHeaderStartFound == true\n        if (!subRespHeaderEndFound) {\n          if (responseLine.indexOf(HTTP_HEADER_DELIMITER) === -1) {\n            // Defensive coding to prevent from missing valuable lines.\n            throw new Error(\n              `Invalid state: find non-empty line '${responseLine}' without HTTP header delimiter '${HTTP_HEADER_DELIMITER}'.`,\n            );\n          }\n\n          // Parse headers of sub response.\n          const tokens = responseLine.split(HTTP_HEADER_DELIMITER);\n          deserializedSubResponse.headers.set(tokens[0], tokens[1]);\n          if (tokens[0] === HeaderConstants.X_MS_ERROR_CODE) {\n            deserializedSubResponse.errorCode = tokens[1];\n            subRespFailed = true;\n          }\n        } else {\n          // Assemble body of sub response.\n          if (!deserializedSubResponse.bodyAsText) {\n            deserializedSubResponse.bodyAsText = \"\";\n          }\n\n          deserializedSubResponse.bodyAsText += responseLine;\n        }\n      } // Inner for end\n\n      // The response will contain the Content-ID header for each corresponding subrequest response to use for tracking.\n      // The Content-IDs are set to a valid index in the subrequests we sent. In the status code 202 path, we could expect it\n      // to be 1-1 mapping from the [0, subRequests.size) to the Content-IDs returned. If not, we simply don't return that\n      // unexpected subResponse in the parsed reponse and we can always look it up in the raw response for debugging purpose.\n      if (\n        contentId !== NOT_FOUND &&\n        Number.isInteger(contentId) &&\n        contentId >= 0 &&\n        contentId < this.subRequests.size &&\n        deserializedSubResponses[contentId] === undefined\n      ) {\n        deserializedSubResponse._request = this.subRequests.get(contentId)!;\n        deserializedSubResponses[contentId] = deserializedSubResponse;\n      } else {\n        logger.error(\n          `subResponses[${index}] is dropped as the Content-ID is not found or invalid, Content-ID: ${contentId}`,\n        );\n      }\n\n      if (subRespFailed) {\n        subResponsesFailedCount++;\n      } else {\n        subResponsesSucceededCount++;\n      }\n    }\n\n    return {\n      subResponses: deserializedSubResponses,\n      subResponsesSucceededCount: subResponsesSucceededCount,\n      subResponsesFailedCount: subResponsesFailedCount,\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nenum MutexLockStatus {\n  LOCKED,\n  UNLOCKED,\n}\n\ntype Callback = (...args: any[]) => any;\n\n/**\n * An async mutex lock.\n */\nexport class Mutex {\n  /**\n   * Lock for a specific key. If the lock has been acquired by another customer, then\n   * will wait until getting the lock.\n   *\n   * @param key - lock key\n   */\n  public static async lock(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      if (this.keys[key] === undefined || this.keys[key] === MutexLockStatus.UNLOCKED) {\n        this.keys[key] = MutexLockStatus.LOCKED;\n        resolve();\n      } else {\n        this.onUnlockEvent(key, () => {\n          this.keys[key] = MutexLockStatus.LOCKED;\n          resolve();\n        });\n      }\n    });\n  }\n\n  /**\n   * Unlock a key.\n   *\n   * @param key -\n   */\n  public static async unlock(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      if (this.keys[key] === MutexLockStatus.LOCKED) {\n        this.emitUnlockEvent(key);\n      }\n      delete this.keys[key];\n      resolve();\n    });\n  }\n\n  private static keys: { [key: string]: MutexLockStatus } = {};\n  private static listeners: { [key: string]: Callback[] } = {};\n\n  private static onUnlockEvent(key: string, handler: Callback) {\n    if (this.listeners[key] === undefined) {\n      this.listeners[key] = [handler];\n    } else {\n      this.listeners[key].push(handler);\n    }\n  }\n\n  private static emitUnlockEvent(key: string) {\n    if (this.listeners[key] !== undefined && this.listeners[key].length > 0) {\n      const handler = this.listeners[key].shift();\n      setImmediate(() => {\n        handler!.call(this);\n      });\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { Tags } from \".\";\nimport type { BlobPropertiesInternal as BlobProperties } from \"./generated/src/models\";\nimport {\n  AppendBlobAppendBlockFromUrlHeaders,\n  AppendBlobAppendBlockHeaders,\n  AppendBlobCreateHeaders,\n  BlobAbortCopyFromURLHeaders,\n  BlobCopyFromURLHeaders,\n  BlobCreateSnapshotHeaders,\n  BlobDeleteHeaders,\n  BlobDeleteImmutabilityPolicyHeaders,\n  BlobDownloadResponse as BlobDownloadResponseInternal,\n  BlobDownloadHeaders,\n  BlobGetPropertiesHeaders,\n  BlobGetTagsHeaders,\n  BlobTags,\n  BlobQueryResponse as BlobQueryResponseInternal,\n  BlobQueryHeaders,\n  BlobSetHttpHeadersHeaders,\n  BlobSetImmutabilityPolicyHeaders,\n  BlobSetLegalHoldHeaders,\n  BlobSetMetadataHeaders,\n  BlobSetTagsHeaders,\n  BlobSetTierHeaders,\n  BlobStartCopyFromURLHeaders,\n  BlobUndeleteHeaders,\n  BlockBlobCommitBlockListHeaders,\n  BlockBlobGetBlockListResponse as BlockBlobGetBlockListResponseInternal,\n  BlockBlobGetBlockListHeaders,\n  BlockBlobPutBlobFromUrlHeaders,\n  BlockBlobStageBlockFromURLHeaders,\n  BlockBlobStageBlockHeaders,\n  BlockBlobUploadHeaders,\n  ContainerCreateHeaders,\n  ContainerDeleteHeaders,\n  ContainerGetAccessPolicyHeaders,\n  ContainerGetPropertiesHeaders,\n  ContainerListBlobFlatSegmentHeaders,\n  ContainerListBlobHierarchySegmentHeaders,\n  ContainerRenameHeaders,\n  ContainerSetAccessPolicyHeaders,\n  ContainerSetMetadataHeaders,\n  ContainerRestoreHeaders as ContainerUndeleteHeaders,\n  PageBlobClearPagesHeaders,\n  PageBlobCopyIncrementalHeaders,\n  PageBlobCreateHeaders,\n  PageBlobGetPageRangesDiffResponse as PageBlobGetPageRangesDiffResponseInternal,\n  PageBlobGetPageRangesDiffHeaders,\n  PageBlobGetPageRangesResponse as PageBlobGetPageRangesResponseInternal,\n  PageBlobGetPageRangesHeaders,\n  PageBlobResizeHeaders,\n  PageBlobUpdateSequenceNumberHeaders,\n  PageBlobUploadPagesFromURLHeaders,\n  PageBlobUploadPagesHeaders,\n  PageList,\n  ServiceGetAccountInfoHeaders,\n  ServiceGetPropertiesResponse as ServiceGetPropertiesResponseInternal,\n  ServiceGetPropertiesHeaders,\n  ServiceGetStatisticsResponse as ServiceGetStatisticsResponseInternal,\n  ServiceGetStatisticsHeaders,\n  ServiceGetUserDelegationKeyHeaders,\n  ServiceListContainersSegmentResponse as ServiceListContainersSegmentResponseInternal,\n  ServiceListContainersSegmentHeaders,\n  ServiceSetPropertiesHeaders,\n  ServiceSubmitBatchResponse as ServiceSubmitBatchResponseInternal,\n  ServiceSubmitBatchHeaders,\n  SignedIdentifier as SignedIdentifierModel,\n  UserDelegationKey as UserDelegationKeyModel,\n  PageRange,\n  BlobGetAccountInfoHeaders,\n  ContainerGetAccountInfoHeaders,\n} from \"./generated/src/models\";\nimport {\n  WithResponse,\n  ResponseWithBody,\n  ResponseLike,\n  ResponseWithHeaders,\n  HttpResponse,\n} from \"./utils/utils.common\";\n\n/** Contains response data for the appendBlockFromUrl operation. */\nexport type AppendBlobAppendBlockFromUrlResponse = WithResponse<\n  AppendBlobAppendBlockFromUrlHeaders,\n  AppendBlobAppendBlockFromUrlHeaders\n>;\n/** Contains response data for the appendBlock operation. */\nexport type AppendBlobAppendBlockResponse = WithResponse<\n  AppendBlobAppendBlockHeaders,\n  AppendBlobAppendBlockHeaders\n>;\n/** Contains response data for the create operation. */\nexport type AppendBlobCreateResponse = WithResponse<\n  AppendBlobCreateHeaders,\n  AppendBlobCreateHeaders\n>;\n/** Contains response data for the abortCopyFromURL operation. */\nexport type BlobAbortCopyFromURLResponse = WithResponse<\n  BlobAbortCopyFromURLHeaders,\n  BlobAbortCopyFromURLHeaders\n>;\n/** Contains response data for the copyFromURL operation. */\nexport type BlobCopyFromURLResponse = WithResponse<BlobCopyFromURLHeaders, BlobCopyFromURLHeaders>;\n/** Contains response data for the createSnapshot operation. */\nexport type BlobCreateSnapshotResponse = WithResponse<\n  BlobCreateSnapshotHeaders,\n  BlobCreateSnapshotHeaders\n>;\n/** Contains response data for the delete operation. */\nexport type BlobDeleteResponse = WithResponse<BlobDeleteHeaders, BlobDeleteHeaders>;\n/** Contains response data for the deleteImmutabilityPolicy operation. */\nexport type BlobDeleteImmutabilityPolicyResponse = WithResponse<\n  BlobDeleteImmutabilityPolicyHeaders,\n  BlobDeleteImmutabilityPolicyHeaders\n>;\n/** Contains response data for the download operation. */\nexport type BlobDownloadResponseModel = WithResponse<\n  BlobDownloadResponseInternal,\n  BlobDownloadHeaders\n>;\n/** Contains response data for the getProperties operation. */\nexport type BlobGetPropertiesResponseModel = WithResponse<\n  BlobGetPropertiesHeaders,\n  BlobGetPropertiesHeaders\n>;\n/** Contains response data for the getAccountInfo operation. */\nexport type BlobGetAccountInfoResponse = WithResponse<\n  BlobGetAccountInfoHeaders,\n  BlobGetAccountInfoHeaders\n>;\n/** Contains response data for the query operation. */\nexport type BlobQueryResponseModel = WithResponse<BlobQueryResponseInternal, BlobQueryHeaders>;\n/** Contains response data for the setHttpHeaders operation. */\nexport type BlobSetHTTPHeadersResponse = WithResponse<\n  BlobSetHttpHeadersHeaders,\n  BlobSetHttpHeadersHeaders\n>;\n/** Contains response data for the setImmutabilityPolicy operation. */\nexport type BlobSetImmutabilityPolicyResponse = WithResponse<\n  BlobSetImmutabilityPolicyHeaders,\n  BlobSetImmutabilityPolicyHeaders\n>;\n/** Contains response data for the setLegalHold operation. */\nexport type BlobSetLegalHoldResponse = WithResponse<\n  BlobSetLegalHoldHeaders,\n  BlobSetLegalHoldHeaders\n>;\n/** Contains response data for the setMetadata operation. */\nexport type BlobSetMetadataResponse = WithResponse<BlobSetMetadataHeaders, BlobSetMetadataHeaders>;\n/** Contains response data for the setTags operation. */\nexport type BlobSetTagsResponse = WithResponse<BlobSetTagsHeaders, BlobSetTagsHeaders>;\n/** Contains response data for the setTier operation. */\nexport type BlobSetTierResponse = WithResponse<BlobSetTierHeaders, BlobSetTierHeaders>;\n/** Contains response data for the startCopyFromURL operation. */\nexport type BlobStartCopyFromURLResponse = WithResponse<\n  BlobStartCopyFromURLHeaders,\n  BlobStartCopyFromURLHeaders\n>;\n/** Contains response data for the undelete operation. */\nexport type BlobUndeleteResponse = WithResponse<BlobUndeleteHeaders, BlobUndeleteHeaders>;\n/** Contains response data for the commitBlockList operation. */\nexport type BlockBlobCommitBlockListResponse = WithResponse<\n  BlockBlobCommitBlockListHeaders,\n  BlockBlobCommitBlockListHeaders\n>;\n/** Contains response data for the getBlockList operation. */\nexport type BlockBlobGetBlockListResponse = WithResponse<\n  BlockBlobGetBlockListResponseInternal,\n  BlockBlobGetBlockListHeaders\n>;\n/** Contains response data for the putBlobFromUrl operation. */\nexport type BlockBlobPutBlobFromUrlResponse = WithResponse<\n  BlockBlobPutBlobFromUrlHeaders,\n  BlockBlobPutBlobFromUrlHeaders\n>;\n/** Contains response data for the stageBlockFromURL operation. */\nexport type BlockBlobStageBlockFromURLResponse = WithResponse<\n  BlockBlobStageBlockFromURLHeaders,\n  BlockBlobStageBlockFromURLHeaders\n>;\n/** Contains response data for the stageBlock operation. */\nexport type BlockBlobStageBlockResponse = WithResponse<\n  BlockBlobStageBlockHeaders,\n  BlockBlobStageBlockHeaders\n>;\n/** Contains response data for the upload operation. */\nexport type BlockBlobUploadResponse = WithResponse<BlockBlobUploadHeaders, BlockBlobUploadHeaders>;\n/** Contains response data for the create operation. */\nexport type ContainerCreateResponse = WithResponse<ContainerCreateHeaders, ContainerCreateHeaders>;\n/** Contains response data for the delete operation. */\nexport type ContainerDeleteResponse = WithResponse<ContainerDeleteHeaders, ContainerDeleteHeaders>;\n/** Contains response data for the getAccountInfo operation. */\nexport type ContainerGetAccountInfoResponse = WithResponse<\n  ContainerGetAccountInfoHeaders,\n  ContainerGetAccountInfoHeaders\n>;\n/** Contains response data for the getProperties operation. */\nexport type ContainerGetPropertiesResponse = WithResponse<\n  ContainerGetPropertiesHeaders,\n  ContainerGetPropertiesHeaders\n>;\n/** Contains response data for the rename operation. */\nexport type ContainerRenameResponse = WithResponse<ContainerRenameHeaders, ContainerRenameHeaders>;\n/** Contains response data for the setAccessPolicy operation. */\nexport type ContainerSetAccessPolicyResponse = WithResponse<\n  ContainerSetAccessPolicyHeaders,\n  ContainerSetAccessPolicyHeaders\n>;\n/** Contains response data for the setMetadata operation. */\nexport type ContainerSetMetadataResponse = WithResponse<\n  ContainerSetMetadataHeaders,\n  ContainerSetMetadataHeaders\n>;\n/** Contains response data for the restore operation. */\nexport type ContainerUndeleteResponse = WithResponse<\n  ContainerUndeleteHeaders,\n  ContainerUndeleteHeaders\n>;\n/** Contains response data for the clearPages operation. */\nexport type PageBlobClearPagesResponse = WithResponse<\n  PageBlobClearPagesHeaders,\n  PageBlobClearPagesHeaders\n>;\n/** Contains response data for the copyIncremental operation. */\nexport type PageBlobCopyIncrementalResponse = WithResponse<\n  PageBlobCopyIncrementalHeaders,\n  PageBlobCopyIncrementalHeaders\n>;\n/** Contains response data for the create operation. */\nexport type PageBlobCreateResponse = WithResponse<PageBlobCreateHeaders, PageBlobCreateHeaders>;\n/** Contains response data for the getPageRangesDiff operation. */\nexport type PageBlobGetPageRangesDiffResponseModel = WithResponse<\n  PageBlobGetPageRangesDiffResponseInternal,\n  PageBlobGetPageRangesDiffHeaders,\n  PageList\n>;\n/** Contains response data for the getPageRanges operation. */\nexport type PageBlobGetPageRangesResponseModel = WithResponse<\n  PageBlobGetPageRangesResponseInternal,\n  PageBlobGetPageRangesHeaders,\n  PageList\n>;\n/** Contains response data for the resize operation. */\nexport type PageBlobResizeResponse = WithResponse<PageBlobResizeHeaders, PageBlobResizeHeaders>;\n/** Contains response data for the updateSequenceNumber operation. */\nexport type PageBlobUpdateSequenceNumberResponse = WithResponse<\n  PageBlobUpdateSequenceNumberHeaders,\n  PageBlobUpdateSequenceNumberHeaders\n>;\n/** Contains response data for the uploadPagesFromURL operation. */\nexport type PageBlobUploadPagesFromURLResponse = WithResponse<\n  PageBlobUploadPagesFromURLHeaders,\n  PageBlobUploadPagesFromURLHeaders\n>;\n/** Contains response data for the uploadPages operation. */\nexport type PageBlobUploadPagesResponse = WithResponse<\n  PageBlobUploadPagesHeaders,\n  PageBlobUploadPagesHeaders\n>;\n/** Contains response data for the getAccountInfo operation. */\nexport type ServiceGetAccountInfoResponse = WithResponse<\n  ServiceGetAccountInfoHeaders,\n  ServiceGetAccountInfoHeaders\n>;\n/** Contains response data for the getProperties operation. */\nexport type ServiceGetPropertiesResponse = WithResponse<\n  ServiceGetPropertiesResponseInternal,\n  ServiceGetPropertiesHeaders\n>;\n/** Contains response data for the getStatistics operation. */\nexport type ServiceGetStatisticsResponse = WithResponse<\n  ServiceGetStatisticsResponseInternal,\n  ServiceGetStatisticsHeaders\n>;\n/** Contains response data for the listContainersSegment operation. */\nexport type ServiceListContainersSegmentResponse = WithResponse<\n  ServiceListContainersSegmentResponseInternal,\n  ServiceListContainersSegmentHeaders\n>;\n/** Contains response data for the setProperties operation. */\nexport type ServiceSetPropertiesResponse = WithResponse<\n  ServiceSetPropertiesHeaders,\n  ServiceSetPropertiesHeaders\n>;\n/** Contains response data for the submitBatch operation. */\nexport type ServiceSubmitBatchResponseModel = WithResponse<\n  ServiceSubmitBatchResponseInternal,\n  ServiceSubmitBatchHeaders\n>;\nexport {\n  AppendBlobAppendBlockFromUrlHeaders,\n  AppendBlobAppendBlockHeaders,\n  AppendBlobCreateHeaders,\n  BlobAbortCopyFromURLHeaders,\n  BlobCopyFromURLHeaders,\n  BlobCreateSnapshotHeaders,\n  BlobDeleteHeaders,\n  BlobDeleteImmutabilityPolicyHeaders,\n  BlobDownloadHeaders,\n  BlobDownloadResponseInternal,\n  BlobGetAccountInfoHeaders,\n  BlobGetPropertiesHeaders,\n  BlobGetTagsHeaders,\n  BlobTags,\n  BlobQueryHeaders,\n  BlobQueryResponseInternal,\n  BlobSetHttpHeadersHeaders as BlobSetHTTPHeadersHeaders,\n  BlobSetImmutabilityPolicyHeaders,\n  BlobSetLegalHoldHeaders,\n  BlobSetMetadataHeaders,\n  BlobSetTagsHeaders,\n  BlobSetTierHeaders,\n  BlobStartCopyFromURLHeaders,\n  BlobUndeleteHeaders,\n  BlockBlobCommitBlockListHeaders,\n  BlockBlobGetBlockListHeaders,\n  BlockBlobGetBlockListResponseInternal,\n  BlockBlobPutBlobFromUrlHeaders,\n  BlockBlobStageBlockFromURLHeaders,\n  BlockBlobStageBlockHeaders,\n  BlockBlobUploadHeaders,\n  ContainerCreateHeaders,\n  ContainerDeleteHeaders,\n  ContainerGetAccessPolicyHeaders,\n  ContainerGetAccountInfoHeaders,\n  ContainerGetPropertiesHeaders,\n  ContainerListBlobFlatSegmentHeaders,\n  ContainerListBlobHierarchySegmentHeaders,\n  ContainerRenameHeaders,\n  ContainerSetAccessPolicyHeaders,\n  ContainerSetMetadataHeaders,\n  ContainerUndeleteHeaders,\n  PageBlobClearPagesHeaders,\n  PageBlobCopyIncrementalHeaders,\n  PageBlobCreateHeaders,\n  PageBlobGetPageRangesDiffHeaders,\n  PageBlobGetPageRangesDiffResponseInternal,\n  PageBlobGetPageRangesHeaders,\n  PageBlobGetPageRangesResponseInternal,\n  PageBlobResizeHeaders,\n  PageBlobUpdateSequenceNumberHeaders,\n  PageBlobUploadPagesFromURLHeaders,\n  PageBlobUploadPagesHeaders,\n  PageList as PageListInternal,\n  ServiceGetAccountInfoHeaders,\n  ServiceGetPropertiesHeaders,\n  ServiceGetPropertiesResponseInternal,\n  ServiceGetStatisticsHeaders,\n  ServiceGetStatisticsResponseInternal,\n  ServiceGetUserDelegationKeyHeaders,\n  ServiceListContainersSegmentHeaders,\n  ServiceListContainersSegmentResponseInternal,\n  ServiceSetPropertiesHeaders,\n  ServiceSubmitBatchHeaders,\n  ServiceSubmitBatchResponseInternal,\n  SignedIdentifierModel,\n  UserDelegationKeyModel,\n  WithResponse,\n  ResponseWithBody,\n  ResponseLike,\n  HttpResponse,\n  ResponseWithHeaders,\n  PageRange,\n};\n\nexport {\n  AccessPolicy,\n  AccessTier,\n  AccountKind,\n  ArchiveStatus,\n  BlobImmutabilityPolicyMode,\n  BlobCopySourceTags,\n  BlobDownloadOptionalParams,\n  BlobPropertiesInternal as BlobProperties,\n  BlobHttpHeaders as BlobHTTPHeaders,\n  BlobType,\n  Block,\n  BlockList,\n  BlockListType,\n  BlobServiceProperties,\n  BlobServiceStatistics,\n  BlobTag,\n  ContainerFilterBlobsResponse,\n  ContainerFilterBlobsHeaders,\n  ContainerGetAccessPolicyResponse as ContainerGetAccessPolicyResponseModel,\n  ContainerBreakLeaseOptionalParams,\n  ContainerProperties,\n  CopyStatusType,\n  CorsRule,\n  ClearRange,\n  CpkInfo,\n  DeleteSnapshotsOptionType,\n  EncryptionAlgorithmType,\n  GeoReplication,\n  GeoReplicationStatusType,\n  LeaseAccessConditions,\n  LeaseDurationType,\n  LeaseStateType,\n  LeaseStatusType,\n  ListContainersSegmentResponse,\n  FilterBlobItem as FilterBlobItemModel,\n  FilterBlobSegment as FilterBlobSegmentModel,\n  ServiceFilterBlobsHeaders,\n  Logging,\n  Metrics,\n  ModifiedAccessConditions as ModifiedAccessConditionsModel,\n  PublicAccessType,\n  SequenceNumberActionType,\n  RehydratePriority,\n  RetentionPolicy,\n  AppendPositionAccessConditions,\n  SequenceNumberAccessConditions,\n  SkuName,\n  StaticWebsite,\n  ContainerItem,\n  ServiceSubmitBatchOptionalParams as ServiceSubmitBatchOptionalParamsModel,\n  ContainerEncryptionScope,\n  SyncCopyStatusType,\n} from \"./generated/src/models\";\n\n// Following definitions are to avoid breaking change.\nexport interface BlobPrefix {\n  name: string;\n}\n\n/** An enumeration of blobs */\nexport interface ListBlobsFlatSegmentResponseModel {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxPageSize?: number;\n  segment: BlobFlatListSegmentModel;\n  continuationToken?: string;\n}\n\nexport interface BlobFlatListSegmentModel {\n  blobItems: BlobItemInternal[];\n}\n\n/** An enumeration of blobs */\nexport interface ListBlobsHierarchySegmentResponseModel {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxPageSize?: number;\n  delimiter?: string;\n  segment: BlobHierarchyListSegmentModel;\n  continuationToken?: string;\n}\n\nexport interface BlobHierarchyListSegmentModel {\n  blobPrefixes?: BlobPrefix[];\n  blobItems: BlobItemInternal[];\n}\n\n/** An Azure Storage blob */\nexport interface BlobItemInternal {\n  name: string;\n  deleted: boolean;\n  snapshot: string;\n  versionId?: string;\n  isCurrentVersion?: boolean;\n  /** Properties of a blob */\n  properties: BlobProperties;\n  /** Dictionary of <string> */\n  metadata?: { [propertyName: string]: string };\n  /** Blob tags */\n  blobTags?: BlobTags;\n  /** Dictionary of <string> */\n  objectReplicationMetadata?: { [propertyName: string]: string };\n  /** Inactive root blobs which have any versions would have such tag with value true. */\n  hasVersionsOnly?: boolean;\n}\n\n/**\n * Blob info from a {@link BlobServiceClient.findBlobsByTags}\n */\nexport interface FilterBlobItem {\n  /**\n   * Blob Name.\n   */\n  name: string;\n\n  /**\n   * Container Name.\n   */\n  containerName: string;\n\n  /**\n   * Blob Tags.\n   */\n  tags?: Tags;\n\n  /**\n   * Tag value.\n   *\n   * @deprecated The service no longer returns this value. Use {@link tags} to fetch all matching Blob Tags.\n   */\n  tagValue: string;\n}\n\n/**\n * Segment response of {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport interface FilterBlobSegment {\n  serviceEndpoint: string;\n  where: string;\n  blobs: FilterBlobItem[];\n  continuationToken?: string;\n}\n\nexport interface PageRangeInfo {\n  start: number;\n  end: number;\n  isClear: boolean;\n}\n\n/** Known values of {@link EncryptionAlgorithmType} that the service accepts. */\nexport enum KnownEncryptionAlgorithmType {\n  AES256 = \"AES256\",\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { randomUUID } from \"@azure/core-util\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport type {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport {\n  bearerTokenAuthenticationPolicy,\n  createEmptyPipeline,\n  createHttpHeaders,\n} from \"@azure/core-rest-pipeline\";\nimport { isNode } from \"@azure/core-util\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport type { BlobDeleteOptions, BlobSetTierOptions } from \"./Clients\";\nimport { BlobClient } from \"./Clients\";\nimport type { AccessTier } from \"./generatedModels\";\nimport { Mutex } from \"./utils/Mutex\";\nimport { Pipeline } from \"./Pipeline\";\nimport { getURLPath, getURLPathAndQuery, iEqual } from \"./utils/utils.common\";\nimport { stringifyXML } from \"@azure/core-xml\";\nimport {\n  HeaderConstants,\n  BATCH_MAX_REQUEST,\n  HTTP_VERSION_1_1,\n  HTTP_LINE_ENDING,\n  StorageOAuthScopes,\n} from \"./utils/constants\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { tracingClient } from \"./utils/tracing\";\nimport { authorizeRequestOnTenantChallenge, serializationPolicy } from \"@azure/core-client\";\nimport { storageSharedKeyCredentialPolicy } from \"./policies/StorageSharedKeyCredentialPolicyV2\";\n\n/**\n * A request associated with a batch operation.\n */\nexport interface BatchSubRequest {\n  /**\n   * The URL of the resource to request operation.\n   */\n  url: string;\n\n  /**\n   * The credential used for sub request.\n   * Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service.\n   * You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   */\n  credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n}\n\n/**\n * A BlobBatch represents an aggregated set of operations on blobs.\n * Currently, only `delete` and `setAccessTier` are supported.\n */\nexport class BlobBatch {\n  private batchRequest: InnerBatchRequest;\n  private readonly batch: string = \"batch\";\n  private batchType: \"delete\" | \"setAccessTier\" | undefined;\n\n  constructor() {\n    this.batchRequest = new InnerBatchRequest();\n  }\n\n  /**\n   * Get the value of Content-Type for a batch request.\n   * The value must be multipart/mixed with a batch boundary.\n   * Example: multipart/mixed; boundary=batch_a81786c8-e301-4e42-a729-a32ca24ae252\n   */\n  public getMultiPartContentType(): string {\n    return this.batchRequest.getMultipartContentType();\n  }\n\n  /**\n   * Get assembled HTTP request body for sub requests.\n   */\n  public getHttpRequestBody(): string {\n    return this.batchRequest.getHttpRequestBody();\n  }\n\n  /**\n   * Get sub requests that are added into the batch request.\n   */\n  public getSubRequests(): Map<number, BatchSubRequest> {\n    return this.batchRequest.getSubRequests();\n  }\n\n  private async addSubRequestInternal(\n    subRequest: BatchSubRequest,\n    assembleSubRequestFunc: () => Promise<void>,\n  ): Promise<void> {\n    await Mutex.lock(this.batch);\n\n    try {\n      this.batchRequest.preAddSubRequest(subRequest);\n      await assembleSubRequestFunc();\n      this.batchRequest.postAddSubRequest(subRequest);\n    } finally {\n      await Mutex.unlock(this.batch);\n    }\n  }\n\n  private setBatchType(batchType: \"delete\" | \"setAccessTier\"): void {\n    if (!this.batchType) {\n      this.batchType = batchType;\n    }\n    if (this.batchType !== batchType) {\n      throw new RangeError(\n        `BlobBatch only supports one operation type per batch and it already is being used for ${this.batchType} operations.`,\n      );\n    }\n  }\n\n  /**\n   * The deleteBlob operation marks the specified blob or snapshot for deletion.\n   * The blob is later deleted during garbage collection.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://learn.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operation will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://learn.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param url - The url of the blob resource to delete.\n   * @param credential - Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options -\n   */\n  public async deleteBlob(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: BlobDeleteOptions,\n  ): Promise<void>;\n\n  /**\n   * The deleteBlob operation marks the specified blob or snapshot for deletion.\n   * The blob is later deleted during garbage collection.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://learn.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operation will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://learn.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClient - The BlobClient.\n   * @param options -\n   */\n  public async deleteBlob(blobClient: BlobClient, options?: BlobDeleteOptions): Promise<void>;\n\n  public async deleteBlob(\n    urlOrBlobClient: string | BlobClient,\n    credentialOrOptions:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | BlobDeleteOptions\n      | undefined,\n    options?: BlobDeleteOptions,\n  ): Promise<void> {\n    let url: string;\n    let credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n\n    if (\n      typeof urlOrBlobClient === \"string\" &&\n      ((isNode && credentialOrOptions instanceof StorageSharedKeyCredential) ||\n        credentialOrOptions instanceof AnonymousCredential ||\n        isTokenCredential(credentialOrOptions))\n    ) {\n      // First overload\n      url = urlOrBlobClient;\n      credential = credentialOrOptions;\n    } else if (urlOrBlobClient instanceof BlobClient) {\n      // Second overload\n      url = urlOrBlobClient.url;\n      credential = urlOrBlobClient.credential;\n      options = credentialOrOptions as BlobDeleteOptions;\n    } else {\n      throw new RangeError(\n        \"Invalid arguments. Either url and credential, or BlobClient need be provided.\",\n      );\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    return tracingClient.withSpan(\n      \"BatchDeleteRequest-addSubRequest\",\n      options,\n      async (updatedOptions) => {\n        this.setBatchType(\"delete\");\n        await this.addSubRequestInternal(\n          {\n            url: url,\n            credential: credential,\n          },\n          async () => {\n            await new BlobClient(url, this.batchRequest.createPipeline(credential)).delete(\n              updatedOptions,\n            );\n          },\n        );\n      },\n    );\n  }\n\n  /**\n   * The setBlobAccessTier operation sets the tier on a blob.\n   * The operation is allowed on block blobs in a blob storage or general purpose v2 account.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * A block blob's tier determines Hot/Cool/Archive storage type.\n   * This operation does not update the blob's ETag.\n   * For detailed information about block blob level tiering\n   * see [hot, cool, and archive access tiers](https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers).\n   * The operation will be authenticated and authorized\n   * with specified credential. See [blob batch authorization details](https://learn.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param url - The url of the blob resource to delete.\n   * @param credential - Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobAccessTier(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    tier: AccessTier,\n    options?: BlobSetTierOptions,\n  ): Promise<void>;\n\n  /**\n   * The setBlobAccessTier operation sets the tier on a blob.\n   * The operation is allowed on block blobs in a blob storage or general purpose v2 account.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * A block blob's tier determines Hot/Cool/Archive storage type.\n   * This operation does not update the blob's ETag.\n   * For detailed information about block blob level tiering\n   * see [hot, cool, and archive access tiers](https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers).\n   * The operation will be authenticated and authorized\n   * with specified credential. See [blob batch authorization details](https://learn.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClient - The BlobClient.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobAccessTier(\n    blobClient: BlobClient,\n    tier: AccessTier,\n    options?: BlobSetTierOptions,\n  ): Promise<void>;\n\n  public async setBlobAccessTier(\n    urlOrBlobClient: string | BlobClient,\n    credentialOrTier:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | AccessTier,\n    tierOrOptions?: AccessTier | BlobSetTierOptions,\n    options?: BlobSetTierOptions,\n  ): Promise<void> {\n    let url: string;\n    let credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n    let tier: AccessTier;\n\n    if (\n      typeof urlOrBlobClient === \"string\" &&\n      ((isNode && credentialOrTier instanceof StorageSharedKeyCredential) ||\n        credentialOrTier instanceof AnonymousCredential ||\n        isTokenCredential(credentialOrTier))\n    ) {\n      // First overload\n      url = urlOrBlobClient;\n      credential = credentialOrTier as\n        | StorageSharedKeyCredential\n        | AnonymousCredential\n        | TokenCredential;\n      tier = tierOrOptions as AccessTier;\n    } else if (urlOrBlobClient instanceof BlobClient) {\n      // Second overload\n      url = urlOrBlobClient.url;\n      credential = urlOrBlobClient.credential;\n      tier = credentialOrTier as AccessTier;\n      options = tierOrOptions as BlobSetTierOptions;\n    } else {\n      throw new RangeError(\n        \"Invalid arguments. Either url and credential, or BlobClient need be provided.\",\n      );\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    return tracingClient.withSpan(\n      \"BatchSetTierRequest-addSubRequest\",\n      options,\n      async (updatedOptions) => {\n        this.setBatchType(\"setAccessTier\");\n        await this.addSubRequestInternal(\n          {\n            url: url,\n            credential: credential,\n          },\n          async () => {\n            await new BlobClient(url, this.batchRequest.createPipeline(credential)).setAccessTier(\n              tier,\n              updatedOptions,\n            );\n          },\n        );\n      },\n    );\n  }\n}\n\n/**\n * Inner batch request class which is responsible for assembling and serializing sub requests.\n * See https://learn.microsoft.com/en-us/rest/api/storageservices/blob-batch#request-body for how requests are assembled.\n */\nclass InnerBatchRequest {\n  private operationCount: number;\n  private body: string;\n  private subRequests: Map<number, BatchSubRequest>;\n  private readonly boundary: string;\n  private readonly subRequestPrefix: string;\n  private readonly multipartContentType: string;\n  private readonly batchRequestEnding: string;\n\n  constructor() {\n    this.operationCount = 0;\n    this.body = \"\";\n\n    const tempGuid = randomUUID();\n\n    // batch_{batchid}\n    this.boundary = `batch_${tempGuid}`;\n    // --batch_{batchid}\n    // Content-Type: application/http\n    // Content-Transfer-Encoding: binary\n    this.subRequestPrefix = `--${this.boundary}${HTTP_LINE_ENDING}${HeaderConstants.CONTENT_TYPE}: application/http${HTTP_LINE_ENDING}${HeaderConstants.CONTENT_TRANSFER_ENCODING}: binary`;\n    // multipart/mixed; boundary=batch_{batchid}\n    this.multipartContentType = `multipart/mixed; boundary=${this.boundary}`;\n    // --batch_{batchid}--\n    this.batchRequestEnding = `--${this.boundary}--`;\n\n    this.subRequests = new Map();\n  }\n\n  /**\n   * Create pipeline to assemble sub requests. The idea here is to use existing\n   * credential and serialization/deserialization components, with additional policies to\n   * filter unnecessary headers, assemble sub requests into request's body\n   * and intercept request from going to wire.\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   */\n  public createPipeline(\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n  ): Pipeline {\n    const corePipeline = createEmptyPipeline();\n    corePipeline.addPolicy(\n      serializationPolicy({\n        stringifyXML,\n        serializerOptions: {\n          xml: {\n            xmlCharKey: \"#\",\n          },\n        },\n      }),\n      { phase: \"Serialize\" },\n    );\n    // Use batch header filter policy to exclude unnecessary headers\n    corePipeline.addPolicy(batchHeaderFilterPolicy());\n    // Use batch assemble policy to assemble request and intercept request from going to wire\n    corePipeline.addPolicy(batchRequestAssemblePolicy(this), { afterPhase: \"Sign\" });\n    if (isTokenCredential(credential)) {\n      corePipeline.addPolicy(\n        bearerTokenAuthenticationPolicy({\n          credential,\n          scopes: StorageOAuthScopes,\n          challengeCallbacks: { authorizeRequestOnChallenge: authorizeRequestOnTenantChallenge },\n        }),\n        { phase: \"Sign\" },\n      );\n    } else if (credential instanceof StorageSharedKeyCredential) {\n      corePipeline.addPolicy(\n        storageSharedKeyCredentialPolicy({\n          accountName: credential.accountName,\n          accountKey: (credential as any).accountKey,\n        }),\n        { phase: \"Sign\" },\n      );\n    }\n    const pipeline = new Pipeline([]);\n    // attach the v2 pipeline to this one\n    (pipeline as any)._credential = credential;\n    (pipeline as any)._corePipeline = corePipeline;\n\n    return pipeline;\n  }\n\n  public appendSubRequestToBody(request: PipelineRequest) {\n    // Start to assemble sub request\n    this.body += [\n      this.subRequestPrefix, // sub request constant prefix\n      `${HeaderConstants.CONTENT_ID}: ${this.operationCount}`, // sub request's content ID\n      \"\", // empty line after sub request's content ID\n      `${request.method.toString()} ${getURLPathAndQuery(\n        request.url,\n      )} ${HTTP_VERSION_1_1}${HTTP_LINE_ENDING}`, // sub request start line with method\n    ].join(HTTP_LINE_ENDING);\n\n    for (const [name, value] of request.headers) {\n      this.body += `${name}: ${value}${HTTP_LINE_ENDING}`;\n    }\n\n    this.body += HTTP_LINE_ENDING; // sub request's headers need be ending with an empty line\n    // No body to assemble for current batch request support\n    // End to assemble sub request\n  }\n\n  public preAddSubRequest(subRequest: BatchSubRequest) {\n    if (this.operationCount >= BATCH_MAX_REQUEST) {\n      throw new RangeError(`Cannot exceed ${BATCH_MAX_REQUEST} sub requests in a single batch`);\n    }\n\n    // Fast fail if url for sub request is invalid\n    const path = getURLPath(subRequest.url);\n    if (!path || path === \"\") {\n      throw new RangeError(`Invalid url for sub request: '${subRequest.url}'`);\n    }\n  }\n\n  public postAddSubRequest(subRequest: BatchSubRequest) {\n    this.subRequests.set(this.operationCount, subRequest);\n    this.operationCount++;\n  }\n\n  // Return the http request body with assembling the ending line to the sub request body.\n  public getHttpRequestBody(): string {\n    return `${this.body}${this.batchRequestEnding}${HTTP_LINE_ENDING}`;\n  }\n\n  public getMultipartContentType(): string {\n    return this.multipartContentType;\n  }\n\n  public getSubRequests(): Map<number, BatchSubRequest> {\n    return this.subRequests;\n  }\n}\n\nfunction batchRequestAssemblePolicy(batchRequest: InnerBatchRequest): PipelinePolicy {\n  return {\n    name: \"batchRequestAssemblePolicy\",\n    async sendRequest(request: PipelineRequest): Promise<PipelineResponse> {\n      batchRequest.appendSubRequestToBody(request);\n\n      return {\n        request,\n        status: 200,\n        headers: createHttpHeaders(),\n      };\n    },\n  };\n}\n\nfunction batchHeaderFilterPolicy(): PipelinePolicy {\n  return {\n    name: \"batchHeaderFilterPolicy\",\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      let xMsHeaderName = \"\";\n\n      for (const [name] of request.headers) {\n        if (iEqual(name, HeaderConstants.X_MS_VERSION)) {\n          xMsHeaderName = name;\n        }\n      }\n\n      if (xMsHeaderName !== \"\") {\n        request.headers.delete(xMsHeaderName); // The subrequests should not have the x-ms-version header.\n      }\n\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  AccessTier,\n  ServiceSubmitBatchHeaders,\n  ServiceSubmitBatchOptionalParamsModel,\n  ServiceSubmitBatchResponseModel,\n} from \"./generatedModels\";\nimport type { ParsedBatchResponse } from \"./BatchResponse\";\nimport { BatchResponseParser } from \"./BatchResponseParser\";\nimport { utf8ByteLength } from \"./BatchUtils\";\nimport { BlobBatch } from \"./BlobBatch\";\nimport { tracingClient } from \"./utils/tracing\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport type { Service, Container } from \"./generated/src/operationsInterfaces\";\nimport type { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport type { BlobDeleteOptions, BlobClient, BlobSetTierOptions } from \"./Clients\";\nimport { StorageContextClient } from \"./StorageContextClient\";\nimport type { PipelineLike, StoragePipelineOptions } from \"./Pipeline\";\nimport { newPipeline, isPipelineLike, getCoreClientOptions } from \"./Pipeline\";\nimport type { WithResponse } from \"./utils/utils.common\";\nimport { assertResponse, getURLPath } from \"./utils/utils.common\";\n\n/**\n * Options to configure the Service - Submit Batch Optional Params.\n */\nexport interface BlobBatchSubmitBatchOptionalParams extends ServiceSubmitBatchOptionalParamsModel {}\n\n/**\n * Contains response data for blob batch operations.\n */\nexport declare type BlobBatchSubmitBatchResponse = WithResponse<\n  ParsedBatchResponse & ServiceSubmitBatchHeaders,\n  ServiceSubmitBatchHeaders\n>;\n\n/**\n * Contains response data for the {@link deleteBlobs} operation.\n */\nexport declare type BlobBatchDeleteBlobsResponse = BlobBatchSubmitBatchResponse;\n\n/**\n * Contains response data for the {@link setBlobsAccessTier} operation.\n */\nexport declare type BlobBatchSetBlobsAccessTierResponse = BlobBatchSubmitBatchResponse;\n\n/**\n * A BlobBatchClient allows you to make batched requests to the Azure Storage Blob service.\n *\n * @see https://learn.microsoft.com/en-us/rest/api/storageservices/blob-batch\n */\nexport class BlobBatchClient {\n  private serviceOrContainerContext: Service | Container;\n\n  /**\n   * Creates an instance of BlobBatchClient.\n   *\n   * @param url - A url pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n\n  /**\n   * Creates an instance of BlobBatchClient.\n   *\n   * @param url - A url pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    url: string,\n    credentialOrPipeline?:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    let pipeline: PipelineLike;\n    if (isPipelineLike(credentialOrPipeline)) {\n      pipeline = credentialOrPipeline;\n    } else if (!credentialOrPipeline) {\n      // no credential provided\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    }\n\n    const storageClientContext = new StorageContextClient(url, getCoreClientOptions(pipeline));\n\n    const path = getURLPath(url);\n    if (path && path !== \"/\") {\n      // Container scoped.\n      this.serviceOrContainerContext = storageClientContext.container;\n    } else {\n      this.serviceOrContainerContext = storageClientContext.service;\n    }\n  }\n\n  /**\n   * Creates a {@link BlobBatch}.\n   * A BlobBatch represents an aggregated set of operations on blobs.\n   */\n  public createBatch(): BlobBatch {\n    return new BlobBatch();\n  }\n\n  /**\n   * Create multiple delete operations to mark the specified blobs or snapshots for deletion.\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://learn.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operations will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://learn.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param urls - The urls of the blob resources to delete.\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options -\n   */\n  public async deleteBlobs(\n    urls: string[],\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobDeleteOptions,\n  ): Promise<BlobBatchDeleteBlobsResponse>;\n\n  /**\n   * Create multiple delete operations to mark the specified blobs or snapshots for deletion.\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://learn.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operation(subrequest) will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://learn.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClients - The BlobClients for the blobs to delete.\n   * @param options -\n   */\n  public async deleteBlobs(\n    blobClients: BlobClient[],\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobDeleteOptions,\n  ): Promise<BlobBatchDeleteBlobsResponse>;\n\n  public async deleteBlobs(\n    urlsOrBlobClients: string[] | BlobClient[],\n    credentialOrOptions:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | BlobDeleteOptions\n      | undefined,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobDeleteOptions,\n  ): Promise<BlobBatchDeleteBlobsResponse> {\n    const batch = new BlobBatch();\n    for (const urlOrBlobClient of urlsOrBlobClients) {\n      if (typeof urlOrBlobClient === \"string\") {\n        await batch.deleteBlob(urlOrBlobClient, credentialOrOptions as TokenCredential, options);\n      } else {\n        await batch.deleteBlob(urlOrBlobClient, credentialOrOptions as BlobDeleteOptions);\n      }\n    }\n    return this.submitBatch(batch);\n  }\n\n  /**\n   * Create multiple set tier operations to set the tier on a blob.\n   * The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * See [set blob tier details](https://learn.microsoft.com/en-us/rest/api/storageservices/set-blob-tier).\n   * The operation(subrequest) will be authenticated and authorized\n   * with specified credential.See [blob batch authorization details](https://learn.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param urls - The urls of the blob resource to delete.\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobsAccessTier(\n    urls: string[],\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    tier: AccessTier,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobSetTierOptions,\n  ): Promise<BlobBatchSetBlobsAccessTierResponse>;\n\n  /**\n   * Create multiple set tier operations to set the tier on a blob.\n   * The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * See [set blob tier details](https://learn.microsoft.com/en-us/rest/api/storageservices/set-blob-tier).\n   * The operation(subrequest) will be authenticated and authorized\n   * with specified credential.See [blob batch authorization details](https://learn.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClients - The BlobClients for the blobs which should have a new tier set.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobsAccessTier(\n    blobClients: BlobClient[],\n    tier: AccessTier,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobSetTierOptions,\n  ): Promise<BlobBatchSetBlobsAccessTierResponse>;\n\n  public async setBlobsAccessTier(\n    urlsOrBlobClients: string[] | BlobClient[],\n    credentialOrTier:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | AccessTier,\n    tierOrOptions?: AccessTier | BlobSetTierOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobSetTierOptions,\n  ): Promise<BlobBatchSetBlobsAccessTierResponse> {\n    const batch = new BlobBatch();\n    for (const urlOrBlobClient of urlsOrBlobClients) {\n      if (typeof urlOrBlobClient === \"string\") {\n        await batch.setBlobAccessTier(\n          urlOrBlobClient,\n          credentialOrTier as TokenCredential,\n          tierOrOptions as AccessTier,\n          options,\n        );\n      } else {\n        await batch.setBlobAccessTier(\n          urlOrBlobClient,\n          credentialOrTier as AccessTier,\n          tierOrOptions as BlobSetTierOptions,\n        );\n      }\n    }\n    return this.submitBatch(batch);\n  }\n\n  /**\n   * Submit batch request which consists of multiple subrequests.\n   *\n   * Get `blobBatchClient` and other details before running the snippets.\n   * `blobServiceClient.getBlobBatchClient()` gives the `blobBatchClient`\n   *\n   * Example usage:\n   *\n   * ```js\n   * let batchRequest = new BlobBatch();\n   * await batchRequest.deleteBlob(urlInString0, credential0);\n   * await batchRequest.deleteBlob(urlInString1, credential1, {\n   *  deleteSnapshots: \"include\"\n   * });\n   * const batchResp = await blobBatchClient.submitBatch(batchRequest);\n   * console.log(batchResp.subResponsesSucceededCount);\n   * ```\n   *\n   * Example using a lease:\n   *\n   * ```js\n   * let batchRequest = new BlobBatch();\n   * await batchRequest.setBlobAccessTier(blockBlobClient0, \"Cool\");\n   * await batchRequest.setBlobAccessTier(blockBlobClient1, \"Cool\", {\n   *  conditions: { leaseId: leaseId }\n   * });\n   * const batchResp = await blobBatchClient.submitBatch(batchRequest);\n   * console.log(batchResp.subResponsesSucceededCount);\n   * ```\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/blob-batch\n   *\n   * @param batchRequest - A set of Delete or SetTier operations.\n   * @param options -\n   */\n  public async submitBatch(\n    batchRequest: BlobBatch,\n    options: BlobBatchSubmitBatchOptionalParams = {},\n  ): Promise<BlobBatchSubmitBatchResponse> {\n    if (!batchRequest || batchRequest.getSubRequests().size === 0) {\n      throw new RangeError(\"Batch request should contain one or more sub requests.\");\n    }\n\n    return tracingClient.withSpan(\n      \"BlobBatchClient-submitBatch\",\n      options,\n      async (updatedOptions) => {\n        const batchRequestBody = batchRequest.getHttpRequestBody();\n\n        // ServiceSubmitBatchResponseModel and ContainerSubmitBatchResponse are compatible for now.\n        const rawBatchResponse: ServiceSubmitBatchResponseModel = assertResponse(\n          await this.serviceOrContainerContext.submitBatch(\n            utf8ByteLength(batchRequestBody),\n            batchRequest.getMultiPartContentType(),\n            batchRequestBody,\n            {\n              ...updatedOptions,\n            },\n          ),\n        );\n\n        // Parse the sub responses result, if logic reaches here(i.e. the batch request succeeded with status code 202).\n        const batchResponseParser = new BatchResponseParser(\n          rawBatchResponse,\n          batchRequest.getSubRequests(),\n        );\n        const responseSummary = await batchResponseParser.parseBatchResponse();\n\n        const res: BlobBatchSubmitBatchResponse = {\n          _response: rawBatchResponse._response,\n          contentType: rawBatchResponse.contentType,\n          errorCode: rawBatchResponse.errorCode,\n          requestId: rawBatchResponse.requestId,\n          clientRequestId: rawBatchResponse.clientRequestId,\n          version: rawBatchResponse.version,\n          subResponses: responseSummary.subResponses,\n          subResponsesSucceededCount: responseSummary.subResponsesSucceededCount,\n          subResponsesFailedCount: responseSummary.subResponsesFailedCount,\n        };\n\n        return res;\n      },\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { RequestBodyType as HttpRequestBody } from \"@azure/core-rest-pipeline\";\nimport { getDefaultProxySettings } from \"@azure/core-rest-pipeline\";\nimport { isNode } from \"@azure/core-util\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport type { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport type { Container } from \"./generated/src/operationsInterfaces\";\nimport type {\n  BlobDeleteResponse,\n  BlobPrefix,\n  BlobProperties,\n  BlockBlobUploadResponse,\n  ContainerCreateResponse,\n  ContainerDeleteResponse,\n  ContainerEncryptionScope,\n  ContainerFilterBlobsHeaders,\n  ContainerFilterBlobsResponse,\n  ContainerGetAccessPolicyHeaders,\n  ContainerGetAccessPolicyResponseModel,\n  ContainerGetAccountInfoResponse,\n  ContainerGetPropertiesResponse,\n  ContainerListBlobFlatSegmentHeaders,\n  ContainerListBlobHierarchySegmentHeaders,\n  ContainerSetAccessPolicyResponse,\n  ContainerSetMetadataResponse,\n  FilterBlobItem,\n  FilterBlobSegment,\n  FilterBlobSegmentModel,\n  LeaseAccessConditions,\n  ListBlobsFlatSegmentResponseModel,\n  ListBlobsHierarchySegmentResponseModel,\n  PublicAccessType,\n  SignedIdentifierModel,\n} from \"./generatedModels\";\nimport type {\n  Metadata,\n  ObjectReplicationPolicy,\n  Tags,\n  ContainerRequestConditions,\n  ModifiedAccessConditions,\n} from \"./models\";\nimport type { PipelineLike, StoragePipelineOptions } from \"./Pipeline\";\nimport { newPipeline, isPipelineLike } from \"./Pipeline\";\nimport type { CommonOptions } from \"./StorageClient\";\nimport { StorageClient } from \"./StorageClient\";\nimport { tracingClient } from \"./utils/tracing\";\nimport type { WithResponse } from \"./utils/utils.common\";\nimport {\n  appendToURLPath,\n  appendToURLQuery,\n  assertResponse,\n  BlobNameToString,\n  ConvertInternalResponseOfListBlobFlat,\n  ConvertInternalResponseOfListBlobHierarchy,\n  EscapePath,\n  extractConnectionStringParts,\n  isIpEndpointStyle,\n  parseObjectReplicationRecord,\n  toTags,\n  truncatedISO8061Date,\n} from \"./utils/utils.common\";\nimport type { ContainerSASPermissions } from \"./sas/ContainerSASPermissions\";\nimport {\n  generateBlobSASQueryParameters,\n  generateBlobSASQueryParametersInternal,\n} from \"./sas/BlobSASSignatureValues\";\nimport { BlobLeaseClient } from \"./BlobLeaseClient\";\nimport type {\n  BlobDeleteOptions,\n  BlockBlobUploadOptions,\n  CommonGenerateSasUrlOptions,\n} from \"./Clients\";\nimport { AppendBlobClient, BlobClient, BlockBlobClient, PageBlobClient } from \"./Clients\";\nimport { BlobBatchClient } from \"./BlobBatchClient\";\nimport type {\n  ContainerCreateHeaders,\n  ListBlobsIncludeItem,\n  ContainerGetPropertiesHeaders,\n  ContainerDeleteHeaders,\n  ContainerSetMetadataHeaders,\n  ContainerSetAccessPolicyHeaders,\n  ListBlobsFlatSegmentResponse as ListBlobsFlatSegmentResponseInternal,\n  ListBlobsHierarchySegmentResponse as ListBlobsHierarchySegmentResponseInternal,\n  ContainerListBlobHierarchySegmentResponse as ContainerListBlobHierarchySegmentResponseModel,\n  ContainerGetAccountInfoHeaders,\n} from \"./generated/src\";\nimport type { UserDelegationKey } from \"./BlobServiceClient\";\n\n/**\n * Options to configure {@link ContainerClient.create} operation.\n */\nexport interface ContainerCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the container.\n   */\n  metadata?: Metadata;\n  /**\n   * Specifies whether data in the container may be accessed publicly and the level of access. Possible values include:\n   * - `container`: Specifies full public read access for container and blob data. Clients can enumerate blobs within the container via anonymous request, but cannot enumerate containers within the storage account.\n   * - `blob`: Specifies public read access for blobs. Blob data within this container can be read via anonymous request, but container data is not available. Clients cannot enumerate blobs within the container via anonymous request.\n   */\n  access?: PublicAccessType;\n  /**\n   * Container encryption scope info.\n   */\n  containerEncryptionScope?: ContainerEncryptionScope;\n}\n\n/**\n * Options to configure {@link ContainerClient.getProperties} operation.\n */\nexport interface ContainerGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure {@link ContainerClient.delete} operation.\n */\nexport interface ContainerDeleteMethodOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when deleting the container.\n   */\n  conditions?: ContainerRequestConditions;\n}\n\n/**\n * Options to configure {@link ContainerClient.exists} operation.\n */\nexport interface ContainerExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure {@link ContainerClient.setMetadata} operation.\n */\nexport interface ContainerSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: ContainerRequestConditions;\n}\n\n/**\n * Options to configure {@link ContainerClient.getAccessPolicy} operation.\n */\nexport interface ContainerGetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Signed identifier.\n */\nexport interface SignedIdentifier {\n  /**\n   * a unique id\n   */\n  id: string;\n  /**\n   * Access Policy\n   */\n  accessPolicy: {\n    /**\n     * Optional. The date-time the policy is active\n     */\n    startsOn?: Date;\n    /**\n     * Optional. The date-time the policy expires\n     */\n    expiresOn?: Date;\n    /**\n     * The permissions for the acl policy\n     * @see https://learn.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n     */\n    permissions?: string;\n  };\n}\n\n/**\n * Contains response data for the {@link ContainerClient.getAccessPolicy} operation.\n */\nexport declare type ContainerGetAccessPolicyResponse = WithResponse<\n  {\n    signedIdentifiers: SignedIdentifier[];\n  } & ContainerGetAccessPolicyHeaders,\n  ContainerGetAccessPolicyHeaders,\n  SignedIdentifierModel\n>;\n\n/**\n * Options to configure {@link ContainerClient.setAccessPolicy} operation.\n */\nexport interface ContainerSetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when setting the access policy.\n   */\n  conditions?: ContainerRequestConditions;\n}\n\n/**\n * Options to configure Container - Acquire Lease operation.\n */\nexport interface ContainerAcquireLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when acquiring the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Release Lease operation.\n */\nexport interface ContainerReleaseLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when releasing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Renew Lease operation.\n */\nexport interface ContainerRenewLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when renewing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Break Lease operation.\n */\nexport interface ContainerBreakLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when breaking the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Change Lease operation.\n */\nexport interface ContainerChangeLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when changing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure the {@link ContainerClient.deleteBlob} operation.\n */\nexport interface ContainerDeleteBlobOptions extends BlobDeleteOptions {\n  /**\n   * An opaque DateTime value that, when present, specifies the version\n   * of the blob to delete. It's for service version 2019-10-10 and newer.\n   */\n  versionId?: string;\n}\n\n/**\n * Options to configure Container - List Segment operations.\n *\n * See:\n * - {@link ContainerClient.listSegments}\n * - {@link ContainerClient.listBlobFlatSegment}\n * - {@link ContainerClient.listBlobHierarchySegment}\n * - {@link ContainerClient.listHierarchySegments}\n * - {@link ContainerClient.listItemsByHierarchy}\n */\ninterface ContainerListBlobsSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n  /**\n   * Include this parameter to\n   * specify one or more datasets to include in the response.\n   */\n  include?: ListBlobsIncludeItem[];\n}\n\n/**\n * An interface representing BlobHierarchyListSegment.\n */\nexport interface BlobHierarchyListSegment {\n  blobPrefixes?: BlobPrefix[];\n  blobItems: BlobItem[];\n}\n\n/**\n * An enumeration of blobs\n */\nexport interface ListBlobsHierarchySegmentResponse {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxPageSize?: number;\n  delimiter?: string;\n  segment: BlobHierarchyListSegment;\n  continuationToken?: string;\n}\n\n/**\n * Contains response data for the listBlobHierarchySegment operation.\n */\nexport type ContainerListBlobHierarchySegmentResponse = WithResponse<\n  ListBlobsHierarchySegmentResponse & ContainerListBlobHierarchySegmentHeaders,\n  ContainerListBlobHierarchySegmentHeaders,\n  ListBlobsHierarchySegmentResponseModel\n>;\n\n/**\n * An Azure Storage blob\n */\nexport interface BlobItem {\n  name: string;\n  deleted: boolean;\n  snapshot: string;\n  versionId?: string;\n  isCurrentVersion?: boolean;\n  properties: BlobProperties;\n  metadata?: { [propertyName: string]: string };\n  tags?: Tags;\n  objectReplicationSourceProperties?: ObjectReplicationPolicy[];\n  hasVersionsOnly?: boolean;\n}\n\n/**\n * An interface representing BlobFlatListSegment.\n */\nexport interface BlobFlatListSegment {\n  blobItems: BlobItem[];\n}\n\n/**\n * An enumeration of blobs\n */\nexport interface ListBlobsFlatSegmentResponse {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxPageSize?: number;\n  segment: BlobFlatListSegment;\n  continuationToken?: string;\n}\n\n/**\n * Contains response data for the listBlobFlatSegment operation.\n */\nexport type ContainerListBlobFlatSegmentResponse = WithResponse<\n  ListBlobsFlatSegmentResponse & ContainerListBlobFlatSegmentHeaders,\n  ContainerListBlobFlatSegmentHeaders,\n  ListBlobsFlatSegmentResponseModel\n>;\n\n/**\n * Options to configure Container - List Blobs operations.\n *\n * See:\n * - {@link ContainerClient.listBlobsFlat}\n * - {@link ContainerClient.listBlobsByHierarchy}\n */\nexport interface ContainerListBlobsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n\n  /**\n   * Specifies whether metadata related to any current or previous Copy Blob operation should be included in the response.\n   */\n  includeCopy?: boolean;\n  /**\n   * Specifies whether soft deleted blobs should be included in the response.\n   */\n  includeDeleted?: boolean;\n  /**\n   * Specifies whether blob metadata be returned in the response.\n   */\n  includeMetadata?: boolean;\n  /**\n   * Specifies whether snapshots should be included in the enumeration. Snapshots are listed from oldest to newest in the response.\n   */\n  includeSnapshots?: boolean;\n  /**\n   * Specifies whether versions should be included in the enumeration. Versions are listed from oldest to newest in the response.\n   */\n  includeVersions?: boolean;\n  /**\n   * Specifies whether blobs for which blocks have been uploaded, but which have not been committed using Put Block List, be included in the response.\n   */\n  includeUncommitedBlobs?: boolean;\n  /**\n   * Specifies whether blob tags be returned in the response.\n   */\n  includeTags?: boolean;\n  /**\n   * Specifies whether deleted blob with versions be returned in the response.\n   */\n  includeDeletedWithVersions?: boolean;\n  /**\n   * Specifies whether blob immutability policy be returned in the response.\n   */\n  includeImmutabilityPolicy?: boolean;\n  /**\n   * Specifies whether blob legal hold be returned in the response.\n   */\n  includeLegalHold?: boolean;\n}\n\n/**\n * Contains response data for the {@link ContainerClient.createIfNotExists} operation.\n */\nexport interface ContainerCreateIfNotExistsResponse extends ContainerCreateResponse {\n  /**\n   * Indicate whether the container is successfully created. Is false when the container is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Contains response data for the {@link ContainerClient.deleteIfExists} operation.\n */\nexport interface ContainerDeleteIfExistsResponse extends ContainerDeleteResponse {\n  /**\n   * Indicate whether the container is successfully deleted. Is false if the container does not exist in the first place.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Options to configure {@link ContainerClient.generateSasUrl} operation.\n */\nexport interface ContainerGenerateSasUrlOptions extends CommonGenerateSasUrlOptions {\n  /**\n   * Optional only when identifier is provided. Specifies the list of permissions to be associated with the SAS.\n   */\n  permissions?: ContainerSASPermissions;\n}\n\n/**\n * Options to configure the {@link ContainerClient.findBlobsByTagsSegment} operation.\n */\ninterface ContainerFindBlobsByTagsSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the maximum number of blobs\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport interface ContainerFindBlobByTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * The response of {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport type ContainerFindBlobsByTagsSegmentResponse = WithResponse<\n  FilterBlobSegment & ContainerFilterBlobsHeaders,\n  ContainerFilterBlobsHeaders,\n  FilterBlobSegmentModel\n>;\n\n/**\n * Options to configure the {@link ContainerClient.getAccountInfo} operation.\n */\nexport interface ContainerGetAccountInfoOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * A ContainerClient represents a URL to the Azure Storage container allowing you to manipulate its blobs.\n */\nexport class ContainerClient extends StorageClient {\n  /**\n   * containerContext provided by protocol layer.\n   */\n  private containerContext: Container;\n\n  private _containerName: string;\n\n  /**\n   * The name of the container.\n   */\n  public get containerName(): string {\n    return this._containerName;\n  }\n  /**\n   *\n   * Creates an instance of ContainerClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n  constructor(connectionString: string, containerName: string, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ContainerClient.\n   * This method accepts an URL pointing to a container.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage container, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of ContainerClient.\n   * This method accepts an URL pointing to a container.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage container, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey,\n          );\n          url = appendToURLPath(extractedCreds.url, encodeURIComponent(containerName));\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\",\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName parameter\");\n    }\n    super(url, pipeline);\n    this._containerName = this.getContainerNameFromUrl();\n    this.containerContext = this.storageClientContext.container;\n  }\n\n  /**\n   * Creates a new container under the specified account. If the container with\n   * the same name already exists, the operation fails.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/create-container\n   * Naming rules: @see https://learn.microsoft.com/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n   *\n   * @param options - Options to Container Create operation.\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const containerClient = blobServiceClient.getContainerClient(\"<container name>\");\n   * const createContainerResponse = await containerClient.create();\n   * console.log(\"Container was created successfully\", createContainerResponse.requestId);\n   * ```\n   */\n  public async create(options: ContainerCreateOptions = {}): Promise<ContainerCreateResponse> {\n    return tracingClient.withSpan(\"ContainerClient-create\", options, async (updatedOptions) => {\n      return assertResponse<ContainerCreateHeaders, ContainerCreateHeaders>(\n        await this.containerContext.create(updatedOptions),\n      );\n    });\n  }\n\n  /**\n   * Creates a new container under the specified account. If the container with\n   * the same name already exists, it is not changed.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/create-container\n   * Naming rules: @see https://learn.microsoft.com/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n   *\n   * @param options -\n   */\n  public async createIfNotExists(\n    options: ContainerCreateOptions = {},\n  ): Promise<ContainerCreateIfNotExistsResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-createIfNotExists\",\n      options,\n      async (updatedOptions) => {\n        try {\n          const res = await this.create(updatedOptions);\n          return {\n            succeeded: true,\n            ...res,\n            _response: res._response, // _response is made non-enumerable\n          };\n        } catch (e: any) {\n          if (e.details?.errorCode === \"ContainerAlreadyExists\") {\n            return {\n              succeeded: false,\n              ...e.response?.parsedHeaders,\n              _response: e.response,\n            };\n          } else {\n            throw e;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Returns true if the Azure container resource represented by this client exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing container might be deleted by other clients or\n   * applications. Vice versa new containers with the same name might be added by other clients or\n   * applications after this function completes.\n   *\n   * @param options -\n   */\n  public async exists(options: ContainerExistsOptions = {}): Promise<boolean> {\n    return tracingClient.withSpan(\"ContainerClient-exists\", options, async (updatedOptions) => {\n      try {\n        await this.getProperties({\n          abortSignal: options.abortSignal,\n          tracingOptions: updatedOptions.tracingOptions,\n        });\n        return true;\n      } catch (e: any) {\n        if (e.statusCode === 404) {\n          return false;\n        }\n        throw e;\n      }\n    });\n  }\n\n  /**\n   * Creates a {@link BlobClient}\n   *\n   * @param blobName - A blob name\n   * @returns A new BlobClient object for the given blob name.\n   */\n  public getBlobClient(blobName: string): BlobClient {\n    return new BlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Creates an {@link AppendBlobClient}\n   *\n   * @param blobName - An append blob name\n   */\n  public getAppendBlobClient(blobName: string): AppendBlobClient {\n    return new AppendBlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Creates a {@link BlockBlobClient}\n   *\n   * @param blobName - A block blob name\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   *\n   * const blockBlobClient = containerClient.getBlockBlobClient(\"<blob name>\");\n   * const uploadBlobResponse = await blockBlobClient.upload(content, content.length);\n   * ```\n   */\n  public getBlockBlobClient(blobName: string): BlockBlobClient {\n    return new BlockBlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Creates a {@link PageBlobClient}\n   *\n   * @param blobName - A page blob name\n   */\n  public getPageBlobClient(blobName: string): PageBlobClient {\n    return new PageBlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Returns all user-defined metadata and system properties for the specified\n   * container. The data returned does not include the container's list of blobs.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/get-container-properties\n   *\n   * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n   * they originally contained uppercase characters. This differs from the metadata keys returned by\n   * the `listContainers` method of {@link BlobServiceClient} using the `includeMetadata` option, which\n   * will retain their original casing.\n   *\n   * @param options - Options to Container Get Properties operation.\n   */\n  public async getProperties(\n    options: ContainerGetPropertiesOptions = {},\n  ): Promise<ContainerGetPropertiesResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\n      \"ContainerClient-getProperties\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ContainerGetPropertiesHeaders, ContainerGetPropertiesHeaders>(\n          await this.containerContext.getProperties({\n            abortSignal: options.abortSignal,\n            ...options.conditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Marks the specified container for deletion. The container and any blobs\n   * contained within it are later deleted during garbage collection.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/delete-container\n   *\n   * @param options - Options to Container Delete operation.\n   */\n  public async delete(\n    options: ContainerDeleteMethodOptions = {},\n  ): Promise<ContainerDeleteResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\"ContainerClient-delete\", options, async (updatedOptions) => {\n      return assertResponse<ContainerDeleteHeaders, ContainerDeleteHeaders>(\n        await this.containerContext.delete({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: options.conditions,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Marks the specified container for deletion if it exists. The container and any blobs\n   * contained within it are later deleted during garbage collection.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/delete-container\n   *\n   * @param options - Options to Container Delete operation.\n   */\n  public async deleteIfExists(\n    options: ContainerDeleteMethodOptions = {},\n  ): Promise<ContainerDeleteIfExistsResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-deleteIfExists\",\n      options,\n      async (updatedOptions) => {\n        try {\n          const res = await this.delete(updatedOptions);\n          return {\n            succeeded: true,\n            ...res,\n            _response: res._response,\n          };\n        } catch (e: any) {\n          if (e.details?.errorCode === \"ContainerNotFound\") {\n            return {\n              succeeded: false,\n              ...e.response?.parsedHeaders,\n              _response: e.response,\n            };\n          }\n          throw e;\n        }\n      },\n    );\n  }\n\n  /**\n   * Sets one or more user-defined name-value pairs for the specified container.\n   *\n   * If no option provided, or no metadata defined in the parameter, the container\n   * metadata will be removed.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/set-container-metadata\n   *\n   * @param metadata - Replace existing metadata with this value.\n   *                            If no value provided the existing metadata will be removed.\n   * @param options - Options to Container Set Metadata operation.\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: ContainerSetMetadataOptions = {},\n  ): Promise<ContainerSetMetadataResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    if (options.conditions.ifUnmodifiedSince) {\n      throw new RangeError(\n        \"the IfUnmodifiedSince must have their default values because they are ignored by the blob service\",\n      );\n    }\n\n    return tracingClient.withSpan(\n      \"ContainerClient-setMetadata\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ContainerSetMetadataHeaders, ContainerSetMetadataHeaders>(\n          await this.containerContext.setMetadata({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            metadata,\n            modifiedAccessConditions: options.conditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Gets the permissions for the specified container. The permissions indicate\n   * whether container data may be accessed publicly.\n   *\n   * WARNING: JavaScript Date will potentially lose precision when parsing startsOn and expiresOn strings.\n   * For example, new Date(\"2018-12-31T03:44:23.8827891Z\").toISOString() will get \"2018-12-31T03:44:23.882Z\".\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/get-container-acl\n   *\n   * @param options - Options to Container Get Access Policy operation.\n   */\n  public async getAccessPolicy(\n    options: ContainerGetAccessPolicyOptions = {},\n  ): Promise<ContainerGetAccessPolicyResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\n      \"ContainerClient-getAccessPolicy\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ContainerGetAccessPolicyResponseModel,\n          ContainerGetAccessPolicyHeaders,\n          SignedIdentifierModel\n        >(\n          await this.containerContext.getAccessPolicy({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        const res: ContainerGetAccessPolicyResponse = {\n          _response: response._response,\n          blobPublicAccess: response.blobPublicAccess,\n          date: response.date,\n          etag: response.etag,\n          errorCode: response.errorCode,\n          lastModified: response.lastModified,\n          requestId: response.requestId,\n          clientRequestId: response.clientRequestId,\n          signedIdentifiers: [],\n          version: response.version,\n        };\n\n        for (const identifier of response) {\n          let accessPolicy: any = undefined;\n          if (identifier.accessPolicy) {\n            accessPolicy = {\n              permissions: identifier.accessPolicy.permissions,\n            };\n\n            if (identifier.accessPolicy.expiresOn) {\n              accessPolicy.expiresOn = new Date(identifier.accessPolicy.expiresOn);\n            }\n\n            if (identifier.accessPolicy.startsOn) {\n              accessPolicy.startsOn = new Date(identifier.accessPolicy.startsOn);\n            }\n          }\n\n          res.signedIdentifiers.push({\n            accessPolicy,\n            id: identifier.id,\n          });\n        }\n\n        return res;\n      },\n    );\n  }\n\n  /**\n   * Sets the permissions for the specified container. The permissions indicate\n   * whether blobs in a container may be accessed publicly.\n   *\n   * When you set permissions for a container, the existing permissions are replaced.\n   * If no access or containerAcl provided, the existing container ACL will be\n   * removed.\n   *\n   * When you establish a stored access policy on a container, it may take up to 30 seconds to take effect.\n   * During this interval, a shared access signature that is associated with the stored access policy will\n   * fail with status code 403 (Forbidden), until the access policy becomes active.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n   *\n   * @param access - The level of public access to data in the container.\n   * @param containerAcl - Array of elements each having a unique Id and details of the access policy.\n   * @param options - Options to Container Set Access Policy operation.\n   */\n  public async setAccessPolicy(\n    access?: PublicAccessType,\n    containerAcl?: SignedIdentifier[],\n    options: ContainerSetAccessPolicyOptions = {},\n  ): Promise<ContainerSetAccessPolicyResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\n      \"ContainerClient-setAccessPolicy\",\n      options,\n      async (updatedOptions) => {\n        const acl: SignedIdentifierModel[] = [];\n        for (const identifier of containerAcl || []) {\n          acl.push({\n            accessPolicy: {\n              expiresOn: identifier.accessPolicy.expiresOn\n                ? truncatedISO8061Date(identifier.accessPolicy.expiresOn)\n                : \"\",\n              permissions: identifier.accessPolicy.permissions,\n              startsOn: identifier.accessPolicy.startsOn\n                ? truncatedISO8061Date(identifier.accessPolicy.startsOn)\n                : \"\",\n            },\n            id: identifier.id,\n          });\n        }\n\n        return assertResponse<ContainerSetAccessPolicyHeaders, ContainerSetAccessPolicyHeaders>(\n          await this.containerContext.setAccessPolicy({\n            abortSignal: options.abortSignal,\n            access,\n            containerAcl: acl,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: options.conditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Get a {@link BlobLeaseClient} that manages leases on the container.\n   *\n   * @param proposeLeaseId - Initial proposed lease Id.\n   * @returns A new BlobLeaseClient object for managing leases on the container.\n   */\n  public getBlobLeaseClient(proposeLeaseId?: string): BlobLeaseClient {\n    return new BlobLeaseClient(this, proposeLeaseId);\n  }\n\n  /**\n   * Creates a new block blob, or updates the content of an existing block blob.\n   *\n   * Updating an existing block blob overwrites any existing metadata on the blob.\n   * Partial updates are not supported; the content of the existing blob is\n   * overwritten with the new content. To perform a partial update of a block blob's,\n   * use {@link BlockBlobClient.stageBlock} and {@link BlockBlobClient.commitBlockList}.\n   *\n   * This is a non-parallel uploading method, please use {@link BlockBlobClient.uploadFile},\n   * {@link BlockBlobClient.uploadStream} or {@link BlockBlobClient.uploadBrowserData} for better\n   * performance with concurrency uploading.\n   *\n   * @see https://learn.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param blobName - Name of the block blob to create or update.\n   * @param body - Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param contentLength - Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param options - Options to configure the Block Blob Upload operation.\n   * @returns Block Blob upload response data and the corresponding BlockBlobClient instance.\n   */\n  public async uploadBlockBlob(\n    blobName: string,\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobUploadOptions = {},\n  ): Promise<{ blockBlobClient: BlockBlobClient; response: BlockBlobUploadResponse }> {\n    return tracingClient.withSpan(\n      \"ContainerClient-uploadBlockBlob\",\n      options,\n      async (updatedOptions) => {\n        const blockBlobClient = this.getBlockBlobClient(blobName);\n        const response = await blockBlobClient.upload(body, contentLength, updatedOptions);\n        return {\n          blockBlobClient,\n          response,\n        };\n      },\n    );\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param blobName -\n   * @param options - Options to Blob Delete operation.\n   * @returns Block blob deletion response data.\n   */\n  public async deleteBlob(\n    blobName: string,\n    options: ContainerDeleteBlobOptions = {},\n  ): Promise<BlobDeleteResponse> {\n    return tracingClient.withSpan(\"ContainerClient-deleteBlob\", options, async (updatedOptions) => {\n      let blobClient = this.getBlobClient(blobName);\n      if (options.versionId) {\n        blobClient = blobClient.withVersion(options.versionId);\n      }\n      return blobClient.delete(updatedOptions);\n    });\n  }\n\n  /**\n   * listBlobFlatSegment returns a single segment of blobs starting from the\n   * specified Marker. Use an empty Marker to start enumeration from the beginning.\n   * After getting a segment, process it, and then call listBlobsFlatSegment again\n   * (passing the the previously-returned Marker) to get the next segment.\n   * @see https://learn.microsoft.com/rest/api/storageservices/list-blobs\n   *\n   * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param options - Options to Container List Blob Flat Segment operation.\n   */\n  private async listBlobFlatSegment(\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {},\n  ): Promise<ContainerListBlobFlatSegmentResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-listBlobFlatSegment\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ListBlobsFlatSegmentResponseInternal,\n          ContainerListBlobFlatSegmentHeaders,\n          ListBlobsFlatSegmentResponseInternal\n        >(\n          await this.containerContext.listBlobFlatSegment({\n            marker,\n            ...options,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        const wrappedResponse: ContainerListBlobFlatSegmentResponse = {\n          ...response,\n          _response: {\n            ...response._response,\n            parsedBody: ConvertInternalResponseOfListBlobFlat(response._response.parsedBody),\n          }, // _response is made non-enumerable\n          segment: {\n            ...response.segment,\n            blobItems: response.segment.blobItems.map((blobItemInternal) => {\n              const blobItem: BlobItem = {\n                ...blobItemInternal,\n                name: BlobNameToString(blobItemInternal.name),\n                tags: toTags(blobItemInternal.blobTags),\n                objectReplicationSourceProperties: parseObjectReplicationRecord(\n                  blobItemInternal.objectReplicationMetadata,\n                ),\n              };\n              return blobItem;\n            }),\n          },\n        };\n        return wrappedResponse;\n      },\n    );\n  }\n\n  /**\n   * listBlobHierarchySegment returns a single segment of blobs starting from\n   * the specified Marker. Use an empty Marker to start enumeration from the\n   * beginning. After getting a segment, process it, and then call listBlobsHierarchicalSegment\n   * again (passing the the previously-returned Marker) to get the next segment.\n   * @see https://learn.microsoft.com/rest/api/storageservices/list-blobs\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param options - Options to Container List Blob Hierarchy Segment operation.\n   */\n  private async listBlobHierarchySegment(\n    delimiter: string,\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {},\n  ): Promise<ContainerListBlobHierarchySegmentResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-listBlobHierarchySegment\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ContainerListBlobHierarchySegmentResponseModel,\n          ContainerListBlobHierarchySegmentHeaders,\n          ListBlobsHierarchySegmentResponseInternal\n        >(\n          await this.containerContext.listBlobHierarchySegment(delimiter, {\n            marker,\n            ...options,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        const wrappedResponse: ContainerListBlobHierarchySegmentResponse = {\n          ...response,\n          _response: {\n            ...response._response,\n            parsedBody: ConvertInternalResponseOfListBlobHierarchy(response._response.parsedBody),\n          }, // _response is made non-enumerable\n          segment: {\n            ...response.segment,\n            blobItems: response.segment.blobItems.map((blobItemInternal) => {\n              const blobItem: BlobItem = {\n                ...blobItemInternal,\n                name: BlobNameToString(blobItemInternal.name),\n                tags: toTags(blobItemInternal.blobTags),\n                objectReplicationSourceProperties: parseObjectReplicationRecord(\n                  blobItemInternal.objectReplicationMetadata,\n                ),\n              };\n              return blobItem;\n            }),\n            blobPrefixes: response.segment.blobPrefixes?.map((blobPrefixInternal) => {\n              const blobPrefix: BlobPrefix = {\n                ...blobPrefixInternal,\n                name: BlobNameToString(blobPrefixInternal.name),\n              };\n              return blobPrefix;\n            }),\n          },\n        };\n        return wrappedResponse;\n      },\n    );\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerListBlobFlatSegmentResponse\n   *\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to list blobs operation.\n   */\n  private async *listSegments(\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {},\n  ): AsyncIterableIterator<ContainerListBlobFlatSegmentResponse> {\n    let listBlobsFlatSegmentResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listBlobsFlatSegmentResponse = await this.listBlobFlatSegment(marker, options);\n        marker = listBlobsFlatSegmentResponse.continuationToken;\n        yield await listBlobsFlatSegmentResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator of {@link BlobItem} objects\n   *\n   * @param options - Options to list blobs operation.\n   */\n  private async *listItems(\n    options: ContainerListBlobsSegmentOptions = {},\n  ): AsyncIterableIterator<BlobItem> {\n    let marker: string | undefined;\n    for await (const listBlobsFlatSegmentResponse of this.listSegments(marker, options)) {\n      yield* listBlobsFlatSegmentResponse.segment.blobItems;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the blobs\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * // Get the containerClient before you run these snippets,\n   * // Can be obtained from `blobServiceClient.getContainerClient(\"<your-container-name>\");`\n   * let i = 1;\n   * for await (const blob of containerClient.listBlobsFlat()) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = containerClient.listBlobsFlat();\n   * let blobItem = await iter.next();\n   * while (!blobItem.done) {\n   *   console.log(`Blob ${i++}: ${blobItem.value.name}`);\n   *   blobItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of containerClient.listBlobsFlat().byPage({ maxPageSize: 20 })) {\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = containerClient.listBlobsFlat().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 blob names\n   * for (const blob of response.segment.blobItems) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   *\n   * iterator = containerClient.listBlobsFlat().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 blob names\n   * for (const blob of response.segment.blobItems) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   * ```\n   *\n   * @param options - Options to list blobs.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listBlobsFlat(\n    options: ContainerListBlobsOptions = {},\n  ): PagedAsyncIterableIterator<BlobItem, ContainerListBlobFlatSegmentResponse> {\n    const include: ListBlobsIncludeItem[] = [];\n    if (options.includeCopy) {\n      include.push(\"copy\");\n    }\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSnapshots) {\n      include.push(\"snapshots\");\n    }\n    if (options.includeVersions) {\n      include.push(\"versions\");\n    }\n    if (options.includeUncommitedBlobs) {\n      include.push(\"uncommittedblobs\");\n    }\n    if (options.includeTags) {\n      include.push(\"tags\");\n    }\n    if (options.includeDeletedWithVersions) {\n      include.push(\"deletedwithversions\");\n    }\n    if (options.includeImmutabilityPolicy) {\n      include.push(\"immutabilitypolicy\");\n    }\n    if (options.includeLegalHold) {\n      include.push(\"legalhold\");\n    }\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const updatedOptions: ContainerListBlobsSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include: include } : {}),\n    };\n\n    // AsyncIterableIterator to iterate over blobs\n    const iter = this.listItems(updatedOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...updatedOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerListBlobHierarchySegmentResponse\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to list blobs operation.\n   */\n  private async *listHierarchySegments(\n    delimiter: string,\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {},\n  ): AsyncIterableIterator<ContainerListBlobHierarchySegmentResponse> {\n    let listBlobsHierarchySegmentResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listBlobsHierarchySegmentResponse = await this.listBlobHierarchySegment(\n          delimiter,\n          marker,\n          options,\n        );\n        marker = listBlobsHierarchySegmentResponse.continuationToken;\n        yield await listBlobsHierarchySegmentResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for {@link BlobPrefix} and {@link BlobItem} objects.\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param options - Options to list blobs operation.\n   */\n  private async *listItemsByHierarchy(\n    delimiter: string,\n    options: ContainerListBlobsSegmentOptions = {},\n  ): AsyncIterableIterator<({ kind: \"prefix\" } & BlobPrefix) | ({ kind: \"blob\" } & BlobItem)> {\n    let marker: string | undefined;\n    for await (const listBlobsHierarchySegmentResponse of this.listHierarchySegments(\n      delimiter,\n      marker,\n      options,\n    )) {\n      const segment = listBlobsHierarchySegmentResponse.segment;\n      if (segment.blobPrefixes) {\n        for (const prefix of segment.blobPrefixes) {\n          yield {\n            kind: \"prefix\",\n            ...prefix,\n          };\n        }\n      }\n      for (const blob of segment.blobItems) {\n        yield { kind: \"blob\", ...blob };\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the blobs by hierarchy.\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs by hierarchy in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * for await (const item of containerClient.listBlobsByHierarchy(\"/\")) {\n   *   if (item.kind === \"prefix\") {\n   *     console.log(`\\tBlobPrefix: ${item.name}`);\n   *   } else {\n   *     console.log(`\\tBlobItem: name - ${item.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let iter = containerClient.listBlobsByHierarchy(\"/\", { prefix: \"prefix1/\" });\n   * let entity = await iter.next();\n   * while (!entity.done) {\n   *   let item = entity.value;\n   *   if (item.kind === \"prefix\") {\n   *     console.log(`\\tBlobPrefix: ${item.name}`);\n   *   } else {\n   *     console.log(`\\tBlobItem: name - ${item.name}`);\n   *   }\n   *   entity = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * console.log(\"Listing blobs by hierarchy by page\");\n   * for await (const response of containerClient.listBlobsByHierarchy(\"/\").byPage()) {\n   *   const segment = response.segment;\n   *   if (segment.blobPrefixes) {\n   *     for (const prefix of segment.blobPrefixes) {\n   *       console.log(`\\tBlobPrefix: ${prefix.name}`);\n   *     }\n   *   }\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`\\tBlobItem: name - ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a max page size:\n   *\n   * ```js\n   * console.log(\"Listing blobs by hierarchy by page, specifying a prefix and a max page size\");\n   *\n   * let i = 1;\n   * for await (const response of containerClient\n   *   .listBlobsByHierarchy(\"/\", { prefix: \"prefix2/sub1/\" })\n   *   .byPage({ maxPageSize: 2 })) {\n   *   console.log(`Page ${i++}`);\n   *   const segment = response.segment;\n   *\n   *   if (segment.blobPrefixes) {\n   *     for (const prefix of segment.blobPrefixes) {\n   *       console.log(`\\tBlobPrefix: ${prefix.name}`);\n   *     }\n   *   }\n   *\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`\\tBlobItem: name - ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param options - Options to list blobs operation.\n   */\n  public listBlobsByHierarchy(\n    delimiter: string,\n    options: ContainerListBlobsOptions = {},\n  ): PagedAsyncIterableIterator<\n    ({ kind: \"prefix\" } & BlobPrefix) | ({ kind: \"blob\" } & BlobItem),\n    ContainerListBlobHierarchySegmentResponse\n  > {\n    if (delimiter === \"\") {\n      throw new RangeError(\"delimiter should contain one or more characters\");\n    }\n\n    const include: ListBlobsIncludeItem[] = [];\n    if (options.includeCopy) {\n      include.push(\"copy\");\n    }\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSnapshots) {\n      include.push(\"snapshots\");\n    }\n    if (options.includeVersions) {\n      include.push(\"versions\");\n    }\n    if (options.includeUncommitedBlobs) {\n      include.push(\"uncommittedblobs\");\n    }\n    if (options.includeTags) {\n      include.push(\"tags\");\n    }\n    if (options.includeDeletedWithVersions) {\n      include.push(\"deletedwithversions\");\n    }\n    if (options.includeImmutabilityPolicy) {\n      include.push(\"immutabilitypolicy\");\n    }\n    if (options.includeLegalHold) {\n      include.push(\"legalhold\");\n    }\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const updatedOptions: ContainerListBlobsSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include: include } : {}),\n    };\n    // AsyncIterableIterator to iterate over blob prefixes and blobs\n    const iter = this.listItemsByHierarchy(delimiter, updatedOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      async next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listHierarchySegments(delimiter, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...updatedOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs in the container whose tags\n   * match a given search expression.\n   *\n   * @param tagFilterSqlExpression - The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                        The given expression must evaluate to true for a blob to be returned in the results.\n   *                                        The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                        however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async findBlobsByTagsSegment(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ContainerFindBlobsByTagsSegmentOptions = {},\n  ): Promise<ContainerFindBlobsByTagsSegmentResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-findBlobsByTagsSegment\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ContainerFilterBlobsResponse,\n          ContainerFilterBlobsHeaders,\n          FilterBlobSegmentModel\n        >(\n          await this.containerContext.filterBlobs({\n            abortSignal: options.abortSignal,\n            where: tagFilterSqlExpression,\n            marker,\n            maxPageSize: options.maxPageSize,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        const wrappedResponse: ContainerFindBlobsByTagsSegmentResponse = {\n          ...response,\n          _response: response._response, // _response is made non-enumerable\n          blobs: response.blobs.map((blob) => {\n            let tagValue = \"\";\n            if (blob.tags?.blobTagSet.length === 1) {\n              tagValue = blob.tags.blobTagSet[0].value;\n            }\n            return { ...blob, tags: toTags(blob.tags), tagValue };\n          }),\n        };\n        return wrappedResponse;\n      },\n    );\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerFindBlobsByTagsSegmentResponse.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async *findBlobsByTagsSegments(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ContainerFindBlobsByTagsSegmentOptions = {},\n  ): AsyncIterableIterator<ContainerFindBlobsByTagsSegmentResponse> {\n    let response;\n    if (!!marker || marker === undefined) {\n      do {\n        response = await this.findBlobsByTagsSegment(tagFilterSqlExpression, marker, options);\n        response.blobs = response.blobs || [];\n        marker = response.continuationToken;\n        yield response;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for blobs.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to findBlobsByTagsItems.\n   */\n  private async *findBlobsByTagsItems(\n    tagFilterSqlExpression: string,\n    options: ContainerFindBlobsByTagsSegmentOptions = {},\n  ): AsyncIterableIterator<FilterBlobItem> {\n    let marker: string | undefined;\n    for await (const segment of this.findBlobsByTagsSegments(\n      tagFilterSqlExpression,\n      marker,\n      options,\n    )) {\n      yield* segment.blobs;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to find all blobs with specified tag\n   * under the specified container.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const blob of containerClient.findBlobsByTags(\"tagkey='tagvalue'\")) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * const iter = containerClient.findBlobsByTags(\"tagkey='tagvalue'\");\n   * let blobItem = await iter.next();\n   * while (!blobItem.done) {\n   *   console.log(`Blob ${i++}: ${blobItem.value.name}`);\n   *   blobItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of containerClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 20 })) {\n   *   if (response.blobs) {\n   *     for (const blob of response.blobs) {\n   *       console.log(`Blob ${i++}: ${blob.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = containerClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   * // Passing next marker as continuationToken\n   * iterator = containerClient\n   *   .findBlobsByTags(\"tagkey='tagvalue'\")\n   *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *      console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to find blobs by tags.\n   */\n  public findBlobsByTags(\n    tagFilterSqlExpression: string,\n    options: ContainerFindBlobByTagsOptions = {},\n  ): PagedAsyncIterableIterator<FilterBlobItem, ContainerFindBlobsByTagsSegmentResponse> {\n    // AsyncIterableIterator to iterate over blobs\n    const listSegmentOptions: ContainerFindBlobsByTagsSegmentOptions = {\n      ...options,\n    };\n\n    const iter = this.findBlobsByTagsItems(tagFilterSqlExpression, listSegmentOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.findBlobsByTagsSegments(tagFilterSqlExpression, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...listSegmentOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * The Get Account Information operation returns the sku name and account kind\n   * for the specified account.\n   * The Get Account Information operation is available on service versions beginning\n   * with version 2018-03-28.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/get-account-information\n   *\n   * @param options - Options to the Service Get Account Info operation.\n   * @returns Response data for the Service Get Account Info operation.\n   */\n  public async getAccountInfo(\n    options: ContainerGetAccountInfoOptions = {},\n  ): Promise<ContainerGetAccountInfoResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-getAccountInfo\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ContainerGetAccountInfoHeaders, ContainerGetAccountInfoHeaders>(\n          await this.containerContext.getAccountInfo({\n            abortSignal: options.abortSignal,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  private getContainerNameFromUrl(): string {\n    let containerName;\n    try {\n      //  URL may look like the following\n      // \"https://myaccount.blob.core.windows.net/mycontainer?sasString\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer\";\n      // IPv4/IPv6 address hosts, Endpoints - `http://127.0.0.1:10000/devstoreaccount1/containername`\n      // http://localhost:10001/devstoreaccount1/containername\n\n      const parsedUrl = new URL(this.url);\n\n      if (parsedUrl.hostname.split(\".\")[1] === \"blob\") {\n        // \"https://myaccount.blob.core.windows.net/containername\".\n        // \"https://customdomain.com/containername\".\n        // .getPath() -> /containername\n        containerName = parsedUrl.pathname.split(\"/\")[1];\n      } else if (isIpEndpointStyle(parsedUrl)) {\n        // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/containername\n        // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/containername\n        // .getPath() -> /devstoreaccount1/containername\n        containerName = parsedUrl.pathname.split(\"/\")[2];\n      } else {\n        // \"https://customdomain.com/containername\".\n        // .getPath() -> /containername\n        containerName = parsedUrl.pathname.split(\"/\")[1];\n      }\n\n      // decode the encoded containerName - to get all the special characters that might be present in it\n      containerName = decodeURIComponent(containerName);\n\n      if (!containerName) {\n        throw new Error(\"Provided containerName is invalid.\");\n      }\n\n      return containerName;\n    } catch (error: any) {\n      throw new Error(\"Unable to extract containerName with provided information.\");\n    }\n  }\n\n  /**\n   * Only available for ContainerClient constructed with a shared key credential.\n   *\n   * Generates a Blob Container Service Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateSasUrl(options: ContainerGenerateSasUrlOptions): Promise<string> {\n    return new Promise((resolve) => {\n      if (!(this.credential instanceof StorageSharedKeyCredential)) {\n        throw new RangeError(\n          \"Can only generate the SAS when the client is initialized with a shared key credential\",\n        );\n      }\n\n      const sas = generateBlobSASQueryParameters(\n        {\n          containerName: this._containerName,\n          ...options,\n        },\n        this.credential,\n      ).toString();\n\n      resolve(appendToURLQuery(this.url, sas));\n    });\n  }\n\n  /**\n   * Only available for ContainerClient constructed with a shared key credential.\n   *\n   * Generates string to sign for a Blob Container Service Shared Access Signature (SAS) URI\n   * based on the client properties and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n  public generateSasStringToSign(options: ContainerGenerateSasUrlOptions): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw new RangeError(\n        \"Can only generate the SAS when the client is initialized with a shared key credential\",\n      );\n    }\n\n    return generateBlobSASQueryParametersInternal(\n      {\n        containerName: this._containerName,\n        ...options,\n      },\n      this.credential,\n    ).stringToSign;\n  }\n\n  /**\n   * Generates a Blob Container Service Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the input user delegation key.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @param userDelegationKey -  Return value of `blobServiceClient.getUserDelegationKey()`\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateUserDelegationSasUrl(\n    options: ContainerGenerateSasUrlOptions,\n    userDelegationKey: UserDelegationKey,\n  ): Promise<string> {\n    return new Promise((resolve) => {\n      const sas = generateBlobSASQueryParameters(\n        {\n          containerName: this._containerName,\n          ...options,\n        },\n        userDelegationKey,\n        this.accountName,\n      ).toString();\n\n      resolve(appendToURLQuery(this.url, sas));\n    });\n  }\n\n  /**\n   * Generates string to sign for a Blob Container Service Shared Access Signature (SAS) URI\n   * based on the client properties and parameters passed in. The SAS is signed by the input user delegation key.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @param userDelegationKey -  Return value of `blobServiceClient.getUserDelegationKey()`\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n\n  public generateUserDelegationSasStringToSign(\n    options: ContainerGenerateSasUrlOptions,\n    userDelegationKey: UserDelegationKey,\n  ): string {\n    return generateBlobSASQueryParametersInternal(\n      {\n        containerName: this._containerName,\n        ...options,\n      },\n      userDelegationKey,\n      this.accountName,\n    ).stringToSign;\n  }\n\n  /**\n   * Creates a BlobBatchClient object to conduct batch operations.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/blob-batch\n   *\n   * @returns A new BlobBatchClient object for this container.\n   */\n  public getBlobBatchClient(): BlobBatchClient {\n    return new BlobBatchClient(this.url, this.pipeline);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the\n * values are set, this should be serialized with toString and set as the permissions field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class AccountSASPermissions {\n  /**\n   * Parse initializes the AccountSASPermissions fields from a string.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n\n    for (const c of permissions) {\n      switch (c) {\n        case \"r\":\n          accountSASPermissions.read = true;\n          break;\n        case \"w\":\n          accountSASPermissions.write = true;\n          break;\n        case \"d\":\n          accountSASPermissions.delete = true;\n          break;\n        case \"x\":\n          accountSASPermissions.deleteVersion = true;\n          break;\n        case \"l\":\n          accountSASPermissions.list = true;\n          break;\n        case \"a\":\n          accountSASPermissions.add = true;\n          break;\n        case \"c\":\n          accountSASPermissions.create = true;\n          break;\n        case \"u\":\n          accountSASPermissions.update = true;\n          break;\n        case \"p\":\n          accountSASPermissions.process = true;\n          break;\n        case \"t\":\n          accountSASPermissions.tag = true;\n          break;\n        case \"f\":\n          accountSASPermissions.filter = true;\n          break;\n        case \"i\":\n          accountSASPermissions.setImmutabilityPolicy = true;\n          break;\n        case \"y\":\n          accountSASPermissions.permanentDelete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission character: ${c}`);\n      }\n    }\n\n    return accountSASPermissions;\n  }\n\n  /**\n   * Creates a {@link AccountSASPermissions} from a raw object which contains same keys as it\n   * and boolean values for them.\n   *\n   * @param permissionLike -\n   */\n  public static from(permissionLike: AccountSASPermissionsLike): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n    if (permissionLike.read) {\n      accountSASPermissions.read = true;\n    }\n    if (permissionLike.write) {\n      accountSASPermissions.write = true;\n    }\n    if (permissionLike.delete) {\n      accountSASPermissions.delete = true;\n    }\n    if (permissionLike.deleteVersion) {\n      accountSASPermissions.deleteVersion = true;\n    }\n    if (permissionLike.filter) {\n      accountSASPermissions.filter = true;\n    }\n    if (permissionLike.tag) {\n      accountSASPermissions.tag = true;\n    }\n    if (permissionLike.list) {\n      accountSASPermissions.list = true;\n    }\n    if (permissionLike.add) {\n      accountSASPermissions.add = true;\n    }\n    if (permissionLike.create) {\n      accountSASPermissions.create = true;\n    }\n    if (permissionLike.update) {\n      accountSASPermissions.update = true;\n    }\n    if (permissionLike.process) {\n      accountSASPermissions.process = true;\n    }\n    if (permissionLike.setImmutabilityPolicy) {\n      accountSASPermissions.setImmutabilityPolicy = true;\n    }\n    if (permissionLike.permanentDelete) {\n      accountSASPermissions.permanentDelete = true;\n    }\n    return accountSASPermissions;\n  }\n\n  /**\n   * Permission to read resources and list queues and tables granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Permission to write resources granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Permission to delete blobs and files granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Permission to delete versions granted.\n   */\n  public deleteVersion: boolean = false;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   */\n  public list: boolean = false;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   */\n  public update: boolean = false;\n\n  /**\n   * Permission to get and delete messages granted.\n   */\n  public process: boolean = false;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  public tag: boolean = false;\n\n  /**\n   * Permission to filter blobs.\n   */\n  public filter: boolean = false;\n\n  /**\n   * Permission to set immutability policy.\n   */\n  public setImmutabilityPolicy: boolean = false;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  public permanentDelete: boolean = false;\n\n  /**\n   * Produces the SAS permissions string for an Azure Storage account.\n   * Call this method to set AccountSASSignatureValues Permissions field.\n   *\n   * Using this method will guarantee the resource types are in\n   * an order accepted by the service.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   */\n  public toString(): string {\n    // The order of the characters should be as specified here to ensure correctness:\n    // https://learn.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n    // Use a string array instead of string concatenating += operator for performance\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.deleteVersion) {\n      permissions.push(\"x\");\n    }\n    if (this.filter) {\n      permissions.push(\"f\");\n    }\n    if (this.tag) {\n      permissions.push(\"t\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.update) {\n      permissions.push(\"u\");\n    }\n    if (this.process) {\n      permissions.push(\"p\");\n    }\n    if (this.setImmutabilityPolicy) {\n      permissions.push(\"i\");\n    }\n    if (this.permanentDelete) {\n      permissions.push(\"y\");\n    }\n    return permissions.join(\"\");\n  }\n}\n\n/**\n * A type that looks like an account SAS permission.\n * Used in {@link AccountSASPermissions} to parse SAS permissions from raw objects.\n */\nexport interface AccountSASPermissionsLike {\n  /**\n   * Permission to read resources and list queues and tables granted.\n   */\n  read?: boolean;\n\n  /**\n   * Permission to write resources granted.\n   */\n  write?: boolean;\n\n  /**\n   * Permission to delete blobs and files granted.\n   */\n  delete?: boolean;\n\n  /**\n   * Permission to delete versions granted.\n   */\n  deleteVersion?: boolean;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   */\n  list?: boolean;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   */\n  add?: boolean;\n\n  /**\n   * Permission to create blobs and files granted.\n   */\n  create?: boolean;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   */\n  update?: boolean;\n\n  /**\n   * Permission to get and delete messages granted.\n   */\n  process?: boolean;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  tag?: boolean;\n\n  /**\n   * Permission to filter blobs.\n   */\n  filter?: boolean;\n\n  /**\n   * Permission to set immutability policy.\n   */\n  setImmutabilityPolicy?: boolean;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  permanentDelete?: boolean;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the\n * values are set, this should be serialized with toString and set as the resources field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the resources string without this class, but\n * the order of the resources is particular and this class guarantees correctness.\n */\nexport class AccountSASResourceTypes {\n  /**\n   * Creates an {@link AccountSASResourceTypes} from the specified resource types string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid resource type.\n   *\n   * @param resourceTypes -\n   */\n  public static parse(resourceTypes: string): AccountSASResourceTypes {\n    const accountSASResourceTypes = new AccountSASResourceTypes();\n\n    for (const c of resourceTypes) {\n      switch (c) {\n        case \"s\":\n          accountSASResourceTypes.service = true;\n          break;\n        case \"c\":\n          accountSASResourceTypes.container = true;\n          break;\n        case \"o\":\n          accountSASResourceTypes.object = true;\n          break;\n        default:\n          throw new RangeError(`Invalid resource type: ${c}`);\n      }\n    }\n\n    return accountSASResourceTypes;\n  }\n\n  /**\n   * Permission to access service level APIs granted.\n   */\n  public service: boolean = false;\n\n  /**\n   * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares) granted.\n   */\n  public container: boolean = false;\n\n  /**\n   * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files) granted.\n   */\n  public object: boolean = false;\n\n  /**\n   * Converts the given resource types to a string.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   */\n  public toString(): string {\n    const resourceTypes: string[] = [];\n    if (this.service) {\n      resourceTypes.push(\"s\");\n    }\n    if (this.container) {\n      resourceTypes.push(\"c\");\n    }\n    if (this.object) {\n      resourceTypes.push(\"o\");\n    }\n    return resourceTypes.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that service. Once all the\n * values are set, this should be serialized with toString and set as the services field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the services string without this class, but\n * the order of the services is particular and this class guarantees correctness.\n */\nexport class AccountSASServices {\n  /**\n   * Creates an {@link AccountSASServices} from the specified services string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid service.\n   *\n   * @param services -\n   */\n  public static parse(services: string): AccountSASServices {\n    const accountSASServices = new AccountSASServices();\n\n    for (const c of services) {\n      switch (c) {\n        case \"b\":\n          accountSASServices.blob = true;\n          break;\n        case \"f\":\n          accountSASServices.file = true;\n          break;\n        case \"q\":\n          accountSASServices.queue = true;\n          break;\n        case \"t\":\n          accountSASServices.table = true;\n          break;\n        default:\n          throw new RangeError(`Invalid service character: ${c}`);\n      }\n    }\n\n    return accountSASServices;\n  }\n\n  /**\n   * Permission to access blob resources granted.\n   */\n  public blob: boolean = false;\n\n  /**\n   * Permission to access file resources granted.\n   */\n  public file: boolean = false;\n\n  /**\n   * Permission to access queue resources granted.\n   */\n  public queue: boolean = false;\n\n  /**\n   * Permission to access table resources granted.\n   */\n  public table: boolean = false;\n\n  /**\n   * Converts the given services to a string.\n   *\n   */\n  public toString(): string {\n    const services: string[] = [];\n    if (this.blob) {\n      services.push(\"b\");\n    }\n    if (this.table) {\n      services.push(\"t\");\n    }\n    if (this.queue) {\n      services.push(\"q\");\n    }\n    if (this.file) {\n      services.push(\"f\");\n    }\n    return services.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AccountSASPermissions } from \"./AccountSASPermissions\";\nimport { AccountSASResourceTypes } from \"./AccountSASResourceTypes\";\nimport { AccountSASServices } from \"./AccountSASServices\";\nimport type { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport type { SasIPRange } from \"./SasIPRange\";\nimport { ipRangeToString } from \"./SasIPRange\";\nimport type { SASProtocol } from \"./SASQueryParameters\";\nimport { SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"../utils/constants\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * AccountSASSignatureValues is used to generate a Shared Access Signature (SAS) for an Azure Storage account. Once\n * all the values here are set appropriately, call {@link generateAccountSASQueryParameters} to obtain a representation\n * of the SAS which can actually be applied to blob urls. Note: that both this class and {@link SASQueryParameters}\n * exist because the former is mutable and a logical representation while the latter is immutable and used to generate\n * actual REST requests.\n *\n * @see https://learn.microsoft.com/en-us/azure/storage/common/storage-dotnet-shared-access-signature-part-1\n * for more conceptual information on SAS\n *\n * @see https://learn.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n * for descriptions of the parameters, including which are required\n */\nexport interface AccountSASSignatureValues {\n  /**\n   * If not provided, this defaults to the service version targeted by this version of the library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * The time after which the SAS will no longer work.\n   */\n  expiresOn: Date;\n\n  /**\n   * Specifies which operations the SAS user may perform. Please refer to {@link AccountSASPermissions} for help\n   * constructing the permissions string.\n   */\n  permissions: AccountSASPermissions;\n\n  /**\n   * Optional. IP range allowed.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The values that indicate the services accessible with this SAS. Please refer to {@link AccountSASServices} to\n   * construct this value.\n   */\n  services: string;\n\n  /**\n   * The values that indicate the resource types accessible with this SAS. Please refer\n   * to {@link AccountSASResourceTypes} to construct this value.\n   */\n  resourceTypes: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Generates a {@link SASQueryParameters} object which contains all SAS query parameters needed to make an actual\n * REST request.\n *\n * @see https://learn.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n *\n * @param accountSASSignatureValues -\n * @param sharedKeyCredential -\n */\nexport function generateAccountSASQueryParameters(\n  accountSASSignatureValues: AccountSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): SASQueryParameters {\n  return generateAccountSASQueryParametersInternal(accountSASSignatureValues, sharedKeyCredential)\n    .sasQueryParameters;\n}\n\nexport function generateAccountSASQueryParametersInternal(\n  accountSASSignatureValues: AccountSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  const version = accountSASSignatureValues.version\n    ? accountSASSignatureValues.version\n    : SERVICE_VERSION;\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.setImmutabilityPolicy &&\n    version < \"2020-08-04\"\n  ) {\n    throw RangeError(\"'version' must be >= '2020-08-04' when provided 'i' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.deleteVersion &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when provided 'x' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.permanentDelete &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when provided 'y' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.tag &&\n    version < \"2019-12-12\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-12-12' when provided 't' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.filter &&\n    version < \"2019-12-12\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-12-12' when provided 'f' permission.\");\n  }\n\n  if (accountSASSignatureValues.encryptionScope && version < \"2020-12-06\") {\n    throw RangeError(\"'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.\");\n  }\n\n  const parsedPermissions = AccountSASPermissions.parse(\n    accountSASSignatureValues.permissions.toString(),\n  );\n  const parsedServices = AccountSASServices.parse(accountSASSignatureValues.services).toString();\n  const parsedResourceTypes = AccountSASResourceTypes.parse(\n    accountSASSignatureValues.resourceTypes,\n  ).toString();\n\n  let stringToSign: string;\n\n  if (version >= \"2020-12-06\") {\n    stringToSign = [\n      sharedKeyCredential.accountName,\n      parsedPermissions,\n      parsedServices,\n      parsedResourceTypes,\n      accountSASSignatureValues.startsOn\n        ? truncatedISO8061Date(accountSASSignatureValues.startsOn, false)\n        : \"\",\n      truncatedISO8061Date(accountSASSignatureValues.expiresOn, false),\n      accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n      accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n      version,\n      accountSASSignatureValues.encryptionScope ? accountSASSignatureValues.encryptionScope : \"\",\n      \"\", // Account SAS requires an additional newline character\n    ].join(\"\\n\");\n  } else {\n    stringToSign = [\n      sharedKeyCredential.accountName,\n      parsedPermissions,\n      parsedServices,\n      parsedResourceTypes,\n      accountSASSignatureValues.startsOn\n        ? truncatedISO8061Date(accountSASSignatureValues.startsOn, false)\n        : \"\",\n      truncatedISO8061Date(accountSASSignatureValues.expiresOn, false),\n      accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n      accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n      version,\n      \"\", // Account SAS requires an additional newline character\n    ].join(\"\\n\");\n  }\n\n  const signature: string = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return {\n    sasQueryParameters: new SASQueryParameters(\n      version,\n      signature,\n      parsedPermissions.toString(),\n      parsedServices,\n      parsedResourceTypes,\n      accountSASSignatureValues.protocol,\n      accountSASSignatureValues.startsOn,\n      accountSASSignatureValues.expiresOn,\n      accountSASSignatureValues.ipRange,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      accountSASSignatureValues.encryptionScope,\n    ),\n    stringToSign: stringToSign,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport { getDefaultProxySettings } from \"@azure/core-rest-pipeline\";\nimport { isNode } from \"@azure/core-util\";\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type {\n  ServiceGetUserDelegationKeyHeaders,\n  ContainerCreateResponse,\n  ContainerDeleteResponse,\n  ServiceGetPropertiesResponse,\n  BlobServiceProperties,\n  ServiceSetPropertiesResponse,\n  ServiceGetStatisticsResponse,\n  ServiceGetAccountInfoResponse,\n  ServiceListContainersSegmentResponse,\n  ContainerItem,\n  UserDelegationKeyModel,\n  ContainerUndeleteResponse,\n  FilterBlobSegmentModel,\n  ServiceFilterBlobsHeaders,\n  ContainerRenameResponse,\n  LeaseAccessConditions,\n  FilterBlobSegment,\n  FilterBlobItem,\n  ServiceGetPropertiesResponseInternal,\n  ServiceGetStatisticsResponseInternal,\n  ServiceListContainersSegmentResponseInternal,\n} from \"./generatedModels\";\nimport type { Service } from \"./generated/src/operationsInterfaces\";\nimport type { StoragePipelineOptions, PipelineLike } from \"./Pipeline\";\nimport { newPipeline, isPipelineLike } from \"./Pipeline\";\nimport type { ContainerCreateOptions, ContainerDeleteMethodOptions } from \"./ContainerClient\";\nimport { ContainerClient } from \"./ContainerClient\";\nimport type { WithResponse } from \"./utils/utils.common\";\nimport {\n  appendToURLPath,\n  appendToURLQuery,\n  extractConnectionStringParts,\n  toTags,\n} from \"./utils/utils.common\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport type { PageSettings, PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { truncatedISO8061Date, assertResponse } from \"./utils/utils.common\";\nimport { tracingClient } from \"./utils/tracing\";\nimport { BlobBatchClient } from \"./BlobBatchClient\";\nimport type { CommonOptions } from \"./StorageClient\";\nimport { StorageClient } from \"./StorageClient\";\nimport { AccountSASPermissions } from \"./sas/AccountSASPermissions\";\nimport type { SASProtocol } from \"./sas/SASQueryParameters\";\nimport type { SasIPRange } from \"./sas/SasIPRange\";\nimport {\n  generateAccountSASQueryParameters,\n  generateAccountSASQueryParametersInternal,\n} from \"./sas/AccountSASSignatureValues\";\nimport { AccountSASServices } from \"./sas/AccountSASServices\";\nimport type {\n  ContainerRenameHeaders,\n  ContainerRestoreHeaders,\n  ListContainersIncludeType,\n  ServiceFilterBlobsResponse,\n  ServiceGetAccountInfoHeaders,\n  ServiceGetPropertiesHeaders,\n  ServiceGetStatisticsHeaders,\n  ServiceGetUserDelegationKeyResponse as ServiceGetUserDelegationKeyResponseModel,\n  ServiceListContainersSegmentHeaders,\n  ServiceSetPropertiesHeaders,\n} from \"./generated/src\";\n\n/**\n * Options to configure the {@link BlobServiceClient.getProperties} operation.\n */\nexport interface ServiceGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.setProperties} operation.\n */\nexport interface ServiceSetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.getAccountInfo} operation.\n */\nexport interface ServiceGetAccountInfoOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.getStatistics} operation.\n */\nexport interface ServiceGetStatisticsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the Service - Get User Delegation Key.\n */\nexport interface ServiceGetUserDelegationKeyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.listContainerSegment} operation.\n */\ninterface ServiceListContainersSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n  /**\n   * Include this parameter to\n   * specify that the container's metadata be returned as part of the response\n   * body. Possible values include: 'metadata'\n   */\n  include?: ListContainersIncludeType | ListContainersIncludeType[];\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.listContainers} operation.\n */\nexport interface ServiceListContainersOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies whether the container's metadata\n   *                                   should be returned as part of the response body.\n   */\n  includeMetadata?: boolean;\n\n  /**\n   * Specifies whether soft deleted containers should be included in the response.\n   */\n  includeDeleted?: boolean;\n  /**\n   * Specifies whether system containers should be included in the response.\n   */\n  includeSystem?: boolean;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.findBlobsByTagsSegment} operation.\n */\ninterface ServiceFindBlobsByTagsSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the maximum number of blobs\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport interface ServiceFindBlobByTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * The response of {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport type ServiceFindBlobsByTagsSegmentResponse = WithResponse<\n  FilterBlobSegment & ServiceFilterBlobsHeaders,\n  ServiceFilterBlobsHeaders,\n  FilterBlobSegmentModel\n>;\n\n/**\n * A user delegation key.\n */\nexport interface UserDelegationKey {\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   */\n  signedObjectId: string;\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   */\n  signedTenantId: string;\n  /**\n   * The date-time the key is active.\n   */\n  signedStartsOn: Date;\n  /**\n   * The date-time the key expires.\n   */\n  signedExpiresOn: Date;\n  /**\n   * Abbreviation of the Azure Storage service that accepts the key.\n   */\n  signedService: string;\n  /**\n   * The service version that created the key.\n   */\n  signedVersion: string;\n  /**\n   * The key as a base64 string.\n   */\n  value: string;\n}\n\n/**\n * Contains response data for the {@link getUserDelegationKey} operation.\n */\nexport declare type ServiceGetUserDelegationKeyResponse = WithResponse<\n  UserDelegationKey & ServiceGetUserDelegationKeyHeaders,\n  ServiceGetUserDelegationKeyHeaders,\n  UserDelegationKeyModel\n>;\n\n/**\n * Options to configure {@link BlobServiceClient.undeleteContainer} operation.\n */\nexport interface ServiceUndeleteContainerOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Optional. Specifies the new name of the restored container.\n   * Will use its original name if this is not specified.\n   * @deprecated Restore container to a different name is not supported by service anymore.\n   */\n  destinationContainerName?: string;\n}\n\n/**\n * Options to configure {@link BlobServiceClient.renameContainer} operation.\n */\nexport interface ServiceRenameContainerOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Condition to meet for the source container.\n   */\n  sourceCondition?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure {@link BlobServiceClient.generateAccountSasUrl} operation.\n */\nexport interface ServiceGenerateAccountSasUrlOptions {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n  /**\n   * Optional. IP range allowed.\n   */\n  ipRange?: SasIPRange;\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * A BlobServiceClient represents a Client to the Azure Storage Blob service allowing you\n * to manipulate blob containers.\n */\nexport class BlobServiceClient extends StorageClient {\n  /**\n   * serviceContext provided by protocol layer.\n   */\n  private serviceContext: Service;\n\n  /**\n   *\n   * Creates an instance of BlobServiceClient from connection string.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  public static fromConnectionString(\n    connectionString: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ): BlobServiceClient {\n    options = options || {};\n    const extractedCreds = extractConnectionStringParts(connectionString);\n    if (extractedCreds.kind === \"AccountConnString\") {\n      if (isNode) {\n        const sharedKeyCredential = new StorageSharedKeyCredential(\n          extractedCreds.accountName!,\n          extractedCreds.accountKey,\n        );\n\n        if (!options.proxyOptions) {\n          options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n        }\n\n        const pipeline = newPipeline(sharedKeyCredential, options);\n        return new BlobServiceClient(extractedCreds.url, pipeline);\n      } else {\n        throw new Error(\"Account connection string is only supported in Node.js environment\");\n      }\n    } else if (extractedCreds.kind === \"SASConnString\") {\n      const pipeline = newPipeline(new AnonymousCredential(), options);\n      return new BlobServiceClient(extractedCreds.url + \"?\" + extractedCreds.accountSas, pipeline);\n    } else {\n      throw new Error(\n        \"Connection string must be either an Account connection string or a SAS connection string\",\n      );\n    }\n  }\n\n  /**\n   * Creates an instance of BlobServiceClient.\n   *\n   * @param url - A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   *\n   * Example using DefaultAzureCredential from `@azure/identity`:\n   *\n   * ```js\n   * const account = \"<storage account name>\";\n   *\n   * const defaultAzureCredential = new DefaultAzureCredential();\n   *\n   * const blobServiceClient = new BlobServiceClient(\n   *   `https://${account}.blob.core.windows.net`,\n   *   defaultAzureCredential\n   * );\n   * ```\n   *\n   * Example using an account name/key:\n   *\n   * ```js\n   * const account = \"<storage account name>\"\n   * const sharedKeyCredential = new StorageSharedKeyCredential(account, \"<account key>\");\n   *\n   * const blobServiceClient = new BlobServiceClient(\n   *   `https://${account}.blob.core.windows.net`,\n   *   sharedKeyCredential\n   * );\n   * ```\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of BlobServiceClient.\n   *\n   * @param url - A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    url: string,\n    credentialOrPipeline?:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    let pipeline: PipelineLike;\n    if (isPipelineLike(credentialOrPipeline)) {\n      pipeline = credentialOrPipeline;\n    } else if (\n      (isNode && credentialOrPipeline instanceof StorageSharedKeyCredential) ||\n      credentialOrPipeline instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipeline)\n    ) {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    } else {\n      // The second parameter is undefined. Use anonymous credential\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    }\n    super(url, pipeline);\n    this.serviceContext = this.storageClientContext.service;\n  }\n\n  /**\n   * Creates a {@link ContainerClient} object\n   *\n   * @param containerName - A container name\n   * @returns A new ContainerClient object for the given container name.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const containerClient = blobServiceClient.getContainerClient(\"<container name>\");\n   * ```\n   */\n  public getContainerClient(containerName: string): ContainerClient {\n    return new ContainerClient(\n      appendToURLPath(this.url, encodeURIComponent(containerName)),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * Create a Blob container. @see https://learn.microsoft.com/en-us/rest/api/storageservices/create-container\n   *\n   * @param containerName - Name of the container to create.\n   * @param options - Options to configure Container Create operation.\n   * @returns Container creation response and the corresponding container client.\n   */\n  public async createContainer(\n    containerName: string,\n    options: ContainerCreateOptions = {},\n  ): Promise<{\n    containerClient: ContainerClient;\n    containerCreateResponse: ContainerCreateResponse;\n  }> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-createContainer\",\n      options,\n      async (updatedOptions) => {\n        const containerClient = this.getContainerClient(containerName);\n        const containerCreateResponse = await containerClient.create(updatedOptions);\n        return {\n          containerClient,\n          containerCreateResponse,\n        };\n      },\n    );\n  }\n\n  /**\n   * Deletes a Blob container.\n   *\n   * @param containerName - Name of the container to delete.\n   * @param options - Options to configure Container Delete operation.\n   * @returns Container deletion response.\n   */\n  public async deleteContainer(\n    containerName: string,\n    options: ContainerDeleteMethodOptions = {},\n  ): Promise<ContainerDeleteResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-deleteContainer\",\n      options,\n      async (updatedOptions) => {\n        const containerClient = this.getContainerClient(containerName);\n        return containerClient.delete(updatedOptions);\n      },\n    );\n  }\n\n  /**\n   * Restore a previously deleted Blob container.\n   * This API is only functional if Container Soft Delete is enabled for the storage account associated with the container.\n   *\n   * @param deletedContainerName - Name of the previously deleted container.\n   * @param deletedContainerVersion - Version of the previously deleted container, used to uniquely identify the deleted container.\n   * @param options - Options to configure Container Restore operation.\n   * @returns Container deletion response.\n   */\n  public async undeleteContainer(\n    deletedContainerName: string,\n    deletedContainerVersion: string,\n    options: ServiceUndeleteContainerOptions = {},\n  ): Promise<{\n    containerClient: ContainerClient;\n    containerUndeleteResponse: ContainerUndeleteResponse;\n  }> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-undeleteContainer\",\n      options,\n      async (updatedOptions) => {\n        const containerClient = this.getContainerClient(\n          options.destinationContainerName || deletedContainerName,\n        );\n        // Hack to access a protected member.\n        const containerContext = containerClient[\"storageClientContext\"].container;\n        const containerUndeleteResponse = assertResponse<\n          ContainerRestoreHeaders,\n          ContainerRestoreHeaders\n        >(\n          await containerContext.restore({\n            deletedContainerName,\n            deletedContainerVersion,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n        return { containerClient, containerUndeleteResponse };\n      },\n    );\n  }\n\n  /**\n   * Rename an existing Blob Container.\n   *\n   * @param sourceContainerName - The name of the source container.\n   * @param destinationContainerName - The new name of the container.\n   * @param options - Options to configure Container Rename operation.\n   */\n  /* eslint-disable-next-line @typescript-eslint/ban-ts-comment */\n  // @ts-ignore Need to hide this interface for now. Make it public and turn on the live tests for it when the service is ready.\n  private async renameContainer(\n    sourceContainerName: string,\n    destinationContainerName: string,\n    options: ServiceRenameContainerOptions = {},\n  ): Promise<{\n    containerClient: ContainerClient;\n    containerRenameResponse: ContainerRenameResponse;\n  }> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-renameContainer\",\n      options,\n      async (updatedOptions) => {\n        const containerClient = this.getContainerClient(destinationContainerName);\n        // Hack to access a protected member.\n        const containerContext = containerClient[\"storageClientContext\"].container;\n        const containerRenameResponse = assertResponse<\n          ContainerRenameHeaders,\n          ContainerRenameHeaders\n        >(\n          await containerContext.rename(sourceContainerName, {\n            ...updatedOptions,\n            sourceLeaseId: options.sourceCondition?.leaseId,\n          }),\n        );\n        return { containerClient, containerRenameResponse };\n      },\n    );\n  }\n\n  /**\n   * Gets the properties of a storage account’s Blob service, including properties\n   * for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties\n   *\n   * @param options - Options to the Service Get Properties operation.\n   * @returns Response data for the Service Get Properties operation.\n   */\n  public async getProperties(\n    options: ServiceGetPropertiesOptions = {},\n  ): Promise<ServiceGetPropertiesResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-getProperties\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ServiceGetPropertiesResponseInternal, ServiceGetPropertiesHeaders>(\n          await this.serviceContext.getProperties({\n            abortSignal: options.abortSignal,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Sets properties for a storage account’s Blob service endpoint, including properties\n   * for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties\n   *\n   * @param properties -\n   * @param options - Options to the Service Set Properties operation.\n   * @returns Response data for the Service Set Properties operation.\n   */\n  public async setProperties(\n    properties: BlobServiceProperties,\n    options: ServiceSetPropertiesOptions = {},\n  ): Promise<ServiceSetPropertiesResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-setProperties\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ServiceSetPropertiesHeaders, ServiceSetPropertiesHeaders>(\n          await this.serviceContext.setProperties(properties, {\n            abortSignal: options.abortSignal,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Retrieves statistics related to replication for the Blob service. It is only\n   * available on the secondary location endpoint when read-access geo-redundant\n   * replication is enabled for the storage account.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats\n   *\n   * @param options - Options to the Service Get Statistics operation.\n   * @returns Response data for the Service Get Statistics operation.\n   */\n  public async getStatistics(\n    options: ServiceGetStatisticsOptions = {},\n  ): Promise<ServiceGetStatisticsResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-getStatistics\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ServiceGetStatisticsResponseInternal, ServiceGetStatisticsHeaders>(\n          await this.serviceContext.getStatistics({\n            abortSignal: options.abortSignal,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * The Get Account Information operation returns the sku name and account kind\n   * for the specified account.\n   * The Get Account Information operation is available on service versions beginning\n   * with version 2018-03-28.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/get-account-information\n   *\n   * @param options - Options to the Service Get Account Info operation.\n   * @returns Response data for the Service Get Account Info operation.\n   */\n  public async getAccountInfo(\n    options: ServiceGetAccountInfoOptions = {},\n  ): Promise<ServiceGetAccountInfoResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-getAccountInfo\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ServiceGetAccountInfoHeaders, ServiceGetAccountInfoHeaders>(\n          await this.serviceContext.getAccountInfo({\n            abortSignal: options.abortSignal,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Returns a list of the containers under the specified account.\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/list-containers2\n   *\n   * @param marker - A string value that identifies the portion of\n   *                        the list of containers to be returned with the next listing operation. The\n   *                        operation returns the continuationToken value within the response body if the\n   *                        listing operation did not return all containers remaining to be listed\n   *                        with the current page. The continuationToken value can be used as the value for\n   *                        the marker parameter in a subsequent call to request the next page of list\n   *                        items. The marker value is opaque to the client.\n   * @param options - Options to the Service List Container Segment operation.\n   * @returns Response data for the Service List Container Segment operation.\n   */\n  private async listContainersSegment(\n    marker?: string,\n    options: ServiceListContainersSegmentOptions = {},\n  ): Promise<ServiceListContainersSegmentResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-listContainersSegment\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          ServiceListContainersSegmentResponseInternal,\n          ServiceListContainersSegmentHeaders\n        >(\n          await this.serviceContext.listContainersSegment({\n            abortSignal: options.abortSignal,\n            marker,\n            ...options,\n            include: typeof options.include === \"string\" ? [options.include] : options.include,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs across all containers whose tags\n   * match a given search expression. Filter blobs searches across all containers within a\n   * storage account but can be scoped within the expression to a single container.\n   *\n   * @param tagFilterSqlExpression - The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                        The given expression must evaluate to true for a blob to be returned in the results.\n   *                                        The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                        however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async findBlobsByTagsSegment(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ServiceFindBlobsByTagsSegmentOptions = {},\n  ): Promise<ServiceFindBlobsByTagsSegmentResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-findBlobsByTagsSegment\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ServiceFilterBlobsResponse,\n          ServiceFilterBlobsHeaders,\n          FilterBlobSegmentModel\n        >(\n          await this.serviceContext.filterBlobs({\n            abortSignal: options.abortSignal,\n            where: tagFilterSqlExpression,\n            marker,\n            maxPageSize: options.maxPageSize,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        const wrappedResponse: ServiceFindBlobsByTagsSegmentResponse = {\n          ...response,\n          _response: response._response, // _response is made non-enumerable\n          blobs: response.blobs.map((blob) => {\n            let tagValue = \"\";\n            if (blob.tags?.blobTagSet.length === 1) {\n              tagValue = blob.tags.blobTagSet[0].value;\n            }\n            return { ...blob, tags: toTags(blob.tags), tagValue };\n          }),\n        };\n        return wrappedResponse;\n      },\n    );\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ServiceFindBlobsByTagsSegmentResponse.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async *findBlobsByTagsSegments(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ServiceFindBlobsByTagsSegmentOptions = {},\n  ): AsyncIterableIterator<ServiceFindBlobsByTagsSegmentResponse> {\n    let response;\n    if (!!marker || marker === undefined) {\n      do {\n        response = await this.findBlobsByTagsSegment(tagFilterSqlExpression, marker, options);\n        response.blobs = response.blobs || [];\n        marker = response.continuationToken;\n        yield response;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for blobs.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to findBlobsByTagsItems.\n   */\n  private async *findBlobsByTagsItems(\n    tagFilterSqlExpression: string,\n    options: ServiceFindBlobsByTagsSegmentOptions = {},\n  ): AsyncIterableIterator<FilterBlobItem> {\n    let marker: string | undefined;\n    for await (const segment of this.findBlobsByTagsSegments(\n      tagFilterSqlExpression,\n      marker,\n      options,\n    )) {\n      yield* segment.blobs;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to find all blobs with specified tag\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs in pages.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const blob of blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\")) {\n   *   console.log(`Blob ${i++}: ${container.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * const iter = blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\");\n   * let blobItem = await iter.next();\n   * while (!blobItem.done) {\n   *   console.log(`Blob ${i++}: ${blobItem.value.name}`);\n   *   blobItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 20 })) {\n   *   if (response.blobs) {\n   *     for (const blob of response.blobs) {\n   *       console.log(`Blob ${i++}: ${blob.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   * // Passing next marker as continuationToken\n   * iterator = blobServiceClient\n   *   .findBlobsByTags(\"tagkey='tagvalue'\")\n   *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *      console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to find blobs by tags.\n   */\n  public findBlobsByTags(\n    tagFilterSqlExpression: string,\n    options: ServiceFindBlobByTagsOptions = {},\n  ): PagedAsyncIterableIterator<FilterBlobItem, ServiceFindBlobsByTagsSegmentResponse> {\n    // AsyncIterableIterator to iterate over blobs\n    const listSegmentOptions: ServiceFindBlobsByTagsSegmentOptions = {\n      ...options,\n    };\n\n    const iter = this.findBlobsByTagsItems(tagFilterSqlExpression, listSegmentOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.findBlobsByTagsSegments(tagFilterSqlExpression, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...listSegmentOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ServiceListContainersSegmentResponses\n   *\n   * @param marker - A string value that identifies the portion of\n   *                        the list of containers to be returned with the next listing operation. The\n   *                        operation returns the continuationToken value within the response body if the\n   *                        listing operation did not return all containers remaining to be listed\n   *                        with the current page. The continuationToken value can be used as the value for\n   *                        the marker parameter in a subsequent call to request the next page of list\n   *                        items. The marker value is opaque to the client.\n   * @param options - Options to list containers operation.\n   */\n  private async *listSegments(\n    marker?: string,\n    options: ServiceListContainersSegmentOptions = {},\n  ): AsyncIterableIterator<ServiceListContainersSegmentResponse> {\n    let listContainersSegmentResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listContainersSegmentResponse = await this.listContainersSegment(marker, options);\n        listContainersSegmentResponse.containerItems =\n          listContainersSegmentResponse.containerItems || [];\n        marker = listContainersSegmentResponse.continuationToken;\n        yield await listContainersSegmentResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for Container Items\n   *\n   * @param options - Options to list containers operation.\n   */\n  private async *listItems(\n    options: ServiceListContainersSegmentOptions = {},\n  ): AsyncIterableIterator<ContainerItem> {\n    let marker: string | undefined;\n    for await (const segment of this.listSegments(marker, options)) {\n      yield* segment.containerItems;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the containers\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the containers in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const container of blobServiceClient.listContainers()) {\n   *   console.log(`Container ${i++}: ${container.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * const iter = blobServiceClient.listContainers();\n   * let containerItem = await iter.next();\n   * while (!containerItem.done) {\n   *   console.log(`Container ${i++}: ${containerItem.value.name}`);\n   *   containerItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of blobServiceClient.listContainers().byPage({ maxPageSize: 20 })) {\n   *   if (response.containerItems) {\n   *     for (const container of response.containerItems) {\n   *       console.log(`Container ${i++}: ${container.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = blobServiceClient.listContainers().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 container names\n   * if (response.containerItems) {\n   *   for (const container of response.containerItems) {\n   *     console.log(`Container ${i++}: ${container.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   * // Passing next marker as continuationToken\n   * iterator = blobServiceClient\n   *   .listContainers()\n   *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 container names\n   * if (response.containerItems) {\n   *   for (const container of response.containerItems) {\n   *      console.log(`Container ${i++}: ${container.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param options - Options to list containers.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listContainers(\n    options: ServiceListContainersOptions = {},\n  ): PagedAsyncIterableIterator<ContainerItem, ServiceListContainersSegmentResponse> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const include: ListContainersIncludeType[] = [];\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSystem) {\n      include.push(\"system\");\n    }\n\n    // AsyncIterableIterator to iterate over containers\n    const listSegmentOptions: ServiceListContainersSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include } : {}),\n    };\n\n    const iter = this.listItems(listSegmentOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...listSegmentOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * ONLY AVAILABLE WHEN USING BEARER TOKEN AUTHENTICATION (TokenCredential).\n   *\n   * Retrieves a user delegation key for the Blob service. This is only a valid operation when using\n   * bearer token authentication.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/get-user-delegation-key\n   *\n   * @param startsOn -      The start time for the user delegation SAS. Must be within 7 days of the current time\n   * @param expiresOn -     The end time for the user delegation SAS. Must be within 7 days of the current time\n   */\n  public async getUserDelegationKey(\n    startsOn: Date,\n    expiresOn: Date,\n    options: ServiceGetUserDelegationKeyOptions = {},\n  ): Promise<ServiceGetUserDelegationKeyResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-getUserDelegationKey\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ServiceGetUserDelegationKeyResponseModel,\n          ServiceGetUserDelegationKeyHeaders,\n          UserDelegationKeyModel\n        >(\n          await this.serviceContext.getUserDelegationKey(\n            {\n              startsOn: truncatedISO8061Date(startsOn, false),\n              expiresOn: truncatedISO8061Date(expiresOn, false),\n            },\n            {\n              abortSignal: options.abortSignal,\n              tracingOptions: updatedOptions.tracingOptions,\n            },\n          ),\n        );\n\n        const userDelegationKey = {\n          signedObjectId: response.signedObjectId,\n          signedTenantId: response.signedTenantId,\n          signedStartsOn: new Date(response.signedStartsOn),\n          signedExpiresOn: new Date(response.signedExpiresOn),\n          signedService: response.signedService,\n          signedVersion: response.signedVersion,\n          value: response.value,\n        };\n\n        const res: ServiceGetUserDelegationKeyResponse = {\n          _response: response._response,\n          requestId: response.requestId,\n          clientRequestId: response.clientRequestId,\n          version: response.version,\n          date: response.date,\n          errorCode: response.errorCode,\n          ...userDelegationKey,\n        };\n\n        return res;\n      },\n    );\n  }\n\n  /**\n   * Creates a BlobBatchClient object to conduct batch operations.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/blob-batch\n   *\n   * @returns A new BlobBatchClient object for this service.\n   */\n  public getBlobBatchClient(): BlobBatchClient {\n    return new BlobBatchClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Only available for BlobServiceClient constructed with a shared key credential.\n   *\n   * Generates a Blob account Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/create-account-sas\n   *\n   * @param expiresOn - Optional. The time at which the shared access signature becomes invalid. Default to an hour later if not provided.\n   * @param permissions - Specifies the list of permissions to be associated with the SAS.\n   * @param resourceTypes - Specifies the resource types associated with the shared access signature.\n   * @param options - Optional parameters.\n   * @returns An account SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateAccountSasUrl(\n    expiresOn?: Date,\n    permissions: AccountSASPermissions = AccountSASPermissions.parse(\"r\"),\n    resourceTypes: string = \"sco\",\n    options: ServiceGenerateAccountSasUrlOptions = {},\n  ): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw RangeError(\n        \"Can only generate the account SAS when the client is initialized with a shared key credential\",\n      );\n    }\n\n    if (expiresOn === undefined) {\n      const now = new Date();\n      expiresOn = new Date(now.getTime() + 3600 * 1000);\n    }\n\n    const sas = generateAccountSASQueryParameters(\n      {\n        permissions,\n        expiresOn,\n        resourceTypes,\n        services: AccountSASServices.parse(\"b\").toString(),\n        ...options,\n      },\n      this.credential,\n    ).toString();\n\n    return appendToURLQuery(this.url, sas);\n  }\n\n  /**\n   * Only available for BlobServiceClient constructed with a shared key credential.\n   *\n   * Generates string to sign for a Blob account Shared Access Signature (SAS) URI based on\n   * the client properties and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://learn.microsoft.com/en-us/rest/api/storageservices/create-account-sas\n   *\n   * @param expiresOn - Optional. The time at which the shared access signature becomes invalid. Default to an hour later if not provided.\n   * @param permissions - Specifies the list of permissions to be associated with the SAS.\n   * @param resourceTypes - Specifies the resource types associated with the shared access signature.\n   * @param options - Optional parameters.\n   * @returns An account SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateSasStringToSign(\n    expiresOn?: Date,\n    permissions: AccountSASPermissions = AccountSASPermissions.parse(\"r\"),\n    resourceTypes: string = \"sco\",\n    options: ServiceGenerateAccountSasUrlOptions = {},\n  ): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw RangeError(\n        \"Can only generate the account SAS when the client is initialized with a shared key credential\",\n      );\n    }\n\n    if (expiresOn === undefined) {\n      const now = new Date();\n      expiresOn = new Date(now.getTime() + 3600 * 1000);\n    }\n\n    return generateAccountSASQueryParametersInternal(\n      {\n        permissions,\n        expiresOn,\n        resourceTypes,\n        services: AccountSASServices.parse(\"b\").toString(),\n        ...options,\n      },\n      this.credential,\n    ).stringToSign;\n  }\n}\n","import { lowerCamelCase } from \"@protobuf-ts/runtime\";\n/**\n * Turns PartialMethodInfo into MethodInfo.\n */\nexport function normalizeMethodInfo(method, service) {\n    var _a, _b, _c;\n    let m = method;\n    m.service = service;\n    m.localName = (_a = m.localName) !== null && _a !== void 0 ? _a : lowerCamelCase(m.name);\n    // noinspection PointlessBooleanExpressionJS\n    m.serverStreaming = !!m.serverStreaming;\n    // noinspection PointlessBooleanExpressionJS\n    m.clientStreaming = !!m.clientStreaming;\n    m.options = (_b = m.options) !== null && _b !== void 0 ? _b : {};\n    m.idempotency = (_c = m.idempotency) !== null && _c !== void 0 ? _c : undefined;\n    return m;\n}\n/**\n * Read custom method options from a generated service client.\n *\n * @deprecated use readMethodOption()\n */\nexport function readMethodOptions(service, methodName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = service.methods.find((m, i) => m.localName === methodName || i === methodName)) === null || _a === void 0 ? void 0 : _a.options;\n    return options && options[extensionName] ? extensionType.fromJson(options[extensionName]) : undefined;\n}\nexport function readMethodOption(service, methodName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = service.methods.find((m, i) => m.localName === methodName || i === methodName)) === null || _a === void 0 ? void 0 : _a.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\nexport function readServiceOption(service, extensionName, extensionType) {\n    const options = service.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\n","import { normalizeMethodInfo } from \"./reflection-info\";\nexport class ServiceType {\n    constructor(typeName, methods, options) {\n        this.typeName = typeName;\n        this.methods = methods.map(i => normalizeMethodInfo(i, this));\n        this.options = options !== null && options !== void 0 ? options : {};\n    }\n}\n","/**\n * An error that occurred while calling a RPC method.\n */\nexport class RpcError extends Error {\n    constructor(message, code = 'UNKNOWN', meta) {\n        super(message);\n        this.name = 'RpcError';\n        // see https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#example\n        Object.setPrototypeOf(this, new.target.prototype);\n        this.code = code;\n        this.meta = meta !== null && meta !== void 0 ? meta : {};\n    }\n    toString() {\n        const l = [this.name + ': ' + this.message];\n        if (this.code) {\n            l.push('');\n            l.push('Code: ' + this.code);\n        }\n        if (this.serviceName && this.methodName) {\n            l.push('Method: ' + this.serviceName + '/' + this.methodName);\n        }\n        let m = Object.entries(this.meta);\n        if (m.length) {\n            l.push('');\n            l.push('Meta:');\n            for (let [k, v] of m) {\n                l.push(`  ${k}: ${v}`);\n            }\n        }\n        return l.join('\\n');\n    }\n}\n","export var DeferredState;\n(function (DeferredState) {\n    DeferredState[DeferredState[\"PENDING\"] = 0] = \"PENDING\";\n    DeferredState[DeferredState[\"REJECTED\"] = 1] = \"REJECTED\";\n    DeferredState[DeferredState[\"RESOLVED\"] = 2] = \"RESOLVED\";\n})(DeferredState || (DeferredState = {}));\n/**\n * A deferred promise. This is a \"controller\" for a promise, which lets you\n * pass a promise around and reject or resolve it from the outside.\n *\n * Warning: This class is to be used with care. Using it can make code very\n * difficult to read. It is intended for use in library code that exposes\n * promises, not for regular business logic.\n */\nexport class Deferred {\n    /**\n     * @param preventUnhandledRejectionWarning - prevents the warning\n     * \"Unhandled Promise rejection\" by adding a noop rejection handler.\n     * Working with calls returned from the runtime-rpc package in an\n     * async function usually means awaiting one call property after\n     * the other. This means that the \"status\" is not being awaited when\n     * an earlier await for the \"headers\" is rejected. This causes the\n     * \"unhandled promise reject\" warning. A more correct behaviour for\n     * calls might be to become aware whether at least one of the\n     * promises is handled and swallow the rejection warning for the\n     * others.\n     */\n    constructor(preventUnhandledRejectionWarning = true) {\n        this._state = DeferredState.PENDING;\n        this._promise = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        if (preventUnhandledRejectionWarning) {\n            this._promise.catch(_ => { });\n        }\n    }\n    /**\n     * Get the current state of the promise.\n     */\n    get state() {\n        return this._state;\n    }\n    /**\n     * Get the deferred promise.\n     */\n    get promise() {\n        return this._promise;\n    }\n    /**\n     * Resolve the promise. Throws if the promise is already resolved or rejected.\n     */\n    resolve(value) {\n        if (this.state !== DeferredState.PENDING)\n            throw new Error(`cannot resolve ${DeferredState[this.state].toLowerCase()}`);\n        this._resolve(value);\n        this._state = DeferredState.RESOLVED;\n    }\n    /**\n     * Reject the promise. Throws if the promise is already resolved or rejected.\n     */\n    reject(reason) {\n        if (this.state !== DeferredState.PENDING)\n            throw new Error(`cannot reject ${DeferredState[this.state].toLowerCase()}`);\n        this._reject(reason);\n        this._state = DeferredState.REJECTED;\n    }\n    /**\n     * Resolve the promise. Ignore if not pending.\n     */\n    resolvePending(val) {\n        if (this._state === DeferredState.PENDING)\n            this.resolve(val);\n    }\n    /**\n     * Reject the promise. Ignore if not pending.\n     */\n    rejectPending(reason) {\n        if (this._state === DeferredState.PENDING)\n            this.reject(reason);\n    }\n}\n","import { mergeBinaryOptions, mergeJsonOptions } from \"@protobuf-ts/runtime\";\n/**\n * Merges custom RPC options with defaults. Returns a new instance and keeps\n * the \"defaults\" and the \"options\" unmodified.\n *\n * Merges `RpcMetadata` \"meta\", overwriting values from \"defaults\" with\n * values from \"options\". Does not append values to existing entries.\n *\n * Merges \"jsonOptions\", including \"jsonOptions.typeRegistry\", by creating\n * a new array that contains types from \"options.jsonOptions.typeRegistry\"\n * first, then types from \"defaults.jsonOptions.typeRegistry\".\n *\n * Merges \"binaryOptions\".\n *\n * Merges \"interceptors\" by creating a new array that contains interceptors\n * from \"defaults\" first, then interceptors from \"options\".\n *\n * Works with objects that extend `RpcOptions`, but only if the added\n * properties are of type Date, primitive like string, boolean, or Array\n * of primitives. If you have other property types, you have to merge them\n * yourself.\n */\nexport function mergeRpcOptions(defaults, options) {\n    if (!options)\n        return defaults;\n    let o = {};\n    copy(defaults, o);\n    copy(options, o);\n    for (let key of Object.keys(options)) {\n        let val = options[key];\n        switch (key) {\n            case \"jsonOptions\":\n                o.jsonOptions = mergeJsonOptions(defaults.jsonOptions, o.jsonOptions);\n                break;\n            case \"binaryOptions\":\n                o.binaryOptions = mergeBinaryOptions(defaults.binaryOptions, o.binaryOptions);\n                break;\n            case \"meta\":\n                o.meta = {};\n                copy(defaults.meta, o.meta);\n                copy(options.meta, o.meta);\n                break;\n            case \"interceptors\":\n                o.interceptors = defaults.interceptors ? defaults.interceptors.concat(val) : val.concat();\n                break;\n        }\n    }\n    return o;\n}\nfunction copy(a, into) {\n    if (!a)\n        return;\n    let c = into;\n    for (let [k, v] of Object.entries(a)) {\n        if (v instanceof Date)\n            c[k] = new Date(v.getTime());\n        else if (Array.isArray(v))\n            c[k] = v.concat();\n        else\n            c[k] = v;\n    }\n}\n","import { Deferred, DeferredState } from \"./deferred\";\nimport { assert } from \"@protobuf-ts/runtime\";\n/**\n * A `RpcOutputStream` that you control.\n */\nexport class RpcOutputStreamController {\n    constructor() {\n        this._lis = {\n            nxt: [],\n            msg: [],\n            err: [],\n            cmp: [],\n        };\n        this._closed = false;\n        // --- RpcOutputStream async iterator API\n        // iterator state.\n        // is undefined when no iterator has been acquired yet.\n        this._itState = { q: [] };\n    }\n    // --- RpcOutputStream callback API\n    onNext(callback) {\n        return this.addLis(callback, this._lis.nxt);\n    }\n    onMessage(callback) {\n        return this.addLis(callback, this._lis.msg);\n    }\n    onError(callback) {\n        return this.addLis(callback, this._lis.err);\n    }\n    onComplete(callback) {\n        return this.addLis(callback, this._lis.cmp);\n    }\n    addLis(callback, list) {\n        list.push(callback);\n        return () => {\n            let i = list.indexOf(callback);\n            if (i >= 0)\n                list.splice(i, 1);\n        };\n    }\n    // remove all listeners\n    clearLis() {\n        for (let l of Object.values(this._lis))\n            l.splice(0, l.length);\n    }\n    // --- Controller API\n    /**\n     * Is this stream already closed by a completion or error?\n     */\n    get closed() {\n        return this._closed !== false;\n    }\n    /**\n     * Emit message, close with error, or close successfully, but only one\n     * at a time.\n     * Can be used to wrap a stream by using the other stream's `onNext`.\n     */\n    notifyNext(message, error, complete) {\n        assert((message ? 1 : 0) + (error ? 1 : 0) + (complete ? 1 : 0) <= 1, 'only one emission at a time');\n        if (message)\n            this.notifyMessage(message);\n        if (error)\n            this.notifyError(error);\n        if (complete)\n            this.notifyComplete();\n    }\n    /**\n     * Emits a new message. Throws if stream is closed.\n     *\n     * Triggers onNext and onMessage callbacks.\n     */\n    notifyMessage(message) {\n        assert(!this.closed, 'stream is closed');\n        this.pushIt({ value: message, done: false });\n        this._lis.msg.forEach(l => l(message));\n        this._lis.nxt.forEach(l => l(message, undefined, false));\n    }\n    /**\n     * Closes the stream with an error. Throws if stream is closed.\n     *\n     * Triggers onNext and onError callbacks.\n     */\n    notifyError(error) {\n        assert(!this.closed, 'stream is closed');\n        this._closed = error;\n        this.pushIt(error);\n        this._lis.err.forEach(l => l(error));\n        this._lis.nxt.forEach(l => l(undefined, error, false));\n        this.clearLis();\n    }\n    /**\n     * Closes the stream successfully. Throws if stream is closed.\n     *\n     * Triggers onNext and onComplete callbacks.\n     */\n    notifyComplete() {\n        assert(!this.closed, 'stream is closed');\n        this._closed = true;\n        this.pushIt({ value: null, done: true });\n        this._lis.cmp.forEach(l => l());\n        this._lis.nxt.forEach(l => l(undefined, undefined, true));\n        this.clearLis();\n    }\n    /**\n     * Creates an async iterator (that can be used with `for await {...}`)\n     * to consume the stream.\n     *\n     * Some things to note:\n     * - If an error occurs, the `for await` will throw it.\n     * - If an error occurred before the `for await` was started, `for await`\n     *   will re-throw it.\n     * - If the stream is already complete, the `for await` will be empty.\n     * - If your `for await` consumes slower than the stream produces,\n     *   for example because you are relaying messages in a slow operation,\n     *   messages are queued.\n     */\n    [Symbol.asyncIterator]() {\n        // if we are closed, we are definitely not receiving any more messages.\n        // but we can't let the iterator get stuck. we want to either:\n        // a) finish the new iterator immediately, because we are completed\n        // b) reject the new iterator, because we errored\n        if (this._closed === true)\n            this.pushIt({ value: null, done: true });\n        else if (this._closed !== false)\n            this.pushIt(this._closed);\n        // the async iterator\n        return {\n            next: () => {\n                let state = this._itState;\n                assert(state, \"bad state\"); // if we don't have a state here, code is broken\n                // there should be no pending result.\n                // did the consumer call next() before we resolved our previous result promise?\n                assert(!state.p, \"iterator contract broken\");\n                // did we produce faster than the iterator consumed?\n                // return the oldest result from the queue.\n                let first = state.q.shift();\n                if (first)\n                    return (\"value\" in first) ? Promise.resolve(first) : Promise.reject(first);\n                // we have no result ATM, but we promise one.\n                // as soon as we have a result, we must resolve promise.\n                state.p = new Deferred();\n                return state.p.promise;\n            },\n        };\n    }\n    // \"push\" a new iterator result.\n    // this either resolves a pending promise, or enqueues the result.\n    pushIt(result) {\n        let state = this._itState;\n        // is the consumer waiting for us?\n        if (state.p) {\n            // yes, consumer is waiting for this promise.\n            const p = state.p;\n            assert(p.state == DeferredState.PENDING, \"iterator contract broken\");\n            // resolve the promise\n            (\"value\" in result) ? p.resolve(result) : p.reject(result);\n            // must cleanup, otherwise iterator.next() would pick it up again.\n            delete state.p;\n        }\n        else {\n            // we are producing faster than the iterator consumes.\n            // push result onto queue.\n            state.q.push(result);\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * A unary RPC call. Unary means there is exactly one input message and\n * exactly one output message unless an error occurred.\n */\nexport class UnaryCall {\n    constructor(method, requestHeaders, request, headers, response, status, trailers) {\n        this.method = method;\n        this.requestHeaders = requestHeaders;\n        this.request = request;\n        this.headers = headers;\n        this.response = response;\n        this.status = status;\n        this.trailers = trailers;\n    }\n    /**\n     * If you are only interested in the final outcome of this call,\n     * you can await it to receive a `FinishedUnaryCall`.\n     */\n    then(onfulfilled, onrejected) {\n        return this.promiseFinished().then(value => onfulfilled ? Promise.resolve(onfulfilled(value)) : value, reason => onrejected ? Promise.resolve(onrejected(reason)) : Promise.reject(reason));\n    }\n    promiseFinished() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let [headers, response, status, trailers] = yield Promise.all([this.headers, this.response, this.status, this.trailers]);\n            return {\n                method: this.method,\n                requestHeaders: this.requestHeaders,\n                request: this.request,\n                headers,\n                response,\n                status,\n                trailers\n            };\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * A server streaming RPC call. The client provides exactly one input message\n * but the server may respond with 0, 1, or more messages.\n */\nexport class ServerStreamingCall {\n    constructor(method, requestHeaders, request, headers, response, status, trailers) {\n        this.method = method;\n        this.requestHeaders = requestHeaders;\n        this.request = request;\n        this.headers = headers;\n        this.responses = response;\n        this.status = status;\n        this.trailers = trailers;\n    }\n    /**\n     * Instead of awaiting the response status and trailers, you can\n     * just as well await this call itself to receive the server outcome.\n     * You should first setup some listeners to the `request` to\n     * see the actual messages the server replied with.\n     */\n    then(onfulfilled, onrejected) {\n        return this.promiseFinished().then(value => onfulfilled ? Promise.resolve(onfulfilled(value)) : value, reason => onrejected ? Promise.resolve(onrejected(reason)) : Promise.reject(reason));\n    }\n    promiseFinished() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let [headers, status, trailers] = yield Promise.all([this.headers, this.status, this.trailers]);\n            return {\n                method: this.method,\n                requestHeaders: this.requestHeaders,\n                request: this.request,\n                headers,\n                status,\n                trailers,\n            };\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * A client streaming RPC call. This means that the clients sends 0, 1, or\n * more messages to the server, and the server replies with exactly one\n * message.\n */\nexport class ClientStreamingCall {\n    constructor(method, requestHeaders, request, headers, response, status, trailers) {\n        this.method = method;\n        this.requestHeaders = requestHeaders;\n        this.requests = request;\n        this.headers = headers;\n        this.response = response;\n        this.status = status;\n        this.trailers = trailers;\n    }\n    /**\n     * Instead of awaiting the response status and trailers, you can\n     * just as well await this call itself to receive the server outcome.\n     * Note that it may still be valid to send more request messages.\n     */\n    then(onfulfilled, onrejected) {\n        return this.promiseFinished().then(value => onfulfilled ? Promise.resolve(onfulfilled(value)) : value, reason => onrejected ? Promise.resolve(onrejected(reason)) : Promise.reject(reason));\n    }\n    promiseFinished() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let [headers, response, status, trailers] = yield Promise.all([this.headers, this.response, this.status, this.trailers]);\n            return {\n                method: this.method,\n                requestHeaders: this.requestHeaders,\n                headers,\n                response,\n                status,\n                trailers\n            };\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * A duplex streaming RPC call. This means that the clients sends an\n * arbitrary amount of messages to the server, while at the same time,\n * the server sends an arbitrary amount of messages to the client.\n */\nexport class DuplexStreamingCall {\n    constructor(method, requestHeaders, request, headers, response, status, trailers) {\n        this.method = method;\n        this.requestHeaders = requestHeaders;\n        this.requests = request;\n        this.headers = headers;\n        this.responses = response;\n        this.status = status;\n        this.trailers = trailers;\n    }\n    /**\n     * Instead of awaiting the response status and trailers, you can\n     * just as well await this call itself to receive the server outcome.\n     * Note that it may still be valid to send more request messages.\n     */\n    then(onfulfilled, onrejected) {\n        return this.promiseFinished().then(value => onfulfilled ? Promise.resolve(onfulfilled(value)) : value, reason => onrejected ? Promise.resolve(onrejected(reason)) : Promise.reject(reason));\n    }\n    promiseFinished() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let [headers, status, trailers] = yield Promise.all([this.headers, this.status, this.trailers]);\n            return {\n                method: this.method,\n                requestHeaders: this.requestHeaders,\n                headers,\n                status,\n                trailers,\n            };\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { RpcError } from \"./rpc-error\";\nimport { assert } from \"@protobuf-ts/runtime\";\nimport { RpcOutputStreamController } from \"./rpc-output-stream\";\nimport { mergeRpcOptions } from \"./rpc-options\";\nimport { UnaryCall } from \"./unary-call\";\nimport { ServerStreamingCall } from \"./server-streaming-call\";\nimport { ClientStreamingCall } from \"./client-streaming-call\";\nimport { DuplexStreamingCall } from \"./duplex-streaming-call\";\n/**\n * Transport for testing.\n */\nexport class TestTransport {\n    /**\n     * Initialize with mock data. Omitted fields have default value.\n     */\n    constructor(data) {\n        /**\n         * Suppress warning / error about uncaught rejections of\n         * \"status\" and \"trailers\".\n         */\n        this.suppressUncaughtRejections = true;\n        this.headerDelay = 10;\n        this.responseDelay = 50;\n        this.betweenResponseDelay = 10;\n        this.afterResponseDelay = 10;\n        this.data = data !== null && data !== void 0 ? data : {};\n    }\n    /**\n     * Sent message(s) during the last operation.\n     */\n    get sentMessages() {\n        if (this.lastInput instanceof TestInputStream) {\n            return this.lastInput.sent;\n        }\n        else if (typeof this.lastInput == \"object\") {\n            return [this.lastInput.single];\n        }\n        return [];\n    }\n    /**\n     * Sending message(s) completed?\n     */\n    get sendComplete() {\n        if (this.lastInput instanceof TestInputStream) {\n            return this.lastInput.completed;\n        }\n        else if (typeof this.lastInput == \"object\") {\n            return true;\n        }\n        return false;\n    }\n    // Creates a promise for response headers from the mock data.\n    promiseHeaders() {\n        var _a;\n        const headers = (_a = this.data.headers) !== null && _a !== void 0 ? _a : TestTransport.defaultHeaders;\n        return headers instanceof RpcError\n            ? Promise.reject(headers)\n            : Promise.resolve(headers);\n    }\n    // Creates a promise for a single, valid, message from the mock data.\n    promiseSingleResponse(method) {\n        if (this.data.response instanceof RpcError) {\n            return Promise.reject(this.data.response);\n        }\n        let r;\n        if (Array.isArray(this.data.response)) {\n            assert(this.data.response.length > 0);\n            r = this.data.response[0];\n        }\n        else if (this.data.response !== undefined) {\n            r = this.data.response;\n        }\n        else {\n            r = method.O.create();\n        }\n        assert(method.O.is(r));\n        return Promise.resolve(r);\n    }\n    /**\n     * Pushes response messages from the mock data to the output stream.\n     * If an error response, status or trailers are mocked, the stream is\n     * closed with the respective error.\n     * Otherwise, stream is completed successfully.\n     *\n     * The returned promise resolves when the stream is closed. It should\n     * not reject. If it does, code is broken.\n     */\n    streamResponses(method, stream, abort) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // normalize \"data.response\" into an array of valid output messages\n            const messages = [];\n            if (this.data.response === undefined) {\n                messages.push(method.O.create());\n            }\n            else if (Array.isArray(this.data.response)) {\n                for (let msg of this.data.response) {\n                    assert(method.O.is(msg));\n                    messages.push(msg);\n                }\n            }\n            else if (!(this.data.response instanceof RpcError)) {\n                assert(method.O.is(this.data.response));\n                messages.push(this.data.response);\n            }\n            // start the stream with an initial delay.\n            // if the request is cancelled, notify() error and exit.\n            try {\n                yield delay(this.responseDelay, abort)(undefined);\n            }\n            catch (error) {\n                stream.notifyError(error);\n                return;\n            }\n            // if error response was mocked, notify() error (stream is now closed with error) and exit.\n            if (this.data.response instanceof RpcError) {\n                stream.notifyError(this.data.response);\n                return;\n            }\n            // regular response messages were mocked. notify() them.\n            for (let msg of messages) {\n                stream.notifyMessage(msg);\n                // add a short delay between responses\n                // if the request is cancelled, notify() error and exit.\n                try {\n                    yield delay(this.betweenResponseDelay, abort)(undefined);\n                }\n                catch (error) {\n                    stream.notifyError(error);\n                    return;\n                }\n            }\n            // error status was mocked, notify() error (stream is now closed with error) and exit.\n            if (this.data.status instanceof RpcError) {\n                stream.notifyError(this.data.status);\n                return;\n            }\n            // error trailers were mocked, notify() error (stream is now closed with error) and exit.\n            if (this.data.trailers instanceof RpcError) {\n                stream.notifyError(this.data.trailers);\n                return;\n            }\n            // stream completed successfully\n            stream.notifyComplete();\n        });\n    }\n    // Creates a promise for response status from the mock data.\n    promiseStatus() {\n        var _a;\n        const status = (_a = this.data.status) !== null && _a !== void 0 ? _a : TestTransport.defaultStatus;\n        return status instanceof RpcError\n            ? Promise.reject(status)\n            : Promise.resolve(status);\n    }\n    // Creates a promise for response trailers from the mock data.\n    promiseTrailers() {\n        var _a;\n        const trailers = (_a = this.data.trailers) !== null && _a !== void 0 ? _a : TestTransport.defaultTrailers;\n        return trailers instanceof RpcError\n            ? Promise.reject(trailers)\n            : Promise.resolve(trailers);\n    }\n    maybeSuppressUncaught(...promise) {\n        if (this.suppressUncaughtRejections) {\n            for (let p of promise) {\n                p.catch(() => {\n                });\n            }\n        }\n    }\n    mergeOptions(options) {\n        return mergeRpcOptions({}, options);\n    }\n    unary(method, input, options) {\n        var _a;\n        const requestHeaders = (_a = options.meta) !== null && _a !== void 0 ? _a : {}, headersPromise = this.promiseHeaders()\n            .then(delay(this.headerDelay, options.abort)), responsePromise = headersPromise\n            .catch(_ => {\n        })\n            .then(delay(this.responseDelay, options.abort))\n            .then(_ => this.promiseSingleResponse(method)), statusPromise = responsePromise\n            .catch(_ => {\n        })\n            .then(delay(this.afterResponseDelay, options.abort))\n            .then(_ => this.promiseStatus()), trailersPromise = responsePromise\n            .catch(_ => {\n        })\n            .then(delay(this.afterResponseDelay, options.abort))\n            .then(_ => this.promiseTrailers());\n        this.maybeSuppressUncaught(statusPromise, trailersPromise);\n        this.lastInput = { single: input };\n        return new UnaryCall(method, requestHeaders, input, headersPromise, responsePromise, statusPromise, trailersPromise);\n    }\n    serverStreaming(method, input, options) {\n        var _a;\n        const requestHeaders = (_a = options.meta) !== null && _a !== void 0 ? _a : {}, headersPromise = this.promiseHeaders()\n            .then(delay(this.headerDelay, options.abort)), outputStream = new RpcOutputStreamController(), responseStreamClosedPromise = headersPromise\n            .then(delay(this.responseDelay, options.abort))\n            .catch(() => {\n        })\n            .then(() => this.streamResponses(method, outputStream, options.abort))\n            .then(delay(this.afterResponseDelay, options.abort)), statusPromise = responseStreamClosedPromise\n            .then(() => this.promiseStatus()), trailersPromise = responseStreamClosedPromise\n            .then(() => this.promiseTrailers());\n        this.maybeSuppressUncaught(statusPromise, trailersPromise);\n        this.lastInput = { single: input };\n        return new ServerStreamingCall(method, requestHeaders, input, headersPromise, outputStream, statusPromise, trailersPromise);\n    }\n    clientStreaming(method, options) {\n        var _a;\n        const requestHeaders = (_a = options.meta) !== null && _a !== void 0 ? _a : {}, headersPromise = this.promiseHeaders()\n            .then(delay(this.headerDelay, options.abort)), responsePromise = headersPromise\n            .catch(_ => {\n        })\n            .then(delay(this.responseDelay, options.abort))\n            .then(_ => this.promiseSingleResponse(method)), statusPromise = responsePromise\n            .catch(_ => {\n        })\n            .then(delay(this.afterResponseDelay, options.abort))\n            .then(_ => this.promiseStatus()), trailersPromise = responsePromise\n            .catch(_ => {\n        })\n            .then(delay(this.afterResponseDelay, options.abort))\n            .then(_ => this.promiseTrailers());\n        this.maybeSuppressUncaught(statusPromise, trailersPromise);\n        this.lastInput = new TestInputStream(this.data, options.abort);\n        return new ClientStreamingCall(method, requestHeaders, this.lastInput, headersPromise, responsePromise, statusPromise, trailersPromise);\n    }\n    duplex(method, options) {\n        var _a;\n        const requestHeaders = (_a = options.meta) !== null && _a !== void 0 ? _a : {}, headersPromise = this.promiseHeaders()\n            .then(delay(this.headerDelay, options.abort)), outputStream = new RpcOutputStreamController(), responseStreamClosedPromise = headersPromise\n            .then(delay(this.responseDelay, options.abort))\n            .catch(() => {\n        })\n            .then(() => this.streamResponses(method, outputStream, options.abort))\n            .then(delay(this.afterResponseDelay, options.abort)), statusPromise = responseStreamClosedPromise\n            .then(() => this.promiseStatus()), trailersPromise = responseStreamClosedPromise\n            .then(() => this.promiseTrailers());\n        this.maybeSuppressUncaught(statusPromise, trailersPromise);\n        this.lastInput = new TestInputStream(this.data, options.abort);\n        return new DuplexStreamingCall(method, requestHeaders, this.lastInput, headersPromise, outputStream, statusPromise, trailersPromise);\n    }\n}\nTestTransport.defaultHeaders = {\n    responseHeader: \"test\"\n};\nTestTransport.defaultStatus = {\n    code: \"OK\", detail: \"all good\"\n};\nTestTransport.defaultTrailers = {\n    responseTrailer: \"test\"\n};\nfunction delay(ms, abort) {\n    return (v) => new Promise((resolve, reject) => {\n        if (abort === null || abort === void 0 ? void 0 : abort.aborted) {\n            reject(new RpcError(\"user cancel\", \"CANCELLED\"));\n        }\n        else {\n            const id = setTimeout(() => resolve(v), ms);\n            if (abort) {\n                abort.addEventListener(\"abort\", ev => {\n                    clearTimeout(id);\n                    reject(new RpcError(\"user cancel\", \"CANCELLED\"));\n                });\n            }\n        }\n    });\n}\nclass TestInputStream {\n    constructor(data, abort) {\n        this._completed = false;\n        this._sent = [];\n        this.data = data;\n        this.abort = abort;\n    }\n    get sent() {\n        return this._sent;\n    }\n    get completed() {\n        return this._completed;\n    }\n    send(message) {\n        if (this.data.inputMessage instanceof RpcError) {\n            return Promise.reject(this.data.inputMessage);\n        }\n        const delayMs = this.data.inputMessage === undefined\n            ? 10\n            : this.data.inputMessage;\n        return Promise.resolve(undefined)\n            .then(() => {\n            this._sent.push(message);\n        })\n            .then(delay(delayMs, this.abort));\n    }\n    complete() {\n        if (this.data.inputComplete instanceof RpcError) {\n            return Promise.reject(this.data.inputComplete);\n        }\n        const delayMs = this.data.inputComplete === undefined\n            ? 10\n            : this.data.inputComplete;\n        return Promise.resolve(undefined)\n            .then(() => {\n            this._completed = true;\n        })\n            .then(delay(delayMs, this.abort));\n    }\n}\n","import { assertNever } from \"@protobuf-ts/runtime\";\n/**\n * Creates a \"stack\" of of all interceptors specified in the given `RpcOptions`.\n * Used by generated client implementations.\n * @internal\n */\nexport function stackIntercept(kind, transport, method, options, input) {\n    var _a, _b, _c, _d;\n    if (kind == \"unary\") {\n        let tail = (mtd, inp, opt) => transport.unary(mtd, inp, opt);\n        for (const curr of ((_a = options.interceptors) !== null && _a !== void 0 ? _a : []).filter(i => i.interceptUnary).reverse()) {\n            const next = tail;\n            tail = (mtd, inp, opt) => curr.interceptUnary(next, mtd, inp, opt);\n        }\n        return tail(method, input, options);\n    }\n    if (kind == \"serverStreaming\") {\n        let tail = (mtd, inp, opt) => transport.serverStreaming(mtd, inp, opt);\n        for (const curr of ((_b = options.interceptors) !== null && _b !== void 0 ? _b : []).filter(i => i.interceptServerStreaming).reverse()) {\n            const next = tail;\n            tail = (mtd, inp, opt) => curr.interceptServerStreaming(next, mtd, inp, opt);\n        }\n        return tail(method, input, options);\n    }\n    if (kind == \"clientStreaming\") {\n        let tail = (mtd, opt) => transport.clientStreaming(mtd, opt);\n        for (const curr of ((_c = options.interceptors) !== null && _c !== void 0 ? _c : []).filter(i => i.interceptClientStreaming).reverse()) {\n            const next = tail;\n            tail = (mtd, opt) => curr.interceptClientStreaming(next, mtd, opt);\n        }\n        return tail(method, options);\n    }\n    if (kind == \"duplex\") {\n        let tail = (mtd, opt) => transport.duplex(mtd, opt);\n        for (const curr of ((_d = options.interceptors) !== null && _d !== void 0 ? _d : []).filter(i => i.interceptDuplex).reverse()) {\n            const next = tail;\n            tail = (mtd, opt) => curr.interceptDuplex(next, mtd, opt);\n        }\n        return tail(method, options);\n    }\n    assertNever(kind);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackUnaryInterceptors(transport, method, input, options) {\n    return stackIntercept(\"unary\", transport, method, options, input);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackServerStreamingInterceptors(transport, method, input, options) {\n    return stackIntercept(\"serverStreaming\", transport, method, options, input);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackClientStreamingInterceptors(transport, method, options) {\n    return stackIntercept(\"clientStreaming\", transport, method, options);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackDuplexStreamingInterceptors(transport, method, options) {\n    return stackIntercept(\"duplex\", transport, method, options);\n}\n","export class ServerCallContextController {\n    constructor(method, headers, deadline, sendResponseHeadersFn, defaultStatus = { code: 'OK', detail: '' }) {\n        this._cancelled = false;\n        this._listeners = [];\n        this.method = method;\n        this.headers = headers;\n        this.deadline = deadline;\n        this.trailers = {};\n        this._sendRH = sendResponseHeadersFn;\n        this.status = defaultStatus;\n    }\n    /**\n     * Set the call cancelled.\n     *\n     * Invokes all callbacks registered with onCancel() and\n     * sets `cancelled = true`.\n     */\n    notifyCancelled() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (let l of this._listeners) {\n                l();\n            }\n        }\n    }\n    /**\n     * Send response headers.\n     */\n    sendResponseHeaders(data) {\n        this._sendRH(data);\n    }\n    /**\n     * Is the call cancelled?\n     *\n     * When the client closes the connection before the server\n     * is done, the call is cancelled.\n     *\n     * If you want to cancel a request on the server, throw a\n     * RpcError with the CANCELLED status code.\n     */\n    get cancelled() {\n        return this._cancelled;\n    }\n    /**\n     * Add a callback for cancellation.\n     */\n    onCancel(callback) {\n        const l = this._listeners;\n        l.push(callback);\n        return () => {\n            let i = l.indexOf(callback);\n            if (i >= 0)\n                l.splice(i, 1);\n        };\n    }\n}\n","/**\n * assert that condition is true or throw error (with message)\n */\nexport function assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\n/**\n * assert that value cannot exist = type `never`. throw runtime error if it does.\n */\nexport function assertNever(value, msg) {\n    throw new Error(msg !== null && msg !== void 0 ? msg : 'Unexpected object: ' + value);\n}\nconst FLOAT32_MAX = 3.4028234663852886e+38, FLOAT32_MIN = -3.4028234663852886e+38, UINT32_MAX = 0xFFFFFFFF, INT32_MAX = 0X7FFFFFFF, INT32_MIN = -0X80000000;\nexport function assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid int 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error('invalid int 32: ' + arg);\n}\nexport function assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid uint 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error('invalid uint 32: ' + arg);\n}\nexport function assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid float 32: ' + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error('invalid float 32: ' + arg);\n}\n","/**\n * This handler implements the default behaviour for unknown fields.\n * When reading data, unknown fields are stored on the message, in a\n * symbol property.\n * When writing data, the symbol property is queried and unknown fields\n * are serialized into the output again.\n */\nexport var UnknownFieldHandler;\n(function (UnknownFieldHandler) {\n    /**\n     * The symbol used to store unknown fields for a message.\n     * The property must conform to `UnknownFieldContainer`.\n     */\n    UnknownFieldHandler.symbol = Symbol.for(\"protobuf-ts/unknown\");\n    /**\n     * Store an unknown field during binary read directly on the message.\n     * This method is compatible with `BinaryReadOptions.readUnknownField`.\n     */\n    UnknownFieldHandler.onRead = (typeName, message, fieldNo, wireType, data) => {\n        let container = is(message) ? message[UnknownFieldHandler.symbol] : message[UnknownFieldHandler.symbol] = [];\n        container.push({ no: fieldNo, wireType, data });\n    };\n    /**\n     * Write unknown fields stored for the message to the writer.\n     * This method is compatible with `BinaryWriteOptions.writeUnknownFields`.\n     */\n    UnknownFieldHandler.onWrite = (typeName, message, writer) => {\n        for (let { no, wireType, data } of UnknownFieldHandler.list(message))\n            writer.tag(no, wireType).raw(data);\n    };\n    /**\n     * List unknown fields stored for the message.\n     * Note that there may be multiples fields with the same number.\n     */\n    UnknownFieldHandler.list = (message, fieldNo) => {\n        if (is(message)) {\n            let all = message[UnknownFieldHandler.symbol];\n            return fieldNo ? all.filter(uf => uf.no == fieldNo) : all;\n        }\n        return [];\n    };\n    /**\n     * Returns the last unknown field by field number.\n     */\n    UnknownFieldHandler.last = (message, fieldNo) => UnknownFieldHandler.list(message, fieldNo).slice(-1)[0];\n    const is = (message) => message && Array.isArray(message[UnknownFieldHandler.symbol]);\n})(UnknownFieldHandler || (UnknownFieldHandler = {}));\n/**\n * Merges binary write or read options. Later values override earlier values.\n */\nexport function mergeBinaryOptions(a, b) {\n    return Object.assign(Object.assign({}, a), b);\n}\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nexport var WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\n","/**\n * Get the type of a JSON value.\n * Distinguishes between array, null and object.\n */\nexport function typeofJsonValue(value) {\n    let t = typeof value;\n    if (t == \"object\") {\n        if (Array.isArray(value))\n            return \"array\";\n        if (value === null)\n            return \"null\";\n    }\n    return t;\n}\n/**\n * Is this a JSON object (instead of an array or null)?\n */\nexport function isJsonObject(value) {\n    return value !== null && typeof value == \"object\" && !Array.isArray(value);\n}\n","// lookup table from base64 character to byte\nlet encTable = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\n/**\n * Decodes a base64 string to a byte array.\n *\n * - ignores white-space, including line breaks and tabs\n * - allows inner padding (can decode concatenated base64 strings)\n * - does not require padding\n * - understands base64url encoding:\n *   \"-\" instead of \"+\",\n *   \"_\" instead of \"/\",\n *   no padding\n */\nexport function base64decode(base64Str) {\n    // estimate byte size, not accounting for inner padding and whitespace\n    let es = base64Str.length * 3 / 4;\n    // if (es % 3 !== 0)\n    // throw new Error('invalid base64 string');\n    if (base64Str[base64Str.length - 2] == '=')\n        es -= 2;\n    else if (base64Str[base64Str.length - 1] == '=')\n        es -= 1;\n    let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n    groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0 // previous byte\n    ;\n    for (let i = 0; i < base64Str.length; i++) {\n        b = decTable[base64Str.charCodeAt(i)];\n        if (b === undefined) {\n            // noinspection FallThroughInSwitchStatementJS\n            switch (base64Str[i]) {\n                case '=':\n                    groupPos = 0; // reset state when padding found\n                case '\\n':\n                case '\\r':\n                case '\\t':\n                case ' ':\n                    continue; // skip white-space, and padding\n                default:\n                    throw Error(`invalid base64 string.`);\n            }\n        }\n        switch (groupPos) {\n            case 0:\n                p = b;\n                groupPos = 1;\n                break;\n            case 1:\n                bytes[bytePos++] = p << 2 | (b & 48) >> 4;\n                p = b;\n                groupPos = 2;\n                break;\n            case 2:\n                bytes[bytePos++] = (p & 15) << 4 | (b & 60) >> 2;\n                p = b;\n                groupPos = 3;\n                break;\n            case 3:\n                bytes[bytePos++] = (p & 3) << 6 | b;\n                groupPos = 0;\n                break;\n        }\n    }\n    if (groupPos == 1)\n        throw Error(`invalid base64 string.`);\n    return bytes.subarray(0, bytePos);\n}\n/**\n * Encodes a byte array to a base64 string.\n * Adds padding at the end.\n * Does not insert newlines.\n */\nexport function base64encode(bytes) {\n    let base64 = '', groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // carry over from previous byte\n    for (let i = 0; i < bytes.length; i++) {\n        b = bytes[i];\n        switch (groupPos) {\n            case 0:\n                base64 += encTable[b >> 2];\n                p = (b & 3) << 4;\n                groupPos = 1;\n                break;\n            case 1:\n                base64 += encTable[p | b >> 4];\n                p = (b & 15) << 2;\n                groupPos = 2;\n                break;\n            case 2:\n                base64 += encTable[p | b >> 6];\n                base64 += encTable[b & 63];\n                groupPos = 0;\n                break;\n        }\n    }\n    // padding required?\n    if (groupPos) {\n        base64 += encTable[p];\n        base64 += '=';\n        if (groupPos == 1)\n            base64 += '=';\n    }\n    return base64;\n}\n","// Copyright (c) 2016, Daniel Wirtz  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n//   notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above copyright\n//   notice, this list of conditions and the following disclaimer in the\n//   documentation and/or other materials provided with the distribution.\n// * Neither the name of its author, nor the names of its contributors\n//   may be used to endorse or promote products derived from this software\n//   without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nconst fromCharCodes = (chunk) => String.fromCharCode.apply(String, chunk);\n/**\n * @deprecated This function will no longer be exported with the next major\n * release, since protobuf-ts has switch to TextDecoder API. If you need this\n * function, please migrate to @protobufjs/utf8. For context, see\n * https://github.com/timostamm/protobuf-ts/issues/184\n *\n * Reads UTF8 bytes as a string.\n *\n * See [protobufjs / utf8](https://github.com/protobufjs/protobuf.js/blob/9893e35b854621cce64af4bf6be2cff4fb892796/lib/utf8/index.js#L40)\n *\n * Copyright (c) 2016, Daniel Wirtz\n */\nexport function utf8read(bytes) {\n    if (bytes.length < 1)\n        return \"\";\n    let pos = 0, // position in bytes\n    parts = [], chunk = [], i = 0, // char offset\n    t; // temporary\n    let len = bytes.length;\n    while (pos < len) {\n        t = bytes[pos++];\n        if (t < 128)\n            chunk[i++] = t;\n        else if (t > 191 && t < 224)\n            chunk[i++] = (t & 31) << 6 | bytes[pos++] & 63;\n        else if (t > 239 && t < 365) {\n            t = ((t & 7) << 18 | (bytes[pos++] & 63) << 12 | (bytes[pos++] & 63) << 6 | bytes[pos++] & 63) - 0x10000;\n            chunk[i++] = 0xD800 + (t >> 10);\n            chunk[i++] = 0xDC00 + (t & 1023);\n        }\n        else\n            chunk[i++] = (t & 15) << 12 | (bytes[pos++] & 63) << 6 | bytes[pos++] & 63;\n        if (i > 8191) {\n            parts.push(fromCharCodes(chunk));\n            i = 0;\n        }\n    }\n    if (parts.length) {\n        if (i)\n            parts.push(fromCharCodes(chunk.slice(0, i)));\n        return parts.join(\"\");\n    }\n    return fromCharCodes(chunk.slice(0, i));\n}\n","// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [0]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nexport function varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0F) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error('invalid varint');\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nexport function varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !((shift >>> 7) == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0F) | ((hi & 0x07) << 4);\n    const hasMoreBits = !((hi >> 3) == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xFF);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !((shift >>> 7) == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = (1 << 16) * (1 << 16);\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Returns tuple:\n * [0]: minus sign?\n * [1]: low bits\n * [2]: high bits\n *\n * Copyright 2008 Google Inc.\n */\nexport function int64fromString(dec) {\n    // Check for minus sign.\n    let minus = dec[0] == '-';\n    if (minus)\n        dec = dec.slice(1);\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to highBits\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return [minus, lowBits, highBits];\n}\n/**\n * Format 64 bit integer value (as two JS numbers) to decimal string.\n *\n * Copyright 2008 Google Inc.\n */\nexport function int64toString(bitsLow, bitsHigh) {\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    if ((bitsHigh >>> 0) <= 0x1FFFFF) {\n        return '' + (TWO_PWR_32_DBL * bitsHigh + (bitsLow >>> 0));\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    let low = bitsLow & 0xFFFFFF;\n    let mid = (((bitsLow >>> 24) | (bitsHigh << 8)) >>> 0) & 0xFFFFFF;\n    let high = (bitsHigh >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    let base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // Convert base-1e7 digits to base-10, with optional leading zeroes.\n    function decimalFrom1e7(digit1e7, needLeadingZeros) {\n        let partial = digit1e7 ? String(digit1e7) : '';\n        if (needLeadingZeros) {\n            return '0000000'.slice(partial.length) + partial;\n        }\n        return partial;\n    }\n    return decimalFrom1e7(digitC, /*needLeadingZeros=*/ 0) +\n        decimalFrom1e7(digitB, /*needLeadingZeros=*/ digitC) +\n        // If the final 1e7 digit didn't need leading zeros, we would have\n        // returned via the trivial code path at the top.\n        decimalFrom1e7(digitA, /*needLeadingZeros=*/ 1);\n}\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nexport function varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push(value & 127 | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nexport function varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7F;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0F) << 28;\n    for (let readBytes = 5; ((b & 0x80) !== 0) && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error('invalid varint');\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n","import { int64fromString, int64toString } from \"./goog-varint\";\nlet BI;\nexport function detectBi() {\n    const dv = new DataView(new ArrayBuffer(8));\n    const ok = globalThis.BigInt !== undefined\n        && typeof dv.getBigInt64 === \"function\"\n        && typeof dv.getBigUint64 === \"function\"\n        && typeof dv.setBigInt64 === \"function\"\n        && typeof dv.setBigUint64 === \"function\";\n    BI = ok ? {\n        MIN: BigInt(\"-9223372036854775808\"),\n        MAX: BigInt(\"9223372036854775807\"),\n        UMIN: BigInt(\"0\"),\n        UMAX: BigInt(\"18446744073709551615\"),\n        C: BigInt,\n        V: dv,\n    } : undefined;\n}\ndetectBi();\nfunction assertBi(bi) {\n    if (!bi)\n        throw new Error(\"BigInt unavailable, see https://github.com/timostamm/protobuf-ts/blob/v1.0.8/MANUAL.md#bigint-support\");\n}\n// used to validate from(string) input (when bigint is unavailable)\nconst RE_DECIMAL_STR = /^-?[0-9]+$/;\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\nconst HALF_2_PWR_32 = 0x080000000;\n// base class for PbLong and PbULong provides shared code\nclass SharedPbLong {\n    /**\n     * Create a new instance with the given bits.\n     */\n    constructor(lo, hi) {\n        this.lo = lo | 0;\n        this.hi = hi | 0;\n    }\n    /**\n     * Is this instance equal to 0?\n     */\n    isZero() {\n        return this.lo == 0 && this.hi == 0;\n    }\n    /**\n     * Convert to a native number.\n     */\n    toNumber() {\n        let result = this.hi * TWO_PWR_32_DBL + (this.lo >>> 0);\n        if (!Number.isSafeInteger(result))\n            throw new Error(\"cannot convert to safe number\");\n        return result;\n    }\n}\n/**\n * 64-bit unsigned integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nexport class PbULong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.UMIN)\n                        throw new Error('signed value for ulong');\n                    if (value > BI.UMAX)\n                        throw new Error('ulong too large');\n                    BI.V.setBigUint64(0, value, true);\n                    return new PbULong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = int64fromString(value);\n                    if (minus)\n                        throw new Error('signed value for ulong');\n                    return new PbULong(lo, hi);\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    if (value < 0)\n                        throw new Error('signed value for ulong');\n                    return new PbULong(value, value / TWO_PWR_32_DBL);\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        return BI ? this.toBigInt().toString() : int64toString(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigUint64(0, true);\n    }\n}\n/**\n * ulong 0 singleton.\n */\nPbULong.ZERO = new PbULong(0, 0);\n/**\n * 64-bit signed integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nexport class PbLong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.MIN)\n                        throw new Error('signed long too small');\n                    if (value > BI.MAX)\n                        throw new Error('signed long too large');\n                    BI.V.setBigInt64(0, value, true);\n                    return new PbLong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = int64fromString(value);\n                    if (minus) {\n                        if (hi > HALF_2_PWR_32 || (hi == HALF_2_PWR_32 && lo != 0))\n                            throw new Error('signed long too small');\n                    }\n                    else if (hi >= HALF_2_PWR_32)\n                        throw new Error('signed long too large');\n                    let pbl = new PbLong(lo, hi);\n                    return minus ? pbl.negate() : pbl;\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    return value > 0\n                        ? new PbLong(value, value / TWO_PWR_32_DBL)\n                        : new PbLong(-value, -value / TWO_PWR_32_DBL).negate();\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Do we have a minus sign?\n     */\n    isNegative() {\n        return (this.hi & HALF_2_PWR_32) !== 0;\n    }\n    /**\n     * Negate two's complement.\n     * Invert all the bits and add one to the result.\n     */\n    negate() {\n        let hi = ~this.hi, lo = this.lo;\n        if (lo)\n            lo = ~lo + 1;\n        else\n            hi += 1;\n        return new PbLong(lo, hi);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        if (BI)\n            return this.toBigInt().toString();\n        if (this.isNegative()) {\n            let n = this.negate();\n            return '-' + int64toString(n.lo, n.hi);\n        }\n        return int64toString(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigInt64(0, true);\n    }\n}\n/**\n * long 0 singleton.\n */\nPbLong.ZERO = new PbLong(0, 0);\n","import { WireType } from \"./binary-format-contract\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { varint32read, varint64read } from \"./goog-varint\";\nconst defaultsRead = {\n    readUnknownField: true,\n    readerFactory: bytes => new BinaryReader(bytes),\n};\n/**\n * Make options for reading binary data form partial options.\n */\nexport function binaryReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\nexport class BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder(\"utf-8\", {\n            fatal: true,\n            ignoreBOM: true,\n        });\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element on the wire and return the skipped data.\n     * Supports WireType.StartGroup since v2.0.0-alpha.23.\n     */\n    skip(wireType) {\n        let start = this.pos;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            case WireType.Bit64:\n                this.pos += 4;\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                // From descriptor.proto: Group type is deprecated, not supported in proto3.\n                // But we must still be able to parse and treat as unknown.\n                let t;\n                while ((t = this.tag()[1]) !== WireType.EndGroup) {\n                    this.skip(t);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return new PbLong(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return new PbULong(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1 | (hi & 1) << 31) ^ s);\n        hi = (hi >>> 1 ^ s);\n        return new PbLong(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return new PbULong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return new PbLong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32();\n        let start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n","import { PbLong, PbULong } from \"./pb-long\";\nimport { varint32write, varint64write } from \"./goog-varint\";\nimport { assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\nconst defaultsWrite = {\n    writeUnknownFields: true,\n    writerFactory: () => new BinaryWriter(),\n};\n/**\n * Make options for writing binary data form partial options.\n */\nexport function binaryWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\nexport class BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error('invalid state, fork stack empty');\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32((fieldNo << 3 | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = PbLong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = PbULong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let long = PbLong.from(value);\n        varint64write(long.lo, long.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let long = PbLong.from(value), \n        // zigzag encode\n        sign = long.hi >> 31, lo = (long.lo << 1) ^ sign, hi = ((long.hi << 1) | (long.lo >>> 31)) ^ sign;\n        varint64write(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let long = PbULong.from(value);\n        varint64write(long.lo, long.hi, this.buf);\n        return this;\n    }\n}\n","/**\n * The symbol used as a key on message objects to store the message type.\n *\n * Note that this is an experimental feature - it is here to stay, but\n * implementation details may change without notice.\n */\nexport const MESSAGE_TYPE = Symbol.for(\"protobuf-ts/message-type\");\n","import { lowerCamelCase } from \"./lower-camel-case\";\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nexport var ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n/**\n * JavaScript representation of 64 bit integral types. Equivalent to the\n * field option \"jstype\".\n *\n * By default, protobuf-ts represents 64 bit types as `bigint`.\n *\n * You can change the default behaviour by enabling the plugin parameter\n * `long_type_string`, which will represent 64 bit types as `string`.\n *\n * Alternatively, you can change the behaviour for individual fields\n * with the field option \"jstype\":\n *\n * ```protobuf\n * uint64 my_field = 1 [jstype = JS_STRING];\n * uint64 other_field = 2 [jstype = JS_NUMBER];\n * ```\n */\nexport var LongType;\n(function (LongType) {\n    /**\n     * Use JavaScript `bigint`.\n     *\n     * Field option `[jstype = JS_NORMAL]`.\n     */\n    LongType[LongType[\"BIGINT\"] = 0] = \"BIGINT\";\n    /**\n     * Use JavaScript `string`.\n     *\n     * Field option `[jstype = JS_STRING]`.\n     */\n    LongType[LongType[\"STRING\"] = 1] = \"STRING\";\n    /**\n     * Use JavaScript `number`.\n     *\n     * Large values will loose precision.\n     *\n     * Field option `[jstype = JS_NUMBER]`.\n     */\n    LongType[LongType[\"NUMBER\"] = 2] = \"NUMBER\";\n})(LongType || (LongType = {}));\n/**\n * Protobuf 2.1.0 introduced packed repeated fields.\n * Setting the field option `[packed = true]` enables packing.\n *\n * In proto3, all repeated fields are packed by default.\n * Setting the field option `[packed = false]` disables packing.\n *\n * Packed repeated fields are encoded with a single tag,\n * then a length-delimiter, then the element values.\n *\n * Unpacked repeated fields are encoded with a tag and\n * value for each element.\n *\n * `bytes` and `string` cannot be packed.\n */\nexport var RepeatType;\n(function (RepeatType) {\n    /**\n     * The field is not repeated.\n     */\n    RepeatType[RepeatType[\"NO\"] = 0] = \"NO\";\n    /**\n     * The field is repeated and should be packed.\n     * Invalid for `bytes` and `string`, they cannot be packed.\n     */\n    RepeatType[RepeatType[\"PACKED\"] = 1] = \"PACKED\";\n    /**\n     * The field is repeated but should not be packed.\n     * The only valid repeat type for repeated `bytes` and `string`.\n     */\n    RepeatType[RepeatType[\"UNPACKED\"] = 2] = \"UNPACKED\";\n})(RepeatType || (RepeatType = {}));\n/**\n * Turns PartialFieldInfo into FieldInfo.\n */\nexport function normalizeFieldInfo(field) {\n    var _a, _b, _c, _d;\n    field.localName = (_a = field.localName) !== null && _a !== void 0 ? _a : lowerCamelCase(field.name);\n    field.jsonName = (_b = field.jsonName) !== null && _b !== void 0 ? _b : lowerCamelCase(field.name);\n    field.repeat = (_c = field.repeat) !== null && _c !== void 0 ? _c : RepeatType.NO;\n    field.opt = (_d = field.opt) !== null && _d !== void 0 ? _d : (field.repeat ? false : field.oneof ? false : field.kind == \"message\");\n    return field;\n}\n/**\n * Read custom field options from a generated message type.\n *\n * @deprecated use readFieldOption()\n */\nexport function readFieldOptions(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    return options && options[extensionName] ? extensionType.fromJson(options[extensionName]) : undefined;\n}\nexport function readFieldOption(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\nexport function readMessageOption(messageType, extensionName, extensionType) {\n    const options = messageType.options;\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\n","/**\n * Is the given value a valid oneof group?\n *\n * We represent protobuf `oneof` as algebraic data types (ADT) in generated\n * code. But when working with messages of unknown type, the ADT does not\n * help us.\n *\n * This type guard checks if the given object adheres to the ADT rules, which\n * are as follows:\n *\n * 1) Must be an object.\n *\n * 2) Must have a \"oneofKind\" discriminator property.\n *\n * 3) If \"oneofKind\" is `undefined`, no member field is selected. The object\n * must not have any other properties.\n *\n * 4) If \"oneofKind\" is a `string`, the member field with this name is\n * selected.\n *\n * 5) If a member field is selected, the object must have a second property\n * with this name. The property must not be `undefined`.\n *\n * 6) No extra properties are allowed. The object has either one property\n * (no selection) or two properties (selection).\n *\n */\nexport function isOneofGroup(any) {\n    if (typeof any != 'object' || any === null || !any.hasOwnProperty('oneofKind')) {\n        return false;\n    }\n    switch (typeof any.oneofKind) {\n        case \"string\":\n            if (any[any.oneofKind] === undefined)\n                return false;\n            return Object.keys(any).length == 2;\n        case \"undefined\":\n            return Object.keys(any).length == 1;\n        default:\n            return false;\n    }\n}\n/**\n * Returns the value of the given field in a oneof group.\n */\nexport function getOneofValue(oneof, kind) {\n    return oneof[kind];\n}\nexport function setOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined) {\n        oneof[kind] = value;\n    }\n}\nexport function setUnknownOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined && kind !== undefined) {\n        oneof[kind] = value;\n    }\n}\n/**\n * Removes the selected field in a oneof group.\n *\n * Note that the recommended way to modify a oneof group is to set\n * a new object:\n *\n * ```ts\n * message.result = { oneofKind: undefined };\n * ```\n */\nexport function clearOneofValue(oneof) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = undefined;\n}\n/**\n * Returns the selected value of the given oneof group.\n *\n * Not that the recommended way to access a oneof group is to check\n * the \"oneofKind\" property and let TypeScript narrow down the union\n * type for you:\n *\n * ```ts\n * if (message.result.oneofKind === \"error\") {\n *   message.result.error; // string\n * }\n * ```\n *\n * In the rare case you just need the value, and do not care about\n * which protobuf field is selected, you can use this function\n * for convenience.\n */\nexport function getSelectedOneofValue(oneof) {\n    if (oneof.oneofKind === undefined) {\n        return undefined;\n    }\n    return oneof[oneof.oneofKind];\n}\n","import { LongType, ScalarType } from \"./reflection-info\";\nimport { isOneofGroup } from \"./oneof\";\n// noinspection JSMethodCanBeStatic\nexport class ReflectionTypeCheck {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    prepare() {\n        if (this.data)\n            return;\n        const req = [], known = [], oneofs = [];\n        for (let field of this.fields) {\n            if (field.oneof) {\n                if (!oneofs.includes(field.oneof)) {\n                    oneofs.push(field.oneof);\n                    req.push(field.oneof);\n                    known.push(field.oneof);\n                }\n            }\n            else {\n                known.push(field.localName);\n                switch (field.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        if (!field.opt || field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"message\":\n                        if (field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"map\":\n                        req.push(field.localName);\n                        break;\n                }\n            }\n        }\n        this.data = { req, known, oneofs: Object.values(oneofs) };\n    }\n    /**\n     * Is the argument a valid message as specified by the\n     * reflection information?\n     *\n     * Checks all field types recursively. The `depth`\n     * specifies how deep into the structure the check will be.\n     *\n     * With a depth of 0, only the presence of fields\n     * is checked.\n     *\n     * With a depth of 1 or more, the field types are checked.\n     *\n     * With a depth of 2 or more, the members of map, repeated\n     * and message fields are checked.\n     *\n     * Message fields will be checked recursively with depth - 1.\n     *\n     * The number of map entries / repeated values being checked\n     * is < depth.\n     */\n    is(message, depth, allowExcessProperties = false) {\n        if (depth < 0)\n            return true;\n        if (message === null || message === undefined || typeof message != 'object')\n            return false;\n        this.prepare();\n        let keys = Object.keys(message), data = this.data;\n        // if a required field is missing in arg, this cannot be a T\n        if (keys.length < data.req.length || data.req.some(n => !keys.includes(n)))\n            return false;\n        if (!allowExcessProperties) {\n            // if the arg contains a key we dont know, this is not a literal T\n            if (keys.some(k => !data.known.includes(k)))\n                return false;\n        }\n        // \"With a depth of 0, only the presence and absence of fields is checked.\"\n        // \"With a depth of 1 or more, the field types are checked.\"\n        if (depth < 1) {\n            return true;\n        }\n        // check oneof group\n        for (const name of data.oneofs) {\n            const group = message[name];\n            if (!isOneofGroup(group))\n                return false;\n            if (group.oneofKind === undefined)\n                continue;\n            const field = this.fields.find(f => f.localName === group.oneofKind);\n            if (!field)\n                return false; // we found no field, but have a kind, something is wrong\n            if (!this.field(group[group.oneofKind], field, allowExcessProperties, depth))\n                return false;\n        }\n        // check types\n        for (const field of this.fields) {\n            if (field.oneof !== undefined)\n                continue;\n            if (!this.field(message[field.localName], field, allowExcessProperties, depth))\n                return false;\n        }\n        return true;\n    }\n    field(arg, field, allowExcessProperties, depth) {\n        let repeated = field.repeat;\n        switch (field.kind) {\n            case \"scalar\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, field.T, depth, field.L);\n                return this.scalar(arg, field.T, field.L);\n            case \"enum\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, ScalarType.INT32, depth);\n                return this.scalar(arg, ScalarType.INT32);\n            case \"message\":\n                if (arg === undefined)\n                    return true;\n                if (repeated)\n                    return this.messages(arg, field.T(), allowExcessProperties, depth);\n                return this.message(arg, field.T(), allowExcessProperties, depth);\n            case \"map\":\n                if (typeof arg != 'object' || arg === null)\n                    return false;\n                if (depth < 2)\n                    return true;\n                if (!this.mapKeys(arg, field.K, depth))\n                    return false;\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        return this.scalars(Object.values(arg), field.V.T, depth, field.V.L);\n                    case \"enum\":\n                        return this.scalars(Object.values(arg), ScalarType.INT32, depth);\n                    case \"message\":\n                        return this.messages(Object.values(arg), field.V.T(), allowExcessProperties, depth);\n                }\n                break;\n        }\n        return true;\n    }\n    message(arg, type, allowExcessProperties, depth) {\n        if (allowExcessProperties) {\n            return type.isAssignable(arg, depth);\n        }\n        return type.is(arg, depth);\n    }\n    messages(arg, type, allowExcessProperties, depth) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (allowExcessProperties) {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.isAssignable(arg[i], depth - 1))\n                    return false;\n        }\n        else {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.is(arg[i], depth - 1))\n                    return false;\n        }\n        return true;\n    }\n    scalar(arg, type, longType) {\n        let argType = typeof arg;\n        switch (type) {\n            case ScalarType.UINT64:\n            case ScalarType.FIXED64:\n            case ScalarType.INT64:\n            case ScalarType.SFIXED64:\n            case ScalarType.SINT64:\n                switch (longType) {\n                    case LongType.BIGINT:\n                        return argType == \"bigint\";\n                    case LongType.NUMBER:\n                        return argType == \"number\" && !isNaN(arg);\n                    default:\n                        return argType == \"string\";\n                }\n            case ScalarType.BOOL:\n                return argType == 'boolean';\n            case ScalarType.STRING:\n                return argType == 'string';\n            case ScalarType.BYTES:\n                return arg instanceof Uint8Array;\n            case ScalarType.DOUBLE:\n            case ScalarType.FLOAT:\n                return argType == 'number' && !isNaN(arg);\n            default:\n                // case ScalarType.UINT32:\n                // case ScalarType.FIXED32:\n                // case ScalarType.INT32:\n                // case ScalarType.SINT32:\n                // case ScalarType.SFIXED32:\n                return argType == 'number' && Number.isInteger(arg);\n        }\n    }\n    scalars(arg, type, depth, longType) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (Array.isArray(arg))\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!this.scalar(arg[i], type, longType))\n                    return false;\n        return true;\n    }\n    mapKeys(map, type, depth) {\n        let keys = Object.keys(map);\n        switch (type) {\n            case ScalarType.INT32:\n            case ScalarType.FIXED32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n            case ScalarType.UINT32:\n                return this.scalars(keys.slice(0, depth).map(k => parseInt(k)), type, depth);\n            case ScalarType.BOOL:\n                return this.scalars(keys.slice(0, depth).map(k => k == 'true' ? true : k == 'false' ? false : k), type, depth);\n            default:\n                return this.scalars(keys, type, depth, LongType.STRING);\n        }\n    }\n}\n","import { LongType } from \"./reflection-info\";\n/**\n * Utility method to convert a PbLong or PbUlong to a JavaScript\n * representation during runtime.\n *\n * Works with generated field information, `undefined` is equivalent\n * to `STRING`.\n */\nexport function reflectionLongConvert(long, type) {\n    switch (type) {\n        case LongType.BIGINT:\n            return long.toBigInt();\n        case LongType.NUMBER:\n            return long.toNumber();\n        default:\n            // case undefined:\n            // case LongType.STRING:\n            return long.toString();\n    }\n}\n","import { isJsonObject, typeofJsonValue } from \"./json-typings\";\nimport { base64decode } from \"./base64\";\nimport { LongType, ScalarType } from \"./reflection-info\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\n/**\n * Reads proto3 messages in canonical JSON format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nexport class ReflectionJsonReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (this.fMap === undefined) {\n            this.fMap = {};\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            for (const field of fieldsInput) {\n                this.fMap[field.name] = field;\n                this.fMap[field.jsonName] = field;\n                this.fMap[field.localName] = field;\n            }\n        }\n    }\n    // Cannot parse JSON <type of jsonValue> for <type name>#<fieldName>.\n    assert(condition, fieldName, jsonValue) {\n        if (!condition) {\n            let what = typeofJsonValue(jsonValue);\n            if (what == \"number\" || what == \"boolean\")\n                what = jsonValue.toString();\n            throw new Error(`Cannot parse JSON ${what} for ${this.info.typeName}#${fieldName}`);\n        }\n    }\n    /**\n     * Reads a message from canonical JSON format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(input, message, options) {\n        this.prepare();\n        const oneofsHandled = [];\n        for (const [jsonKey, jsonValue] of Object.entries(input)) {\n            const field = this.fMap[jsonKey];\n            if (!field) {\n                if (!options.ignoreUnknownFields)\n                    throw new Error(`Found unknown field while reading ${this.info.typeName} from JSON format. JSON key: ${jsonKey}`);\n                continue;\n            }\n            const localName = field.localName;\n            // handle oneof ADT\n            let target; // this will be the target for the field value, whether it is member of a oneof or not\n            if (field.oneof) {\n                if (jsonValue === null && (field.kind !== 'enum' || field.T()[0] !== 'google.protobuf.NullValue')) {\n                    continue;\n                }\n                // since json objects are unordered by specification, it is not possible to take the last of multiple oneofs\n                if (oneofsHandled.includes(field.oneof))\n                    throw new Error(`Multiple members of the oneof group \"${field.oneof}\" of ${this.info.typeName} are present in JSON.`);\n                oneofsHandled.push(field.oneof);\n                target = message[field.oneof] = {\n                    oneofKind: localName\n                };\n            }\n            else {\n                target = message;\n            }\n            // we have handled oneof above. we just have read the value into `target`.\n            if (field.kind == 'map') {\n                if (jsonValue === null) {\n                    continue;\n                }\n                // check input\n                this.assert(isJsonObject(jsonValue), field.name, jsonValue);\n                // our target to put map entries into\n                const fieldObj = target[localName];\n                // read entries\n                for (const [jsonObjKey, jsonObjValue] of Object.entries(jsonValue)) {\n                    this.assert(jsonObjValue !== null, field.name + \" map value\", null);\n                    // read value\n                    let val;\n                    switch (field.V.kind) {\n                        case \"message\":\n                            val = field.V.T().internalJsonRead(jsonObjValue, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.V.T(), jsonObjValue, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonObjValue, field.V.T, field.V.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name + \" map value\", jsonObjValue);\n                    // read key\n                    let key = jsonObjKey;\n                    if (field.K == ScalarType.BOOL)\n                        key = key == \"true\" ? true : key == \"false\" ? false : key;\n                    key = this.scalar(key, field.K, LongType.STRING, field.name).toString();\n                    fieldObj[key] = val;\n                }\n            }\n            else if (field.repeat) {\n                if (jsonValue === null)\n                    continue;\n                // check input\n                this.assert(Array.isArray(jsonValue), field.name, jsonValue);\n                // our target to put array entries into\n                const fieldArr = target[localName];\n                // read array entries\n                for (const jsonItem of jsonValue) {\n                    this.assert(jsonItem !== null, field.name, null);\n                    let val;\n                    switch (field.kind) {\n                        case \"message\":\n                            val = field.T().internalJsonRead(jsonItem, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.T(), jsonItem, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonItem, field.T, field.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name, jsonValue);\n                    fieldArr.push(val);\n                }\n            }\n            else {\n                switch (field.kind) {\n                    case \"message\":\n                        if (jsonValue === null && field.T().typeName != 'google.protobuf.Value') {\n                            this.assert(field.oneof === undefined, field.name + \" (oneof member)\", null);\n                            continue;\n                        }\n                        target[localName] = field.T().internalJsonRead(jsonValue, options, target[localName]);\n                        break;\n                    case \"enum\":\n                        if (jsonValue === null)\n                            continue;\n                        let val = this.enum(field.T(), jsonValue, field.name, options.ignoreUnknownFields);\n                        if (val === false)\n                            continue;\n                        target[localName] = val;\n                        break;\n                    case \"scalar\":\n                        if (jsonValue === null)\n                            continue;\n                        target[localName] = this.scalar(jsonValue, field.T, field.L, field.name);\n                        break;\n                }\n            }\n        }\n    }\n    /**\n     * Returns `false` for unrecognized string representations.\n     *\n     * google.protobuf.NullValue accepts only JSON `null` (or the old `\"NULL_VALUE\"`).\n     */\n    enum(type, json, fieldName, ignoreUnknownFields) {\n        if (type[0] == 'google.protobuf.NullValue')\n            assert(json === null || json === \"NULL_VALUE\", `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} only accepts null.`);\n        if (json === null)\n            // we require 0 to be default value for all enums\n            return 0;\n        switch (typeof json) {\n            case \"number\":\n                assert(Number.isInteger(json), `Unable to parse field ${this.info.typeName}#${fieldName}, enum can only be integral number, got ${json}.`);\n                return json;\n            case \"string\":\n                let localEnumName = json;\n                if (type[2] && json.substring(0, type[2].length) === type[2])\n                    // lookup without the shared prefix\n                    localEnumName = json.substring(type[2].length);\n                let enumNumber = type[1][localEnumName];\n                if (typeof enumNumber === 'undefined' && ignoreUnknownFields) {\n                    return false;\n                }\n                assert(typeof enumNumber == \"number\", `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} has no value for \"${json}\".`);\n                return enumNumber;\n        }\n        assert(false, `Unable to parse field ${this.info.typeName}#${fieldName}, cannot parse enum value from ${typeof json}\".`);\n    }\n    scalar(json, type, longType, fieldName) {\n        let e;\n        try {\n            switch (type) {\n                // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n                // Either numbers or strings are accepted. Exponent notation is also accepted.\n                case ScalarType.DOUBLE:\n                case ScalarType.FLOAT:\n                    if (json === null)\n                        return .0;\n                    if (json === \"NaN\")\n                        return Number.NaN;\n                    if (json === \"Infinity\")\n                        return Number.POSITIVE_INFINITY;\n                    if (json === \"-Infinity\")\n                        return Number.NEGATIVE_INFINITY;\n                    if (json === \"\") {\n                        e = \"empty string\";\n                        break;\n                    }\n                    if (typeof json == \"string\" && json.trim().length !== json.length) {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    if (typeof json != \"string\" && typeof json != \"number\") {\n                        break;\n                    }\n                    let float = Number(json);\n                    if (Number.isNaN(float)) {\n                        e = \"not a number\";\n                        break;\n                    }\n                    if (!Number.isFinite(float)) {\n                        // infinity and -infinity are handled by string representation above, so this is an error\n                        e = \"too large or small\";\n                        break;\n                    }\n                    if (type == ScalarType.FLOAT)\n                        assertFloat32(float);\n                    return float;\n                // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n                case ScalarType.INT32:\n                case ScalarType.FIXED32:\n                case ScalarType.SFIXED32:\n                case ScalarType.SINT32:\n                case ScalarType.UINT32:\n                    if (json === null)\n                        return 0;\n                    let int32;\n                    if (typeof json == \"number\")\n                        int32 = json;\n                    else if (json === \"\")\n                        e = \"empty string\";\n                    else if (typeof json == \"string\") {\n                        if (json.trim().length !== json.length)\n                            e = \"extra whitespace\";\n                        else\n                            int32 = Number(json);\n                    }\n                    if (int32 === undefined)\n                        break;\n                    if (type == ScalarType.UINT32)\n                        assertUInt32(int32);\n                    else\n                        assertInt32(int32);\n                    return int32;\n                // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n                case ScalarType.INT64:\n                case ScalarType.SFIXED64:\n                case ScalarType.SINT64:\n                    if (json === null)\n                        return reflectionLongConvert(PbLong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return reflectionLongConvert(PbLong.from(json), longType);\n                case ScalarType.FIXED64:\n                case ScalarType.UINT64:\n                    if (json === null)\n                        return reflectionLongConvert(PbULong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return reflectionLongConvert(PbULong.from(json), longType);\n                // bool:\n                case ScalarType.BOOL:\n                    if (json === null)\n                        return false;\n                    if (typeof json !== \"boolean\")\n                        break;\n                    return json;\n                // string:\n                case ScalarType.STRING:\n                    if (json === null)\n                        return \"\";\n                    if (typeof json !== \"string\") {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    try {\n                        encodeURIComponent(json);\n                    }\n                    catch (e) {\n                        e = \"invalid UTF8\";\n                        break;\n                    }\n                    return json;\n                // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n                // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n                case ScalarType.BYTES:\n                    if (json === null || json === \"\")\n                        return new Uint8Array(0);\n                    if (typeof json !== 'string')\n                        break;\n                    return base64decode(json);\n            }\n        }\n        catch (error) {\n            e = error.message;\n        }\n        this.assert(false, fieldName + (e ? \" - \" + e : \"\"), json);\n    }\n}\n","import { base64encode } from \"./base64\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { ScalarType } from \"./reflection-info\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\n/**\n * Writes proto3 messages in canonical JSON format using reflection\n * information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nexport class ReflectionJsonWriter {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Converts the message to a JSON object, based on the field descriptors.\n     */\n    write(message, options) {\n        const json = {}, source = message;\n        for (const field of this.fields) {\n            // field is not part of a oneof, simply write as is\n            if (!field.oneof) {\n                let jsonValue = this.field(field, source[field.localName], options);\n                if (jsonValue !== undefined)\n                    json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n                continue;\n            }\n            // field is part of a oneof\n            const group = source[field.oneof];\n            if (group.oneofKind !== field.localName)\n                continue; // not selected, skip\n            const opt = field.kind == 'scalar' || field.kind == 'enum'\n                ? Object.assign(Object.assign({}, options), { emitDefaultValues: true }) : options;\n            let jsonValue = this.field(field, group[field.localName], opt);\n            assert(jsonValue !== undefined);\n            json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n        }\n        return json;\n    }\n    field(field, value, options) {\n        let jsonValue = undefined;\n        if (field.kind == 'map') {\n            assert(typeof value == \"object\" && value !== null);\n            const jsonObj = {};\n            switch (field.V.kind) {\n                case \"scalar\":\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.scalar(field.V.T, entryValue, field.name, false, true);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.message(messageType, entryValue, field.name, options);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        assert(entryValue === undefined || typeof entryValue == 'number');\n                        const val = this.enum(enumInfo, entryValue, field.name, false, true, options.enumAsInteger);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n            }\n            if (options.emitDefaultValues || Object.keys(jsonObj).length > 0)\n                jsonValue = jsonObj;\n        }\n        else if (field.repeat) {\n            assert(Array.isArray(value));\n            const jsonArr = [];\n            switch (field.kind) {\n                case \"scalar\":\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.scalar(field.T, value[i], field.name, field.opt, true);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        assert(value[i] === undefined || typeof value[i] == 'number');\n                        const val = this.enum(enumInfo, value[i], field.name, field.opt, true, options.enumAsInteger);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.message(messageType, value[i], field.name, options);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n            }\n            // add converted array to json output\n            if (options.emitDefaultValues || jsonArr.length > 0 || options.emitDefaultValues)\n                jsonValue = jsonArr;\n        }\n        else {\n            switch (field.kind) {\n                case \"scalar\":\n                    jsonValue = this.scalar(field.T, value, field.name, field.opt, options.emitDefaultValues);\n                    break;\n                case \"enum\":\n                    jsonValue = this.enum(field.T(), value, field.name, field.opt, options.emitDefaultValues, options.enumAsInteger);\n                    break;\n                case \"message\":\n                    jsonValue = this.message(field.T(), value, field.name, options);\n                    break;\n            }\n        }\n        return jsonValue;\n    }\n    /**\n     * Returns `null` as the default for google.protobuf.NullValue.\n     */\n    enum(type, value, fieldName, optional, emitDefaultValues, enumAsInteger) {\n        if (type[0] == 'google.protobuf.NullValue')\n            return !emitDefaultValues && !optional ? undefined : null;\n        if (value === undefined) {\n            assert(optional);\n            return undefined;\n        }\n        if (value === 0 && !emitDefaultValues && !optional)\n            // we require 0 to be default value for all enums\n            return undefined;\n        assert(typeof value == 'number');\n        assert(Number.isInteger(value));\n        if (enumAsInteger || !type[1].hasOwnProperty(value))\n            // if we don't now the enum value, just return the number\n            return value;\n        if (type[2])\n            // restore the dropped prefix\n            return type[2] + type[1][value];\n        return type[1][value];\n    }\n    message(type, value, fieldName, options) {\n        if (value === undefined)\n            return options.emitDefaultValues ? null : undefined;\n        return type.internalJsonWrite(value, options);\n    }\n    scalar(type, value, fieldName, optional, emitDefaultValues) {\n        if (value === undefined) {\n            assert(optional);\n            return undefined;\n        }\n        const ed = emitDefaultValues || optional;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (type) {\n            // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n            case ScalarType.INT32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assertInt32(value);\n                return value;\n            case ScalarType.FIXED32:\n            case ScalarType.UINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assertUInt32(value);\n                return value;\n            // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n            // Either numbers or strings are accepted. Exponent notation is also accepted.\n            case ScalarType.FLOAT:\n                assertFloat32(value);\n            case ScalarType.DOUBLE:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assert(typeof value == 'number');\n                if (Number.isNaN(value))\n                    return 'NaN';\n                if (value === Number.POSITIVE_INFINITY)\n                    return 'Infinity';\n                if (value === Number.NEGATIVE_INFINITY)\n                    return '-Infinity';\n                return value;\n            // string:\n            case ScalarType.STRING:\n                if (value === \"\")\n                    return ed ? '' : undefined;\n                assert(typeof value == 'string');\n                return value;\n            // bool:\n            case ScalarType.BOOL:\n                if (value === false)\n                    return ed ? false : undefined;\n                assert(typeof value == 'boolean');\n                return value;\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case ScalarType.UINT64:\n            case ScalarType.FIXED64:\n                assert(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let ulong = PbULong.from(value);\n                if (ulong.isZero() && !ed)\n                    return undefined;\n                return ulong.toString();\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case ScalarType.INT64:\n            case ScalarType.SFIXED64:\n            case ScalarType.SINT64:\n                assert(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let long = PbLong.from(value);\n                if (long.isZero() && !ed)\n                    return undefined;\n                return long.toString();\n            // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n            // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n            case ScalarType.BYTES:\n                assert(value instanceof Uint8Array);\n                if (!value.byteLength)\n                    return ed ? \"\" : undefined;\n                return base64encode(value);\n        }\n    }\n}\n","import { LongType, ScalarType } from \"./reflection-info\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\nimport { PbLong, PbULong } from \"./pb-long\";\n/**\n * Creates the default value for a scalar type.\n */\nexport function reflectionScalarDefault(type, longType = LongType.STRING) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return false;\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n            return reflectionLongConvert(PbULong.ZERO, longType);\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            return reflectionLongConvert(PbLong.ZERO, longType);\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            return 0.0;\n        case ScalarType.BYTES:\n            return new Uint8Array(0);\n        case ScalarType.STRING:\n            return \"\";\n        default:\n            // case ScalarType.INT32:\n            // case ScalarType.UINT32:\n            // case ScalarType.SINT32:\n            // case ScalarType.FIXED32:\n            // case ScalarType.SFIXED32:\n            return 0;\n    }\n}\n","import { UnknownFieldHandler, WireType } from \"./binary-format-contract\";\nimport { LongType, ScalarType } from \"./reflection-info\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\nimport { reflectionScalarDefault } from \"./reflection-scalar-default\";\n/**\n * Reads proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nexport class ReflectionBinaryReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (!this.fieldNoToField) {\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            this.fieldNoToField = new Map(fieldsInput.map(field => [field.no, field]));\n        }\n    }\n    /**\n     * Reads a message from binary format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(reader, message, options, length) {\n        this.prepare();\n        const end = length === undefined ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n            // read the tag and find the field\n            const [fieldNo, wireType] = reader.tag(), field = this.fieldNoToField.get(fieldNo);\n            if (!field) {\n                let u = options.readUnknownField;\n                if (u == \"throw\")\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.info.typeName}`);\n                let d = reader.skip(wireType);\n                if (u !== false)\n                    (u === true ? UnknownFieldHandler.onRead : u)(this.info.typeName, message, fieldNo, wireType, d);\n                continue;\n            }\n            // target object for the field we are reading\n            let target = message, repeated = field.repeat, localName = field.localName;\n            // if field is member of oneof ADT, use ADT as target\n            if (field.oneof) {\n                target = target[field.oneof];\n                // if other oneof member selected, set new ADT\n                if (target.oneofKind !== localName)\n                    target = message[field.oneof] = {\n                        oneofKind: localName\n                    };\n            }\n            // we have handled oneof above, we just have read the value into `target[localName]`\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                    let L = field.kind == \"scalar\" ? field.L : undefined;\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        if (wireType == WireType.LengthDelimited && T != ScalarType.STRING && T != ScalarType.BYTES) {\n                            let e = reader.uint32() + reader.pos;\n                            while (reader.pos < e)\n                                arr.push(this.scalar(reader, T, L));\n                        }\n                        else\n                            arr.push(this.scalar(reader, T, L));\n                    }\n                    else\n                        target[localName] = this.scalar(reader, T, L);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        let msg = field.T().internalBinaryRead(reader, reader.uint32(), options);\n                        arr.push(msg);\n                    }\n                    else\n                        target[localName] = field.T().internalBinaryRead(reader, reader.uint32(), options, target[localName]);\n                    break;\n                case \"map\":\n                    let [mapKey, mapVal] = this.mapEntry(field, reader, options);\n                    // safe to assume presence of map object, oneof cannot contain repeated values\n                    target[localName][mapKey] = mapVal;\n                    break;\n            }\n        }\n    }\n    /**\n     * Read a map field, expecting key field = 1, value field = 2\n     */\n    mapEntry(field, reader, options) {\n        let length = reader.uint32();\n        let end = reader.pos + length;\n        let key = undefined; // javascript only allows number or string for object properties\n        let val = undefined;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case 1:\n                    if (field.K == ScalarType.BOOL)\n                        key = reader.bool().toString();\n                    else\n                        // long types are read as string, number types are okay as number\n                        key = this.scalar(reader, field.K, LongType.STRING);\n                    break;\n                case 2:\n                    switch (field.V.kind) {\n                        case \"scalar\":\n                            val = this.scalar(reader, field.V.T, field.V.L);\n                            break;\n                        case \"enum\":\n                            val = reader.int32();\n                            break;\n                        case \"message\":\n                            val = field.V.T().internalBinaryRead(reader, reader.uint32(), options);\n                            break;\n                    }\n                    break;\n                default:\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) in map entry for ${this.info.typeName}#${field.name}`);\n            }\n        }\n        if (key === undefined) {\n            let keyRaw = reflectionScalarDefault(field.K);\n            key = field.K == ScalarType.BOOL ? keyRaw.toString() : keyRaw;\n        }\n        if (val === undefined)\n            switch (field.V.kind) {\n                case \"scalar\":\n                    val = reflectionScalarDefault(field.V.T, field.V.L);\n                    break;\n                case \"enum\":\n                    val = 0;\n                    break;\n                case \"message\":\n                    val = field.V.T().create();\n                    break;\n            }\n        return [key, val];\n    }\n    scalar(reader, type, longType) {\n        switch (type) {\n            case ScalarType.INT32:\n                return reader.int32();\n            case ScalarType.STRING:\n                return reader.string();\n            case ScalarType.BOOL:\n                return reader.bool();\n            case ScalarType.DOUBLE:\n                return reader.double();\n            case ScalarType.FLOAT:\n                return reader.float();\n            case ScalarType.INT64:\n                return reflectionLongConvert(reader.int64(), longType);\n            case ScalarType.UINT64:\n                return reflectionLongConvert(reader.uint64(), longType);\n            case ScalarType.FIXED64:\n                return reflectionLongConvert(reader.fixed64(), longType);\n            case ScalarType.FIXED32:\n                return reader.fixed32();\n            case ScalarType.BYTES:\n                return reader.bytes();\n            case ScalarType.UINT32:\n                return reader.uint32();\n            case ScalarType.SFIXED32:\n                return reader.sfixed32();\n            case ScalarType.SFIXED64:\n                return reflectionLongConvert(reader.sfixed64(), longType);\n            case ScalarType.SINT32:\n                return reader.sint32();\n            case ScalarType.SINT64:\n                return reflectionLongConvert(reader.sint64(), longType);\n        }\n    }\n}\n","import { UnknownFieldHandler, WireType } from \"./binary-format-contract\";\nimport { RepeatType, ScalarType } from \"./reflection-info\";\nimport { assert } from \"./assert\";\nimport { PbLong, PbULong } from \"./pb-long\";\n/**\n * Writes proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nexport class ReflectionBinaryWriter {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        if (!this.fields) {\n            const fieldsInput = this.info.fields ? this.info.fields.concat() : [];\n            this.fields = fieldsInput.sort((a, b) => a.no - b.no);\n        }\n    }\n    /**\n     * Writes the message to binary format.\n     */\n    write(message, writer, options) {\n        this.prepare();\n        for (const field of this.fields) {\n            let value, // this will be our field value, whether it is member of a oneof or not\n            emitDefault, // whether we emit the default value (only true for oneof members)\n            repeated = field.repeat, localName = field.localName;\n            // handle oneof ADT\n            if (field.oneof) {\n                const group = message[field.oneof];\n                if (group.oneofKind !== localName)\n                    continue; // if field is not selected, skip\n                value = group[localName];\n                emitDefault = true;\n            }\n            else {\n                value = message[localName];\n                emitDefault = false;\n            }\n            // we have handled oneof above. we just have to honor `emitDefault`.\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                    if (repeated) {\n                        assert(Array.isArray(value));\n                        if (repeated == RepeatType.PACKED)\n                            this.packed(writer, T, field.no, value);\n                        else\n                            for (const item of value)\n                                this.scalar(writer, T, field.no, item, true);\n                    }\n                    else if (value === undefined)\n                        assert(field.opt);\n                    else\n                        this.scalar(writer, T, field.no, value, emitDefault || field.opt);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        assert(Array.isArray(value));\n                        for (const item of value)\n                            this.message(writer, options, field.T(), field.no, item);\n                    }\n                    else {\n                        this.message(writer, options, field.T(), field.no, value);\n                    }\n                    break;\n                case \"map\":\n                    assert(typeof value == 'object' && value !== null);\n                    for (const [key, val] of Object.entries(value))\n                        this.mapEntry(writer, options, field, key, val);\n                    break;\n            }\n        }\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u === true ? UnknownFieldHandler.onWrite : u)(this.info.typeName, message, writer);\n    }\n    mapEntry(writer, options, field, key, value) {\n        writer.tag(field.no, WireType.LengthDelimited);\n        writer.fork();\n        // javascript only allows number or string for object properties\n        // we convert from our representation to the protobuf type\n        let keyValue = key;\n        switch (field.K) {\n            case ScalarType.INT32:\n            case ScalarType.FIXED32:\n            case ScalarType.UINT32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n                keyValue = Number.parseInt(key);\n                break;\n            case ScalarType.BOOL:\n                assert(key == 'true' || key == 'false');\n                keyValue = key == 'true';\n                break;\n        }\n        // write key, expecting key field number = 1\n        this.scalar(writer, field.K, 1, keyValue, true);\n        // write value, expecting value field number = 2\n        switch (field.V.kind) {\n            case 'scalar':\n                this.scalar(writer, field.V.T, 2, value, true);\n                break;\n            case 'enum':\n                this.scalar(writer, ScalarType.INT32, 2, value, true);\n                break;\n            case 'message':\n                this.message(writer, options, field.V.T(), 2, value);\n                break;\n        }\n        writer.join();\n    }\n    message(writer, options, handler, fieldNo, value) {\n        if (value === undefined)\n            return;\n        handler.internalBinaryWrite(value, writer.tag(fieldNo, WireType.LengthDelimited).fork(), options);\n        writer.join();\n    }\n    /**\n     * Write a single scalar value.\n     */\n    scalar(writer, type, fieldNo, value, emitDefault) {\n        let [wireType, method, isDefault] = this.scalarInfo(type, value);\n        if (!isDefault || emitDefault) {\n            writer.tag(fieldNo, wireType);\n            writer[method](value);\n        }\n    }\n    /**\n     * Write an array of scalar values in packed format.\n     */\n    packed(writer, type, fieldNo, value) {\n        if (!value.length)\n            return;\n        assert(type !== ScalarType.BYTES && type !== ScalarType.STRING);\n        // write tag\n        writer.tag(fieldNo, WireType.LengthDelimited);\n        // begin length-delimited\n        writer.fork();\n        // write values without tags\n        let [, method,] = this.scalarInfo(type);\n        for (let i = 0; i < value.length; i++)\n            writer[method](value[i]);\n        // end length delimited\n        writer.join();\n    }\n    /**\n     * Get information for writing a scalar value.\n     *\n     * Returns tuple:\n     * [0]: appropriate WireType\n     * [1]: name of the appropriate method of IBinaryWriter\n     * [2]: whether the given value is a default value\n     *\n     * If argument `value` is omitted, [2] is always false.\n     */\n    scalarInfo(type, value) {\n        let t = WireType.Varint;\n        let m;\n        let i = value === undefined;\n        let d = value === 0;\n        switch (type) {\n            case ScalarType.INT32:\n                m = \"int32\";\n                break;\n            case ScalarType.STRING:\n                d = i || !value.length;\n                t = WireType.LengthDelimited;\n                m = \"string\";\n                break;\n            case ScalarType.BOOL:\n                d = value === false;\n                m = \"bool\";\n                break;\n            case ScalarType.UINT32:\n                m = \"uint32\";\n                break;\n            case ScalarType.DOUBLE:\n                t = WireType.Bit64;\n                m = \"double\";\n                break;\n            case ScalarType.FLOAT:\n                t = WireType.Bit32;\n                m = \"float\";\n                break;\n            case ScalarType.INT64:\n                d = i || PbLong.from(value).isZero();\n                m = \"int64\";\n                break;\n            case ScalarType.UINT64:\n                d = i || PbULong.from(value).isZero();\n                m = \"uint64\";\n                break;\n            case ScalarType.FIXED64:\n                d = i || PbULong.from(value).isZero();\n                t = WireType.Bit64;\n                m = \"fixed64\";\n                break;\n            case ScalarType.BYTES:\n                d = i || !value.byteLength;\n                t = WireType.LengthDelimited;\n                m = \"bytes\";\n                break;\n            case ScalarType.FIXED32:\n                t = WireType.Bit32;\n                m = \"fixed32\";\n                break;\n            case ScalarType.SFIXED32:\n                t = WireType.Bit32;\n                m = \"sfixed32\";\n                break;\n            case ScalarType.SFIXED64:\n                d = i || PbLong.from(value).isZero();\n                t = WireType.Bit64;\n                m = \"sfixed64\";\n                break;\n            case ScalarType.SINT32:\n                m = \"sint32\";\n                break;\n            case ScalarType.SINT64:\n                d = i || PbLong.from(value).isZero();\n                m = \"sint64\";\n                break;\n        }\n        return [t, m, i || d];\n    }\n}\n","import { reflectionScalarDefault } from \"./reflection-scalar-default\";\nimport { MESSAGE_TYPE } from './message-type-contract';\n/**\n * Creates an instance of the generic message, using the field\n * information.\n */\nexport function reflectionCreate(type) {\n    /**\n     * This ternary can be removed in the next major version.\n     * The `Object.create()` code path utilizes a new `messagePrototype`\n     * property on the `IMessageType` which has this same `MESSAGE_TYPE`\n     * non-enumerable property on it. Doing it this way means that we only\n     * pay the cost of `Object.defineProperty()` once per `IMessageType`\n     * class of once per \"instance\". The falsy code path is only provided\n     * for backwards compatibility in cases where the runtime library is\n     * updated without also updating the generated code.\n     */\n    const msg = type.messagePrototype\n        ? Object.create(type.messagePrototype)\n        : Object.defineProperty({}, MESSAGE_TYPE, { value: type });\n    for (let field of type.fields) {\n        let name = field.localName;\n        if (field.opt)\n            continue;\n        if (field.oneof)\n            msg[field.oneof] = { oneofKind: undefined };\n        else if (field.repeat)\n            msg[name] = [];\n        else\n            switch (field.kind) {\n                case \"scalar\":\n                    msg[name] = reflectionScalarDefault(field.T, field.L);\n                    break;\n                case \"enum\":\n                    // we require 0 to be default value for all enums\n                    msg[name] = 0;\n                    break;\n                case \"map\":\n                    msg[name] = {};\n                    break;\n            }\n    }\n    return msg;\n}\n","/**\n * Copy partial data into the target message.\n *\n * If a singular scalar or enum field is present in the source, it\n * replaces the field in the target.\n *\n * If a singular message field is present in the source, it is merged\n * with the target field by calling mergePartial() of the responsible\n * message type.\n *\n * If a repeated field is present in the source, its values replace\n * all values in the target array, removing extraneous values.\n * Repeated message fields are copied, not merged.\n *\n * If a map field is present in the source, entries are added to the\n * target map, replacing entries with the same key. Entries that only\n * exist in the target remain. Entries with message values are copied,\n * not merged.\n *\n * Note that this function differs from protobuf merge semantics,\n * which appends repeated fields.\n */\nexport function reflectionMergePartial(info, target, source) {\n    let fieldValue, // the field value we are working with\n    input = source, output; // where we want our field value to go\n    for (let field of info.fields) {\n        let name = field.localName;\n        if (field.oneof) {\n            const group = input[field.oneof]; // this is the oneof`s group in the source\n            if ((group === null || group === void 0 ? void 0 : group.oneofKind) == undefined) { // the user is free to omit\n                continue; // we skip this field, and all other members too\n            }\n            fieldValue = group[name]; // our value comes from the the oneof group of the source\n            output = target[field.oneof]; // and our output is the oneof group of the target\n            output.oneofKind = group.oneofKind; // always update discriminator\n            if (fieldValue == undefined) {\n                delete output[name]; // remove any existing value\n                continue; // skip further work on field\n            }\n        }\n        else {\n            fieldValue = input[name]; // we are using the source directly\n            output = target; // we want our field value to go directly into the target\n            if (fieldValue == undefined) {\n                continue; // skip further work on field, existing value is used as is\n            }\n        }\n        if (field.repeat)\n            output[name].length = fieldValue.length; // resize target array to match source array\n        // now we just work with `fieldValue` and `output` to merge the value\n        switch (field.kind) {\n            case \"scalar\":\n            case \"enum\":\n                if (field.repeat)\n                    for (let i = 0; i < fieldValue.length; i++)\n                        output[name][i] = fieldValue[i]; // not a reference type\n                else\n                    output[name] = fieldValue; // not a reference type\n                break;\n            case \"message\":\n                let T = field.T();\n                if (field.repeat)\n                    for (let i = 0; i < fieldValue.length; i++)\n                        output[name][i] = T.create(fieldValue[i]);\n                else if (output[name] === undefined)\n                    output[name] = T.create(fieldValue); // nothing to merge with\n                else\n                    T.mergePartial(output[name], fieldValue);\n                break;\n            case \"map\":\n                // Map and repeated fields are simply overwritten, not appended or merged\n                switch (field.V.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        Object.assign(output[name], fieldValue); // elements are not reference types\n                        break;\n                    case \"message\":\n                        let T = field.V.T();\n                        for (let k of Object.keys(fieldValue))\n                            output[name][k] = T.create(fieldValue[k]);\n                        break;\n                }\n                break;\n        }\n    }\n}\n","import { ScalarType } from \"./reflection-info\";\n/**\n * Determines whether two message of the same type have the same field values.\n * Checks for deep equality, traversing repeated fields, oneof groups, maps\n * and messages recursively.\n * Will also return true if both messages are `undefined`.\n */\nexport function reflectionEquals(info, a, b) {\n    if (a === b)\n        return true;\n    if (!a || !b)\n        return false;\n    for (let field of info.fields) {\n        let localName = field.localName;\n        let val_a = field.oneof ? a[field.oneof][localName] : a[localName];\n        let val_b = field.oneof ? b[field.oneof][localName] : b[localName];\n        switch (field.kind) {\n            case \"enum\":\n            case \"scalar\":\n                let t = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                if (!(field.repeat\n                    ? repeatedPrimitiveEq(t, val_a, val_b)\n                    : primitiveEq(t, val_a, val_b)))\n                    return false;\n                break;\n            case \"map\":\n                if (!(field.V.kind == \"message\"\n                    ? repeatedMsgEq(field.V.T(), objectValues(val_a), objectValues(val_b))\n                    : repeatedPrimitiveEq(field.V.kind == \"enum\" ? ScalarType.INT32 : field.V.T, objectValues(val_a), objectValues(val_b))))\n                    return false;\n                break;\n            case \"message\":\n                let T = field.T();\n                if (!(field.repeat\n                    ? repeatedMsgEq(T, val_a, val_b)\n                    : T.equals(val_a, val_b)))\n                    return false;\n                break;\n        }\n    }\n    return true;\n}\nconst objectValues = Object.values;\nfunction primitiveEq(type, a, b) {\n    if (a === b)\n        return true;\n    if (type !== ScalarType.BYTES)\n        return false;\n    let ba = a;\n    let bb = b;\n    if (ba.length !== bb.length)\n        return false;\n    for (let i = 0; i < ba.length; i++)\n        if (ba[i] != bb[i])\n            return false;\n    return true;\n}\nfunction repeatedPrimitiveEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!primitiveEq(type, a[i], b[i]))\n            return false;\n    return true;\n}\nfunction repeatedMsgEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!type.equals(a[i], b[i]))\n            return false;\n    return true;\n}\n","import { MESSAGE_TYPE } from \"./message-type-contract\";\nimport { normalizeFieldInfo } from \"./reflection-info\";\nimport { ReflectionTypeCheck } from \"./reflection-type-check\";\nimport { ReflectionJsonReader } from \"./reflection-json-reader\";\nimport { ReflectionJsonWriter } from \"./reflection-json-writer\";\nimport { ReflectionBinaryReader } from \"./reflection-binary-reader\";\nimport { ReflectionBinaryWriter } from \"./reflection-binary-writer\";\nimport { reflectionCreate } from \"./reflection-create\";\nimport { reflectionMergePartial } from \"./reflection-merge-partial\";\nimport { typeofJsonValue } from \"./json-typings\";\nimport { jsonReadOptions, jsonWriteOptions, } from \"./json-format-contract\";\nimport { reflectionEquals } from \"./reflection-equals\";\nimport { binaryWriteOptions } from \"./binary-writer\";\nimport { binaryReadOptions } from \"./binary-reader\";\nconst baseDescriptors = Object.getOwnPropertyDescriptors(Object.getPrototypeOf({}));\n/**\n * This standard message type provides reflection-based\n * operations to work with a message.\n */\nexport class MessageType {\n    constructor(name, fields, options) {\n        this.defaultCheckDepth = 16;\n        this.typeName = name;\n        this.fields = fields.map(normalizeFieldInfo);\n        this.options = options !== null && options !== void 0 ? options : {};\n        this.messagePrototype = Object.create(null, Object.assign(Object.assign({}, baseDescriptors), { [MESSAGE_TYPE]: { value: this } }));\n        this.refTypeCheck = new ReflectionTypeCheck(this);\n        this.refJsonReader = new ReflectionJsonReader(this);\n        this.refJsonWriter = new ReflectionJsonWriter(this);\n        this.refBinReader = new ReflectionBinaryReader(this);\n        this.refBinWriter = new ReflectionBinaryWriter(this);\n    }\n    create(value) {\n        let message = reflectionCreate(this);\n        if (value !== undefined) {\n            reflectionMergePartial(this, message, value);\n        }\n        return message;\n    }\n    /**\n     * Clone the message.\n     *\n     * Unknown fields are discarded.\n     */\n    clone(message) {\n        let copy = this.create();\n        reflectionMergePartial(this, copy, message);\n        return copy;\n    }\n    /**\n     * Determines whether two message of the same type have the same field values.\n     * Checks for deep equality, traversing repeated fields, oneof groups, maps\n     * and messages recursively.\n     * Will also return true if both messages are `undefined`.\n     */\n    equals(a, b) {\n        return reflectionEquals(this, a, b);\n    }\n    /**\n     * Is the given value assignable to our message type\n     * and contains no [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    is(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, false);\n    }\n    /**\n     * Is the given value assignable to our message type,\n     * regardless of [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    isAssignable(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, true);\n    }\n    /**\n     * Copy partial data into the target message.\n     */\n    mergePartial(target, source) {\n        reflectionMergePartial(this, target, source);\n    }\n    /**\n     * Create a new message from binary format.\n     */\n    fromBinary(data, options) {\n        let opt = binaryReadOptions(options);\n        return this.internalBinaryRead(opt.readerFactory(data), data.byteLength, opt);\n    }\n    /**\n     * Read a new message from a JSON value.\n     */\n    fromJson(json, options) {\n        return this.internalJsonRead(json, jsonReadOptions(options));\n    }\n    /**\n     * Read a new message from a JSON string.\n     * This is equivalent to `T.fromJson(JSON.parse(json))`.\n     */\n    fromJsonString(json, options) {\n        let value = JSON.parse(json);\n        return this.fromJson(value, options);\n    }\n    /**\n     * Write the message to canonical JSON value.\n     */\n    toJson(message, options) {\n        return this.internalJsonWrite(message, jsonWriteOptions(options));\n    }\n    /**\n     * Convert the message to canonical JSON string.\n     * This is equivalent to `JSON.stringify(T.toJson(t))`\n     */\n    toJsonString(message, options) {\n        var _a;\n        let value = this.toJson(message, options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Write the message to binary format.\n     */\n    toBinary(message, options) {\n        let opt = binaryWriteOptions(options);\n        return this.internalBinaryWrite(message, opt.writerFactory(), opt).finish();\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * JSON, use `fromJson()` or `fromJsonString()`.\n     *\n     * Reads JSON value and merges the fields into the target\n     * according to protobuf rules. If the target is omitted,\n     * a new instance is created first.\n     */\n    internalJsonRead(json, options, target) {\n        if (json !== null && typeof json == \"object\" && !Array.isArray(json)) {\n            let message = target !== null && target !== void 0 ? target : this.create();\n            this.refJsonReader.read(json, message, options);\n            return message;\n        }\n        throw new Error(`Unable to parse message ${this.typeName} from JSON ${typeofJsonValue(json)}.`);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * to JSON, use `toJson()` or `toJsonString().\n     *\n     * Writes JSON value and returns it.\n     */\n    internalJsonWrite(message, options) {\n        return this.refJsonWriter.write(message, options);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * in binary format, use `toBinary()`.\n     *\n     * Serializes the message in binary format and appends it to the given\n     * writer. Returns passed writer.\n     */\n    internalBinaryWrite(message, writer, options) {\n        this.refBinWriter.write(message, writer, options);\n        return writer;\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * binary data, use `fromBinary()`.\n     *\n     * Reads data from binary format and merges the fields into\n     * the target according to protobuf rules. If the target is\n     * omitted, a new instance is created first.\n     */\n    internalBinaryRead(reader, length, options, target) {\n        let message = target !== null && target !== void 0 ? target : this.create();\n        this.refBinReader.read(reader, message, options, length);\n        return message;\n    }\n}\n","import { MESSAGE_TYPE } from './message-type-contract';\n/**\n * Check if the provided object is a proto message.\n *\n * Note that this is an experimental feature - it is here to stay, but\n * implementation details may change without notice.\n */\nexport function containsMessageType(msg) {\n    return msg[MESSAGE_TYPE] != null;\n}\n","/**\n * Is this a lookup object generated by Typescript, for a Typescript enum\n * generated by protobuf-ts?\n *\n * - No `const enum` (enum must not be inlined, we need reverse mapping).\n * - No string enum (we need int32 for protobuf).\n * - Must have a value for 0 (otherwise, we would need to support custom default values).\n */\nexport function isEnumObject(arg) {\n    if (typeof arg != 'object' || arg === null) {\n        return false;\n    }\n    if (!arg.hasOwnProperty(0)) {\n        return false;\n    }\n    for (let k of Object.keys(arg)) {\n        let num = parseInt(k);\n        if (!Number.isNaN(num)) {\n            // is there a name for the number?\n            let nam = arg[num];\n            if (nam === undefined)\n                return false;\n            // does the name resolve back to the number?\n            if (arg[nam] !== num)\n                return false;\n        }\n        else {\n            // is there a number for the name?\n            let num = arg[k];\n            if (num === undefined)\n                return false;\n            // is it a string enum?\n            if (typeof num !== 'number')\n                return false;\n            // do we know the number?\n            if (arg[num] === undefined)\n                return false;\n        }\n    }\n    return true;\n}\n/**\n * Lists all values of a Typescript enum, as an array of objects with a \"name\"\n * property and a \"number\" property.\n *\n * Note that it is possible that a number appears more than once, because it is\n * possible to have aliases in an enum.\n *\n * Throws if the enum does not adhere to the rules of enums generated by\n * protobuf-ts. See `isEnumObject()`.\n */\nexport function listEnumValues(enumObject) {\n    if (!isEnumObject(enumObject))\n        throw new Error(\"not a typescript enum object\");\n    let values = [];\n    for (let [name, number] of Object.entries(enumObject))\n        if (typeof number == \"number\")\n            values.push({ name, number });\n    return values;\n}\n/**\n * Lists the names of a Typescript enum.\n *\n * Throws if the enum does not adhere to the rules of enums generated by\n * protobuf-ts. See `isEnumObject()`.\n */\nexport function listEnumNames(enumObject) {\n    return listEnumValues(enumObject).map(val => val.name);\n}\n/**\n * Lists the numbers of a Typescript enum.\n *\n * Throws if the enum does not adhere to the rules of enums generated by\n * protobuf-ts. See `isEnumObject()`.\n */\nexport function listEnumNumbers(enumObject) {\n    return listEnumValues(enumObject)\n        .map(val => val.number)\n        .filter((num, index, arr) => arr.indexOf(num) == index);\n}\n","const defaultsWrite = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n}, defaultsRead = {\n    ignoreUnknownFields: false,\n};\n/**\n * Make options for reading JSON data from partial options.\n */\nexport function jsonReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\n/**\n * Make options for writing JSON data from partial options.\n */\nexport function jsonWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\n/**\n * Merges JSON write or read options. Later values override earlier values. Type registries are merged.\n */\nexport function mergeJsonOptions(a, b) {\n    var _a, _b;\n    let c = Object.assign(Object.assign({}, a), b);\n    c.typeRegistry = [...((_a = a === null || a === void 0 ? void 0 : a.typeRegistry) !== null && _a !== void 0 ? _a : []), ...((_b = b === null || b === void 0 ? void 0 : b.typeRegistry) !== null && _b !== void 0 ? _b : [])];\n    return c;\n}\n","/**\n * Converts snake_case to lowerCamelCase.\n *\n * Should behave like protoc:\n * https://github.com/protocolbuffers/protobuf/blob/e8ae137c96444ea313485ed1118c5e43b2099cf1/src/google/protobuf/compiler/java/java_helpers.cc#L118\n */\nexport function lowerCamelCase(snakeCase) {\n    let capNext = false;\n    const sb = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let next = snakeCase.charAt(i);\n        if (next == '_') {\n            capNext = true;\n        }\n        else if (/\\d/.test(next)) {\n            sb.push(next);\n            capNext = true;\n        }\n        else if (capNext) {\n            sb.push(next.toUpperCase());\n            capNext = false;\n        }\n        else if (i == 0) {\n            sb.push(next.toLowerCase());\n        }\n        else {\n            sb.push(next);\n        }\n    }\n    return sb.join('');\n}\n",null,"'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(' ', ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.formatWithOptions()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n",null,"/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(' ', ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.formatWithOptions()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.of = exports.PropertiesFile = void 0;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*\r\n * properties\r\n *\r\n * Copyright (c) 2013 Matt Steele\r\n * Licensed under the MIT license.\r\n */\n\n\nclass PropertiesFile {\n  constructor(...args) {\n    this.objs = {};\n\n    if (args.length) {\n      this.of.apply(this, args);\n    }\n  }\n\n  makeKeys(line) {\n    if (line && line.indexOf('#') !== 0) {\n      //let splitIndex = line.indexOf('=');\n      let separatorPositions = ['=', ':'].map(sep => {\n        return line.indexOf(sep);\n      }).filter(index => {\n        return index > -1;\n      });\n      let splitIndex = Math.min(...separatorPositions);\n      let key = line.substring(0, splitIndex).trim();\n      let value = line.substring(splitIndex + 1).trim(); // if keys already exists ...\n\n      if (this.objs.hasOwnProperty(key)) {\n        // if it is already an Array\n        if (Array.isArray(this.objs[key])) {\n          // just push the new value\n          this.objs[key].push(value);\n        } else {\n          // transform the value into Array\n          let oldValue = this.objs[key];\n          this.objs[key] = [oldValue, value];\n        }\n      } else {\n        // the key does not exists\n        const escapedValue = value.replace(/\"/g, '\\\\\"') // escape \"\n        .replace(/\\\\:/g, ':') // remove \\ before :\n        .replace(/\\\\=/g, '='); // remove \\ before =\n\n        this.objs[key] = unescape(JSON.parse('\"' + escapedValue + '\"'));\n      }\n    }\n  }\n\n  addFile(file) {\n    let data = _fs.default.readFileSync(file, 'utf-8');\n\n    let items = data.split(/\\r?\\n/);\n    let me = this;\n\n    for (let i = 0; i < items.length; i++) {\n      let line = items[i];\n\n      while (line.substring(line.length - 1) === '\\\\') {\n        line = line.slice(0, -1);\n        let nextLine = items[i + 1];\n        line = line + nextLine.trim();\n        i++;\n      }\n\n      me.makeKeys(line);\n    }\n  }\n\n  of(...args) {\n    for (let i = 0; i < args.length; i++) {\n      this.addFile(args[i]);\n    }\n  }\n\n  get(key, defaultValue) {\n    if (this.objs.hasOwnProperty(key)) {\n      if (Array.isArray(this.objs[key])) {\n        let ret = [];\n\n        for (let i = 0; i < this.objs[key].length; i++) {\n          ret[i] = this.interpolate(this.objs[key][i]);\n        }\n\n        return ret;\n      } else {\n        return typeof this.objs[key] === 'undefined' ? '' : this.interpolate(this.objs[key]);\n      }\n    }\n\n    return defaultValue;\n  }\n\n  getLast(key, defaultValue) {\n    if (this.objs.hasOwnProperty(key)) {\n      if (Array.isArray(this.objs[key])) {\n        var lg = this.objs[key].length;\n        return this.interpolate(this.objs[key][lg - 1]);\n      } else {\n        return typeof this.objs[key] === 'undefined' ? '' : this.interpolate(this.objs[key]);\n      }\n    }\n\n    return defaultValue;\n  }\n\n  getFirst(key, defaultValue) {\n    if (this.objs.hasOwnProperty(key)) {\n      if (Array.isArray(this.objs[key])) {\n        return this.interpolate(this.objs[key][0]);\n      } else {\n        return typeof this.objs[key] === 'undefined' ? '' : this.interpolate(this.objs[key]);\n      }\n    }\n\n    return defaultValue;\n  }\n\n  getInt(key, defaultIntValue) {\n    let val = this.getLast(key);\n\n    if (!val) {\n      return defaultIntValue;\n    } else {\n      return parseInt(val, 10);\n    }\n  }\n\n  getFloat(key, defaultFloatValue) {\n    let val = this.getLast(key);\n\n    if (!val) {\n      return defaultFloatValue;\n    } else {\n      return parseFloat(val);\n    }\n  }\n\n  getBoolean(key, defaultBooleanValue) {\n    function parseBool(b) {\n      return !/^(false|0)$/i.test(b) && !!b;\n    }\n\n    let val = this.getLast(key);\n\n    if (!val) {\n      return defaultBooleanValue || false;\n    } else {\n      return parseBool(val);\n    }\n  }\n\n  set(key, value) {\n    this.objs[key] = value;\n  }\n\n  interpolate(s) {\n    let me = this;\n    return s.replace(/\\\\\\\\/g, '\\\\').replace(/\\$\\{([A-Za-z0-9\\.\\-\\_]*)\\}/g, function (match) {\n      return me.getLast(match.substring(2, match.length - 1));\n    });\n  }\n\n  getKeys() {\n    let keys = [];\n\n    for (let key in this.objs) {\n      keys.push(key);\n    }\n\n    return keys;\n  }\n\n  getMatchingKeys(matchstr) {\n    let keys = [];\n\n    for (let key in this.objs) {\n      if (key.search(matchstr) !== -1) {\n        keys.push(key);\n      }\n    }\n\n    return keys;\n  }\n\n  reset() {\n    this.objs = {};\n  }\n\n} // Retain 'of' from v1 for backward compatibility\n\n\nexports.PropertiesFile = PropertiesFile;\n\nlet of = function of(...args) {\n  let globalFile = new PropertiesFile();\n  globalFile.of.apply(globalFile, args);\n  return globalFile;\n};\n\nexports.of = of;\n","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = (function () { try { return require('path') } catch (e) {}}()) || {\n  sep: '/'\n}\nminimatch.sep = path.sep\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  b = b || {}\n  var t = {}\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n  m.Minimatch.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options)).Minimatch\n  }\n\n  m.filter = function filter (pattern, options) {\n    return orig.filter(pattern, ext(def, options))\n  }\n\n  m.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options))\n  }\n\n  m.makeRe = function makeRe (pattern, options) {\n    return orig.makeRe(pattern, ext(def, options))\n  }\n\n  m.braceExpand = function braceExpand (pattern, options) {\n    return orig.braceExpand(pattern, ext(def, options))\n  }\n\n  m.match = function (list, pattern, options) {\n    return orig.match(list, pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (!options.allowWindowsEscape && path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n  this.partial = !!options.partial\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = function debug() { console.error.apply(console, arguments) }\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\nvar MAX_PATTERN_LENGTH = 1024 * 64\nvar assertValidPattern = function (pattern) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  assertValidPattern(pattern)\n\n  var options = this.options\n\n  // shortcuts\n  if (pattern === '**') {\n    if (!options.noglobstar)\n      return GLOBSTAR\n    else\n      pattern = '*'\n  }\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      /* istanbul ignore next */\n      case '/': {\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n      }\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        // split where the last [ was, make sure we don't have\n        // an invalid re. if so, re-walk the contents of the\n        // would-be class to re-translate any characters that\n        // were passed through as-is\n        // TODO: It would probably be faster to determine this\n        // without a try/catch and a new RegExp, but it's tricky\n        // to do safely.  For now, this is safe and works.\n        var cs = pattern.substring(classStart + 1, i)\n        try {\n          RegExp('[' + cs + ']')\n        } catch (er) {\n          // not a valid class!\n          var sp = this.parse(cs, SUBPARSE)\n          re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n          hasMagic = hasMagic || sp[1]\n          inClass = false\n          continue\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '[': case '.': case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) /* istanbul ignore next - should be impossible */ {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) /* istanbul ignore next - should be impossible */ {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = function match (f, partial) {\n  if (typeof partial === 'undefined') partial = this.partial\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    /* istanbul ignore if */\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      /* istanbul ignore if */\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      hit = f === p\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else /* istanbul ignore else */ if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    return (fi === fl - 1) && (file[fi] === '')\n  }\n\n  // should be unreachable.\n  /* istanbul ignore next */\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\nvar MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar safeRe = exports.safeRe = []\nvar src = exports.src = []\nvar t = exports.tokens = {}\nvar R = 0\n\nfunction tok (n) {\n  t[n] = R++\n}\n\nvar LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nvar safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nfunction makeSafeRe (value) {\n  for (var i = 0; i < safeRegexReplacements.length; i++) {\n    var token = safeRegexReplacements[i][0]\n    var max = safeRegexReplacements[i][1]\n    value = value\n      .split(token + '*').join(token + '{0,' + max + '}')\n      .split(token + '+').join(token + '{1,' + max + '}')\n  }\n  return value\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ntok('NUMERICIDENTIFIER')\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\ntok('NUMERICIDENTIFIERLOOSE')\nsrc[t.NUMERICIDENTIFIERLOOSE] = '\\\\d+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER')\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-]' + LETTERDASHNUMBER + '*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION')\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\n\ntok('MAINVERSIONLOOSE')\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER')\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\ntok('PRERELEASEIDENTIFIERLOOSE')\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE')\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\n\ntok('PRERELEASELOOSE')\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER')\nsrc[t.BUILDIDENTIFIER] = LETTERDASHNUMBER + '+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD')\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL')\ntok('FULLPLAIN')\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\n                  src[t.PRERELEASE] + '?' +\n                  src[t.BUILD] + '?'\n\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ntok('LOOSEPLAIN')\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] +\n                  src[t.PRERELEASELOOSE] + '?' +\n                  src[t.BUILD] + '?'\n\ntok('LOOSE')\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\n\ntok('GTLT')\nsrc[t.GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ntok('XRANGEIDENTIFIERLOOSE')\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\ntok('XRANGEIDENTIFIER')\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\ntok('XRANGEPLAIN')\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[t.PRERELEASE] + ')?' +\n                   src[t.BUILD] + '?' +\n                   ')?)?'\n\ntok('XRANGEPLAINLOOSE')\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\n                        src[t.BUILD] + '?' +\n                        ')?)?'\n\ntok('XRANGE')\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$'\ntok('XRANGELOOSE')\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ntok('COERCE')\nsrc[t.COERCE] = '(^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\ntok('COERCERTL')\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\nsafeRe[t.COERCERTL] = new RegExp(makeSafeRe(src[t.COERCE]), 'g')\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ntok('LONETILDE')\nsrc[t.LONETILDE] = '(?:~>?)'\n\ntok('TILDETRIM')\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+'\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\nsafeRe[t.TILDETRIM] = new RegExp(makeSafeRe(src[t.TILDETRIM]), 'g')\nvar tildeTrimReplace = '$1~'\n\ntok('TILDE')\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\ntok('TILDELOOSE')\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ntok('LONECARET')\nsrc[t.LONECARET] = '(?:\\\\^)'\n\ntok('CARETTRIM')\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+'\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\nsafeRe[t.CARETTRIM] = new RegExp(makeSafeRe(src[t.CARETTRIM]), 'g')\nvar caretTrimReplace = '$1^'\n\ntok('CARET')\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\ntok('CARETLOOSE')\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ntok('COMPARATORLOOSE')\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\ntok('COMPARATOR')\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ntok('COMPARATORTRIM')\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] +\n                      '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\nsafeRe[t.COMPARATORTRIM] = new RegExp(makeSafeRe(src[t.COMPARATORTRIM]), 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ntok('HYPHENRANGE')\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\ntok('HYPHENRANGELOOSE')\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\ntok('STAR')\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n\n    // Replace all greedy whitespace to prevent regex dos issues. These regex are\n    // used internally via the safeRe object since all inputs in this library get\n    // normalized first to trim and collapse all extra whitespace. The original\n    // regexes are exported for userland consumption and lower level usage. A\n    // future breaking change could export the safer regex only with a note that\n    // all input should have extra whitespace removed.\n    safeRe[i] = new RegExp(makeSafeRe(src[i]))\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? safeRe[t.LOOSE] : safeRe[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? safeRe[t.LOOSE] : safeRe[t.FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  var i = 0\n  do {\n    var a = this.build[i]\n    var b = other.build[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.compareBuild = compareBuild\nfunction compareBuild (a, b, loose) {\n  var versionA = new SemVer(a, loose)\n  var versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  comp = comp.trim().split(/\\s+/).join(' ')\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? safeRe[t.COMPARATORLOOSE] : safeRe[t.COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : ''\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY || version === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true\n    }\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true\n    }\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First reduce all whitespace as much as possible so we do not have to rely\n  // on potentially slow regexes like \\s*. This is then stored and used for\n  // future error messages as well.\n  this.raw = range\n    .trim()\n    .split(/\\s+/)\n    .join(' ')\n\n  // First, split based on boolean or ||\n  this.set = this.raw.split('||').map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + this.raw)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? safeRe[t.HYPHENRANGELOOSE] : safeRe[t.HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(safeRe[t.COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, safeRe[t.COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(safeRe[t.TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(safeRe[t.CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? safeRe[t.COMPARATORLOOSE] : safeRe[t.COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return (\n      isSatisfiable(thisComparators, options) &&\n      range.set.some(function (rangeComparators) {\n        return (\n          isSatisfiable(rangeComparators, options) &&\n          thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options)\n            })\n          })\n        )\n      })\n    )\n  })\n}\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nfunction isSatisfiable (comparators, options) {\n  var result = true\n  var remainingComparators = comparators.slice()\n  var testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? safeRe[t.TILDELOOSE] : safeRe[t.TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? safeRe[t.CARETLOOSE] : safeRe[t.CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? safeRe[t.XRANGELOOSE] : safeRe[t.XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr +\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(safeRe[t.STAR], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version, options) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  var match = null\n  if (!options.rtl) {\n    match = version.match(safeRe[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next\n    while ((next = safeRe[t.COERCERTL].exec(version)) &&\n      (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n          next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      safeRe[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    safeRe[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(match[2] +\n    '.' + (match[3] || '0') +\n    '.' + (match[4] || '0'), options)\n}\n","\"use strict\";\r\nexports.__esModule = true;\r\nfunction parseArgsStringToArgv(value, env, file) {\r\n    // ([^\\s'\"]([^\\s'\"]*(['\"])([^\\3]*?)\\3)+[^\\s'\"]*) Matches nested quotes until the first space outside of quotes\r\n    // [^\\s'\"]+ or Match if not a space ' or \"\r\n    // (['\"])([^\\5]*?)\\5 or Match \"quoted text\" without quotes\r\n    // `\\3` and `\\5` are a backreference to the quote style (' or \") captured\r\n    var myRegexp = /([^\\s'\"]([^\\s'\"]*(['\"])([^\\3]*?)\\3)+[^\\s'\"]*)|[^\\s'\"]+|(['\"])([^\\5]*?)\\5/gi;\r\n    var myString = value;\r\n    var myArray = [];\r\n    if (env) {\r\n        myArray.push(env);\r\n    }\r\n    if (file) {\r\n        myArray.push(file);\r\n    }\r\n    var match;\r\n    do {\r\n        // Each call to exec returns the next regex match as an array\r\n        match = myRegexp.exec(myString);\r\n        if (match !== null) {\r\n            // Index 1 in the array is the captured group if it exists\r\n            // Index 0 is the matched text, which we use if no captured group exists\r\n            myArray.push(firstString(match[1], match[6], match[0]));\r\n        }\r\n    } while (match !== null);\r\n    return myArray;\r\n}\r\nexports[\"default\"] = parseArgsStringToArgv;\r\nexports.parseArgsStringToArgv = parseArgsStringToArgv;\r\n// Accepts any number of arguments, and returns the first one that is a string\r\n// (even an empty string)\r\nfunction firstString() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < args.length; i++) {\r\n        var arg = args[i];\r\n        if (typeof arg === \"string\") {\r\n            return arg;\r\n        }\r\n    }\r\n}\r\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet flagForceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tflagForceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tflagForceColor = 1;\n}\n\nfunction envForceColor() {\n\tif ('FORCE_COLOR' in env) {\n\t\tif (env.FORCE_COLOR === 'true') {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (env.FORCE_COLOR === 'false') {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn env.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, {streamIsTTY, sniffFlags = true} = {}) {\n\tconst noFlagForceColor = envForceColor();\n\tif (noFlagForceColor !== undefined) {\n\t\tflagForceColor = noFlagForceColor;\n\t}\n\n\tconst forceColor = sniffFlags ? flagForceColor : noFlagForceColor;\n\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (sniffFlags) {\n\t\tif (hasFlag('color=16m') ||\n\t\t\thasFlag('color=full') ||\n\t\t\thasFlag('color=truecolor')) {\n\t\t\treturn 3;\n\t\t}\n\n\t\tif (hasFlag('color=256')) {\n\t\t\treturn 2;\n\t\t}\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE', 'DRONE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = Number.parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream, options = {}) {\n\tconst level = supportsColor(stream, {\n\t\tstreamIsTTY: stream && stream.isTTY,\n\t\t...options\n\t});\n\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel({isTTY: tty.isatty(1)}),\n\tstderr: getSupportLevel({isTTY: tty.isatty(2)})\n};\n","module.exports = require('./lib/tunnel');\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","'use strict'\n\nconst Client = require('./lib/client')\nconst Dispatcher = require('./lib/dispatcher')\nconst errors = require('./lib/core/errors')\nconst Pool = require('./lib/pool')\nconst BalancedPool = require('./lib/balanced-pool')\nconst Agent = require('./lib/agent')\nconst util = require('./lib/core/util')\nconst { InvalidArgumentError } = errors\nconst api = require('./lib/api')\nconst buildConnector = require('./lib/core/connect')\nconst MockClient = require('./lib/mock/mock-client')\nconst MockAgent = require('./lib/mock/mock-agent')\nconst MockPool = require('./lib/mock/mock-pool')\nconst mockErrors = require('./lib/mock/mock-errors')\nconst ProxyAgent = require('./lib/proxy-agent')\nconst RetryHandler = require('./lib/handler/RetryHandler')\nconst { getGlobalDispatcher, setGlobalDispatcher } = require('./lib/global')\nconst DecoratorHandler = require('./lib/handler/DecoratorHandler')\nconst RedirectHandler = require('./lib/handler/RedirectHandler')\nconst createRedirectInterceptor = require('./lib/interceptor/redirectInterceptor')\n\nlet hasCrypto\ntry {\n  require('crypto')\n  hasCrypto = true\n} catch {\n  hasCrypto = false\n}\n\nObject.assign(Dispatcher.prototype, api)\n\nmodule.exports.Dispatcher = Dispatcher\nmodule.exports.Client = Client\nmodule.exports.Pool = Pool\nmodule.exports.BalancedPool = BalancedPool\nmodule.exports.Agent = Agent\nmodule.exports.ProxyAgent = ProxyAgent\nmodule.exports.RetryHandler = RetryHandler\n\nmodule.exports.DecoratorHandler = DecoratorHandler\nmodule.exports.RedirectHandler = RedirectHandler\nmodule.exports.createRedirectInterceptor = createRedirectInterceptor\n\nmodule.exports.buildConnector = buildConnector\nmodule.exports.errors = errors\n\nfunction makeDispatcher (fn) {\n  return (url, opts, handler) => {\n    if (typeof opts === 'function') {\n      handler = opts\n      opts = null\n    }\n\n    if (!url || (typeof url !== 'string' && typeof url !== 'object' && !(url instanceof URL))) {\n      throw new InvalidArgumentError('invalid url')\n    }\n\n    if (opts != null && typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (opts && opts.path != null) {\n      if (typeof opts.path !== 'string') {\n        throw new InvalidArgumentError('invalid opts.path')\n      }\n\n      let path = opts.path\n      if (!opts.path.startsWith('/')) {\n        path = `/${path}`\n      }\n\n      url = new URL(util.parseOrigin(url).origin + path)\n    } else {\n      if (!opts) {\n        opts = typeof url === 'object' ? url : {}\n      }\n\n      url = util.parseURL(url)\n    }\n\n    const { agent, dispatcher = getGlobalDispatcher() } = opts\n\n    if (agent) {\n      throw new InvalidArgumentError('unsupported opts.agent. Did you mean opts.client?')\n    }\n\n    return fn.call(dispatcher, {\n      ...opts,\n      origin: url.origin,\n      path: url.search ? `${url.pathname}${url.search}` : url.pathname,\n      method: opts.method || (opts.body ? 'PUT' : 'GET')\n    }, handler)\n  }\n}\n\nmodule.exports.setGlobalDispatcher = setGlobalDispatcher\nmodule.exports.getGlobalDispatcher = getGlobalDispatcher\n\nif (util.nodeMajor > 16 || (util.nodeMajor === 16 && util.nodeMinor >= 8)) {\n  let fetchImpl = null\n  module.exports.fetch = async function fetch (resource) {\n    if (!fetchImpl) {\n      fetchImpl = require('./lib/fetch').fetch\n    }\n\n    try {\n      return await fetchImpl(...arguments)\n    } catch (err) {\n      if (typeof err === 'object') {\n        Error.captureStackTrace(err, this)\n      }\n\n      throw err\n    }\n  }\n  module.exports.Headers = require('./lib/fetch/headers').Headers\n  module.exports.Response = require('./lib/fetch/response').Response\n  module.exports.Request = require('./lib/fetch/request').Request\n  module.exports.FormData = require('./lib/fetch/formdata').FormData\n  module.exports.File = require('./lib/fetch/file').File\n  module.exports.FileReader = require('./lib/fileapi/filereader').FileReader\n\n  const { setGlobalOrigin, getGlobalOrigin } = require('./lib/fetch/global')\n\n  module.exports.setGlobalOrigin = setGlobalOrigin\n  module.exports.getGlobalOrigin = getGlobalOrigin\n\n  const { CacheStorage } = require('./lib/cache/cachestorage')\n  const { kConstruct } = require('./lib/cache/symbols')\n\n  // Cache & CacheStorage are tightly coupled with fetch. Even if it may run\n  // in an older version of Node, it doesn't have any use without fetch.\n  module.exports.caches = new CacheStorage(kConstruct)\n}\n\nif (util.nodeMajor >= 16) {\n  const { deleteCookie, getCookies, getSetCookies, setCookie } = require('./lib/cookies')\n\n  module.exports.deleteCookie = deleteCookie\n  module.exports.getCookies = getCookies\n  module.exports.getSetCookies = getSetCookies\n  module.exports.setCookie = setCookie\n\n  const { parseMIMEType, serializeAMimeType } = require('./lib/fetch/dataURL')\n\n  module.exports.parseMIMEType = parseMIMEType\n  module.exports.serializeAMimeType = serializeAMimeType\n}\n\nif (util.nodeMajor >= 18 && hasCrypto) {\n  const { WebSocket } = require('./lib/websocket/websocket')\n\n  module.exports.WebSocket = WebSocket\n}\n\nmodule.exports.request = makeDispatcher(api.request)\nmodule.exports.stream = makeDispatcher(api.stream)\nmodule.exports.pipeline = makeDispatcher(api.pipeline)\nmodule.exports.connect = makeDispatcher(api.connect)\nmodule.exports.upgrade = makeDispatcher(api.upgrade)\n\nmodule.exports.MockClient = MockClient\nmodule.exports.MockPool = MockPool\nmodule.exports.MockAgent = MockAgent\nmodule.exports.mockErrors = mockErrors\n","'use strict'\n\nconst { InvalidArgumentError } = require('./core/errors')\nconst { kClients, kRunning, kClose, kDestroy, kDispatch, kInterceptors } = require('./core/symbols')\nconst DispatcherBase = require('./dispatcher-base')\nconst Pool = require('./pool')\nconst Client = require('./client')\nconst util = require('./core/util')\nconst createRedirectInterceptor = require('./interceptor/redirectInterceptor')\nconst { WeakRef, FinalizationRegistry } = require('./compat/dispatcher-weakref')()\n\nconst kOnConnect = Symbol('onConnect')\nconst kOnDisconnect = Symbol('onDisconnect')\nconst kOnConnectionError = Symbol('onConnectionError')\nconst kMaxRedirections = Symbol('maxRedirections')\nconst kOnDrain = Symbol('onDrain')\nconst kFactory = Symbol('factory')\nconst kFinalizer = Symbol('finalizer')\nconst kOptions = Symbol('options')\n\nfunction defaultFactory (origin, opts) {\n  return opts && opts.connections === 1\n    ? new Client(origin, opts)\n    : new Pool(origin, opts)\n}\n\nclass Agent extends DispatcherBase {\n  constructor ({ factory = defaultFactory, maxRedirections = 0, connect, ...options } = {}) {\n    super()\n\n    if (typeof factory !== 'function') {\n      throw new InvalidArgumentError('factory must be a function.')\n    }\n\n    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {\n      throw new InvalidArgumentError('connect must be a function or an object')\n    }\n\n    if (!Number.isInteger(maxRedirections) || maxRedirections < 0) {\n      throw new InvalidArgumentError('maxRedirections must be a positive number')\n    }\n\n    if (connect && typeof connect !== 'function') {\n      connect = { ...connect }\n    }\n\n    this[kInterceptors] = options.interceptors && options.interceptors.Agent && Array.isArray(options.interceptors.Agent)\n      ? options.interceptors.Agent\n      : [createRedirectInterceptor({ maxRedirections })]\n\n    this[kOptions] = { ...util.deepClone(options), connect }\n    this[kOptions].interceptors = options.interceptors\n      ? { ...options.interceptors }\n      : undefined\n    this[kMaxRedirections] = maxRedirections\n    this[kFactory] = factory\n    this[kClients] = new Map()\n    this[kFinalizer] = new FinalizationRegistry(/* istanbul ignore next: gc is undeterministic */ key => {\n      const ref = this[kClients].get(key)\n      if (ref !== undefined && ref.deref() === undefined) {\n        this[kClients].delete(key)\n      }\n    })\n\n    const agent = this\n\n    this[kOnDrain] = (origin, targets) => {\n      agent.emit('drain', origin, [agent, ...targets])\n    }\n\n    this[kOnConnect] = (origin, targets) => {\n      agent.emit('connect', origin, [agent, ...targets])\n    }\n\n    this[kOnDisconnect] = (origin, targets, err) => {\n      agent.emit('disconnect', origin, [agent, ...targets], err)\n    }\n\n    this[kOnConnectionError] = (origin, targets, err) => {\n      agent.emit('connectionError', origin, [agent, ...targets], err)\n    }\n  }\n\n  get [kRunning] () {\n    let ret = 0\n    for (const ref of this[kClients].values()) {\n      const client = ref.deref()\n      /* istanbul ignore next: gc is undeterministic */\n      if (client) {\n        ret += client[kRunning]\n      }\n    }\n    return ret\n  }\n\n  [kDispatch] (opts, handler) {\n    let key\n    if (opts.origin && (typeof opts.origin === 'string' || opts.origin instanceof URL)) {\n      key = String(opts.origin)\n    } else {\n      throw new InvalidArgumentError('opts.origin must be a non-empty string or URL.')\n    }\n\n    const ref = this[kClients].get(key)\n\n    let dispatcher = ref ? ref.deref() : null\n    if (!dispatcher) {\n      dispatcher = this[kFactory](opts.origin, this[kOptions])\n        .on('drain', this[kOnDrain])\n        .on('connect', this[kOnConnect])\n        .on('disconnect', this[kOnDisconnect])\n        .on('connectionError', this[kOnConnectionError])\n\n      this[kClients].set(key, new WeakRef(dispatcher))\n      this[kFinalizer].register(dispatcher, key)\n    }\n\n    return dispatcher.dispatch(opts, handler)\n  }\n\n  async [kClose] () {\n    const closePromises = []\n    for (const ref of this[kClients].values()) {\n      const client = ref.deref()\n      /* istanbul ignore else: gc is undeterministic */\n      if (client) {\n        closePromises.push(client.close())\n      }\n    }\n\n    await Promise.all(closePromises)\n  }\n\n  async [kDestroy] (err) {\n    const destroyPromises = []\n    for (const ref of this[kClients].values()) {\n      const client = ref.deref()\n      /* istanbul ignore else: gc is undeterministic */\n      if (client) {\n        destroyPromises.push(client.destroy(err))\n      }\n    }\n\n    await Promise.all(destroyPromises)\n  }\n}\n\nmodule.exports = Agent\n","const { addAbortListener } = require('../core/util')\nconst { RequestAbortedError } = require('../core/errors')\n\nconst kListener = Symbol('kListener')\nconst kSignal = Symbol('kSignal')\n\nfunction abort (self) {\n  if (self.abort) {\n    self.abort()\n  } else {\n    self.onError(new RequestAbortedError())\n  }\n}\n\nfunction addSignal (self, signal) {\n  self[kSignal] = null\n  self[kListener] = null\n\n  if (!signal) {\n    return\n  }\n\n  if (signal.aborted) {\n    abort(self)\n    return\n  }\n\n  self[kSignal] = signal\n  self[kListener] = () => {\n    abort(self)\n  }\n\n  addAbortListener(self[kSignal], self[kListener])\n}\n\nfunction removeSignal (self) {\n  if (!self[kSignal]) {\n    return\n  }\n\n  if ('removeEventListener' in self[kSignal]) {\n    self[kSignal].removeEventListener('abort', self[kListener])\n  } else {\n    self[kSignal].removeListener('abort', self[kListener])\n  }\n\n  self[kSignal] = null\n  self[kListener] = null\n}\n\nmodule.exports = {\n  addSignal,\n  removeSignal\n}\n","'use strict'\n\nconst { AsyncResource } = require('async_hooks')\nconst { InvalidArgumentError, RequestAbortedError, SocketError } = require('../core/errors')\nconst util = require('../core/util')\nconst { addSignal, removeSignal } = require('./abort-signal')\n\nclass ConnectHandler extends AsyncResource {\n  constructor (opts, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    const { signal, opaque, responseHeaders } = opts\n\n    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n    }\n\n    super('UNDICI_CONNECT')\n\n    this.opaque = opaque || null\n    this.responseHeaders = responseHeaders || null\n    this.callback = callback\n    this.abort = null\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    if (!this.callback) {\n      throw new RequestAbortedError()\n    }\n\n    this.abort = abort\n    this.context = context\n  }\n\n  onHeaders () {\n    throw new SocketError('bad connect', null)\n  }\n\n  onUpgrade (statusCode, rawHeaders, socket) {\n    const { callback, opaque, context } = this\n\n    removeSignal(this)\n\n    this.callback = null\n\n    let headers = rawHeaders\n    // Indicates is an HTTP2Session\n    if (headers != null) {\n      headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n    }\n\n    this.runInAsyncScope(callback, null, null, {\n      statusCode,\n      headers,\n      socket,\n      opaque,\n      context\n    })\n  }\n\n  onError (err) {\n    const { callback, opaque } = this\n\n    removeSignal(this)\n\n    if (callback) {\n      this.callback = null\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, { opaque })\n      })\n    }\n  }\n}\n\nfunction connect (opts, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      connect.call(this, opts, (err, data) => {\n        return err ? reject(err) : resolve(data)\n      })\n    })\n  }\n\n  try {\n    const connectHandler = new ConnectHandler(opts, callback)\n    this.dispatch({ ...opts, method: 'CONNECT' }, connectHandler)\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err\n    }\n    const opaque = opts && opts.opaque\n    queueMicrotask(() => callback(err, { opaque }))\n  }\n}\n\nmodule.exports = connect\n","'use strict'\n\nconst {\n  Readable,\n  Duplex,\n  PassThrough\n} = require('stream')\nconst {\n  InvalidArgumentError,\n  InvalidReturnValueError,\n  RequestAbortedError\n} = require('../core/errors')\nconst util = require('../core/util')\nconst { AsyncResource } = require('async_hooks')\nconst { addSignal, removeSignal } = require('./abort-signal')\nconst assert = require('assert')\n\nconst kResume = Symbol('resume')\n\nclass PipelineRequest extends Readable {\n  constructor () {\n    super({ autoDestroy: true })\n\n    this[kResume] = null\n  }\n\n  _read () {\n    const { [kResume]: resume } = this\n\n    if (resume) {\n      this[kResume] = null\n      resume()\n    }\n  }\n\n  _destroy (err, callback) {\n    this._read()\n\n    callback(err)\n  }\n}\n\nclass PipelineResponse extends Readable {\n  constructor (resume) {\n    super({ autoDestroy: true })\n    this[kResume] = resume\n  }\n\n  _read () {\n    this[kResume]()\n  }\n\n  _destroy (err, callback) {\n    if (!err && !this._readableState.endEmitted) {\n      err = new RequestAbortedError()\n    }\n\n    callback(err)\n  }\n}\n\nclass PipelineHandler extends AsyncResource {\n  constructor (opts, handler) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (typeof handler !== 'function') {\n      throw new InvalidArgumentError('invalid handler')\n    }\n\n    const { signal, method, opaque, onInfo, responseHeaders } = opts\n\n    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n    }\n\n    if (method === 'CONNECT') {\n      throw new InvalidArgumentError('invalid method')\n    }\n\n    if (onInfo && typeof onInfo !== 'function') {\n      throw new InvalidArgumentError('invalid onInfo callback')\n    }\n\n    super('UNDICI_PIPELINE')\n\n    this.opaque = opaque || null\n    this.responseHeaders = responseHeaders || null\n    this.handler = handler\n    this.abort = null\n    this.context = null\n    this.onInfo = onInfo || null\n\n    this.req = new PipelineRequest().on('error', util.nop)\n\n    this.ret = new Duplex({\n      readableObjectMode: opts.objectMode,\n      autoDestroy: true,\n      read: () => {\n        const { body } = this\n\n        if (body && body.resume) {\n          body.resume()\n        }\n      },\n      write: (chunk, encoding, callback) => {\n        const { req } = this\n\n        if (req.push(chunk, encoding) || req._readableState.destroyed) {\n          callback()\n        } else {\n          req[kResume] = callback\n        }\n      },\n      destroy: (err, callback) => {\n        const { body, req, res, ret, abort } = this\n\n        if (!err && !ret._readableState.endEmitted) {\n          err = new RequestAbortedError()\n        }\n\n        if (abort && err) {\n          abort()\n        }\n\n        util.destroy(body, err)\n        util.destroy(req, err)\n        util.destroy(res, err)\n\n        removeSignal(this)\n\n        callback(err)\n      }\n    }).on('prefinish', () => {\n      const { req } = this\n\n      // Node < 15 does not call _final in same tick.\n      req.push(null)\n    })\n\n    this.res = null\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    const { ret, res } = this\n\n    assert(!res, 'pipeline cannot be retried')\n\n    if (ret.destroyed) {\n      throw new RequestAbortedError()\n    }\n\n    this.abort = abort\n    this.context = context\n  }\n\n  onHeaders (statusCode, rawHeaders, resume) {\n    const { opaque, handler, context } = this\n\n    if (statusCode < 200) {\n      if (this.onInfo) {\n        const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n        this.onInfo({ statusCode, headers })\n      }\n      return\n    }\n\n    this.res = new PipelineResponse(resume)\n\n    let body\n    try {\n      this.handler = null\n      const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n      body = this.runInAsyncScope(handler, null, {\n        statusCode,\n        headers,\n        opaque,\n        body: this.res,\n        context\n      })\n    } catch (err) {\n      this.res.on('error', util.nop)\n      throw err\n    }\n\n    if (!body || typeof body.on !== 'function') {\n      throw new InvalidReturnValueError('expected Readable')\n    }\n\n    body\n      .on('data', (chunk) => {\n        const { ret, body } = this\n\n        if (!ret.push(chunk) && body.pause) {\n          body.pause()\n        }\n      })\n      .on('error', (err) => {\n        const { ret } = this\n\n        util.destroy(ret, err)\n      })\n      .on('end', () => {\n        const { ret } = this\n\n        ret.push(null)\n      })\n      .on('close', () => {\n        const { ret } = this\n\n        if (!ret._readableState.ended) {\n          util.destroy(ret, new RequestAbortedError())\n        }\n      })\n\n    this.body = body\n  }\n\n  onData (chunk) {\n    const { res } = this\n    return res.push(chunk)\n  }\n\n  onComplete (trailers) {\n    const { res } = this\n    res.push(null)\n  }\n\n  onError (err) {\n    const { ret } = this\n    this.handler = null\n    util.destroy(ret, err)\n  }\n}\n\nfunction pipeline (opts, handler) {\n  try {\n    const pipelineHandler = new PipelineHandler(opts, handler)\n    this.dispatch({ ...opts, body: pipelineHandler.req }, pipelineHandler)\n    return pipelineHandler.ret\n  } catch (err) {\n    return new PassThrough().destroy(err)\n  }\n}\n\nmodule.exports = pipeline\n","'use strict'\n\nconst Readable = require('./readable')\nconst {\n  InvalidArgumentError,\n  RequestAbortedError\n} = require('../core/errors')\nconst util = require('../core/util')\nconst { getResolveErrorBodyCallback } = require('./util')\nconst { AsyncResource } = require('async_hooks')\nconst { addSignal, removeSignal } = require('./abort-signal')\n\nclass RequestHandler extends AsyncResource {\n  constructor (opts, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    const { signal, method, opaque, body, onInfo, responseHeaders, throwOnError, highWaterMark } = opts\n\n    try {\n      if (typeof callback !== 'function') {\n        throw new InvalidArgumentError('invalid callback')\n      }\n\n      if (highWaterMark && (typeof highWaterMark !== 'number' || highWaterMark < 0)) {\n        throw new InvalidArgumentError('invalid highWaterMark')\n      }\n\n      if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n        throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n      }\n\n      if (method === 'CONNECT') {\n        throw new InvalidArgumentError('invalid method')\n      }\n\n      if (onInfo && typeof onInfo !== 'function') {\n        throw new InvalidArgumentError('invalid onInfo callback')\n      }\n\n      super('UNDICI_REQUEST')\n    } catch (err) {\n      if (util.isStream(body)) {\n        util.destroy(body.on('error', util.nop), err)\n      }\n      throw err\n    }\n\n    this.responseHeaders = responseHeaders || null\n    this.opaque = opaque || null\n    this.callback = callback\n    this.res = null\n    this.abort = null\n    this.body = body\n    this.trailers = {}\n    this.context = null\n    this.onInfo = onInfo || null\n    this.throwOnError = throwOnError\n    this.highWaterMark = highWaterMark\n\n    if (util.isStream(body)) {\n      body.on('error', (err) => {\n        this.onError(err)\n      })\n    }\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    if (!this.callback) {\n      throw new RequestAbortedError()\n    }\n\n    this.abort = abort\n    this.context = context\n  }\n\n  onHeaders (statusCode, rawHeaders, resume, statusMessage) {\n    const { callback, opaque, abort, context, responseHeaders, highWaterMark } = this\n\n    const headers = responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n\n    if (statusCode < 200) {\n      if (this.onInfo) {\n        this.onInfo({ statusCode, headers })\n      }\n      return\n    }\n\n    const parsedHeaders = responseHeaders === 'raw' ? util.parseHeaders(rawHeaders) : headers\n    const contentType = parsedHeaders['content-type']\n    const body = new Readable({ resume, abort, contentType, highWaterMark })\n\n    this.callback = null\n    this.res = body\n    if (callback !== null) {\n      if (this.throwOnError && statusCode >= 400) {\n        this.runInAsyncScope(getResolveErrorBodyCallback, null,\n          { callback, body, contentType, statusCode, statusMessage, headers }\n        )\n      } else {\n        this.runInAsyncScope(callback, null, null, {\n          statusCode,\n          headers,\n          trailers: this.trailers,\n          opaque,\n          body,\n          context\n        })\n      }\n    }\n  }\n\n  onData (chunk) {\n    const { res } = this\n    return res.push(chunk)\n  }\n\n  onComplete (trailers) {\n    const { res } = this\n\n    removeSignal(this)\n\n    util.parseHeaders(trailers, this.trailers)\n\n    res.push(null)\n  }\n\n  onError (err) {\n    const { res, callback, body, opaque } = this\n\n    removeSignal(this)\n\n    if (callback) {\n      // TODO: Does this need queueMicrotask?\n      this.callback = null\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, { opaque })\n      })\n    }\n\n    if (res) {\n      this.res = null\n      // Ensure all queued handlers are invoked before destroying res.\n      queueMicrotask(() => {\n        util.destroy(res, err)\n      })\n    }\n\n    if (body) {\n      this.body = null\n      util.destroy(body, err)\n    }\n  }\n}\n\nfunction request (opts, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      request.call(this, opts, (err, data) => {\n        return err ? reject(err) : resolve(data)\n      })\n    })\n  }\n\n  try {\n    this.dispatch(opts, new RequestHandler(opts, callback))\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err\n    }\n    const opaque = opts && opts.opaque\n    queueMicrotask(() => callback(err, { opaque }))\n  }\n}\n\nmodule.exports = request\nmodule.exports.RequestHandler = RequestHandler\n","'use strict'\n\nconst { finished, PassThrough } = require('stream')\nconst {\n  InvalidArgumentError,\n  InvalidReturnValueError,\n  RequestAbortedError\n} = require('../core/errors')\nconst util = require('../core/util')\nconst { getResolveErrorBodyCallback } = require('./util')\nconst { AsyncResource } = require('async_hooks')\nconst { addSignal, removeSignal } = require('./abort-signal')\n\nclass StreamHandler extends AsyncResource {\n  constructor (opts, factory, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    const { signal, method, opaque, body, onInfo, responseHeaders, throwOnError } = opts\n\n    try {\n      if (typeof callback !== 'function') {\n        throw new InvalidArgumentError('invalid callback')\n      }\n\n      if (typeof factory !== 'function') {\n        throw new InvalidArgumentError('invalid factory')\n      }\n\n      if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n        throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n      }\n\n      if (method === 'CONNECT') {\n        throw new InvalidArgumentError('invalid method')\n      }\n\n      if (onInfo && typeof onInfo !== 'function') {\n        throw new InvalidArgumentError('invalid onInfo callback')\n      }\n\n      super('UNDICI_STREAM')\n    } catch (err) {\n      if (util.isStream(body)) {\n        util.destroy(body.on('error', util.nop), err)\n      }\n      throw err\n    }\n\n    this.responseHeaders = responseHeaders || null\n    this.opaque = opaque || null\n    this.factory = factory\n    this.callback = callback\n    this.res = null\n    this.abort = null\n    this.context = null\n    this.trailers = null\n    this.body = body\n    this.onInfo = onInfo || null\n    this.throwOnError = throwOnError || false\n\n    if (util.isStream(body)) {\n      body.on('error', (err) => {\n        this.onError(err)\n      })\n    }\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    if (!this.callback) {\n      throw new RequestAbortedError()\n    }\n\n    this.abort = abort\n    this.context = context\n  }\n\n  onHeaders (statusCode, rawHeaders, resume, statusMessage) {\n    const { factory, opaque, context, callback, responseHeaders } = this\n\n    const headers = responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n\n    if (statusCode < 200) {\n      if (this.onInfo) {\n        this.onInfo({ statusCode, headers })\n      }\n      return\n    }\n\n    this.factory = null\n\n    let res\n\n    if (this.throwOnError && statusCode >= 400) {\n      const parsedHeaders = responseHeaders === 'raw' ? util.parseHeaders(rawHeaders) : headers\n      const contentType = parsedHeaders['content-type']\n      res = new PassThrough()\n\n      this.callback = null\n      this.runInAsyncScope(getResolveErrorBodyCallback, null,\n        { callback, body: res, contentType, statusCode, statusMessage, headers }\n      )\n    } else {\n      if (factory === null) {\n        return\n      }\n\n      res = this.runInAsyncScope(factory, null, {\n        statusCode,\n        headers,\n        opaque,\n        context\n      })\n\n      if (\n        !res ||\n        typeof res.write !== 'function' ||\n        typeof res.end !== 'function' ||\n        typeof res.on !== 'function'\n      ) {\n        throw new InvalidReturnValueError('expected Writable')\n      }\n\n      // TODO: Avoid finished. It registers an unnecessary amount of listeners.\n      finished(res, { readable: false }, (err) => {\n        const { callback, res, opaque, trailers, abort } = this\n\n        this.res = null\n        if (err || !res.readable) {\n          util.destroy(res, err)\n        }\n\n        this.callback = null\n        this.runInAsyncScope(callback, null, err || null, { opaque, trailers })\n\n        if (err) {\n          abort()\n        }\n      })\n    }\n\n    res.on('drain', resume)\n\n    this.res = res\n\n    const needDrain = res.writableNeedDrain !== undefined\n      ? res.writableNeedDrain\n      : res._writableState && res._writableState.needDrain\n\n    return needDrain !== true\n  }\n\n  onData (chunk) {\n    const { res } = this\n\n    return res ? res.write(chunk) : true\n  }\n\n  onComplete (trailers) {\n    const { res } = this\n\n    removeSignal(this)\n\n    if (!res) {\n      return\n    }\n\n    this.trailers = util.parseHeaders(trailers)\n\n    res.end()\n  }\n\n  onError (err) {\n    const { res, callback, opaque, body } = this\n\n    removeSignal(this)\n\n    this.factory = null\n\n    if (res) {\n      this.res = null\n      util.destroy(res, err)\n    } else if (callback) {\n      this.callback = null\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, { opaque })\n      })\n    }\n\n    if (body) {\n      this.body = null\n      util.destroy(body, err)\n    }\n  }\n}\n\nfunction stream (opts, factory, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      stream.call(this, opts, factory, (err, data) => {\n        return err ? reject(err) : resolve(data)\n      })\n    })\n  }\n\n  try {\n    this.dispatch(opts, new StreamHandler(opts, factory, callback))\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err\n    }\n    const opaque = opts && opts.opaque\n    queueMicrotask(() => callback(err, { opaque }))\n  }\n}\n\nmodule.exports = stream\n","'use strict'\n\nconst { InvalidArgumentError, RequestAbortedError, SocketError } = require('../core/errors')\nconst { AsyncResource } = require('async_hooks')\nconst util = require('../core/util')\nconst { addSignal, removeSignal } = require('./abort-signal')\nconst assert = require('assert')\n\nclass UpgradeHandler extends AsyncResource {\n  constructor (opts, callback) {\n    if (!opts || typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    const { signal, opaque, responseHeaders } = opts\n\n    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {\n      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')\n    }\n\n    super('UNDICI_UPGRADE')\n\n    this.responseHeaders = responseHeaders || null\n    this.opaque = opaque || null\n    this.callback = callback\n    this.abort = null\n    this.context = null\n\n    addSignal(this, signal)\n  }\n\n  onConnect (abort, context) {\n    if (!this.callback) {\n      throw new RequestAbortedError()\n    }\n\n    this.abort = abort\n    this.context = null\n  }\n\n  onHeaders () {\n    throw new SocketError('bad upgrade', null)\n  }\n\n  onUpgrade (statusCode, rawHeaders, socket) {\n    const { callback, opaque, context } = this\n\n    assert.strictEqual(statusCode, 101)\n\n    removeSignal(this)\n\n    this.callback = null\n    const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)\n    this.runInAsyncScope(callback, null, null, {\n      headers,\n      socket,\n      opaque,\n      context\n    })\n  }\n\n  onError (err) {\n    const { callback, opaque } = this\n\n    removeSignal(this)\n\n    if (callback) {\n      this.callback = null\n      queueMicrotask(() => {\n        this.runInAsyncScope(callback, null, err, { opaque })\n      })\n    }\n  }\n}\n\nfunction upgrade (opts, callback) {\n  if (callback === undefined) {\n    return new Promise((resolve, reject) => {\n      upgrade.call(this, opts, (err, data) => {\n        return err ? reject(err) : resolve(data)\n      })\n    })\n  }\n\n  try {\n    const upgradeHandler = new UpgradeHandler(opts, callback)\n    this.dispatch({\n      ...opts,\n      method: opts.method || 'GET',\n      upgrade: opts.protocol || 'Websocket'\n    }, upgradeHandler)\n  } catch (err) {\n    if (typeof callback !== 'function') {\n      throw err\n    }\n    const opaque = opts && opts.opaque\n    queueMicrotask(() => callback(err, { opaque }))\n  }\n}\n\nmodule.exports = upgrade\n","'use strict'\n\nmodule.exports.request = require('./api-request')\nmodule.exports.stream = require('./api-stream')\nmodule.exports.pipeline = require('./api-pipeline')\nmodule.exports.upgrade = require('./api-upgrade')\nmodule.exports.connect = require('./api-connect')\n","// Ported from https://github.com/nodejs/undici/pull/907\n\n'use strict'\n\nconst assert = require('assert')\nconst { Readable } = require('stream')\nconst { RequestAbortedError, NotSupportedError, InvalidArgumentError } = require('../core/errors')\nconst util = require('../core/util')\nconst { ReadableStreamFrom, toUSVString } = require('../core/util')\n\nlet Blob\n\nconst kConsume = Symbol('kConsume')\nconst kReading = Symbol('kReading')\nconst kBody = Symbol('kBody')\nconst kAbort = Symbol('abort')\nconst kContentType = Symbol('kContentType')\n\nconst noop = () => {}\n\nmodule.exports = class BodyReadable extends Readable {\n  constructor ({\n    resume,\n    abort,\n    contentType = '',\n    highWaterMark = 64 * 1024 // Same as nodejs fs streams.\n  }) {\n    super({\n      autoDestroy: true,\n      read: resume,\n      highWaterMark\n    })\n\n    this._readableState.dataEmitted = false\n\n    this[kAbort] = abort\n    this[kConsume] = null\n    this[kBody] = null\n    this[kContentType] = contentType\n\n    // Is stream being consumed through Readable API?\n    // This is an optimization so that we avoid checking\n    // for 'data' and 'readable' listeners in the hot path\n    // inside push().\n    this[kReading] = false\n  }\n\n  destroy (err) {\n    if (this.destroyed) {\n      // Node < 16\n      return this\n    }\n\n    if (!err && !this._readableState.endEmitted) {\n      err = new RequestAbortedError()\n    }\n\n    if (err) {\n      this[kAbort]()\n    }\n\n    return super.destroy(err)\n  }\n\n  emit (ev, ...args) {\n    if (ev === 'data') {\n      // Node < 16.7\n      this._readableState.dataEmitted = true\n    } else if (ev === 'error') {\n      // Node < 16\n      this._readableState.errorEmitted = true\n    }\n    return super.emit(ev, ...args)\n  }\n\n  on (ev, ...args) {\n    if (ev === 'data' || ev === 'readable') {\n      this[kReading] = true\n    }\n    return super.on(ev, ...args)\n  }\n\n  addListener (ev, ...args) {\n    return this.on(ev, ...args)\n  }\n\n  off (ev, ...args) {\n    const ret = super.off(ev, ...args)\n    if (ev === 'data' || ev === 'readable') {\n      this[kReading] = (\n        this.listenerCount('data') > 0 ||\n        this.listenerCount('readable') > 0\n      )\n    }\n    return ret\n  }\n\n  removeListener (ev, ...args) {\n    return this.off(ev, ...args)\n  }\n\n  push (chunk) {\n    if (this[kConsume] && chunk !== null && this.readableLength === 0) {\n      consumePush(this[kConsume], chunk)\n      return this[kReading] ? super.push(chunk) : true\n    }\n    return super.push(chunk)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-text\n  async text () {\n    return consume(this, 'text')\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-json\n  async json () {\n    return consume(this, 'json')\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-blob\n  async blob () {\n    return consume(this, 'blob')\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-arraybuffer\n  async arrayBuffer () {\n    return consume(this, 'arrayBuffer')\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-formdata\n  async formData () {\n    // TODO: Implement.\n    throw new NotSupportedError()\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-bodyused\n  get bodyUsed () {\n    return util.isDisturbed(this)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-body-body\n  get body () {\n    if (!this[kBody]) {\n      this[kBody] = ReadableStreamFrom(this)\n      if (this[kConsume]) {\n        // TODO: Is this the best way to force a lock?\n        this[kBody].getReader() // Ensure stream is locked.\n        assert(this[kBody].locked)\n      }\n    }\n    return this[kBody]\n  }\n\n  dump (opts) {\n    let limit = opts && Number.isFinite(opts.limit) ? opts.limit : 262144\n    const signal = opts && opts.signal\n\n    if (signal) {\n      try {\n        if (typeof signal !== 'object' || !('aborted' in signal)) {\n          throw new InvalidArgumentError('signal must be an AbortSignal')\n        }\n        util.throwIfAborted(signal)\n      } catch (err) {\n        return Promise.reject(err)\n      }\n    }\n\n    if (this.closed) {\n      return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n      const signalListenerCleanup = signal\n        ? util.addAbortListener(signal, () => {\n          this.destroy()\n        })\n        : noop\n\n      this\n        .on('close', function () {\n          signalListenerCleanup()\n          if (signal && signal.aborted) {\n            reject(signal.reason || Object.assign(new Error('The operation was aborted'), { name: 'AbortError' }))\n          } else {\n            resolve(null)\n          }\n        })\n        .on('error', noop)\n        .on('data', function (chunk) {\n          limit -= chunk.length\n          if (limit <= 0) {\n            this.destroy()\n          }\n        })\n        .resume()\n    })\n  }\n}\n\n// https://streams.spec.whatwg.org/#readablestream-locked\nfunction isLocked (self) {\n  // Consume is an implicit lock.\n  return (self[kBody] && self[kBody].locked === true) || self[kConsume]\n}\n\n// https://fetch.spec.whatwg.org/#body-unusable\nfunction isUnusable (self) {\n  return util.isDisturbed(self) || isLocked(self)\n}\n\nasync function consume (stream, type) {\n  if (isUnusable(stream)) {\n    throw new TypeError('unusable')\n  }\n\n  assert(!stream[kConsume])\n\n  return new Promise((resolve, reject) => {\n    stream[kConsume] = {\n      type,\n      stream,\n      resolve,\n      reject,\n      length: 0,\n      body: []\n    }\n\n    stream\n      .on('error', function (err) {\n        consumeFinish(this[kConsume], err)\n      })\n      .on('close', function () {\n        if (this[kConsume].body !== null) {\n          consumeFinish(this[kConsume], new RequestAbortedError())\n        }\n      })\n\n    process.nextTick(consumeStart, stream[kConsume])\n  })\n}\n\nfunction consumeStart (consume) {\n  if (consume.body === null) {\n    return\n  }\n\n  const { _readableState: state } = consume.stream\n\n  for (const chunk of state.buffer) {\n    consumePush(consume, chunk)\n  }\n\n  if (state.endEmitted) {\n    consumeEnd(this[kConsume])\n  } else {\n    consume.stream.on('end', function () {\n      consumeEnd(this[kConsume])\n    })\n  }\n\n  consume.stream.resume()\n\n  while (consume.stream.read() != null) {\n    // Loop\n  }\n}\n\nfunction consumeEnd (consume) {\n  const { type, body, resolve, stream, length } = consume\n\n  try {\n    if (type === 'text') {\n      resolve(toUSVString(Buffer.concat(body)))\n    } else if (type === 'json') {\n      resolve(JSON.parse(Buffer.concat(body)))\n    } else if (type === 'arrayBuffer') {\n      const dst = new Uint8Array(length)\n\n      let pos = 0\n      for (const buf of body) {\n        dst.set(buf, pos)\n        pos += buf.byteLength\n      }\n\n      resolve(dst.buffer)\n    } else if (type === 'blob') {\n      if (!Blob) {\n        Blob = require('buffer').Blob\n      }\n      resolve(new Blob(body, { type: stream[kContentType] }))\n    }\n\n    consumeFinish(consume)\n  } catch (err) {\n    stream.destroy(err)\n  }\n}\n\nfunction consumePush (consume, chunk) {\n  consume.length += chunk.length\n  consume.body.push(chunk)\n}\n\nfunction consumeFinish (consume, err) {\n  if (consume.body === null) {\n    return\n  }\n\n  if (err) {\n    consume.reject(err)\n  } else {\n    consume.resolve()\n  }\n\n  consume.type = null\n  consume.stream = null\n  consume.resolve = null\n  consume.reject = null\n  consume.length = 0\n  consume.body = null\n}\n","const assert = require('assert')\nconst {\n  ResponseStatusCodeError\n} = require('../core/errors')\nconst { toUSVString } = require('../core/util')\n\nasync function getResolveErrorBodyCallback ({ callback, body, contentType, statusCode, statusMessage, headers }) {\n  assert(body)\n\n  let chunks = []\n  let limit = 0\n\n  for await (const chunk of body) {\n    chunks.push(chunk)\n    limit += chunk.length\n    if (limit > 128 * 1024) {\n      chunks = null\n      break\n    }\n  }\n\n  if (statusCode === 204 || !contentType || !chunks) {\n    process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers))\n    return\n  }\n\n  try {\n    if (contentType.startsWith('application/json')) {\n      const payload = JSON.parse(toUSVString(Buffer.concat(chunks)))\n      process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers, payload))\n      return\n    }\n\n    if (contentType.startsWith('text/')) {\n      const payload = toUSVString(Buffer.concat(chunks))\n      process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers, payload))\n      return\n    }\n  } catch (err) {\n    // Process in a fallback if error\n  }\n\n  process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers))\n}\n\nmodule.exports = { getResolveErrorBodyCallback }\n","'use strict'\n\nconst {\n  BalancedPoolMissingUpstreamError,\n  InvalidArgumentError\n} = require('./core/errors')\nconst {\n  PoolBase,\n  kClients,\n  kNeedDrain,\n  kAddClient,\n  kRemoveClient,\n  kGetDispatcher\n} = require('./pool-base')\nconst Pool = require('./pool')\nconst { kUrl, kInterceptors } = require('./core/symbols')\nconst { parseOrigin } = require('./core/util')\nconst kFactory = Symbol('factory')\n\nconst kOptions = Symbol('options')\nconst kGreatestCommonDivisor = Symbol('kGreatestCommonDivisor')\nconst kCurrentWeight = Symbol('kCurrentWeight')\nconst kIndex = Symbol('kIndex')\nconst kWeight = Symbol('kWeight')\nconst kMaxWeightPerServer = Symbol('kMaxWeightPerServer')\nconst kErrorPenalty = Symbol('kErrorPenalty')\n\nfunction getGreatestCommonDivisor (a, b) {\n  if (b === 0) return a\n  return getGreatestCommonDivisor(b, a % b)\n}\n\nfunction defaultFactory (origin, opts) {\n  return new Pool(origin, opts)\n}\n\nclass BalancedPool extends PoolBase {\n  constructor (upstreams = [], { factory = defaultFactory, ...opts } = {}) {\n    super()\n\n    this[kOptions] = opts\n    this[kIndex] = -1\n    this[kCurrentWeight] = 0\n\n    this[kMaxWeightPerServer] = this[kOptions].maxWeightPerServer || 100\n    this[kErrorPenalty] = this[kOptions].errorPenalty || 15\n\n    if (!Array.isArray(upstreams)) {\n      upstreams = [upstreams]\n    }\n\n    if (typeof factory !== 'function') {\n      throw new InvalidArgumentError('factory must be a function.')\n    }\n\n    this[kInterceptors] = opts.interceptors && opts.interceptors.BalancedPool && Array.isArray(opts.interceptors.BalancedPool)\n      ? opts.interceptors.BalancedPool\n      : []\n    this[kFactory] = factory\n\n    for (const upstream of upstreams) {\n      this.addUpstream(upstream)\n    }\n    this._updateBalancedPoolStats()\n  }\n\n  addUpstream (upstream) {\n    const upstreamOrigin = parseOrigin(upstream).origin\n\n    if (this[kClients].find((pool) => (\n      pool[kUrl].origin === upstreamOrigin &&\n      pool.closed !== true &&\n      pool.destroyed !== true\n    ))) {\n      return this\n    }\n    const pool = this[kFactory](upstreamOrigin, Object.assign({}, this[kOptions]))\n\n    this[kAddClient](pool)\n    pool.on('connect', () => {\n      pool[kWeight] = Math.min(this[kMaxWeightPerServer], pool[kWeight] + this[kErrorPenalty])\n    })\n\n    pool.on('connectionError', () => {\n      pool[kWeight] = Math.max(1, pool[kWeight] - this[kErrorPenalty])\n      this._updateBalancedPoolStats()\n    })\n\n    pool.on('disconnect', (...args) => {\n      const err = args[2]\n      if (err && err.code === 'UND_ERR_SOCKET') {\n        // decrease the weight of the pool.\n        pool[kWeight] = Math.max(1, pool[kWeight] - this[kErrorPenalty])\n        this._updateBalancedPoolStats()\n      }\n    })\n\n    for (const client of this[kClients]) {\n      client[kWeight] = this[kMaxWeightPerServer]\n    }\n\n    this._updateBalancedPoolStats()\n\n    return this\n  }\n\n  _updateBalancedPoolStats () {\n    this[kGreatestCommonDivisor] = this[kClients].map(p => p[kWeight]).reduce(getGreatestCommonDivisor, 0)\n  }\n\n  removeUpstream (upstream) {\n    const upstreamOrigin = parseOrigin(upstream).origin\n\n    const pool = this[kClients].find((pool) => (\n      pool[kUrl].origin === upstreamOrigin &&\n      pool.closed !== true &&\n      pool.destroyed !== true\n    ))\n\n    if (pool) {\n      this[kRemoveClient](pool)\n    }\n\n    return this\n  }\n\n  get upstreams () {\n    return this[kClients]\n      .filter(dispatcher => dispatcher.closed !== true && dispatcher.destroyed !== true)\n      .map((p) => p[kUrl].origin)\n  }\n\n  [kGetDispatcher] () {\n    // We validate that pools is greater than 0,\n    // otherwise we would have to wait until an upstream\n    // is added, which might never happen.\n    if (this[kClients].length === 0) {\n      throw new BalancedPoolMissingUpstreamError()\n    }\n\n    const dispatcher = this[kClients].find(dispatcher => (\n      !dispatcher[kNeedDrain] &&\n      dispatcher.closed !== true &&\n      dispatcher.destroyed !== true\n    ))\n\n    if (!dispatcher) {\n      return\n    }\n\n    const allClientsBusy = this[kClients].map(pool => pool[kNeedDrain]).reduce((a, b) => a && b, true)\n\n    if (allClientsBusy) {\n      return\n    }\n\n    let counter = 0\n\n    let maxWeightIndex = this[kClients].findIndex(pool => !pool[kNeedDrain])\n\n    while (counter++ < this[kClients].length) {\n      this[kIndex] = (this[kIndex] + 1) % this[kClients].length\n      const pool = this[kClients][this[kIndex]]\n\n      // find pool index with the largest weight\n      if (pool[kWeight] > this[kClients][maxWeightIndex][kWeight] && !pool[kNeedDrain]) {\n        maxWeightIndex = this[kIndex]\n      }\n\n      // decrease the current weight every `this[kClients].length`.\n      if (this[kIndex] === 0) {\n        // Set the current weight to the next lower weight.\n        this[kCurrentWeight] = this[kCurrentWeight] - this[kGreatestCommonDivisor]\n\n        if (this[kCurrentWeight] <= 0) {\n          this[kCurrentWeight] = this[kMaxWeightPerServer]\n        }\n      }\n      if (pool[kWeight] >= this[kCurrentWeight] && (!pool[kNeedDrain])) {\n        return pool\n      }\n    }\n\n    this[kCurrentWeight] = this[kClients][maxWeightIndex][kWeight]\n    this[kIndex] = maxWeightIndex\n    return this[kClients][maxWeightIndex]\n  }\n}\n\nmodule.exports = BalancedPool\n","'use strict'\n\nconst { kConstruct } = require('./symbols')\nconst { urlEquals, fieldValues: getFieldValues } = require('./util')\nconst { kEnumerableProperty, isDisturbed } = require('../core/util')\nconst { kHeadersList } = require('../core/symbols')\nconst { webidl } = require('../fetch/webidl')\nconst { Response, cloneResponse } = require('../fetch/response')\nconst { Request } = require('../fetch/request')\nconst { kState, kHeaders, kGuard, kRealm } = require('../fetch/symbols')\nconst { fetching } = require('../fetch/index')\nconst { urlIsHttpHttpsScheme, createDeferredPromise, readAllBytes } = require('../fetch/util')\nconst assert = require('assert')\nconst { getGlobalDispatcher } = require('../global')\n\n/**\n * @see https://w3c.github.io/ServiceWorker/#dfn-cache-batch-operation\n * @typedef {Object} CacheBatchOperation\n * @property {'delete' | 'put'} type\n * @property {any} request\n * @property {any} response\n * @property {import('../../types/cache').CacheQueryOptions} options\n */\n\n/**\n * @see https://w3c.github.io/ServiceWorker/#dfn-request-response-list\n * @typedef {[any, any][]} requestResponseList\n */\n\nclass Cache {\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-request-response-list\n   * @type {requestResponseList}\n   */\n  #relevantRequestResponseList\n\n  constructor () {\n    if (arguments[0] !== kConstruct) {\n      webidl.illegalConstructor()\n    }\n\n    this.#relevantRequestResponseList = arguments[1]\n  }\n\n  async match (request, options = {}) {\n    webidl.brandCheck(this, Cache)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.match' })\n\n    request = webidl.converters.RequestInfo(request)\n    options = webidl.converters.CacheQueryOptions(options)\n\n    const p = await this.matchAll(request, options)\n\n    if (p.length === 0) {\n      return\n    }\n\n    return p[0]\n  }\n\n  async matchAll (request = undefined, options = {}) {\n    webidl.brandCheck(this, Cache)\n\n    if (request !== undefined) request = webidl.converters.RequestInfo(request)\n    options = webidl.converters.CacheQueryOptions(options)\n\n    // 1.\n    let r = null\n\n    // 2.\n    if (request !== undefined) {\n      if (request instanceof Request) {\n        // 2.1.1\n        r = request[kState]\n\n        // 2.1.2\n        if (r.method !== 'GET' && !options.ignoreMethod) {\n          return []\n        }\n      } else if (typeof request === 'string') {\n        // 2.2.1\n        r = new Request(request)[kState]\n      }\n    }\n\n    // 5.\n    // 5.1\n    const responses = []\n\n    // 5.2\n    if (request === undefined) {\n      // 5.2.1\n      for (const requestResponse of this.#relevantRequestResponseList) {\n        responses.push(requestResponse[1])\n      }\n    } else { // 5.3\n      // 5.3.1\n      const requestResponses = this.#queryCache(r, options)\n\n      // 5.3.2\n      for (const requestResponse of requestResponses) {\n        responses.push(requestResponse[1])\n      }\n    }\n\n    // 5.4\n    // We don't implement CORs so we don't need to loop over the responses, yay!\n\n    // 5.5.1\n    const responseList = []\n\n    // 5.5.2\n    for (const response of responses) {\n      // 5.5.2.1\n      const responseObject = new Response(response.body?.source ?? null)\n      const body = responseObject[kState].body\n      responseObject[kState] = response\n      responseObject[kState].body = body\n      responseObject[kHeaders][kHeadersList] = response.headersList\n      responseObject[kHeaders][kGuard] = 'immutable'\n\n      responseList.push(responseObject)\n    }\n\n    // 6.\n    return Object.freeze(responseList)\n  }\n\n  async add (request) {\n    webidl.brandCheck(this, Cache)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.add' })\n\n    request = webidl.converters.RequestInfo(request)\n\n    // 1.\n    const requests = [request]\n\n    // 2.\n    const responseArrayPromise = this.addAll(requests)\n\n    // 3.\n    return await responseArrayPromise\n  }\n\n  async addAll (requests) {\n    webidl.brandCheck(this, Cache)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.addAll' })\n\n    requests = webidl.converters['sequence<RequestInfo>'](requests)\n\n    // 1.\n    const responsePromises = []\n\n    // 2.\n    const requestList = []\n\n    // 3.\n    for (const request of requests) {\n      if (typeof request === 'string') {\n        continue\n      }\n\n      // 3.1\n      const r = request[kState]\n\n      // 3.2\n      if (!urlIsHttpHttpsScheme(r.url) || r.method !== 'GET') {\n        throw webidl.errors.exception({\n          header: 'Cache.addAll',\n          message: 'Expected http/s scheme when method is not GET.'\n        })\n      }\n    }\n\n    // 4.\n    /** @type {ReturnType<typeof fetching>[]} */\n    const fetchControllers = []\n\n    // 5.\n    for (const request of requests) {\n      // 5.1\n      const r = new Request(request)[kState]\n\n      // 5.2\n      if (!urlIsHttpHttpsScheme(r.url)) {\n        throw webidl.errors.exception({\n          header: 'Cache.addAll',\n          message: 'Expected http/s scheme.'\n        })\n      }\n\n      // 5.4\n      r.initiator = 'fetch'\n      r.destination = 'subresource'\n\n      // 5.5\n      requestList.push(r)\n\n      // 5.6\n      const responsePromise = createDeferredPromise()\n\n      // 5.7\n      fetchControllers.push(fetching({\n        request: r,\n        dispatcher: getGlobalDispatcher(),\n        processResponse (response) {\n          // 1.\n          if (response.type === 'error' || response.status === 206 || response.status < 200 || response.status > 299) {\n            responsePromise.reject(webidl.errors.exception({\n              header: 'Cache.addAll',\n              message: 'Received an invalid status code or the request failed.'\n            }))\n          } else if (response.headersList.contains('vary')) { // 2.\n            // 2.1\n            const fieldValues = getFieldValues(response.headersList.get('vary'))\n\n            // 2.2\n            for (const fieldValue of fieldValues) {\n              // 2.2.1\n              if (fieldValue === '*') {\n                responsePromise.reject(webidl.errors.exception({\n                  header: 'Cache.addAll',\n                  message: 'invalid vary field value'\n                }))\n\n                for (const controller of fetchControllers) {\n                  controller.abort()\n                }\n\n                return\n              }\n            }\n          }\n        },\n        processResponseEndOfBody (response) {\n          // 1.\n          if (response.aborted) {\n            responsePromise.reject(new DOMException('aborted', 'AbortError'))\n            return\n          }\n\n          // 2.\n          responsePromise.resolve(response)\n        }\n      }))\n\n      // 5.8\n      responsePromises.push(responsePromise.promise)\n    }\n\n    // 6.\n    const p = Promise.all(responsePromises)\n\n    // 7.\n    const responses = await p\n\n    // 7.1\n    const operations = []\n\n    // 7.2\n    let index = 0\n\n    // 7.3\n    for (const response of responses) {\n      // 7.3.1\n      /** @type {CacheBatchOperation} */\n      const operation = {\n        type: 'put', // 7.3.2\n        request: requestList[index], // 7.3.3\n        response // 7.3.4\n      }\n\n      operations.push(operation) // 7.3.5\n\n      index++ // 7.3.6\n    }\n\n    // 7.5\n    const cacheJobPromise = createDeferredPromise()\n\n    // 7.6.1\n    let errorData = null\n\n    // 7.6.2\n    try {\n      this.#batchCacheOperations(operations)\n    } catch (e) {\n      errorData = e\n    }\n\n    // 7.6.3\n    queueMicrotask(() => {\n      // 7.6.3.1\n      if (errorData === null) {\n        cacheJobPromise.resolve(undefined)\n      } else {\n        // 7.6.3.2\n        cacheJobPromise.reject(errorData)\n      }\n    })\n\n    // 7.7\n    return cacheJobPromise.promise\n  }\n\n  async put (request, response) {\n    webidl.brandCheck(this, Cache)\n    webidl.argumentLengthCheck(arguments, 2, { header: 'Cache.put' })\n\n    request = webidl.converters.RequestInfo(request)\n    response = webidl.converters.Response(response)\n\n    // 1.\n    let innerRequest = null\n\n    // 2.\n    if (request instanceof Request) {\n      innerRequest = request[kState]\n    } else { // 3.\n      innerRequest = new Request(request)[kState]\n    }\n\n    // 4.\n    if (!urlIsHttpHttpsScheme(innerRequest.url) || innerRequest.method !== 'GET') {\n      throw webidl.errors.exception({\n        header: 'Cache.put',\n        message: 'Expected an http/s scheme when method is not GET'\n      })\n    }\n\n    // 5.\n    const innerResponse = response[kState]\n\n    // 6.\n    if (innerResponse.status === 206) {\n      throw webidl.errors.exception({\n        header: 'Cache.put',\n        message: 'Got 206 status'\n      })\n    }\n\n    // 7.\n    if (innerResponse.headersList.contains('vary')) {\n      // 7.1.\n      const fieldValues = getFieldValues(innerResponse.headersList.get('vary'))\n\n      // 7.2.\n      for (const fieldValue of fieldValues) {\n        // 7.2.1\n        if (fieldValue === '*') {\n          throw webidl.errors.exception({\n            header: 'Cache.put',\n            message: 'Got * vary field value'\n          })\n        }\n      }\n    }\n\n    // 8.\n    if (innerResponse.body && (isDisturbed(innerResponse.body.stream) || innerResponse.body.stream.locked)) {\n      throw webidl.errors.exception({\n        header: 'Cache.put',\n        message: 'Response body is locked or disturbed'\n      })\n    }\n\n    // 9.\n    const clonedResponse = cloneResponse(innerResponse)\n\n    // 10.\n    const bodyReadPromise = createDeferredPromise()\n\n    // 11.\n    if (innerResponse.body != null) {\n      // 11.1\n      const stream = innerResponse.body.stream\n\n      // 11.2\n      const reader = stream.getReader()\n\n      // 11.3\n      readAllBytes(reader).then(bodyReadPromise.resolve, bodyReadPromise.reject)\n    } else {\n      bodyReadPromise.resolve(undefined)\n    }\n\n    // 12.\n    /** @type {CacheBatchOperation[]} */\n    const operations = []\n\n    // 13.\n    /** @type {CacheBatchOperation} */\n    const operation = {\n      type: 'put', // 14.\n      request: innerRequest, // 15.\n      response: clonedResponse // 16.\n    }\n\n    // 17.\n    operations.push(operation)\n\n    // 19.\n    const bytes = await bodyReadPromise.promise\n\n    if (clonedResponse.body != null) {\n      clonedResponse.body.source = bytes\n    }\n\n    // 19.1\n    const cacheJobPromise = createDeferredPromise()\n\n    // 19.2.1\n    let errorData = null\n\n    // 19.2.2\n    try {\n      this.#batchCacheOperations(operations)\n    } catch (e) {\n      errorData = e\n    }\n\n    // 19.2.3\n    queueMicrotask(() => {\n      // 19.2.3.1\n      if (errorData === null) {\n        cacheJobPromise.resolve()\n      } else { // 19.2.3.2\n        cacheJobPromise.reject(errorData)\n      }\n    })\n\n    return cacheJobPromise.promise\n  }\n\n  async delete (request, options = {}) {\n    webidl.brandCheck(this, Cache)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.delete' })\n\n    request = webidl.converters.RequestInfo(request)\n    options = webidl.converters.CacheQueryOptions(options)\n\n    /**\n     * @type {Request}\n     */\n    let r = null\n\n    if (request instanceof Request) {\n      r = request[kState]\n\n      if (r.method !== 'GET' && !options.ignoreMethod) {\n        return false\n      }\n    } else {\n      assert(typeof request === 'string')\n\n      r = new Request(request)[kState]\n    }\n\n    /** @type {CacheBatchOperation[]} */\n    const operations = []\n\n    /** @type {CacheBatchOperation} */\n    const operation = {\n      type: 'delete',\n      request: r,\n      options\n    }\n\n    operations.push(operation)\n\n    const cacheJobPromise = createDeferredPromise()\n\n    let errorData = null\n    let requestResponses\n\n    try {\n      requestResponses = this.#batchCacheOperations(operations)\n    } catch (e) {\n      errorData = e\n    }\n\n    queueMicrotask(() => {\n      if (errorData === null) {\n        cacheJobPromise.resolve(!!requestResponses?.length)\n      } else {\n        cacheJobPromise.reject(errorData)\n      }\n    })\n\n    return cacheJobPromise.promise\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#dom-cache-keys\n   * @param {any} request\n   * @param {import('../../types/cache').CacheQueryOptions} options\n   * @returns {readonly Request[]}\n   */\n  async keys (request = undefined, options = {}) {\n    webidl.brandCheck(this, Cache)\n\n    if (request !== undefined) request = webidl.converters.RequestInfo(request)\n    options = webidl.converters.CacheQueryOptions(options)\n\n    // 1.\n    let r = null\n\n    // 2.\n    if (request !== undefined) {\n      // 2.1\n      if (request instanceof Request) {\n        // 2.1.1\n        r = request[kState]\n\n        // 2.1.2\n        if (r.method !== 'GET' && !options.ignoreMethod) {\n          return []\n        }\n      } else if (typeof request === 'string') { // 2.2\n        r = new Request(request)[kState]\n      }\n    }\n\n    // 4.\n    const promise = createDeferredPromise()\n\n    // 5.\n    // 5.1\n    const requests = []\n\n    // 5.2\n    if (request === undefined) {\n      // 5.2.1\n      for (const requestResponse of this.#relevantRequestResponseList) {\n        // 5.2.1.1\n        requests.push(requestResponse[0])\n      }\n    } else { // 5.3\n      // 5.3.1\n      const requestResponses = this.#queryCache(r, options)\n\n      // 5.3.2\n      for (const requestResponse of requestResponses) {\n        // 5.3.2.1\n        requests.push(requestResponse[0])\n      }\n    }\n\n    // 5.4\n    queueMicrotask(() => {\n      // 5.4.1\n      const requestList = []\n\n      // 5.4.2\n      for (const request of requests) {\n        const requestObject = new Request('https://a')\n        requestObject[kState] = request\n        requestObject[kHeaders][kHeadersList] = request.headersList\n        requestObject[kHeaders][kGuard] = 'immutable'\n        requestObject[kRealm] = request.client\n\n        // 5.4.2.1\n        requestList.push(requestObject)\n      }\n\n      // 5.4.3\n      promise.resolve(Object.freeze(requestList))\n    })\n\n    return promise.promise\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#batch-cache-operations-algorithm\n   * @param {CacheBatchOperation[]} operations\n   * @returns {requestResponseList}\n   */\n  #batchCacheOperations (operations) {\n    // 1.\n    const cache = this.#relevantRequestResponseList\n\n    // 2.\n    const backupCache = [...cache]\n\n    // 3.\n    const addedItems = []\n\n    // 4.1\n    const resultList = []\n\n    try {\n      // 4.2\n      for (const operation of operations) {\n        // 4.2.1\n        if (operation.type !== 'delete' && operation.type !== 'put') {\n          throw webidl.errors.exception({\n            header: 'Cache.#batchCacheOperations',\n            message: 'operation type does not match \"delete\" or \"put\"'\n          })\n        }\n\n        // 4.2.2\n        if (operation.type === 'delete' && operation.response != null) {\n          throw webidl.errors.exception({\n            header: 'Cache.#batchCacheOperations',\n            message: 'delete operation should not have an associated response'\n          })\n        }\n\n        // 4.2.3\n        if (this.#queryCache(operation.request, operation.options, addedItems).length) {\n          throw new DOMException('???', 'InvalidStateError')\n        }\n\n        // 4.2.4\n        let requestResponses\n\n        // 4.2.5\n        if (operation.type === 'delete') {\n          // 4.2.5.1\n          requestResponses = this.#queryCache(operation.request, operation.options)\n\n          // TODO: the spec is wrong, this is needed to pass WPTs\n          if (requestResponses.length === 0) {\n            return []\n          }\n\n          // 4.2.5.2\n          for (const requestResponse of requestResponses) {\n            const idx = cache.indexOf(requestResponse)\n            assert(idx !== -1)\n\n            // 4.2.5.2.1\n            cache.splice(idx, 1)\n          }\n        } else if (operation.type === 'put') { // 4.2.6\n          // 4.2.6.1\n          if (operation.response == null) {\n            throw webidl.errors.exception({\n              header: 'Cache.#batchCacheOperations',\n              message: 'put operation should have an associated response'\n            })\n          }\n\n          // 4.2.6.2\n          const r = operation.request\n\n          // 4.2.6.3\n          if (!urlIsHttpHttpsScheme(r.url)) {\n            throw webidl.errors.exception({\n              header: 'Cache.#batchCacheOperations',\n              message: 'expected http or https scheme'\n            })\n          }\n\n          // 4.2.6.4\n          if (r.method !== 'GET') {\n            throw webidl.errors.exception({\n              header: 'Cache.#batchCacheOperations',\n              message: 'not get method'\n            })\n          }\n\n          // 4.2.6.5\n          if (operation.options != null) {\n            throw webidl.errors.exception({\n              header: 'Cache.#batchCacheOperations',\n              message: 'options must not be defined'\n            })\n          }\n\n          // 4.2.6.6\n          requestResponses = this.#queryCache(operation.request)\n\n          // 4.2.6.7\n          for (const requestResponse of requestResponses) {\n            const idx = cache.indexOf(requestResponse)\n            assert(idx !== -1)\n\n            // 4.2.6.7.1\n            cache.splice(idx, 1)\n          }\n\n          // 4.2.6.8\n          cache.push([operation.request, operation.response])\n\n          // 4.2.6.10\n          addedItems.push([operation.request, operation.response])\n        }\n\n        // 4.2.7\n        resultList.push([operation.request, operation.response])\n      }\n\n      // 4.3\n      return resultList\n    } catch (e) { // 5.\n      // 5.1\n      this.#relevantRequestResponseList.length = 0\n\n      // 5.2\n      this.#relevantRequestResponseList = backupCache\n\n      // 5.3\n      throw e\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#query-cache\n   * @param {any} requestQuery\n   * @param {import('../../types/cache').CacheQueryOptions} options\n   * @param {requestResponseList} targetStorage\n   * @returns {requestResponseList}\n   */\n  #queryCache (requestQuery, options, targetStorage) {\n    /** @type {requestResponseList} */\n    const resultList = []\n\n    const storage = targetStorage ?? this.#relevantRequestResponseList\n\n    for (const requestResponse of storage) {\n      const [cachedRequest, cachedResponse] = requestResponse\n      if (this.#requestMatchesCachedItem(requestQuery, cachedRequest, cachedResponse, options)) {\n        resultList.push(requestResponse)\n      }\n    }\n\n    return resultList\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#request-matches-cached-item-algorithm\n   * @param {any} requestQuery\n   * @param {any} request\n   * @param {any | null} response\n   * @param {import('../../types/cache').CacheQueryOptions | undefined} options\n   * @returns {boolean}\n   */\n  #requestMatchesCachedItem (requestQuery, request, response = null, options) {\n    // if (options?.ignoreMethod === false && request.method === 'GET') {\n    //   return false\n    // }\n\n    const queryURL = new URL(requestQuery.url)\n\n    const cachedURL = new URL(request.url)\n\n    if (options?.ignoreSearch) {\n      cachedURL.search = ''\n\n      queryURL.search = ''\n    }\n\n    if (!urlEquals(queryURL, cachedURL, true)) {\n      return false\n    }\n\n    if (\n      response == null ||\n      options?.ignoreVary ||\n      !response.headersList.contains('vary')\n    ) {\n      return true\n    }\n\n    const fieldValues = getFieldValues(response.headersList.get('vary'))\n\n    for (const fieldValue of fieldValues) {\n      if (fieldValue === '*') {\n        return false\n      }\n\n      const requestValue = request.headersList.get(fieldValue)\n      const queryValue = requestQuery.headersList.get(fieldValue)\n\n      // If one has the header and the other doesn't, or one has\n      // a different value than the other, return false\n      if (requestValue !== queryValue) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nObject.defineProperties(Cache.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'Cache',\n    configurable: true\n  },\n  match: kEnumerableProperty,\n  matchAll: kEnumerableProperty,\n  add: kEnumerableProperty,\n  addAll: kEnumerableProperty,\n  put: kEnumerableProperty,\n  delete: kEnumerableProperty,\n  keys: kEnumerableProperty\n})\n\nconst cacheQueryOptionConverters = [\n  {\n    key: 'ignoreSearch',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'ignoreMethod',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'ignoreVary',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  }\n]\n\nwebidl.converters.CacheQueryOptions = webidl.dictionaryConverter(cacheQueryOptionConverters)\n\nwebidl.converters.MultiCacheQueryOptions = webidl.dictionaryConverter([\n  ...cacheQueryOptionConverters,\n  {\n    key: 'cacheName',\n    converter: webidl.converters.DOMString\n  }\n])\n\nwebidl.converters.Response = webidl.interfaceConverter(Response)\n\nwebidl.converters['sequence<RequestInfo>'] = webidl.sequenceConverter(\n  webidl.converters.RequestInfo\n)\n\nmodule.exports = {\n  Cache\n}\n","'use strict'\n\nconst { kConstruct } = require('./symbols')\nconst { Cache } = require('./cache')\nconst { webidl } = require('../fetch/webidl')\nconst { kEnumerableProperty } = require('../core/util')\n\nclass CacheStorage {\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-name-to-cache-map\n   * @type {Map<string, import('./cache').requestResponseList}\n   */\n  #caches = new Map()\n\n  constructor () {\n    if (arguments[0] !== kConstruct) {\n      webidl.illegalConstructor()\n    }\n  }\n\n  async match (request, options = {}) {\n    webidl.brandCheck(this, CacheStorage)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.match' })\n\n    request = webidl.converters.RequestInfo(request)\n    options = webidl.converters.MultiCacheQueryOptions(options)\n\n    // 1.\n    if (options.cacheName != null) {\n      // 1.1.1.1\n      if (this.#caches.has(options.cacheName)) {\n        // 1.1.1.1.1\n        const cacheList = this.#caches.get(options.cacheName)\n        const cache = new Cache(kConstruct, cacheList)\n\n        return await cache.match(request, options)\n      }\n    } else { // 2.\n      // 2.2\n      for (const cacheList of this.#caches.values()) {\n        const cache = new Cache(kConstruct, cacheList)\n\n        // 2.2.1.2\n        const response = await cache.match(request, options)\n\n        if (response !== undefined) {\n          return response\n        }\n      }\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#cache-storage-has\n   * @param {string} cacheName\n   * @returns {Promise<boolean>}\n   */\n  async has (cacheName) {\n    webidl.brandCheck(this, CacheStorage)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.has' })\n\n    cacheName = webidl.converters.DOMString(cacheName)\n\n    // 2.1.1\n    // 2.2\n    return this.#caches.has(cacheName)\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#dom-cachestorage-open\n   * @param {string} cacheName\n   * @returns {Promise<Cache>}\n   */\n  async open (cacheName) {\n    webidl.brandCheck(this, CacheStorage)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.open' })\n\n    cacheName = webidl.converters.DOMString(cacheName)\n\n    // 2.1\n    if (this.#caches.has(cacheName)) {\n      // await caches.open('v1') !== await caches.open('v1')\n\n      // 2.1.1\n      const cache = this.#caches.get(cacheName)\n\n      // 2.1.1.1\n      return new Cache(kConstruct, cache)\n    }\n\n    // 2.2\n    const cache = []\n\n    // 2.3\n    this.#caches.set(cacheName, cache)\n\n    // 2.4\n    return new Cache(kConstruct, cache)\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#cache-storage-delete\n   * @param {string} cacheName\n   * @returns {Promise<boolean>}\n   */\n  async delete (cacheName) {\n    webidl.brandCheck(this, CacheStorage)\n    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.delete' })\n\n    cacheName = webidl.converters.DOMString(cacheName)\n\n    return this.#caches.delete(cacheName)\n  }\n\n  /**\n   * @see https://w3c.github.io/ServiceWorker/#cache-storage-keys\n   * @returns {string[]}\n   */\n  async keys () {\n    webidl.brandCheck(this, CacheStorage)\n\n    // 2.1\n    const keys = this.#caches.keys()\n\n    // 2.2\n    return [...keys]\n  }\n}\n\nObject.defineProperties(CacheStorage.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'CacheStorage',\n    configurable: true\n  },\n  match: kEnumerableProperty,\n  has: kEnumerableProperty,\n  open: kEnumerableProperty,\n  delete: kEnumerableProperty,\n  keys: kEnumerableProperty\n})\n\nmodule.exports = {\n  CacheStorage\n}\n","'use strict'\n\nmodule.exports = {\n  kConstruct: require('../core/symbols').kConstruct\n}\n","'use strict'\n\nconst assert = require('assert')\nconst { URLSerializer } = require('../fetch/dataURL')\nconst { isValidHeaderName } = require('../fetch/util')\n\n/**\n * @see https://url.spec.whatwg.org/#concept-url-equals\n * @param {URL} A\n * @param {URL} B\n * @param {boolean | undefined} excludeFragment\n * @returns {boolean}\n */\nfunction urlEquals (A, B, excludeFragment = false) {\n  const serializedA = URLSerializer(A, excludeFragment)\n\n  const serializedB = URLSerializer(B, excludeFragment)\n\n  return serializedA === serializedB\n}\n\n/**\n * @see https://github.com/chromium/chromium/blob/694d20d134cb553d8d89e5500b9148012b1ba299/content/browser/cache_storage/cache_storage_cache.cc#L260-L262\n * @param {string} header\n */\nfunction fieldValues (header) {\n  assert(header !== null)\n\n  const values = []\n\n  for (let value of header.split(',')) {\n    value = value.trim()\n\n    if (!value.length) {\n      continue\n    } else if (!isValidHeaderName(value)) {\n      continue\n    }\n\n    values.push(value)\n  }\n\n  return values\n}\n\nmodule.exports = {\n  urlEquals,\n  fieldValues\n}\n","// @ts-check\n\n'use strict'\n\n/* global WebAssembly */\n\nconst assert = require('assert')\nconst net = require('net')\nconst http = require('http')\nconst { pipeline } = require('stream')\nconst util = require('./core/util')\nconst timers = require('./timers')\nconst Request = require('./core/request')\nconst DispatcherBase = require('./dispatcher-base')\nconst {\n  RequestContentLengthMismatchError,\n  ResponseContentLengthMismatchError,\n  InvalidArgumentError,\n  RequestAbortedError,\n  HeadersTimeoutError,\n  HeadersOverflowError,\n  SocketError,\n  InformationalError,\n  BodyTimeoutError,\n  HTTPParserError,\n  ResponseExceededMaxSizeError,\n  ClientDestroyedError\n} = require('./core/errors')\nconst buildConnector = require('./core/connect')\nconst {\n  kUrl,\n  kReset,\n  kServerName,\n  kClient,\n  kBusy,\n  kParser,\n  kConnect,\n  kBlocking,\n  kResuming,\n  kRunning,\n  kPending,\n  kSize,\n  kWriting,\n  kQueue,\n  kConnected,\n  kConnecting,\n  kNeedDrain,\n  kNoRef,\n  kKeepAliveDefaultTimeout,\n  kHostHeader,\n  kPendingIdx,\n  kRunningIdx,\n  kError,\n  kPipelining,\n  kSocket,\n  kKeepAliveTimeoutValue,\n  kMaxHeadersSize,\n  kKeepAliveMaxTimeout,\n  kKeepAliveTimeoutThreshold,\n  kHeadersTimeout,\n  kBodyTimeout,\n  kStrictContentLength,\n  kConnector,\n  kMaxRedirections,\n  kMaxRequests,\n  kCounter,\n  kClose,\n  kDestroy,\n  kDispatch,\n  kInterceptors,\n  kLocalAddress,\n  kMaxResponseSize,\n  kHTTPConnVersion,\n  // HTTP2\n  kHost,\n  kHTTP2Session,\n  kHTTP2SessionState,\n  kHTTP2BuildRequest,\n  kHTTP2CopyHeaders,\n  kHTTP1BuildRequest\n} = require('./core/symbols')\n\n/** @type {import('http2')} */\nlet http2\ntry {\n  http2 = require('http2')\n} catch {\n  // @ts-ignore\n  http2 = { constants: {} }\n}\n\nconst {\n  constants: {\n    HTTP2_HEADER_AUTHORITY,\n    HTTP2_HEADER_METHOD,\n    HTTP2_HEADER_PATH,\n    HTTP2_HEADER_SCHEME,\n    HTTP2_HEADER_CONTENT_LENGTH,\n    HTTP2_HEADER_EXPECT,\n    HTTP2_HEADER_STATUS\n  }\n} = http2\n\n// Experimental\nlet h2ExperimentalWarned = false\n\nconst FastBuffer = Buffer[Symbol.species]\n\nconst kClosedResolve = Symbol('kClosedResolve')\n\nconst channels = {}\n\ntry {\n  const diagnosticsChannel = require('diagnostics_channel')\n  channels.sendHeaders = diagnosticsChannel.channel('undici:client:sendHeaders')\n  channels.beforeConnect = diagnosticsChannel.channel('undici:client:beforeConnect')\n  channels.connectError = diagnosticsChannel.channel('undici:client:connectError')\n  channels.connected = diagnosticsChannel.channel('undici:client:connected')\n} catch {\n  channels.sendHeaders = { hasSubscribers: false }\n  channels.beforeConnect = { hasSubscribers: false }\n  channels.connectError = { hasSubscribers: false }\n  channels.connected = { hasSubscribers: false }\n}\n\n/**\n * @type {import('../types/client').default}\n */\nclass Client extends DispatcherBase {\n  /**\n   *\n   * @param {string|URL} url\n   * @param {import('../types/client').Client.Options} options\n   */\n  constructor (url, {\n    interceptors,\n    maxHeaderSize,\n    headersTimeout,\n    socketTimeout,\n    requestTimeout,\n    connectTimeout,\n    bodyTimeout,\n    idleTimeout,\n    keepAlive,\n    keepAliveTimeout,\n    maxKeepAliveTimeout,\n    keepAliveMaxTimeout,\n    keepAliveTimeoutThreshold,\n    socketPath,\n    pipelining,\n    tls,\n    strictContentLength,\n    maxCachedSessions,\n    maxRedirections,\n    connect,\n    maxRequestsPerClient,\n    localAddress,\n    maxResponseSize,\n    autoSelectFamily,\n    autoSelectFamilyAttemptTimeout,\n    // h2\n    allowH2,\n    maxConcurrentStreams\n  } = {}) {\n    super()\n\n    if (keepAlive !== undefined) {\n      throw new InvalidArgumentError('unsupported keepAlive, use pipelining=0 instead')\n    }\n\n    if (socketTimeout !== undefined) {\n      throw new InvalidArgumentError('unsupported socketTimeout, use headersTimeout & bodyTimeout instead')\n    }\n\n    if (requestTimeout !== undefined) {\n      throw new InvalidArgumentError('unsupported requestTimeout, use headersTimeout & bodyTimeout instead')\n    }\n\n    if (idleTimeout !== undefined) {\n      throw new InvalidArgumentError('unsupported idleTimeout, use keepAliveTimeout instead')\n    }\n\n    if (maxKeepAliveTimeout !== undefined) {\n      throw new InvalidArgumentError('unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead')\n    }\n\n    if (maxHeaderSize != null && !Number.isFinite(maxHeaderSize)) {\n      throw new InvalidArgumentError('invalid maxHeaderSize')\n    }\n\n    if (socketPath != null && typeof socketPath !== 'string') {\n      throw new InvalidArgumentError('invalid socketPath')\n    }\n\n    if (connectTimeout != null && (!Number.isFinite(connectTimeout) || connectTimeout < 0)) {\n      throw new InvalidArgumentError('invalid connectTimeout')\n    }\n\n    if (keepAliveTimeout != null && (!Number.isFinite(keepAliveTimeout) || keepAliveTimeout <= 0)) {\n      throw new InvalidArgumentError('invalid keepAliveTimeout')\n    }\n\n    if (keepAliveMaxTimeout != null && (!Number.isFinite(keepAliveMaxTimeout) || keepAliveMaxTimeout <= 0)) {\n      throw new InvalidArgumentError('invalid keepAliveMaxTimeout')\n    }\n\n    if (keepAliveTimeoutThreshold != null && !Number.isFinite(keepAliveTimeoutThreshold)) {\n      throw new InvalidArgumentError('invalid keepAliveTimeoutThreshold')\n    }\n\n    if (headersTimeout != null && (!Number.isInteger(headersTimeout) || headersTimeout < 0)) {\n      throw new InvalidArgumentError('headersTimeout must be a positive integer or zero')\n    }\n\n    if (bodyTimeout != null && (!Number.isInteger(bodyTimeout) || bodyTimeout < 0)) {\n      throw new InvalidArgumentError('bodyTimeout must be a positive integer or zero')\n    }\n\n    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {\n      throw new InvalidArgumentError('connect must be a function or an object')\n    }\n\n    if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {\n      throw new InvalidArgumentError('maxRedirections must be a positive number')\n    }\n\n    if (maxRequestsPerClient != null && (!Number.isInteger(maxRequestsPerClient) || maxRequestsPerClient < 0)) {\n      throw new InvalidArgumentError('maxRequestsPerClient must be a positive number')\n    }\n\n    if (localAddress != null && (typeof localAddress !== 'string' || net.isIP(localAddress) === 0)) {\n      throw new InvalidArgumentError('localAddress must be valid string IP address')\n    }\n\n    if (maxResponseSize != null && (!Number.isInteger(maxResponseSize) || maxResponseSize < -1)) {\n      throw new InvalidArgumentError('maxResponseSize must be a positive number')\n    }\n\n    if (\n      autoSelectFamilyAttemptTimeout != null &&\n      (!Number.isInteger(autoSelectFamilyAttemptTimeout) || autoSelectFamilyAttemptTimeout < -1)\n    ) {\n      throw new InvalidArgumentError('autoSelectFamilyAttemptTimeout must be a positive number')\n    }\n\n    // h2\n    if (allowH2 != null && typeof allowH2 !== 'boolean') {\n      throw new InvalidArgumentError('allowH2 must be a valid boolean value')\n    }\n\n    if (maxConcurrentStreams != null && (typeof maxConcurrentStreams !== 'number' || maxConcurrentStreams < 1)) {\n      throw new InvalidArgumentError('maxConcurrentStreams must be a possitive integer, greater than 0')\n    }\n\n    if (typeof connect !== 'function') {\n      connect = buildConnector({\n        ...tls,\n        maxCachedSessions,\n        allowH2,\n        socketPath,\n        timeout: connectTimeout,\n        ...(util.nodeHasAutoSelectFamily && autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : undefined),\n        ...connect\n      })\n    }\n\n    this[kInterceptors] = interceptors && interceptors.Client && Array.isArray(interceptors.Client)\n      ? interceptors.Client\n      : [createRedirectInterceptor({ maxRedirections })]\n    this[kUrl] = util.parseOrigin(url)\n    this[kConnector] = connect\n    this[kSocket] = null\n    this[kPipelining] = pipelining != null ? pipelining : 1\n    this[kMaxHeadersSize] = maxHeaderSize || http.maxHeaderSize\n    this[kKeepAliveDefaultTimeout] = keepAliveTimeout == null ? 4e3 : keepAliveTimeout\n    this[kKeepAliveMaxTimeout] = keepAliveMaxTimeout == null ? 600e3 : keepAliveMaxTimeout\n    this[kKeepAliveTimeoutThreshold] = keepAliveTimeoutThreshold == null ? 1e3 : keepAliveTimeoutThreshold\n    this[kKeepAliveTimeoutValue] = this[kKeepAliveDefaultTimeout]\n    this[kServerName] = null\n    this[kLocalAddress] = localAddress != null ? localAddress : null\n    this[kResuming] = 0 // 0, idle, 1, scheduled, 2 resuming\n    this[kNeedDrain] = 0 // 0, idle, 1, scheduled, 2 resuming\n    this[kHostHeader] = `host: ${this[kUrl].hostname}${this[kUrl].port ? `:${this[kUrl].port}` : ''}\\r\\n`\n    this[kBodyTimeout] = bodyTimeout != null ? bodyTimeout : 300e3\n    this[kHeadersTimeout] = headersTimeout != null ? headersTimeout : 300e3\n    this[kStrictContentLength] = strictContentLength == null ? true : strictContentLength\n    this[kMaxRedirections] = maxRedirections\n    this[kMaxRequests] = maxRequestsPerClient\n    this[kClosedResolve] = null\n    this[kMaxResponseSize] = maxResponseSize > -1 ? maxResponseSize : -1\n    this[kHTTPConnVersion] = 'h1'\n\n    // HTTP/2\n    this[kHTTP2Session] = null\n    this[kHTTP2SessionState] = !allowH2\n      ? null\n      : {\n        // streams: null, // Fixed queue of streams - For future support of `push`\n          openStreams: 0, // Keep track of them to decide wether or not unref the session\n          maxConcurrentStreams: maxConcurrentStreams != null ? maxConcurrentStreams : 100 // Max peerConcurrentStreams for a Node h2 server\n        }\n    this[kHost] = `${this[kUrl].hostname}${this[kUrl].port ? `:${this[kUrl].port}` : ''}`\n\n    // kQueue is built up of 3 sections separated by\n    // the kRunningIdx and kPendingIdx indices.\n    // |   complete   |   running   |   pending   |\n    //                ^ kRunningIdx ^ kPendingIdx ^ kQueue.length\n    // kRunningIdx points to the first running element.\n    // kPendingIdx points to the first pending element.\n    // This implements a fast queue with an amortized\n    // time of O(1).\n\n    this[kQueue] = []\n    this[kRunningIdx] = 0\n    this[kPendingIdx] = 0\n  }\n\n  get pipelining () {\n    return this[kPipelining]\n  }\n\n  set pipelining (value) {\n    this[kPipelining] = value\n    resume(this, true)\n  }\n\n  get [kPending] () {\n    return this[kQueue].length - this[kPendingIdx]\n  }\n\n  get [kRunning] () {\n    return this[kPendingIdx] - this[kRunningIdx]\n  }\n\n  get [kSize] () {\n    return this[kQueue].length - this[kRunningIdx]\n  }\n\n  get [kConnected] () {\n    return !!this[kSocket] && !this[kConnecting] && !this[kSocket].destroyed\n  }\n\n  get [kBusy] () {\n    const socket = this[kSocket]\n    return (\n      (socket && (socket[kReset] || socket[kWriting] || socket[kBlocking])) ||\n      (this[kSize] >= (this[kPipelining] || 1)) ||\n      this[kPending] > 0\n    )\n  }\n\n  /* istanbul ignore: only used for test */\n  [kConnect] (cb) {\n    connect(this)\n    this.once('connect', cb)\n  }\n\n  [kDispatch] (opts, handler) {\n    const origin = opts.origin || this[kUrl].origin\n\n    const request = this[kHTTPConnVersion] === 'h2'\n      ? Request[kHTTP2BuildRequest](origin, opts, handler)\n      : Request[kHTTP1BuildRequest](origin, opts, handler)\n\n    this[kQueue].push(request)\n    if (this[kResuming]) {\n      // Do nothing.\n    } else if (util.bodyLength(request.body) == null && util.isIterable(request.body)) {\n      // Wait a tick in case stream/iterator is ended in the same tick.\n      this[kResuming] = 1\n      process.nextTick(resume, this)\n    } else {\n      resume(this, true)\n    }\n\n    if (this[kResuming] && this[kNeedDrain] !== 2 && this[kBusy]) {\n      this[kNeedDrain] = 2\n    }\n\n    return this[kNeedDrain] < 2\n  }\n\n  async [kClose] () {\n    // TODO: for H2 we need to gracefully flush the remaining enqueued\n    // request and close each stream.\n    return new Promise((resolve) => {\n      if (!this[kSize]) {\n        resolve(null)\n      } else {\n        this[kClosedResolve] = resolve\n      }\n    })\n  }\n\n  async [kDestroy] (err) {\n    return new Promise((resolve) => {\n      const requests = this[kQueue].splice(this[kPendingIdx])\n      for (let i = 0; i < requests.length; i++) {\n        const request = requests[i]\n        errorRequest(this, request, err)\n      }\n\n      const callback = () => {\n        if (this[kClosedResolve]) {\n          // TODO (fix): Should we error here with ClientDestroyedError?\n          this[kClosedResolve]()\n          this[kClosedResolve] = null\n        }\n        resolve()\n      }\n\n      if (this[kHTTP2Session] != null) {\n        util.destroy(this[kHTTP2Session], err)\n        this[kHTTP2Session] = null\n        this[kHTTP2SessionState] = null\n      }\n\n      if (!this[kSocket]) {\n        queueMicrotask(callback)\n      } else {\n        util.destroy(this[kSocket].on('close', callback), err)\n      }\n\n      resume(this)\n    })\n  }\n}\n\nfunction onHttp2SessionError (err) {\n  assert(err.code !== 'ERR_TLS_CERT_ALTNAME_INVALID')\n\n  this[kSocket][kError] = err\n\n  onError(this[kClient], err)\n}\n\nfunction onHttp2FrameError (type, code, id) {\n  const err = new InformationalError(`HTTP/2: \"frameError\" received - type ${type}, code ${code}`)\n\n  if (id === 0) {\n    this[kSocket][kError] = err\n    onError(this[kClient], err)\n  }\n}\n\nfunction onHttp2SessionEnd () {\n  util.destroy(this, new SocketError('other side closed'))\n  util.destroy(this[kSocket], new SocketError('other side closed'))\n}\n\nfunction onHTTP2GoAway (code) {\n  const client = this[kClient]\n  const err = new InformationalError(`HTTP/2: \"GOAWAY\" frame received with code ${code}`)\n  client[kSocket] = null\n  client[kHTTP2Session] = null\n\n  if (client.destroyed) {\n    assert(this[kPending] === 0)\n\n    // Fail entire queue.\n    const requests = client[kQueue].splice(client[kRunningIdx])\n    for (let i = 0; i < requests.length; i++) {\n      const request = requests[i]\n      errorRequest(this, request, err)\n    }\n  } else if (client[kRunning] > 0) {\n    // Fail head of pipeline.\n    const request = client[kQueue][client[kRunningIdx]]\n    client[kQueue][client[kRunningIdx]++] = null\n\n    errorRequest(client, request, err)\n  }\n\n  client[kPendingIdx] = client[kRunningIdx]\n\n  assert(client[kRunning] === 0)\n\n  client.emit('disconnect',\n    client[kUrl],\n    [client],\n    err\n  )\n\n  resume(client)\n}\n\nconst constants = require('./llhttp/constants')\nconst createRedirectInterceptor = require('./interceptor/redirectInterceptor')\nconst EMPTY_BUF = Buffer.alloc(0)\n\nasync function lazyllhttp () {\n  const llhttpWasmData = process.env.JEST_WORKER_ID ? require('./llhttp/llhttp-wasm.js') : undefined\n\n  let mod\n  try {\n    mod = await WebAssembly.compile(Buffer.from(require('./llhttp/llhttp_simd-wasm.js'), 'base64'))\n  } catch (e) {\n    /* istanbul ignore next */\n\n    // We could check if the error was caused by the simd option not\n    // being enabled, but the occurring of this other error\n    // * https://github.com/emscripten-core/emscripten/issues/11495\n    // got me to remove that check to avoid breaking Node 12.\n    mod = await WebAssembly.compile(Buffer.from(llhttpWasmData || require('./llhttp/llhttp-wasm.js'), 'base64'))\n  }\n\n  return await WebAssembly.instantiate(mod, {\n    env: {\n      /* eslint-disable camelcase */\n\n      wasm_on_url: (p, at, len) => {\n        /* istanbul ignore next */\n        return 0\n      },\n      wasm_on_status: (p, at, len) => {\n        assert.strictEqual(currentParser.ptr, p)\n        const start = at - currentBufferPtr + currentBufferRef.byteOffset\n        return currentParser.onStatus(new FastBuffer(currentBufferRef.buffer, start, len)) || 0\n      },\n      wasm_on_message_begin: (p) => {\n        assert.strictEqual(currentParser.ptr, p)\n        return currentParser.onMessageBegin() || 0\n      },\n      wasm_on_header_field: (p, at, len) => {\n        assert.strictEqual(currentParser.ptr, p)\n        const start = at - currentBufferPtr + currentBufferRef.byteOffset\n        return currentParser.onHeaderField(new FastBuffer(currentBufferRef.buffer, start, len)) || 0\n      },\n      wasm_on_header_value: (p, at, len) => {\n        assert.strictEqual(currentParser.ptr, p)\n        const start = at - currentBufferPtr + currentBufferRef.byteOffset\n        return currentParser.onHeaderValue(new FastBuffer(currentBufferRef.buffer, start, len)) || 0\n      },\n      wasm_on_headers_complete: (p, statusCode, upgrade, shouldKeepAlive) => {\n        assert.strictEqual(currentParser.ptr, p)\n        return currentParser.onHeadersComplete(statusCode, Boolean(upgrade), Boolean(shouldKeepAlive)) || 0\n      },\n      wasm_on_body: (p, at, len) => {\n        assert.strictEqual(currentParser.ptr, p)\n        const start = at - currentBufferPtr + currentBufferRef.byteOffset\n        return currentParser.onBody(new FastBuffer(currentBufferRef.buffer, start, len)) || 0\n      },\n      wasm_on_message_complete: (p) => {\n        assert.strictEqual(currentParser.ptr, p)\n        return currentParser.onMessageComplete() || 0\n      }\n\n      /* eslint-enable camelcase */\n    }\n  })\n}\n\nlet llhttpInstance = null\nlet llhttpPromise = lazyllhttp()\nllhttpPromise.catch()\n\nlet currentParser = null\nlet currentBufferRef = null\nlet currentBufferSize = 0\nlet currentBufferPtr = null\n\nconst TIMEOUT_HEADERS = 1\nconst TIMEOUT_BODY = 2\nconst TIMEOUT_IDLE = 3\n\nclass Parser {\n  constructor (client, socket, { exports }) {\n    assert(Number.isFinite(client[kMaxHeadersSize]) && client[kMaxHeadersSize] > 0)\n\n    this.llhttp = exports\n    this.ptr = this.llhttp.llhttp_alloc(constants.TYPE.RESPONSE)\n    this.client = client\n    this.socket = socket\n    this.timeout = null\n    this.timeoutValue = null\n    this.timeoutType = null\n    this.statusCode = null\n    this.statusText = ''\n    this.upgrade = false\n    this.headers = []\n    this.headersSize = 0\n    this.headersMaxSize = client[kMaxHeadersSize]\n    this.shouldKeepAlive = false\n    this.paused = false\n    this.resume = this.resume.bind(this)\n\n    this.bytesRead = 0\n\n    this.keepAlive = ''\n    this.contentLength = ''\n    this.connection = ''\n    this.maxResponseSize = client[kMaxResponseSize]\n  }\n\n  setTimeout (value, type) {\n    this.timeoutType = type\n    if (value !== this.timeoutValue) {\n      timers.clearTimeout(this.timeout)\n      if (value) {\n        this.timeout = timers.setTimeout(onParserTimeout, value, this)\n        // istanbul ignore else: only for jest\n        if (this.timeout.unref) {\n          this.timeout.unref()\n        }\n      } else {\n        this.timeout = null\n      }\n      this.timeoutValue = value\n    } else if (this.timeout) {\n      // istanbul ignore else: only for jest\n      if (this.timeout.refresh) {\n        this.timeout.refresh()\n      }\n    }\n  }\n\n  resume () {\n    if (this.socket.destroyed || !this.paused) {\n      return\n    }\n\n    assert(this.ptr != null)\n    assert(currentParser == null)\n\n    this.llhttp.llhttp_resume(this.ptr)\n\n    assert(this.timeoutType === TIMEOUT_BODY)\n    if (this.timeout) {\n      // istanbul ignore else: only for jest\n      if (this.timeout.refresh) {\n        this.timeout.refresh()\n      }\n    }\n\n    this.paused = false\n    this.execute(this.socket.read() || EMPTY_BUF) // Flush parser.\n    this.readMore()\n  }\n\n  readMore () {\n    while (!this.paused && this.ptr) {\n      const chunk = this.socket.read()\n      if (chunk === null) {\n        break\n      }\n      this.execute(chunk)\n    }\n  }\n\n  execute (data) {\n    assert(this.ptr != null)\n    assert(currentParser == null)\n    assert(!this.paused)\n\n    const { socket, llhttp } = this\n\n    if (data.length > currentBufferSize) {\n      if (currentBufferPtr) {\n        llhttp.free(currentBufferPtr)\n      }\n      currentBufferSize = Math.ceil(data.length / 4096) * 4096\n      currentBufferPtr = llhttp.malloc(currentBufferSize)\n    }\n\n    new Uint8Array(llhttp.memory.buffer, currentBufferPtr, currentBufferSize).set(data)\n\n    // Call `execute` on the wasm parser.\n    // We pass the `llhttp_parser` pointer address, the pointer address of buffer view data,\n    // and finally the length of bytes to parse.\n    // The return value is an error code or `constants.ERROR.OK`.\n    try {\n      let ret\n\n      try {\n        currentBufferRef = data\n        currentParser = this\n        ret = llhttp.llhttp_execute(this.ptr, currentBufferPtr, data.length)\n        /* eslint-disable-next-line no-useless-catch */\n      } catch (err) {\n        /* istanbul ignore next: difficult to make a test case for */\n        throw err\n      } finally {\n        currentParser = null\n        currentBufferRef = null\n      }\n\n      const offset = llhttp.llhttp_get_error_pos(this.ptr) - currentBufferPtr\n\n      if (ret === constants.ERROR.PAUSED_UPGRADE) {\n        this.onUpgrade(data.slice(offset))\n      } else if (ret === constants.ERROR.PAUSED) {\n        this.paused = true\n        socket.unshift(data.slice(offset))\n      } else if (ret !== constants.ERROR.OK) {\n        const ptr = llhttp.llhttp_get_error_reason(this.ptr)\n        let message = ''\n        /* istanbul ignore else: difficult to make a test case for */\n        if (ptr) {\n          const len = new Uint8Array(llhttp.memory.buffer, ptr).indexOf(0)\n          message =\n            'Response does not match the HTTP/1.1 protocol (' +\n            Buffer.from(llhttp.memory.buffer, ptr, len).toString() +\n            ')'\n        }\n        throw new HTTPParserError(message, constants.ERROR[ret], data.slice(offset))\n      }\n    } catch (err) {\n      util.destroy(socket, err)\n    }\n  }\n\n  destroy () {\n    assert(this.ptr != null)\n    assert(currentParser == null)\n\n    this.llhttp.llhttp_free(this.ptr)\n    this.ptr = null\n\n    timers.clearTimeout(this.timeout)\n    this.timeout = null\n    this.timeoutValue = null\n    this.timeoutType = null\n\n    this.paused = false\n  }\n\n  onStatus (buf) {\n    this.statusText = buf.toString()\n  }\n\n  onMessageBegin () {\n    const { socket, client } = this\n\n    /* istanbul ignore next: difficult to make a test case for */\n    if (socket.destroyed) {\n      return -1\n    }\n\n    const request = client[kQueue][client[kRunningIdx]]\n    if (!request) {\n      return -1\n    }\n  }\n\n  onHeaderField (buf) {\n    const len = this.headers.length\n\n    if ((len & 1) === 0) {\n      this.headers.push(buf)\n    } else {\n      this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf])\n    }\n\n    this.trackHeader(buf.length)\n  }\n\n  onHeaderValue (buf) {\n    let len = this.headers.length\n\n    if ((len & 1) === 1) {\n      this.headers.push(buf)\n      len += 1\n    } else {\n      this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf])\n    }\n\n    const key = this.headers[len - 2]\n    if (key.length === 10 && key.toString().toLowerCase() === 'keep-alive') {\n      this.keepAlive += buf.toString()\n    } else if (key.length === 10 && key.toString().toLowerCase() === 'connection') {\n      this.connection += buf.toString()\n    } else if (key.length === 14 && key.toString().toLowerCase() === 'content-length') {\n      this.contentLength += buf.toString()\n    }\n\n    this.trackHeader(buf.length)\n  }\n\n  trackHeader (len) {\n    this.headersSize += len\n    if (this.headersSize >= this.headersMaxSize) {\n      util.destroy(this.socket, new HeadersOverflowError())\n    }\n  }\n\n  onUpgrade (head) {\n    const { upgrade, client, socket, headers, statusCode } = this\n\n    assert(upgrade)\n\n    const request = client[kQueue][client[kRunningIdx]]\n    assert(request)\n\n    assert(!socket.destroyed)\n    assert(socket === client[kSocket])\n    assert(!this.paused)\n    assert(request.upgrade || request.method === 'CONNECT')\n\n    this.statusCode = null\n    this.statusText = ''\n    this.shouldKeepAlive = null\n\n    assert(this.headers.length % 2 === 0)\n    this.headers = []\n    this.headersSize = 0\n\n    socket.unshift(head)\n\n    socket[kParser].destroy()\n    socket[kParser] = null\n\n    socket[kClient] = null\n    socket[kError] = null\n    socket\n      .removeListener('error', onSocketError)\n      .removeListener('readable', onSocketReadable)\n      .removeListener('end', onSocketEnd)\n      .removeListener('close', onSocketClose)\n\n    client[kSocket] = null\n    client[kQueue][client[kRunningIdx]++] = null\n    client.emit('disconnect', client[kUrl], [client], new InformationalError('upgrade'))\n\n    try {\n      request.onUpgrade(statusCode, headers, socket)\n    } catch (err) {\n      util.destroy(socket, err)\n    }\n\n    resume(client)\n  }\n\n  onHeadersComplete (statusCode, upgrade, shouldKeepAlive) {\n    const { client, socket, headers, statusText } = this\n\n    /* istanbul ignore next: difficult to make a test case for */\n    if (socket.destroyed) {\n      return -1\n    }\n\n    const request = client[kQueue][client[kRunningIdx]]\n\n    /* istanbul ignore next: difficult to make a test case for */\n    if (!request) {\n      return -1\n    }\n\n    assert(!this.upgrade)\n    assert(this.statusCode < 200)\n\n    if (statusCode === 100) {\n      util.destroy(socket, new SocketError('bad response', util.getSocketInfo(socket)))\n      return -1\n    }\n\n    /* this can only happen if server is misbehaving */\n    if (upgrade && !request.upgrade) {\n      util.destroy(socket, new SocketError('bad upgrade', util.getSocketInfo(socket)))\n      return -1\n    }\n\n    assert.strictEqual(this.timeoutType, TIMEOUT_HEADERS)\n\n    this.statusCode = statusCode\n    this.shouldKeepAlive = (\n      shouldKeepAlive ||\n      // Override llhttp value which does not allow keepAlive for HEAD.\n      (request.method === 'HEAD' && !socket[kReset] && this.connection.toLowerCase() === 'keep-alive')\n    )\n\n    if (this.statusCode >= 200) {\n      const bodyTimeout = request.bodyTimeout != null\n        ? request.bodyTimeout\n        : client[kBodyTimeout]\n      this.setTimeout(bodyTimeout, TIMEOUT_BODY)\n    } else if (this.timeout) {\n      // istanbul ignore else: only for jest\n      if (this.timeout.refresh) {\n        this.timeout.refresh()\n      }\n    }\n\n    if (request.method === 'CONNECT') {\n      assert(client[kRunning] === 1)\n      this.upgrade = true\n      return 2\n    }\n\n    if (upgrade) {\n      assert(client[kRunning] === 1)\n      this.upgrade = true\n      return 2\n    }\n\n    assert(this.headers.length % 2 === 0)\n    this.headers = []\n    this.headersSize = 0\n\n    if (this.shouldKeepAlive && client[kPipelining]) {\n      const keepAliveTimeout = this.keepAlive ? util.parseKeepAliveTimeout(this.keepAlive) : null\n\n      if (keepAliveTimeout != null) {\n        const timeout = Math.min(\n          keepAliveTimeout - client[kKeepAliveTimeoutThreshold],\n          client[kKeepAliveMaxTimeout]\n        )\n        if (timeout <= 0) {\n          socket[kReset] = true\n        } else {\n          client[kKeepAliveTimeoutValue] = timeout\n        }\n      } else {\n        client[kKeepAliveTimeoutValue] = client[kKeepAliveDefaultTimeout]\n      }\n    } else {\n      // Stop more requests from being dispatched.\n      socket[kReset] = true\n    }\n\n    const pause = request.onHeaders(statusCode, headers, this.resume, statusText) === false\n\n    if (request.aborted) {\n      return -1\n    }\n\n    if (request.method === 'HEAD') {\n      return 1\n    }\n\n    if (statusCode < 200) {\n      return 1\n    }\n\n    if (socket[kBlocking]) {\n      socket[kBlocking] = false\n      resume(client)\n    }\n\n    return pause ? constants.ERROR.PAUSED : 0\n  }\n\n  onBody (buf) {\n    const { client, socket, statusCode, maxResponseSize } = this\n\n    if (socket.destroyed) {\n      return -1\n    }\n\n    const request = client[kQueue][client[kRunningIdx]]\n    assert(request)\n\n    assert.strictEqual(this.timeoutType, TIMEOUT_BODY)\n    if (this.timeout) {\n      // istanbul ignore else: only for jest\n      if (this.timeout.refresh) {\n        this.timeout.refresh()\n      }\n    }\n\n    assert(statusCode >= 200)\n\n    if (maxResponseSize > -1 && this.bytesRead + buf.length > maxResponseSize) {\n      util.destroy(socket, new ResponseExceededMaxSizeError())\n      return -1\n    }\n\n    this.bytesRead += buf.length\n\n    if (request.onData(buf) === false) {\n      return constants.ERROR.PAUSED\n    }\n  }\n\n  onMessageComplete () {\n    const { client, socket, statusCode, upgrade, headers, contentLength, bytesRead, shouldKeepAlive } = this\n\n    if (socket.destroyed && (!statusCode || shouldKeepAlive)) {\n      return -1\n    }\n\n    if (upgrade) {\n      return\n    }\n\n    const request = client[kQueue][client[kRunningIdx]]\n    assert(request)\n\n    assert(statusCode >= 100)\n\n    this.statusCode = null\n    this.statusText = ''\n    this.bytesRead = 0\n    this.contentLength = ''\n    this.keepAlive = ''\n    this.connection = ''\n\n    assert(this.headers.length % 2 === 0)\n    this.headers = []\n    this.headersSize = 0\n\n    if (statusCode < 200) {\n      return\n    }\n\n    /* istanbul ignore next: should be handled by llhttp? */\n    if (request.method !== 'HEAD' && contentLength && bytesRead !== parseInt(contentLength, 10)) {\n      util.destroy(socket, new ResponseContentLengthMismatchError())\n      return -1\n    }\n\n    request.onComplete(headers)\n\n    client[kQueue][client[kRunningIdx]++] = null\n\n    if (socket[kWriting]) {\n      assert.strictEqual(client[kRunning], 0)\n      // Response completed before request.\n      util.destroy(socket, new InformationalError('reset'))\n      return constants.ERROR.PAUSED\n    } else if (!shouldKeepAlive) {\n      util.destroy(socket, new InformationalError('reset'))\n      return constants.ERROR.PAUSED\n    } else if (socket[kReset] && client[kRunning] === 0) {\n      // Destroy socket once all requests have completed.\n      // The request at the tail of the pipeline is the one\n      // that requested reset and no further requests should\n      // have been queued since then.\n      util.destroy(socket, new InformationalError('reset'))\n      return constants.ERROR.PAUSED\n    } else if (client[kPipelining] === 1) {\n      // We must wait a full event loop cycle to reuse this socket to make sure\n      // that non-spec compliant servers are not closing the connection even if they\n      // said they won't.\n      setImmediate(resume, client)\n    } else {\n      resume(client)\n    }\n  }\n}\n\nfunction onParserTimeout (parser) {\n  const { socket, timeoutType, client } = parser\n\n  /* istanbul ignore else */\n  if (timeoutType === TIMEOUT_HEADERS) {\n    if (!socket[kWriting] || socket.writableNeedDrain || client[kRunning] > 1) {\n      assert(!parser.paused, 'cannot be paused while waiting for headers')\n      util.destroy(socket, new HeadersTimeoutError())\n    }\n  } else if (timeoutType === TIMEOUT_BODY) {\n    if (!parser.paused) {\n      util.destroy(socket, new BodyTimeoutError())\n    }\n  } else if (timeoutType === TIMEOUT_IDLE) {\n    assert(client[kRunning] === 0 && client[kKeepAliveTimeoutValue])\n    util.destroy(socket, new InformationalError('socket idle timeout'))\n  }\n}\n\nfunction onSocketReadable () {\n  const { [kParser]: parser } = this\n  if (parser) {\n    parser.readMore()\n  }\n}\n\nfunction onSocketError (err) {\n  const { [kClient]: client, [kParser]: parser } = this\n\n  assert(err.code !== 'ERR_TLS_CERT_ALTNAME_INVALID')\n\n  if (client[kHTTPConnVersion] !== 'h2') {\n    // On Mac OS, we get an ECONNRESET even if there is a full body to be forwarded\n    // to the user.\n    if (err.code === 'ECONNRESET' && parser.statusCode && !parser.shouldKeepAlive) {\n      // We treat all incoming data so for as a valid response.\n      parser.onMessageComplete()\n      return\n    }\n  }\n\n  this[kError] = err\n\n  onError(this[kClient], err)\n}\n\nfunction onError (client, err) {\n  if (\n    client[kRunning] === 0 &&\n    err.code !== 'UND_ERR_INFO' &&\n    err.code !== 'UND_ERR_SOCKET'\n  ) {\n    // Error is not caused by running request and not a recoverable\n    // socket error.\n\n    assert(client[kPendingIdx] === client[kRunningIdx])\n\n    const requests = client[kQueue].splice(client[kRunningIdx])\n    for (let i = 0; i < requests.length; i++) {\n      const request = requests[i]\n      errorRequest(client, request, err)\n    }\n    assert(client[kSize] === 0)\n  }\n}\n\nfunction onSocketEnd () {\n  const { [kParser]: parser, [kClient]: client } = this\n\n  if (client[kHTTPConnVersion] !== 'h2') {\n    if (parser.statusCode && !parser.shouldKeepAlive) {\n      // We treat all incoming data so far as a valid response.\n      parser.onMessageComplete()\n      return\n    }\n  }\n\n  util.destroy(this, new SocketError('other side closed', util.getSocketInfo(this)))\n}\n\nfunction onSocketClose () {\n  const { [kClient]: client, [kParser]: parser } = this\n\n  if (client[kHTTPConnVersion] === 'h1' && parser) {\n    if (!this[kError] && parser.statusCode && !parser.shouldKeepAlive) {\n      // We treat all incoming data so far as a valid response.\n      parser.onMessageComplete()\n    }\n\n    this[kParser].destroy()\n    this[kParser] = null\n  }\n\n  const err = this[kError] || new SocketError('closed', util.getSocketInfo(this))\n\n  client[kSocket] = null\n\n  if (client.destroyed) {\n    assert(client[kPending] === 0)\n\n    // Fail entire queue.\n    const requests = client[kQueue].splice(client[kRunningIdx])\n    for (let i = 0; i < requests.length; i++) {\n      const request = requests[i]\n      errorRequest(client, request, err)\n    }\n  } else if (client[kRunning] > 0 && err.code !== 'UND_ERR_INFO') {\n    // Fail head of pipeline.\n    const request = client[kQueue][client[kRunningIdx]]\n    client[kQueue][client[kRunningIdx]++] = null\n\n    errorRequest(client, request, err)\n  }\n\n  client[kPendingIdx] = client[kRunningIdx]\n\n  assert(client[kRunning] === 0)\n\n  client.emit('disconnect', client[kUrl], [client], err)\n\n  resume(client)\n}\n\nasync function connect (client) {\n  assert(!client[kConnecting])\n  assert(!client[kSocket])\n\n  let { host, hostname, protocol, port } = client[kUrl]\n\n  // Resolve ipv6\n  if (hostname[0] === '[') {\n    const idx = hostname.indexOf(']')\n\n    assert(idx !== -1)\n    const ip = hostname.substring(1, idx)\n\n    assert(net.isIP(ip))\n    hostname = ip\n  }\n\n  client[kConnecting] = true\n\n  if (channels.beforeConnect.hasSubscribers) {\n    channels.beforeConnect.publish({\n      connectParams: {\n        host,\n        hostname,\n        protocol,\n        port,\n        servername: client[kServerName],\n        localAddress: client[kLocalAddress]\n      },\n      connector: client[kConnector]\n    })\n  }\n\n  try {\n    const socket = await new Promise((resolve, reject) => {\n      client[kConnector]({\n        host,\n        hostname,\n        protocol,\n        port,\n        servername: client[kServerName],\n        localAddress: client[kLocalAddress]\n      }, (err, socket) => {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(socket)\n        }\n      })\n    })\n\n    if (client.destroyed) {\n      util.destroy(socket.on('error', () => {}), new ClientDestroyedError())\n      return\n    }\n\n    client[kConnecting] = false\n\n    assert(socket)\n\n    const isH2 = socket.alpnProtocol === 'h2'\n    if (isH2) {\n      if (!h2ExperimentalWarned) {\n        h2ExperimentalWarned = true\n        process.emitWarning('H2 support is experimental, expect them to change at any time.', {\n          code: 'UNDICI-H2'\n        })\n      }\n\n      const session = http2.connect(client[kUrl], {\n        createConnection: () => socket,\n        peerMaxConcurrentStreams: client[kHTTP2SessionState].maxConcurrentStreams\n      })\n\n      client[kHTTPConnVersion] = 'h2'\n      session[kClient] = client\n      session[kSocket] = socket\n      session.on('error', onHttp2SessionError)\n      session.on('frameError', onHttp2FrameError)\n      session.on('end', onHttp2SessionEnd)\n      session.on('goaway', onHTTP2GoAway)\n      session.on('close', onSocketClose)\n      session.unref()\n\n      client[kHTTP2Session] = session\n      socket[kHTTP2Session] = session\n    } else {\n      if (!llhttpInstance) {\n        llhttpInstance = await llhttpPromise\n        llhttpPromise = null\n      }\n\n      socket[kNoRef] = false\n      socket[kWriting] = false\n      socket[kReset] = false\n      socket[kBlocking] = false\n      socket[kParser] = new Parser(client, socket, llhttpInstance)\n    }\n\n    socket[kCounter] = 0\n    socket[kMaxRequests] = client[kMaxRequests]\n    socket[kClient] = client\n    socket[kError] = null\n\n    socket\n      .on('error', onSocketError)\n      .on('readable', onSocketReadable)\n      .on('end', onSocketEnd)\n      .on('close', onSocketClose)\n\n    client[kSocket] = socket\n\n    if (channels.connected.hasSubscribers) {\n      channels.connected.publish({\n        connectParams: {\n          host,\n          hostname,\n          protocol,\n          port,\n          servername: client[kServerName],\n          localAddress: client[kLocalAddress]\n        },\n        connector: client[kConnector],\n        socket\n      })\n    }\n    client.emit('connect', client[kUrl], [client])\n  } catch (err) {\n    if (client.destroyed) {\n      return\n    }\n\n    client[kConnecting] = false\n\n    if (channels.connectError.hasSubscribers) {\n      channels.connectError.publish({\n        connectParams: {\n          host,\n          hostname,\n          protocol,\n          port,\n          servername: client[kServerName],\n          localAddress: client[kLocalAddress]\n        },\n        connector: client[kConnector],\n        error: err\n      })\n    }\n\n    if (err.code === 'ERR_TLS_CERT_ALTNAME_INVALID') {\n      assert(client[kRunning] === 0)\n      while (client[kPending] > 0 && client[kQueue][client[kPendingIdx]].servername === client[kServerName]) {\n        const request = client[kQueue][client[kPendingIdx]++]\n        errorRequest(client, request, err)\n      }\n    } else {\n      onError(client, err)\n    }\n\n    client.emit('connectionError', client[kUrl], [client], err)\n  }\n\n  resume(client)\n}\n\nfunction emitDrain (client) {\n  client[kNeedDrain] = 0\n  client.emit('drain', client[kUrl], [client])\n}\n\nfunction resume (client, sync) {\n  if (client[kResuming] === 2) {\n    return\n  }\n\n  client[kResuming] = 2\n\n  _resume(client, sync)\n  client[kResuming] = 0\n\n  if (client[kRunningIdx] > 256) {\n    client[kQueue].splice(0, client[kRunningIdx])\n    client[kPendingIdx] -= client[kRunningIdx]\n    client[kRunningIdx] = 0\n  }\n}\n\nfunction _resume (client, sync) {\n  while (true) {\n    if (client.destroyed) {\n      assert(client[kPending] === 0)\n      return\n    }\n\n    if (client[kClosedResolve] && !client[kSize]) {\n      client[kClosedResolve]()\n      client[kClosedResolve] = null\n      return\n    }\n\n    const socket = client[kSocket]\n\n    if (socket && !socket.destroyed && socket.alpnProtocol !== 'h2') {\n      if (client[kSize] === 0) {\n        if (!socket[kNoRef] && socket.unref) {\n          socket.unref()\n          socket[kNoRef] = true\n        }\n      } else if (socket[kNoRef] && socket.ref) {\n        socket.ref()\n        socket[kNoRef] = false\n      }\n\n      if (client[kSize] === 0) {\n        if (socket[kParser].timeoutType !== TIMEOUT_IDLE) {\n          socket[kParser].setTimeout(client[kKeepAliveTimeoutValue], TIMEOUT_IDLE)\n        }\n      } else if (client[kRunning] > 0 && socket[kParser].statusCode < 200) {\n        if (socket[kParser].timeoutType !== TIMEOUT_HEADERS) {\n          const request = client[kQueue][client[kRunningIdx]]\n          const headersTimeout = request.headersTimeout != null\n            ? request.headersTimeout\n            : client[kHeadersTimeout]\n          socket[kParser].setTimeout(headersTimeout, TIMEOUT_HEADERS)\n        }\n      }\n    }\n\n    if (client[kBusy]) {\n      client[kNeedDrain] = 2\n    } else if (client[kNeedDrain] === 2) {\n      if (sync) {\n        client[kNeedDrain] = 1\n        process.nextTick(emitDrain, client)\n      } else {\n        emitDrain(client)\n      }\n      continue\n    }\n\n    if (client[kPending] === 0) {\n      return\n    }\n\n    if (client[kRunning] >= (client[kPipelining] || 1)) {\n      return\n    }\n\n    const request = client[kQueue][client[kPendingIdx]]\n\n    if (client[kUrl].protocol === 'https:' && client[kServerName] !== request.servername) {\n      if (client[kRunning] > 0) {\n        return\n      }\n\n      client[kServerName] = request.servername\n\n      if (socket && socket.servername !== request.servername) {\n        util.destroy(socket, new InformationalError('servername changed'))\n        return\n      }\n    }\n\n    if (client[kConnecting]) {\n      return\n    }\n\n    if (!socket && !client[kHTTP2Session]) {\n      connect(client)\n      return\n    }\n\n    if (socket.destroyed || socket[kWriting] || socket[kReset] || socket[kBlocking]) {\n      return\n    }\n\n    if (client[kRunning] > 0 && !request.idempotent) {\n      // Non-idempotent request cannot be retried.\n      // Ensure that no other requests are inflight and\n      // could cause failure.\n      return\n    }\n\n    if (client[kRunning] > 0 && (request.upgrade || request.method === 'CONNECT')) {\n      // Don't dispatch an upgrade until all preceding requests have completed.\n      // A misbehaving server might upgrade the connection before all pipelined\n      // request has completed.\n      return\n    }\n\n    if (client[kRunning] > 0 && util.bodyLength(request.body) !== 0 &&\n      (util.isStream(request.body) || util.isAsyncIterable(request.body))) {\n      // Request with stream or iterator body can error while other requests\n      // are inflight and indirectly error those as well.\n      // Ensure this doesn't happen by waiting for inflight\n      // to complete before dispatching.\n\n      // Request with stream or iterator body cannot be retried.\n      // Ensure that no other requests are inflight and\n      // could cause failure.\n      return\n    }\n\n    if (!request.aborted && write(client, request)) {\n      client[kPendingIdx]++\n    } else {\n      client[kQueue].splice(client[kPendingIdx], 1)\n    }\n  }\n}\n\n// https://www.rfc-editor.org/rfc/rfc7230#section-3.3.2\nfunction shouldSendContentLength (method) {\n  return method !== 'GET' && method !== 'HEAD' && method !== 'OPTIONS' && method !== 'TRACE' && method !== 'CONNECT'\n}\n\nfunction write (client, request) {\n  if (client[kHTTPConnVersion] === 'h2') {\n    writeH2(client, client[kHTTP2Session], request)\n    return\n  }\n\n  const { body, method, path, host, upgrade, headers, blocking, reset } = request\n\n  // https://tools.ietf.org/html/rfc7231#section-4.3.1\n  // https://tools.ietf.org/html/rfc7231#section-4.3.2\n  // https://tools.ietf.org/html/rfc7231#section-4.3.5\n\n  // Sending a payload body on a request that does not\n  // expect it can cause undefined behavior on some\n  // servers and corrupt connection state. Do not\n  // re-use the connection for further requests.\n\n  const expectsPayload = (\n    method === 'PUT' ||\n    method === 'POST' ||\n    method === 'PATCH'\n  )\n\n  if (body && typeof body.read === 'function') {\n    // Try to read EOF in order to get length.\n    body.read(0)\n  }\n\n  const bodyLength = util.bodyLength(body)\n\n  let contentLength = bodyLength\n\n  if (contentLength === null) {\n    contentLength = request.contentLength\n  }\n\n  if (contentLength === 0 && !expectsPayload) {\n    // https://tools.ietf.org/html/rfc7230#section-3.3.2\n    // A user agent SHOULD NOT send a Content-Length header field when\n    // the request message does not contain a payload body and the method\n    // semantics do not anticipate such a body.\n\n    contentLength = null\n  }\n\n  // https://github.com/nodejs/undici/issues/2046\n  // A user agent may send a Content-Length header with 0 value, this should be allowed.\n  if (shouldSendContentLength(method) && contentLength > 0 && request.contentLength !== null && request.contentLength !== contentLength) {\n    if (client[kStrictContentLength]) {\n      errorRequest(client, request, new RequestContentLengthMismatchError())\n      return false\n    }\n\n    process.emitWarning(new RequestContentLengthMismatchError())\n  }\n\n  const socket = client[kSocket]\n\n  try {\n    request.onConnect((err) => {\n      if (request.aborted || request.completed) {\n        return\n      }\n\n      errorRequest(client, request, err || new RequestAbortedError())\n\n      util.destroy(socket, new InformationalError('aborted'))\n    })\n  } catch (err) {\n    errorRequest(client, request, err)\n  }\n\n  if (request.aborted) {\n    return false\n  }\n\n  if (method === 'HEAD') {\n    // https://github.com/mcollina/undici/issues/258\n    // Close after a HEAD request to interop with misbehaving servers\n    // that may send a body in the response.\n\n    socket[kReset] = true\n  }\n\n  if (upgrade || method === 'CONNECT') {\n    // On CONNECT or upgrade, block pipeline from dispatching further\n    // requests on this connection.\n\n    socket[kReset] = true\n  }\n\n  if (reset != null) {\n    socket[kReset] = reset\n  }\n\n  if (client[kMaxRequests] && socket[kCounter]++ >= client[kMaxRequests]) {\n    socket[kReset] = true\n  }\n\n  if (blocking) {\n    socket[kBlocking] = true\n  }\n\n  let header = `${method} ${path} HTTP/1.1\\r\\n`\n\n  if (typeof host === 'string') {\n    header += `host: ${host}\\r\\n`\n  } else {\n    header += client[kHostHeader]\n  }\n\n  if (upgrade) {\n    header += `connection: upgrade\\r\\nupgrade: ${upgrade}\\r\\n`\n  } else if (client[kPipelining] && !socket[kReset]) {\n    header += 'connection: keep-alive\\r\\n'\n  } else {\n    header += 'connection: close\\r\\n'\n  }\n\n  if (headers) {\n    header += headers\n  }\n\n  if (channels.sendHeaders.hasSubscribers) {\n    channels.sendHeaders.publish({ request, headers: header, socket })\n  }\n\n  /* istanbul ignore else: assertion */\n  if (!body || bodyLength === 0) {\n    if (contentLength === 0) {\n      socket.write(`${header}content-length: 0\\r\\n\\r\\n`, 'latin1')\n    } else {\n      assert(contentLength === null, 'no body must not have content length')\n      socket.write(`${header}\\r\\n`, 'latin1')\n    }\n    request.onRequestSent()\n  } else if (util.isBuffer(body)) {\n    assert(contentLength === body.byteLength, 'buffer body must have content length')\n\n    socket.cork()\n    socket.write(`${header}content-length: ${contentLength}\\r\\n\\r\\n`, 'latin1')\n    socket.write(body)\n    socket.uncork()\n    request.onBodySent(body)\n    request.onRequestSent()\n    if (!expectsPayload) {\n      socket[kReset] = true\n    }\n  } else if (util.isBlobLike(body)) {\n    if (typeof body.stream === 'function') {\n      writeIterable({ body: body.stream(), client, request, socket, contentLength, header, expectsPayload })\n    } else {\n      writeBlob({ body, client, request, socket, contentLength, header, expectsPayload })\n    }\n  } else if (util.isStream(body)) {\n    writeStream({ body, client, request, socket, contentLength, header, expectsPayload })\n  } else if (util.isIterable(body)) {\n    writeIterable({ body, client, request, socket, contentLength, header, expectsPayload })\n  } else {\n    assert(false)\n  }\n\n  return true\n}\n\nfunction writeH2 (client, session, request) {\n  const { body, method, path, host, upgrade, expectContinue, signal, headers: reqHeaders } = request\n\n  let headers\n  if (typeof reqHeaders === 'string') headers = Request[kHTTP2CopyHeaders](reqHeaders.trim())\n  else headers = reqHeaders\n\n  if (upgrade) {\n    errorRequest(client, request, new Error('Upgrade not supported for H2'))\n    return false\n  }\n\n  try {\n    // TODO(HTTP/2): Should we call onConnect immediately or on stream ready event?\n    request.onConnect((err) => {\n      if (request.aborted || request.completed) {\n        return\n      }\n\n      errorRequest(client, request, err || new RequestAbortedError())\n    })\n  } catch (err) {\n    errorRequest(client, request, err)\n  }\n\n  if (request.aborted) {\n    return false\n  }\n\n  /** @type {import('node:http2').ClientHttp2Stream} */\n  let stream\n  const h2State = client[kHTTP2SessionState]\n\n  headers[HTTP2_HEADER_AUTHORITY] = host || client[kHost]\n  headers[HTTP2_HEADER_METHOD] = method\n\n  if (method === 'CONNECT') {\n    session.ref()\n    // we are already connected, streams are pending, first request\n    // will create a new stream. We trigger a request to create the stream and wait until\n    // `ready` event is triggered\n    // We disabled endStream to allow the user to write to the stream\n    stream = session.request(headers, { endStream: false, signal })\n\n    if (stream.id && !stream.pending) {\n      request.onUpgrade(null, null, stream)\n      ++h2State.openStreams\n    } else {\n      stream.once('ready', () => {\n        request.onUpgrade(null, null, stream)\n        ++h2State.openStreams\n      })\n    }\n\n    stream.once('close', () => {\n      h2State.openStreams -= 1\n      // TODO(HTTP/2): unref only if current streams count is 0\n      if (h2State.openStreams === 0) session.unref()\n    })\n\n    return true\n  }\n\n  // https://tools.ietf.org/html/rfc7540#section-8.3\n  // :path and :scheme headers must be omited when sending CONNECT\n\n  headers[HTTP2_HEADER_PATH] = path\n  headers[HTTP2_HEADER_SCHEME] = 'https'\n\n  // https://tools.ietf.org/html/rfc7231#section-4.3.1\n  // https://tools.ietf.org/html/rfc7231#section-4.3.2\n  // https://tools.ietf.org/html/rfc7231#section-4.3.5\n\n  // Sending a payload body on a request that does not\n  // expect it can cause undefined behavior on some\n  // servers and corrupt connection state. Do not\n  // re-use the connection for further requests.\n\n  const expectsPayload = (\n    method === 'PUT' ||\n    method === 'POST' ||\n    method === 'PATCH'\n  )\n\n  if (body && typeof body.read === 'function') {\n    // Try to read EOF in order to get length.\n    body.read(0)\n  }\n\n  let contentLength = util.bodyLength(body)\n\n  if (contentLength == null) {\n    contentLength = request.contentLength\n  }\n\n  if (contentLength === 0 || !expectsPayload) {\n    // https://tools.ietf.org/html/rfc7230#section-3.3.2\n    // A user agent SHOULD NOT send a Content-Length header field when\n    // the request message does not contain a payload body and the method\n    // semantics do not anticipate such a body.\n\n    contentLength = null\n  }\n\n  // https://github.com/nodejs/undici/issues/2046\n  // A user agent may send a Content-Length header with 0 value, this should be allowed.\n  if (shouldSendContentLength(method) && contentLength > 0 && request.contentLength != null && request.contentLength !== contentLength) {\n    if (client[kStrictContentLength]) {\n      errorRequest(client, request, new RequestContentLengthMismatchError())\n      return false\n    }\n\n    process.emitWarning(new RequestContentLengthMismatchError())\n  }\n\n  if (contentLength != null) {\n    assert(body, 'no body must not have content length')\n    headers[HTTP2_HEADER_CONTENT_LENGTH] = `${contentLength}`\n  }\n\n  session.ref()\n\n  const shouldEndStream = method === 'GET' || method === 'HEAD'\n  if (expectContinue) {\n    headers[HTTP2_HEADER_EXPECT] = '100-continue'\n    stream = session.request(headers, { endStream: shouldEndStream, signal })\n\n    stream.once('continue', writeBodyH2)\n  } else {\n    stream = session.request(headers, {\n      endStream: shouldEndStream,\n      signal\n    })\n    writeBodyH2()\n  }\n\n  // Increment counter as we have new several streams open\n  ++h2State.openStreams\n\n  stream.once('response', headers => {\n    const { [HTTP2_HEADER_STATUS]: statusCode, ...realHeaders } = headers\n\n    if (request.onHeaders(Number(statusCode), realHeaders, stream.resume.bind(stream), '') === false) {\n      stream.pause()\n    }\n  })\n\n  stream.once('end', () => {\n    request.onComplete([])\n  })\n\n  stream.on('data', (chunk) => {\n    if (request.onData(chunk) === false) {\n      stream.pause()\n    }\n  })\n\n  stream.once('close', () => {\n    h2State.openStreams -= 1\n    // TODO(HTTP/2): unref only if current streams count is 0\n    if (h2State.openStreams === 0) {\n      session.unref()\n    }\n  })\n\n  stream.once('error', function (err) {\n    if (client[kHTTP2Session] && !client[kHTTP2Session].destroyed && !this.closed && !this.destroyed) {\n      h2State.streams -= 1\n      util.destroy(stream, err)\n    }\n  })\n\n  stream.once('frameError', (type, code) => {\n    const err = new InformationalError(`HTTP/2: \"frameError\" received - type ${type}, code ${code}`)\n    errorRequest(client, request, err)\n\n    if (client[kHTTP2Session] && !client[kHTTP2Session].destroyed && !this.closed && !this.destroyed) {\n      h2State.streams -= 1\n      util.destroy(stream, err)\n    }\n  })\n\n  // stream.on('aborted', () => {\n  //   // TODO(HTTP/2): Support aborted\n  // })\n\n  // stream.on('timeout', () => {\n  //   // TODO(HTTP/2): Support timeout\n  // })\n\n  // stream.on('push', headers => {\n  //   // TODO(HTTP/2): Suppor push\n  // })\n\n  // stream.on('trailers', headers => {\n  //   // TODO(HTTP/2): Support trailers\n  // })\n\n  return true\n\n  function writeBodyH2 () {\n    /* istanbul ignore else: assertion */\n    if (!body) {\n      request.onRequestSent()\n    } else if (util.isBuffer(body)) {\n      assert(contentLength === body.byteLength, 'buffer body must have content length')\n      stream.cork()\n      stream.write(body)\n      stream.uncork()\n      stream.end()\n      request.onBodySent(body)\n      request.onRequestSent()\n    } else if (util.isBlobLike(body)) {\n      if (typeof body.stream === 'function') {\n        writeIterable({\n          client,\n          request,\n          contentLength,\n          h2stream: stream,\n          expectsPayload,\n          body: body.stream(),\n          socket: client[kSocket],\n          header: ''\n        })\n      } else {\n        writeBlob({\n          body,\n          client,\n          request,\n          contentLength,\n          expectsPayload,\n          h2stream: stream,\n          header: '',\n          socket: client[kSocket]\n        })\n      }\n    } else if (util.isStream(body)) {\n      writeStream({\n        body,\n        client,\n        request,\n        contentLength,\n        expectsPayload,\n        socket: client[kSocket],\n        h2stream: stream,\n        header: ''\n      })\n    } else if (util.isIterable(body)) {\n      writeIterable({\n        body,\n        client,\n        request,\n        contentLength,\n        expectsPayload,\n        header: '',\n        h2stream: stream,\n        socket: client[kSocket]\n      })\n    } else {\n      assert(false)\n    }\n  }\n}\n\nfunction writeStream ({ h2stream, body, client, request, socket, contentLength, header, expectsPayload }) {\n  assert(contentLength !== 0 || client[kRunning] === 0, 'stream body cannot be pipelined')\n\n  if (client[kHTTPConnVersion] === 'h2') {\n    // For HTTP/2, is enough to pipe the stream\n    const pipe = pipeline(\n      body,\n      h2stream,\n      (err) => {\n        if (err) {\n          util.destroy(body, err)\n          util.destroy(h2stream, err)\n        } else {\n          request.onRequestSent()\n        }\n      }\n    )\n\n    pipe.on('data', onPipeData)\n    pipe.once('end', () => {\n      pipe.removeListener('data', onPipeData)\n      util.destroy(pipe)\n    })\n\n    function onPipeData (chunk) {\n      request.onBodySent(chunk)\n    }\n\n    return\n  }\n\n  let finished = false\n\n  const writer = new AsyncWriter({ socket, request, contentLength, client, expectsPayload, header })\n\n  const onData = function (chunk) {\n    if (finished) {\n      return\n    }\n\n    try {\n      if (!writer.write(chunk) && this.pause) {\n        this.pause()\n      }\n    } catch (err) {\n      util.destroy(this, err)\n    }\n  }\n  const onDrain = function () {\n    if (finished) {\n      return\n    }\n\n    if (body.resume) {\n      body.resume()\n    }\n  }\n  const onAbort = function () {\n    if (finished) {\n      return\n    }\n    const err = new RequestAbortedError()\n    queueMicrotask(() => onFinished(err))\n  }\n  const onFinished = function (err) {\n    if (finished) {\n      return\n    }\n\n    finished = true\n\n    assert(socket.destroyed || (socket[kWriting] && client[kRunning] <= 1))\n\n    socket\n      .off('drain', onDrain)\n      .off('error', onFinished)\n\n    body\n      .removeListener('data', onData)\n      .removeListener('end', onFinished)\n      .removeListener('error', onFinished)\n      .removeListener('close', onAbort)\n\n    if (!err) {\n      try {\n        writer.end()\n      } catch (er) {\n        err = er\n      }\n    }\n\n    writer.destroy(err)\n\n    if (err && (err.code !== 'UND_ERR_INFO' || err.message !== 'reset')) {\n      util.destroy(body, err)\n    } else {\n      util.destroy(body)\n    }\n  }\n\n  body\n    .on('data', onData)\n    .on('end', onFinished)\n    .on('error', onFinished)\n    .on('close', onAbort)\n\n  if (body.resume) {\n    body.resume()\n  }\n\n  socket\n    .on('drain', onDrain)\n    .on('error', onFinished)\n}\n\nasync function writeBlob ({ h2stream, body, client, request, socket, contentLength, header, expectsPayload }) {\n  assert(contentLength === body.size, 'blob body must have content length')\n\n  const isH2 = client[kHTTPConnVersion] === 'h2'\n  try {\n    if (contentLength != null && contentLength !== body.size) {\n      throw new RequestContentLengthMismatchError()\n    }\n\n    const buffer = Buffer.from(await body.arrayBuffer())\n\n    if (isH2) {\n      h2stream.cork()\n      h2stream.write(buffer)\n      h2stream.uncork()\n    } else {\n      socket.cork()\n      socket.write(`${header}content-length: ${contentLength}\\r\\n\\r\\n`, 'latin1')\n      socket.write(buffer)\n      socket.uncork()\n    }\n\n    request.onBodySent(buffer)\n    request.onRequestSent()\n\n    if (!expectsPayload) {\n      socket[kReset] = true\n    }\n\n    resume(client)\n  } catch (err) {\n    util.destroy(isH2 ? h2stream : socket, err)\n  }\n}\n\nasync function writeIterable ({ h2stream, body, client, request, socket, contentLength, header, expectsPayload }) {\n  assert(contentLength !== 0 || client[kRunning] === 0, 'iterator body cannot be pipelined')\n\n  let callback = null\n  function onDrain () {\n    if (callback) {\n      const cb = callback\n      callback = null\n      cb()\n    }\n  }\n\n  const waitForDrain = () => new Promise((resolve, reject) => {\n    assert(callback === null)\n\n    if (socket[kError]) {\n      reject(socket[kError])\n    } else {\n      callback = resolve\n    }\n  })\n\n  if (client[kHTTPConnVersion] === 'h2') {\n    h2stream\n      .on('close', onDrain)\n      .on('drain', onDrain)\n\n    try {\n      // It's up to the user to somehow abort the async iterable.\n      for await (const chunk of body) {\n        if (socket[kError]) {\n          throw socket[kError]\n        }\n\n        const res = h2stream.write(chunk)\n        request.onBodySent(chunk)\n        if (!res) {\n          await waitForDrain()\n        }\n      }\n    } catch (err) {\n      h2stream.destroy(err)\n    } finally {\n      request.onRequestSent()\n      h2stream.end()\n      h2stream\n        .off('close', onDrain)\n        .off('drain', onDrain)\n    }\n\n    return\n  }\n\n  socket\n    .on('close', onDrain)\n    .on('drain', onDrain)\n\n  const writer = new AsyncWriter({ socket, request, contentLength, client, expectsPayload, header })\n  try {\n    // It's up to the user to somehow abort the async iterable.\n    for await (const chunk of body) {\n      if (socket[kError]) {\n        throw socket[kError]\n      }\n\n      if (!writer.write(chunk)) {\n        await waitForDrain()\n      }\n    }\n\n    writer.end()\n  } catch (err) {\n    writer.destroy(err)\n  } finally {\n    socket\n      .off('close', onDrain)\n      .off('drain', onDrain)\n  }\n}\n\nclass AsyncWriter {\n  constructor ({ socket, request, contentLength, client, expectsPayload, header }) {\n    this.socket = socket\n    this.request = request\n    this.contentLength = contentLength\n    this.client = client\n    this.bytesWritten = 0\n    this.expectsPayload = expectsPayload\n    this.header = header\n\n    socket[kWriting] = true\n  }\n\n  write (chunk) {\n    const { socket, request, contentLength, client, bytesWritten, expectsPayload, header } = this\n\n    if (socket[kError]) {\n      throw socket[kError]\n    }\n\n    if (socket.destroyed) {\n      return false\n    }\n\n    const len = Buffer.byteLength(chunk)\n    if (!len) {\n      return true\n    }\n\n    // We should defer writing chunks.\n    if (contentLength !== null && bytesWritten + len > contentLength) {\n      if (client[kStrictContentLength]) {\n        throw new RequestContentLengthMismatchError()\n      }\n\n      process.emitWarning(new RequestContentLengthMismatchError())\n    }\n\n    socket.cork()\n\n    if (bytesWritten === 0) {\n      if (!expectsPayload) {\n        socket[kReset] = true\n      }\n\n      if (contentLength === null) {\n        socket.write(`${header}transfer-encoding: chunked\\r\\n`, 'latin1')\n      } else {\n        socket.write(`${header}content-length: ${contentLength}\\r\\n\\r\\n`, 'latin1')\n      }\n    }\n\n    if (contentLength === null) {\n      socket.write(`\\r\\n${len.toString(16)}\\r\\n`, 'latin1')\n    }\n\n    this.bytesWritten += len\n\n    const ret = socket.write(chunk)\n\n    socket.uncork()\n\n    request.onBodySent(chunk)\n\n    if (!ret) {\n      if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {\n        // istanbul ignore else: only for jest\n        if (socket[kParser].timeout.refresh) {\n          socket[kParser].timeout.refresh()\n        }\n      }\n    }\n\n    return ret\n  }\n\n  end () {\n    const { socket, contentLength, client, bytesWritten, expectsPayload, header, request } = this\n    request.onRequestSent()\n\n    socket[kWriting] = false\n\n    if (socket[kError]) {\n      throw socket[kError]\n    }\n\n    if (socket.destroyed) {\n      return\n    }\n\n    if (bytesWritten === 0) {\n      if (expectsPayload) {\n        // https://tools.ietf.org/html/rfc7230#section-3.3.2\n        // A user agent SHOULD send a Content-Length in a request message when\n        // no Transfer-Encoding is sent and the request method defines a meaning\n        // for an enclosed payload body.\n\n        socket.write(`${header}content-length: 0\\r\\n\\r\\n`, 'latin1')\n      } else {\n        socket.write(`${header}\\r\\n`, 'latin1')\n      }\n    } else if (contentLength === null) {\n      socket.write('\\r\\n0\\r\\n\\r\\n', 'latin1')\n    }\n\n    if (contentLength !== null && bytesWritten !== contentLength) {\n      if (client[kStrictContentLength]) {\n        throw new RequestContentLengthMismatchError()\n      } else {\n        process.emitWarning(new RequestContentLengthMismatchError())\n      }\n    }\n\n    if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {\n      // istanbul ignore else: only for jest\n      if (socket[kParser].timeout.refresh) {\n        socket[kParser].timeout.refresh()\n      }\n    }\n\n    resume(client)\n  }\n\n  destroy (err) {\n    const { socket, client } = this\n\n    socket[kWriting] = false\n\n    if (err) {\n      assert(client[kRunning] <= 1, 'pipeline should only contain this request')\n      util.destroy(socket, err)\n    }\n  }\n}\n\nfunction errorRequest (client, request, err) {\n  try {\n    request.onError(err)\n    assert(request.aborted)\n  } catch (err) {\n    client.emit('error', err)\n  }\n}\n\nmodule.exports = Client\n","'use strict'\n\n/* istanbul ignore file: only for Node 12 */\n\nconst { kConnected, kSize } = require('../core/symbols')\n\nclass CompatWeakRef {\n  constructor (value) {\n    this.value = value\n  }\n\n  deref () {\n    return this.value[kConnected] === 0 && this.value[kSize] === 0\n      ? undefined\n      : this.value\n  }\n}\n\nclass CompatFinalizer {\n  constructor (finalizer) {\n    this.finalizer = finalizer\n  }\n\n  register (dispatcher, key) {\n    if (dispatcher.on) {\n      dispatcher.on('disconnect', () => {\n        if (dispatcher[kConnected] === 0 && dispatcher[kSize] === 0) {\n          this.finalizer(key)\n        }\n      })\n    }\n  }\n}\n\nmodule.exports = function () {\n  // FIXME: remove workaround when the Node bug is fixed\n  // https://github.com/nodejs/node/issues/49344#issuecomment-1741776308\n  if (process.env.NODE_V8_COVERAGE) {\n    return {\n      WeakRef: CompatWeakRef,\n      FinalizationRegistry: CompatFinalizer\n    }\n  }\n  return {\n    WeakRef: global.WeakRef || CompatWeakRef,\n    FinalizationRegistry: global.FinalizationRegistry || CompatFinalizer\n  }\n}\n","'use strict'\n\n// https://wicg.github.io/cookie-store/#cookie-maximum-attribute-value-size\nconst maxAttributeValueSize = 1024\n\n// https://wicg.github.io/cookie-store/#cookie-maximum-name-value-pair-size\nconst maxNameValuePairSize = 4096\n\nmodule.exports = {\n  maxAttributeValueSize,\n  maxNameValuePairSize\n}\n","'use strict'\n\nconst { parseSetCookie } = require('./parse')\nconst { stringify } = require('./util')\nconst { webidl } = require('../fetch/webidl')\nconst { Headers } = require('../fetch/headers')\n\n/**\n * @typedef {Object} Cookie\n * @property {string} name\n * @property {string} value\n * @property {Date|number|undefined} expires\n * @property {number|undefined} maxAge\n * @property {string|undefined} domain\n * @property {string|undefined} path\n * @property {boolean|undefined} secure\n * @property {boolean|undefined} httpOnly\n * @property {'Strict'|'Lax'|'None'} sameSite\n * @property {string[]} unparsed\n */\n\n/**\n * @param {Headers} headers\n * @returns {Record<string, string>}\n */\nfunction getCookies (headers) {\n  webidl.argumentLengthCheck(arguments, 1, { header: 'getCookies' })\n\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  const cookie = headers.get('cookie')\n  const out = {}\n\n  if (!cookie) {\n    return out\n  }\n\n  for (const piece of cookie.split(';')) {\n    const [name, ...value] = piece.split('=')\n\n    out[name.trim()] = value.join('=')\n  }\n\n  return out\n}\n\n/**\n * @param {Headers} headers\n * @param {string} name\n * @param {{ path?: string, domain?: string }|undefined} attributes\n * @returns {void}\n */\nfunction deleteCookie (headers, name, attributes) {\n  webidl.argumentLengthCheck(arguments, 2, { header: 'deleteCookie' })\n\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  name = webidl.converters.DOMString(name)\n  attributes = webidl.converters.DeleteCookieAttributes(attributes)\n\n  // Matches behavior of\n  // https://github.com/denoland/deno_std/blob/63827b16330b82489a04614027c33b7904e08be5/http/cookie.ts#L278\n  setCookie(headers, {\n    name,\n    value: '',\n    expires: new Date(0),\n    ...attributes\n  })\n}\n\n/**\n * @param {Headers} headers\n * @returns {Cookie[]}\n */\nfunction getSetCookies (headers) {\n  webidl.argumentLengthCheck(arguments, 1, { header: 'getSetCookies' })\n\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  const cookies = headers.getSetCookie()\n\n  if (!cookies) {\n    return []\n  }\n\n  return cookies.map((pair) => parseSetCookie(pair))\n}\n\n/**\n * @param {Headers} headers\n * @param {Cookie} cookie\n * @returns {void}\n */\nfunction setCookie (headers, cookie) {\n  webidl.argumentLengthCheck(arguments, 2, { header: 'setCookie' })\n\n  webidl.brandCheck(headers, Headers, { strict: false })\n\n  cookie = webidl.converters.Cookie(cookie)\n\n  const str = stringify(cookie)\n\n  if (str) {\n    headers.append('Set-Cookie', stringify(cookie))\n  }\n}\n\nwebidl.converters.DeleteCookieAttributes = webidl.dictionaryConverter([\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'path',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'domain',\n    defaultValue: null\n  }\n])\n\nwebidl.converters.Cookie = webidl.dictionaryConverter([\n  {\n    converter: webidl.converters.DOMString,\n    key: 'name'\n  },\n  {\n    converter: webidl.converters.DOMString,\n    key: 'value'\n  },\n  {\n    converter: webidl.nullableConverter((value) => {\n      if (typeof value === 'number') {\n        return webidl.converters['unsigned long long'](value)\n      }\n\n      return new Date(value)\n    }),\n    key: 'expires',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters['long long']),\n    key: 'maxAge',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'domain',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.DOMString),\n    key: 'path',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.boolean),\n    key: 'secure',\n    defaultValue: null\n  },\n  {\n    converter: webidl.nullableConverter(webidl.converters.boolean),\n    key: 'httpOnly',\n    defaultValue: null\n  },\n  {\n    converter: webidl.converters.USVString,\n    key: 'sameSite',\n    allowedValues: ['Strict', 'Lax', 'None']\n  },\n  {\n    converter: webidl.sequenceConverter(webidl.converters.DOMString),\n    key: 'unparsed',\n    defaultValue: []\n  }\n])\n\nmodule.exports = {\n  getCookies,\n  deleteCookie,\n  getSetCookies,\n  setCookie\n}\n","'use strict'\n\nconst { maxNameValuePairSize, maxAttributeValueSize } = require('./constants')\nconst { isCTLExcludingHtab } = require('./util')\nconst { collectASequenceOfCodePointsFast } = require('../fetch/dataURL')\nconst assert = require('assert')\n\n/**\n * @description Parses the field-value attributes of a set-cookie header string.\n * @see https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4\n * @param {string} header\n * @returns if the header is invalid, null will be returned\n */\nfunction parseSetCookie (header) {\n  // 1. If the set-cookie-string contains a %x00-08 / %x0A-1F / %x7F\n  //    character (CTL characters excluding HTAB): Abort these steps and\n  //    ignore the set-cookie-string entirely.\n  if (isCTLExcludingHtab(header)) {\n    return null\n  }\n\n  let nameValuePair = ''\n  let unparsedAttributes = ''\n  let name = ''\n  let value = ''\n\n  // 2. If the set-cookie-string contains a %x3B (\";\") character:\n  if (header.includes(';')) {\n    // 1. The name-value-pair string consists of the characters up to,\n    //    but not including, the first %x3B (\";\"), and the unparsed-\n    //    attributes consist of the remainder of the set-cookie-string\n    //    (including the %x3B (\";\") in question).\n    const position = { position: 0 }\n\n    nameValuePair = collectASequenceOfCodePointsFast(';', header, position)\n    unparsedAttributes = header.slice(position.position)\n  } else {\n    // Otherwise:\n\n    // 1. The name-value-pair string consists of all the characters\n    //    contained in the set-cookie-string, and the unparsed-\n    //    attributes is the empty string.\n    nameValuePair = header\n  }\n\n  // 3. If the name-value-pair string lacks a %x3D (\"=\") character, then\n  //    the name string is empty, and the value string is the value of\n  //    name-value-pair.\n  if (!nameValuePair.includes('=')) {\n    value = nameValuePair\n  } else {\n    //    Otherwise, the name string consists of the characters up to, but\n    //    not including, the first %x3D (\"=\") character, and the (possibly\n    //    empty) value string consists of the characters after the first\n    //    %x3D (\"=\") character.\n    const position = { position: 0 }\n    name = collectASequenceOfCodePointsFast(\n      '=',\n      nameValuePair,\n      position\n    )\n    value = nameValuePair.slice(position.position + 1)\n  }\n\n  // 4. Remove any leading or trailing WSP characters from the name\n  //    string and the value string.\n  name = name.trim()\n  value = value.trim()\n\n  // 5. If the sum of the lengths of the name string and the value string\n  //    is more than 4096 octets, abort these steps and ignore the set-\n  //    cookie-string entirely.\n  if (name.length + value.length > maxNameValuePairSize) {\n    return null\n  }\n\n  // 6. The cookie-name is the name string, and the cookie-value is the\n  //    value string.\n  return {\n    name, value, ...parseUnparsedAttributes(unparsedAttributes)\n  }\n}\n\n/**\n * Parses the remaining attributes of a set-cookie header\n * @see https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4\n * @param {string} unparsedAttributes\n * @param {[Object.<string, unknown>]={}} cookieAttributeList\n */\nfunction parseUnparsedAttributes (unparsedAttributes, cookieAttributeList = {}) {\n  // 1. If the unparsed-attributes string is empty, skip the rest of\n  //    these steps.\n  if (unparsedAttributes.length === 0) {\n    return cookieAttributeList\n  }\n\n  // 2. Discard the first character of the unparsed-attributes (which\n  //    will be a %x3B (\";\") character).\n  assert(unparsedAttributes[0] === ';')\n  unparsedAttributes = unparsedAttributes.slice(1)\n\n  let cookieAv = ''\n\n  // 3. If the remaining unparsed-attributes contains a %x3B (\";\")\n  //    character:\n  if (unparsedAttributes.includes(';')) {\n    // 1. Consume the characters of the unparsed-attributes up to, but\n    //    not including, the first %x3B (\";\") character.\n    cookieAv = collectASequenceOfCodePointsFast(\n      ';',\n      unparsedAttributes,\n      { position: 0 }\n    )\n    unparsedAttributes = unparsedAttributes.slice(cookieAv.length)\n  } else {\n    // Otherwise:\n\n    // 1. Consume the remainder of the unparsed-attributes.\n    cookieAv = unparsedAttributes\n    unparsedAttributes = ''\n  }\n\n  // Let the cookie-av string be the characters consumed in this step.\n\n  let attributeName = ''\n  let attributeValue = ''\n\n  // 4. If the cookie-av string contains a %x3D (\"=\") character:\n  if (cookieAv.includes('=')) {\n    // 1. The (possibly empty) attribute-name string consists of the\n    //    characters up to, but not including, the first %x3D (\"=\")\n    //    character, and the (possibly empty) attribute-value string\n    //    consists of the characters after the first %x3D (\"=\")\n    //    character.\n    const position = { position: 0 }\n\n    attributeName = collectASequenceOfCodePointsFast(\n      '=',\n      cookieAv,\n      position\n    )\n    attributeValue = cookieAv.slice(position.position + 1)\n  } else {\n    // Otherwise:\n\n    // 1. The attribute-name string consists of the entire cookie-av\n    //    string, and the attribute-value string is empty.\n    attributeName = cookieAv\n  }\n\n  // 5. Remove any leading or trailing WSP characters from the attribute-\n  //    name string and the attribute-value string.\n  attributeName = attributeName.trim()\n  attributeValue = attributeValue.trim()\n\n  // 6. If the attribute-value is longer than 1024 octets, ignore the\n  //    cookie-av string and return to Step 1 of this algorithm.\n  if (attributeValue.length > maxAttributeValueSize) {\n    return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)\n  }\n\n  // 7. Process the attribute-name and attribute-value according to the\n  //    requirements in the following subsections.  (Notice that\n  //    attributes with unrecognized attribute-names are ignored.)\n  const attributeNameLowercase = attributeName.toLowerCase()\n\n  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.1\n  // If the attribute-name case-insensitively matches the string\n  // \"Expires\", the user agent MUST process the cookie-av as follows.\n  if (attributeNameLowercase === 'expires') {\n    // 1. Let the expiry-time be the result of parsing the attribute-value\n    //    as cookie-date (see Section 5.1.1).\n    const expiryTime = new Date(attributeValue)\n\n    // 2. If the attribute-value failed to parse as a cookie date, ignore\n    //    the cookie-av.\n\n    cookieAttributeList.expires = expiryTime\n  } else if (attributeNameLowercase === 'max-age') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.2\n    // If the attribute-name case-insensitively matches the string \"Max-\n    // Age\", the user agent MUST process the cookie-av as follows.\n\n    // 1. If the first character of the attribute-value is not a DIGIT or a\n    //    \"-\" character, ignore the cookie-av.\n    const charCode = attributeValue.charCodeAt(0)\n\n    if ((charCode < 48 || charCode > 57) && attributeValue[0] !== '-') {\n      return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)\n    }\n\n    // 2. If the remainder of attribute-value contains a non-DIGIT\n    //    character, ignore the cookie-av.\n    if (!/^\\d+$/.test(attributeValue)) {\n      return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)\n    }\n\n    // 3. Let delta-seconds be the attribute-value converted to an integer.\n    const deltaSeconds = Number(attributeValue)\n\n    // 4. Let cookie-age-limit be the maximum age of the cookie (which\n    //    SHOULD be 400 days or less, see Section 4.1.2.2).\n\n    // 5. Set delta-seconds to the smaller of its present value and cookie-\n    //    age-limit.\n    // deltaSeconds = Math.min(deltaSeconds * 1000, maxExpiresMs)\n\n    // 6. If delta-seconds is less than or equal to zero (0), let expiry-\n    //    time be the earliest representable date and time.  Otherwise, let\n    //    the expiry-time be the current date and time plus delta-seconds\n    //    seconds.\n    // const expiryTime = deltaSeconds <= 0 ? Date.now() : Date.now() + deltaSeconds\n\n    // 7. Append an attribute to the cookie-attribute-list with an\n    //    attribute-name of Max-Age and an attribute-value of expiry-time.\n    cookieAttributeList.maxAge = deltaSeconds\n  } else if (attributeNameLowercase === 'domain') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.3\n    // If the attribute-name case-insensitively matches the string \"Domain\",\n    // the user agent MUST process the cookie-av as follows.\n\n    // 1. Let cookie-domain be the attribute-value.\n    let cookieDomain = attributeValue\n\n    // 2. If cookie-domain starts with %x2E (\".\"), let cookie-domain be\n    //    cookie-domain without its leading %x2E (\".\").\n    if (cookieDomain[0] === '.') {\n      cookieDomain = cookieDomain.slice(1)\n    }\n\n    // 3. Convert the cookie-domain to lower case.\n    cookieDomain = cookieDomain.toLowerCase()\n\n    // 4. Append an attribute to the cookie-attribute-list with an\n    //    attribute-name of Domain and an attribute-value of cookie-domain.\n    cookieAttributeList.domain = cookieDomain\n  } else if (attributeNameLowercase === 'path') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.4\n    // If the attribute-name case-insensitively matches the string \"Path\",\n    // the user agent MUST process the cookie-av as follows.\n\n    // 1. If the attribute-value is empty or if the first character of the\n    //    attribute-value is not %x2F (\"/\"):\n    let cookiePath = ''\n    if (attributeValue.length === 0 || attributeValue[0] !== '/') {\n      // 1. Let cookie-path be the default-path.\n      cookiePath = '/'\n    } else {\n      // Otherwise:\n\n      // 1. Let cookie-path be the attribute-value.\n      cookiePath = attributeValue\n    }\n\n    // 2. Append an attribute to the cookie-attribute-list with an\n    //    attribute-name of Path and an attribute-value of cookie-path.\n    cookieAttributeList.path = cookiePath\n  } else if (attributeNameLowercase === 'secure') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.5\n    // If the attribute-name case-insensitively matches the string \"Secure\",\n    // the user agent MUST append an attribute to the cookie-attribute-list\n    // with an attribute-name of Secure and an empty attribute-value.\n\n    cookieAttributeList.secure = true\n  } else if (attributeNameLowercase === 'httponly') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.6\n    // If the attribute-name case-insensitively matches the string\n    // \"HttpOnly\", the user agent MUST append an attribute to the cookie-\n    // attribute-list with an attribute-name of HttpOnly and an empty\n    // attribute-value.\n\n    cookieAttributeList.httpOnly = true\n  } else if (attributeNameLowercase === 'samesite') {\n    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.7\n    // If the attribute-name case-insensitively matches the string\n    // \"SameSite\", the user agent MUST process the cookie-av as follows:\n\n    // 1. Let enforcement be \"Default\".\n    let enforcement = 'Default'\n\n    const attributeValueLowercase = attributeValue.toLowerCase()\n    // 2. If cookie-av's attribute-value is a case-insensitive match for\n    //    \"None\", set enforcement to \"None\".\n    if (attributeValueLowercase.includes('none')) {\n      enforcement = 'None'\n    }\n\n    // 3. If cookie-av's attribute-value is a case-insensitive match for\n    //    \"Strict\", set enforcement to \"Strict\".\n    if (attributeValueLowercase.includes('strict')) {\n      enforcement = 'Strict'\n    }\n\n    // 4. If cookie-av's attribute-value is a case-insensitive match for\n    //    \"Lax\", set enforcement to \"Lax\".\n    if (attributeValueLowercase.includes('lax')) {\n      enforcement = 'Lax'\n    }\n\n    // 5. Append an attribute to the cookie-attribute-list with an\n    //    attribute-name of \"SameSite\" and an attribute-value of\n    //    enforcement.\n    cookieAttributeList.sameSite = enforcement\n  } else {\n    cookieAttributeList.unparsed ??= []\n\n    cookieAttributeList.unparsed.push(`${attributeName}=${attributeValue}`)\n  }\n\n  // 8. Return to Step 1 of this algorithm.\n  return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)\n}\n\nmodule.exports = {\n  parseSetCookie,\n  parseUnparsedAttributes\n}\n","'use strict'\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction isCTLExcludingHtab (value) {\n  if (value.length === 0) {\n    return false\n  }\n\n  for (const char of value) {\n    const code = char.charCodeAt(0)\n\n    if (\n      (code >= 0x00 || code <= 0x08) ||\n      (code >= 0x0A || code <= 0x1F) ||\n      code === 0x7F\n    ) {\n      return false\n    }\n  }\n}\n\n/**\n CHAR           = <any US-ASCII character (octets 0 - 127)>\n token          = 1*<any CHAR except CTLs or separators>\n separators     = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n                | \",\" | \";\" | \":\" | \"\\\" | <\">\n                | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n                | \"{\" | \"}\" | SP | HT\n * @param {string} name\n */\nfunction validateCookieName (name) {\n  for (const char of name) {\n    const code = char.charCodeAt(0)\n\n    if (\n      (code <= 0x20 || code > 0x7F) ||\n      char === '(' ||\n      char === ')' ||\n      char === '>' ||\n      char === '<' ||\n      char === '@' ||\n      char === ',' ||\n      char === ';' ||\n      char === ':' ||\n      char === '\\\\' ||\n      char === '\"' ||\n      char === '/' ||\n      char === '[' ||\n      char === ']' ||\n      char === '?' ||\n      char === '=' ||\n      char === '{' ||\n      char === '}'\n    ) {\n      throw new Error('Invalid cookie name')\n    }\n  }\n}\n\n/**\n cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n                       ; US-ASCII characters excluding CTLs,\n                       ; whitespace DQUOTE, comma, semicolon,\n                       ; and backslash\n * @param {string} value\n */\nfunction validateCookieValue (value) {\n  for (const char of value) {\n    const code = char.charCodeAt(0)\n\n    if (\n      code < 0x21 || // exclude CTLs (0-31)\n      code === 0x22 ||\n      code === 0x2C ||\n      code === 0x3B ||\n      code === 0x5C ||\n      code > 0x7E // non-ascii\n    ) {\n      throw new Error('Invalid header value')\n    }\n  }\n}\n\n/**\n * path-value        = <any CHAR except CTLs or \";\">\n * @param {string} path\n */\nfunction validateCookiePath (path) {\n  for (const char of path) {\n    const code = char.charCodeAt(0)\n\n    if (code < 0x21 || char === ';') {\n      throw new Error('Invalid cookie path')\n    }\n  }\n}\n\n/**\n * I have no idea why these values aren't allowed to be honest,\n * but Deno tests these. - Khafra\n * @param {string} domain\n */\nfunction validateCookieDomain (domain) {\n  if (\n    domain.startsWith('-') ||\n    domain.endsWith('.') ||\n    domain.endsWith('-')\n  ) {\n    throw new Error('Invalid cookie domain')\n  }\n}\n\n/**\n * @see https://www.rfc-editor.org/rfc/rfc7231#section-7.1.1.1\n * @param {number|Date} date\n  IMF-fixdate  = day-name \",\" SP date1 SP time-of-day SP GMT\n  ; fixed length/zone/capitalization subset of the format\n  ; see Section 3.3 of [RFC5322]\n\n  day-name     = %x4D.6F.6E ; \"Mon\", case-sensitive\n              / %x54.75.65 ; \"Tue\", case-sensitive\n              / %x57.65.64 ; \"Wed\", case-sensitive\n              / %x54.68.75 ; \"Thu\", case-sensitive\n              / %x46.72.69 ; \"Fri\", case-sensitive\n              / %x53.61.74 ; \"Sat\", case-sensitive\n              / %x53.75.6E ; \"Sun\", case-sensitive\n  date1        = day SP month SP year\n                  ; e.g., 02 Jun 1982\n\n  day          = 2DIGIT\n  month        = %x4A.61.6E ; \"Jan\", case-sensitive\n              / %x46.65.62 ; \"Feb\", case-sensitive\n              / %x4D.61.72 ; \"Mar\", case-sensitive\n              / %x41.70.72 ; \"Apr\", case-sensitive\n              / %x4D.61.79 ; \"May\", case-sensitive\n              / %x4A.75.6E ; \"Jun\", case-sensitive\n              / %x4A.75.6C ; \"Jul\", case-sensitive\n              / %x41.75.67 ; \"Aug\", case-sensitive\n              / %x53.65.70 ; \"Sep\", case-sensitive\n              / %x4F.63.74 ; \"Oct\", case-sensitive\n              / %x4E.6F.76 ; \"Nov\", case-sensitive\n              / %x44.65.63 ; \"Dec\", case-sensitive\n  year         = 4DIGIT\n\n  GMT          = %x47.4D.54 ; \"GMT\", case-sensitive\n\n  time-of-day  = hour \":\" minute \":\" second\n              ; 00:00:00 - 23:59:60 (leap second)\n\n  hour         = 2DIGIT\n  minute       = 2DIGIT\n  second       = 2DIGIT\n */\nfunction toIMFDate (date) {\n  if (typeof date === 'number') {\n    date = new Date(date)\n  }\n\n  const days = [\n    'Sun', 'Mon', 'Tue', 'Wed',\n    'Thu', 'Fri', 'Sat'\n  ]\n\n  const months = [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n  ]\n\n  const dayName = days[date.getUTCDay()]\n  const day = date.getUTCDate().toString().padStart(2, '0')\n  const month = months[date.getUTCMonth()]\n  const year = date.getUTCFullYear()\n  const hour = date.getUTCHours().toString().padStart(2, '0')\n  const minute = date.getUTCMinutes().toString().padStart(2, '0')\n  const second = date.getUTCSeconds().toString().padStart(2, '0')\n\n  return `${dayName}, ${day} ${month} ${year} ${hour}:${minute}:${second} GMT`\n}\n\n/**\n max-age-av        = \"Max-Age=\" non-zero-digit *DIGIT\n                       ; In practice, both expires-av and max-age-av\n                       ; are limited to dates representable by the\n                       ; user agent.\n * @param {number} maxAge\n */\nfunction validateCookieMaxAge (maxAge) {\n  if (maxAge < 0) {\n    throw new Error('Invalid cookie max-age')\n  }\n}\n\n/**\n * @see https://www.rfc-editor.org/rfc/rfc6265#section-4.1.1\n * @param {import('./index').Cookie} cookie\n */\nfunction stringify (cookie) {\n  if (cookie.name.length === 0) {\n    return null\n  }\n\n  validateCookieName(cookie.name)\n  validateCookieValue(cookie.value)\n\n  const out = [`${cookie.name}=${cookie.value}`]\n\n  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-prefixes-00#section-3.1\n  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-prefixes-00#section-3.2\n  if (cookie.name.startsWith('__Secure-')) {\n    cookie.secure = true\n  }\n\n  if (cookie.name.startsWith('__Host-')) {\n    cookie.secure = true\n    cookie.domain = null\n    cookie.path = '/'\n  }\n\n  if (cookie.secure) {\n    out.push('Secure')\n  }\n\n  if (cookie.httpOnly) {\n    out.push('HttpOnly')\n  }\n\n  if (typeof cookie.maxAge === 'number') {\n    validateCookieMaxAge(cookie.maxAge)\n    out.push(`Max-Age=${cookie.maxAge}`)\n  }\n\n  if (cookie.domain) {\n    validateCookieDomain(cookie.domain)\n    out.push(`Domain=${cookie.domain}`)\n  }\n\n  if (cookie.path) {\n    validateCookiePath(cookie.path)\n    out.push(`Path=${cookie.path}`)\n  }\n\n  if (cookie.expires && cookie.expires.toString() !== 'Invalid Date') {\n    out.push(`Expires=${toIMFDate(cookie.expires)}`)\n  }\n\n  if (cookie.sameSite) {\n    out.push(`SameSite=${cookie.sameSite}`)\n  }\n\n  for (const part of cookie.unparsed) {\n    if (!part.includes('=')) {\n      throw new Error('Invalid unparsed')\n    }\n\n    const [key, ...value] = part.split('=')\n\n    out.push(`${key.trim()}=${value.join('=')}`)\n  }\n\n  return out.join('; ')\n}\n\nmodule.exports = {\n  isCTLExcludingHtab,\n  validateCookieName,\n  validateCookiePath,\n  validateCookieValue,\n  toIMFDate,\n  stringify\n}\n","'use strict'\n\nconst net = require('net')\nconst assert = require('assert')\nconst util = require('./util')\nconst { InvalidArgumentError, ConnectTimeoutError } = require('./errors')\n\nlet tls // include tls conditionally since it is not always available\n\n// TODO: session re-use does not wait for the first\n// connection to resolve the session and might therefore\n// resolve the same servername multiple times even when\n// re-use is enabled.\n\nlet SessionCache\n// FIXME: remove workaround when the Node bug is fixed\n// https://github.com/nodejs/node/issues/49344#issuecomment-1741776308\nif (global.FinalizationRegistry && !process.env.NODE_V8_COVERAGE) {\n  SessionCache = class WeakSessionCache {\n    constructor (maxCachedSessions) {\n      this._maxCachedSessions = maxCachedSessions\n      this._sessionCache = new Map()\n      this._sessionRegistry = new global.FinalizationRegistry((key) => {\n        if (this._sessionCache.size < this._maxCachedSessions) {\n          return\n        }\n\n        const ref = this._sessionCache.get(key)\n        if (ref !== undefined && ref.deref() === undefined) {\n          this._sessionCache.delete(key)\n        }\n      })\n    }\n\n    get (sessionKey) {\n      const ref = this._sessionCache.get(sessionKey)\n      return ref ? ref.deref() : null\n    }\n\n    set (sessionKey, session) {\n      if (this._maxCachedSessions === 0) {\n        return\n      }\n\n      this._sessionCache.set(sessionKey, new WeakRef(session))\n      this._sessionRegistry.register(session, sessionKey)\n    }\n  }\n} else {\n  SessionCache = class SimpleSessionCache {\n    constructor (maxCachedSessions) {\n      this._maxCachedSessions = maxCachedSessions\n      this._sessionCache = new Map()\n    }\n\n    get (sessionKey) {\n      return this._sessionCache.get(sessionKey)\n    }\n\n    set (sessionKey, session) {\n      if (this._maxCachedSessions === 0) {\n        return\n      }\n\n      if (this._sessionCache.size >= this._maxCachedSessions) {\n        // remove the oldest session\n        const { value: oldestKey } = this._sessionCache.keys().next()\n        this._sessionCache.delete(oldestKey)\n      }\n\n      this._sessionCache.set(sessionKey, session)\n    }\n  }\n}\n\nfunction buildConnector ({ allowH2, maxCachedSessions, socketPath, timeout, ...opts }) {\n  if (maxCachedSessions != null && (!Number.isInteger(maxCachedSessions) || maxCachedSessions < 0)) {\n    throw new InvalidArgumentError('maxCachedSessions must be a positive integer or zero')\n  }\n\n  const options = { path: socketPath, ...opts }\n  const sessionCache = new SessionCache(maxCachedSessions == null ? 100 : maxCachedSessions)\n  timeout = timeout == null ? 10e3 : timeout\n  allowH2 = allowH2 != null ? allowH2 : false\n  return function connect ({ hostname, host, protocol, port, servername, localAddress, httpSocket }, callback) {\n    let socket\n    if (protocol === 'https:') {\n      if (!tls) {\n        tls = require('tls')\n      }\n      servername = servername || options.servername || util.getServerName(host) || null\n\n      const sessionKey = servername || hostname\n      const session = sessionCache.get(sessionKey) || null\n\n      assert(sessionKey)\n\n      socket = tls.connect({\n        highWaterMark: 16384, // TLS in node can't have bigger HWM anyway...\n        ...options,\n        servername,\n        session,\n        localAddress,\n        // TODO(HTTP/2): Add support for h2c\n        ALPNProtocols: allowH2 ? ['http/1.1', 'h2'] : ['http/1.1'],\n        socket: httpSocket, // upgrade socket connection\n        port: port || 443,\n        host: hostname\n      })\n\n      socket\n        .on('session', function (session) {\n          // TODO (fix): Can a session become invalid once established? Don't think so?\n          sessionCache.set(sessionKey, session)\n        })\n    } else {\n      assert(!httpSocket, 'httpSocket can only be sent on TLS update')\n      socket = net.connect({\n        highWaterMark: 64 * 1024, // Same as nodejs fs streams.\n        ...options,\n        localAddress,\n        port: port || 80,\n        host: hostname\n      })\n    }\n\n    // Set TCP keep alive options on the socket here instead of in connect() for the case of assigning the socket\n    if (options.keepAlive == null || options.keepAlive) {\n      const keepAliveInitialDelay = options.keepAliveInitialDelay === undefined ? 60e3 : options.keepAliveInitialDelay\n      socket.setKeepAlive(true, keepAliveInitialDelay)\n    }\n\n    const cancelTimeout = setupTimeout(() => onConnectTimeout(socket), timeout)\n\n    socket\n      .setNoDelay(true)\n      .once(protocol === 'https:' ? 'secureConnect' : 'connect', function () {\n        cancelTimeout()\n\n        if (callback) {\n          const cb = callback\n          callback = null\n          cb(null, this)\n        }\n      })\n      .on('error', function (err) {\n        cancelTimeout()\n\n        if (callback) {\n          const cb = callback\n          callback = null\n          cb(err)\n        }\n      })\n\n    return socket\n  }\n}\n\nfunction setupTimeout (onConnectTimeout, timeout) {\n  if (!timeout) {\n    return () => {}\n  }\n\n  let s1 = null\n  let s2 = null\n  const timeoutId = setTimeout(() => {\n    // setImmediate is added to make sure that we priotorise socket error events over timeouts\n    s1 = setImmediate(() => {\n      if (process.platform === 'win32') {\n        // Windows needs an extra setImmediate probably due to implementation differences in the socket logic\n        s2 = setImmediate(() => onConnectTimeout())\n      } else {\n        onConnectTimeout()\n      }\n    })\n  }, timeout)\n  return () => {\n    clearTimeout(timeoutId)\n    clearImmediate(s1)\n    clearImmediate(s2)\n  }\n}\n\nfunction onConnectTimeout (socket) {\n  util.destroy(socket, new ConnectTimeoutError())\n}\n\nmodule.exports = buildConnector\n","'use strict'\n\n/** @type {Record<string, string | undefined>} */\nconst headerNameLowerCasedRecord = {}\n\n// https://developer.mozilla.org/docs/Web/HTTP/Headers\nconst wellknownHeaderNames = [\n  'Accept',\n  'Accept-Encoding',\n  'Accept-Language',\n  'Accept-Ranges',\n  'Access-Control-Allow-Credentials',\n  'Access-Control-Allow-Headers',\n  'Access-Control-Allow-Methods',\n  'Access-Control-Allow-Origin',\n  'Access-Control-Expose-Headers',\n  'Access-Control-Max-Age',\n  'Access-Control-Request-Headers',\n  'Access-Control-Request-Method',\n  'Age',\n  'Allow',\n  'Alt-Svc',\n  'Alt-Used',\n  'Authorization',\n  'Cache-Control',\n  'Clear-Site-Data',\n  'Connection',\n  'Content-Disposition',\n  'Content-Encoding',\n  'Content-Language',\n  'Content-Length',\n  'Content-Location',\n  'Content-Range',\n  'Content-Security-Policy',\n  'Content-Security-Policy-Report-Only',\n  'Content-Type',\n  'Cookie',\n  'Cross-Origin-Embedder-Policy',\n  'Cross-Origin-Opener-Policy',\n  'Cross-Origin-Resource-Policy',\n  'Date',\n  'Device-Memory',\n  'Downlink',\n  'ECT',\n  'ETag',\n  'Expect',\n  'Expect-CT',\n  'Expires',\n  'Forwarded',\n  'From',\n  'Host',\n  'If-Match',\n  'If-Modified-Since',\n  'If-None-Match',\n  'If-Range',\n  'If-Unmodified-Since',\n  'Keep-Alive',\n  'Last-Modified',\n  'Link',\n  'Location',\n  'Max-Forwards',\n  'Origin',\n  'Permissions-Policy',\n  'Pragma',\n  'Proxy-Authenticate',\n  'Proxy-Authorization',\n  'RTT',\n  'Range',\n  'Referer',\n  'Referrer-Policy',\n  'Refresh',\n  'Retry-After',\n  'Sec-WebSocket-Accept',\n  'Sec-WebSocket-Extensions',\n  'Sec-WebSocket-Key',\n  'Sec-WebSocket-Protocol',\n  'Sec-WebSocket-Version',\n  'Server',\n  'Server-Timing',\n  'Service-Worker-Allowed',\n  'Service-Worker-Navigation-Preload',\n  'Set-Cookie',\n  'SourceMap',\n  'Strict-Transport-Security',\n  'Supports-Loading-Mode',\n  'TE',\n  'Timing-Allow-Origin',\n  'Trailer',\n  'Transfer-Encoding',\n  'Upgrade',\n  'Upgrade-Insecure-Requests',\n  'User-Agent',\n  'Vary',\n  'Via',\n  'WWW-Authenticate',\n  'X-Content-Type-Options',\n  'X-DNS-Prefetch-Control',\n  'X-Frame-Options',\n  'X-Permitted-Cross-Domain-Policies',\n  'X-Powered-By',\n  'X-Requested-With',\n  'X-XSS-Protection'\n]\n\nfor (let i = 0; i < wellknownHeaderNames.length; ++i) {\n  const key = wellknownHeaderNames[i]\n  const lowerCasedKey = key.toLowerCase()\n  headerNameLowerCasedRecord[key] = headerNameLowerCasedRecord[lowerCasedKey] =\n    lowerCasedKey\n}\n\n// Note: object prototypes should not be able to be referenced. e.g. `Object#hasOwnProperty`.\nObject.setPrototypeOf(headerNameLowerCasedRecord, null)\n\nmodule.exports = {\n  wellknownHeaderNames,\n  headerNameLowerCasedRecord\n}\n","'use strict'\n\nclass UndiciError extends Error {\n  constructor (message) {\n    super(message)\n    this.name = 'UndiciError'\n    this.code = 'UND_ERR'\n  }\n}\n\nclass ConnectTimeoutError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, ConnectTimeoutError)\n    this.name = 'ConnectTimeoutError'\n    this.message = message || 'Connect Timeout Error'\n    this.code = 'UND_ERR_CONNECT_TIMEOUT'\n  }\n}\n\nclass HeadersTimeoutError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, HeadersTimeoutError)\n    this.name = 'HeadersTimeoutError'\n    this.message = message || 'Headers Timeout Error'\n    this.code = 'UND_ERR_HEADERS_TIMEOUT'\n  }\n}\n\nclass HeadersOverflowError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, HeadersOverflowError)\n    this.name = 'HeadersOverflowError'\n    this.message = message || 'Headers Overflow Error'\n    this.code = 'UND_ERR_HEADERS_OVERFLOW'\n  }\n}\n\nclass BodyTimeoutError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, BodyTimeoutError)\n    this.name = 'BodyTimeoutError'\n    this.message = message || 'Body Timeout Error'\n    this.code = 'UND_ERR_BODY_TIMEOUT'\n  }\n}\n\nclass ResponseStatusCodeError extends UndiciError {\n  constructor (message, statusCode, headers, body) {\n    super(message)\n    Error.captureStackTrace(this, ResponseStatusCodeError)\n    this.name = 'ResponseStatusCodeError'\n    this.message = message || 'Response Status Code Error'\n    this.code = 'UND_ERR_RESPONSE_STATUS_CODE'\n    this.body = body\n    this.status = statusCode\n    this.statusCode = statusCode\n    this.headers = headers\n  }\n}\n\nclass InvalidArgumentError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, InvalidArgumentError)\n    this.name = 'InvalidArgumentError'\n    this.message = message || 'Invalid Argument Error'\n    this.code = 'UND_ERR_INVALID_ARG'\n  }\n}\n\nclass InvalidReturnValueError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, InvalidReturnValueError)\n    this.name = 'InvalidReturnValueError'\n    this.message = message || 'Invalid Return Value Error'\n    this.code = 'UND_ERR_INVALID_RETURN_VALUE'\n  }\n}\n\nclass RequestAbortedError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, RequestAbortedError)\n    this.name = 'AbortError'\n    this.message = message || 'Request aborted'\n    this.code = 'UND_ERR_ABORTED'\n  }\n}\n\nclass InformationalError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, InformationalError)\n    this.name = 'InformationalError'\n    this.message = message || 'Request information'\n    this.code = 'UND_ERR_INFO'\n  }\n}\n\nclass RequestContentLengthMismatchError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, RequestContentLengthMismatchError)\n    this.name = 'RequestContentLengthMismatchError'\n    this.message = message || 'Request body length does not match content-length header'\n    this.code = 'UND_ERR_REQ_CONTENT_LENGTH_MISMATCH'\n  }\n}\n\nclass ResponseContentLengthMismatchError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, ResponseContentLengthMismatchError)\n    this.name = 'ResponseContentLengthMismatchError'\n    this.message = message || 'Response body length does not match content-length header'\n    this.code = 'UND_ERR_RES_CONTENT_LENGTH_MISMATCH'\n  }\n}\n\nclass ClientDestroyedError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, ClientDestroyedError)\n    this.name = 'ClientDestroyedError'\n    this.message = message || 'The client is destroyed'\n    this.code = 'UND_ERR_DESTROYED'\n  }\n}\n\nclass ClientClosedError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, ClientClosedError)\n    this.name = 'ClientClosedError'\n    this.message = message || 'The client is closed'\n    this.code = 'UND_ERR_CLOSED'\n  }\n}\n\nclass SocketError extends UndiciError {\n  constructor (message, socket) {\n    super(message)\n    Error.captureStackTrace(this, SocketError)\n    this.name = 'SocketError'\n    this.message = message || 'Socket error'\n    this.code = 'UND_ERR_SOCKET'\n    this.socket = socket\n  }\n}\n\nclass NotSupportedError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, NotSupportedError)\n    this.name = 'NotSupportedError'\n    this.message = message || 'Not supported error'\n    this.code = 'UND_ERR_NOT_SUPPORTED'\n  }\n}\n\nclass BalancedPoolMissingUpstreamError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, NotSupportedError)\n    this.name = 'MissingUpstreamError'\n    this.message = message || 'No upstream has been added to the BalancedPool'\n    this.code = 'UND_ERR_BPL_MISSING_UPSTREAM'\n  }\n}\n\nclass HTTPParserError extends Error {\n  constructor (message, code, data) {\n    super(message)\n    Error.captureStackTrace(this, HTTPParserError)\n    this.name = 'HTTPParserError'\n    this.code = code ? `HPE_${code}` : undefined\n    this.data = data ? data.toString() : undefined\n  }\n}\n\nclass ResponseExceededMaxSizeError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, ResponseExceededMaxSizeError)\n    this.name = 'ResponseExceededMaxSizeError'\n    this.message = message || 'Response content exceeded max size'\n    this.code = 'UND_ERR_RES_EXCEEDED_MAX_SIZE'\n  }\n}\n\nclass RequestRetryError extends UndiciError {\n  constructor (message, code, { headers, data }) {\n    super(message)\n    Error.captureStackTrace(this, RequestRetryError)\n    this.name = 'RequestRetryError'\n    this.message = message || 'Request retry error'\n    this.code = 'UND_ERR_REQ_RETRY'\n    this.statusCode = code\n    this.data = data\n    this.headers = headers\n  }\n}\n\nmodule.exports = {\n  HTTPParserError,\n  UndiciError,\n  HeadersTimeoutError,\n  HeadersOverflowError,\n  BodyTimeoutError,\n  RequestContentLengthMismatchError,\n  ConnectTimeoutError,\n  ResponseStatusCodeError,\n  InvalidArgumentError,\n  InvalidReturnValueError,\n  RequestAbortedError,\n  ClientDestroyedError,\n  ClientClosedError,\n  InformationalError,\n  SocketError,\n  NotSupportedError,\n  ResponseContentLengthMismatchError,\n  BalancedPoolMissingUpstreamError,\n  ResponseExceededMaxSizeError,\n  RequestRetryError\n}\n","'use strict'\n\nconst {\n  InvalidArgumentError,\n  NotSupportedError\n} = require('./errors')\nconst assert = require('assert')\nconst { kHTTP2BuildRequest, kHTTP2CopyHeaders, kHTTP1BuildRequest } = require('./symbols')\nconst util = require('./util')\n\n// tokenRegExp and headerCharRegex have been lifted from\n// https://github.com/nodejs/node/blob/main/lib/_http_common.js\n\n/**\n * Verifies that the given val is a valid HTTP token\n * per the rules defined in RFC 7230\n * See https://tools.ietf.org/html/rfc7230#section-3.2.6\n */\nconst tokenRegExp = /^[\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]+$/\n\n/**\n * Matches if val contains an invalid field-vchar\n *  field-value    = *( field-content / obs-fold )\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n *  field-vchar    = VCHAR / obs-text\n */\nconst headerCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/\n\n// Verifies that a given path is valid does not contain control chars \\x00 to \\x20\nconst invalidPathRegex = /[^\\u0021-\\u00ff]/\n\nconst kHandler = Symbol('handler')\n\nconst channels = {}\n\nlet extractBody\n\ntry {\n  const diagnosticsChannel = require('diagnostics_channel')\n  channels.create = diagnosticsChannel.channel('undici:request:create')\n  channels.bodySent = diagnosticsChannel.channel('undici:request:bodySent')\n  channels.headers = diagnosticsChannel.channel('undici:request:headers')\n  channels.trailers = diagnosticsChannel.channel('undici:request:trailers')\n  channels.error = diagnosticsChannel.channel('undici:request:error')\n} catch {\n  channels.create = { hasSubscribers: false }\n  channels.bodySent = { hasSubscribers: false }\n  channels.headers = { hasSubscribers: false }\n  channels.trailers = { hasSubscribers: false }\n  channels.error = { hasSubscribers: false }\n}\n\nclass Request {\n  constructor (origin, {\n    path,\n    method,\n    body,\n    headers,\n    query,\n    idempotent,\n    blocking,\n    upgrade,\n    headersTimeout,\n    bodyTimeout,\n    reset,\n    throwOnError,\n    expectContinue\n  }, handler) {\n    if (typeof path !== 'string') {\n      throw new InvalidArgumentError('path must be a string')\n    } else if (\n      path[0] !== '/' &&\n      !(path.startsWith('http://') || path.startsWith('https://')) &&\n      method !== 'CONNECT'\n    ) {\n      throw new InvalidArgumentError('path must be an absolute URL or start with a slash')\n    } else if (invalidPathRegex.exec(path) !== null) {\n      throw new InvalidArgumentError('invalid request path')\n    }\n\n    if (typeof method !== 'string') {\n      throw new InvalidArgumentError('method must be a string')\n    } else if (tokenRegExp.exec(method) === null) {\n      throw new InvalidArgumentError('invalid request method')\n    }\n\n    if (upgrade && typeof upgrade !== 'string') {\n      throw new InvalidArgumentError('upgrade must be a string')\n    }\n\n    if (headersTimeout != null && (!Number.isFinite(headersTimeout) || headersTimeout < 0)) {\n      throw new InvalidArgumentError('invalid headersTimeout')\n    }\n\n    if (bodyTimeout != null && (!Number.isFinite(bodyTimeout) || bodyTimeout < 0)) {\n      throw new InvalidArgumentError('invalid bodyTimeout')\n    }\n\n    if (reset != null && typeof reset !== 'boolean') {\n      throw new InvalidArgumentError('invalid reset')\n    }\n\n    if (expectContinue != null && typeof expectContinue !== 'boolean') {\n      throw new InvalidArgumentError('invalid expectContinue')\n    }\n\n    this.headersTimeout = headersTimeout\n\n    this.bodyTimeout = bodyTimeout\n\n    this.throwOnError = throwOnError === true\n\n    this.method = method\n\n    this.abort = null\n\n    if (body == null) {\n      this.body = null\n    } else if (util.isStream(body)) {\n      this.body = body\n\n      const rState = this.body._readableState\n      if (!rState || !rState.autoDestroy) {\n        this.endHandler = function autoDestroy () {\n          util.destroy(this)\n        }\n        this.body.on('end', this.endHandler)\n      }\n\n      this.errorHandler = err => {\n        if (this.abort) {\n          this.abort(err)\n        } else {\n          this.error = err\n        }\n      }\n      this.body.on('error', this.errorHandler)\n    } else if (util.isBuffer(body)) {\n      this.body = body.byteLength ? body : null\n    } else if (ArrayBuffer.isView(body)) {\n      this.body = body.buffer.byteLength ? Buffer.from(body.buffer, body.byteOffset, body.byteLength) : null\n    } else if (body instanceof ArrayBuffer) {\n      this.body = body.byteLength ? Buffer.from(body) : null\n    } else if (typeof body === 'string') {\n      this.body = body.length ? Buffer.from(body) : null\n    } else if (util.isFormDataLike(body) || util.isIterable(body) || util.isBlobLike(body)) {\n      this.body = body\n    } else {\n      throw new InvalidArgumentError('body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable')\n    }\n\n    this.completed = false\n\n    this.aborted = false\n\n    this.upgrade = upgrade || null\n\n    this.path = query ? util.buildURL(path, query) : path\n\n    this.origin = origin\n\n    this.idempotent = idempotent == null\n      ? method === 'HEAD' || method === 'GET'\n      : idempotent\n\n    this.blocking = blocking == null ? false : blocking\n\n    this.reset = reset == null ? null : reset\n\n    this.host = null\n\n    this.contentLength = null\n\n    this.contentType = null\n\n    this.headers = ''\n\n    // Only for H2\n    this.expectContinue = expectContinue != null ? expectContinue : false\n\n    if (Array.isArray(headers)) {\n      if (headers.length % 2 !== 0) {\n        throw new InvalidArgumentError('headers array must be even')\n      }\n      for (let i = 0; i < headers.length; i += 2) {\n        processHeader(this, headers[i], headers[i + 1])\n      }\n    } else if (headers && typeof headers === 'object') {\n      const keys = Object.keys(headers)\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        processHeader(this, key, headers[key])\n      }\n    } else if (headers != null) {\n      throw new InvalidArgumentError('headers must be an object or an array')\n    }\n\n    if (util.isFormDataLike(this.body)) {\n      if (util.nodeMajor < 16 || (util.nodeMajor === 16 && util.nodeMinor < 8)) {\n        throw new InvalidArgumentError('Form-Data bodies are only supported in node v16.8 and newer.')\n      }\n\n      if (!extractBody) {\n        extractBody = require('../fetch/body.js').extractBody\n      }\n\n      const [bodyStream, contentType] = extractBody(body)\n      if (this.contentType == null) {\n        this.contentType = contentType\n        this.headers += `content-type: ${contentType}\\r\\n`\n      }\n      this.body = bodyStream.stream\n      this.contentLength = bodyStream.length\n    } else if (util.isBlobLike(body) && this.contentType == null && body.type) {\n      this.contentType = body.type\n      this.headers += `content-type: ${body.type}\\r\\n`\n    }\n\n    util.validateHandler(handler, method, upgrade)\n\n    this.servername = util.getServerName(this.host)\n\n    this[kHandler] = handler\n\n    if (channels.create.hasSubscribers) {\n      channels.create.publish({ request: this })\n    }\n  }\n\n  onBodySent (chunk) {\n    if (this[kHandler].onBodySent) {\n      try {\n        return this[kHandler].onBodySent(chunk)\n      } catch (err) {\n        this.abort(err)\n      }\n    }\n  }\n\n  onRequestSent () {\n    if (channels.bodySent.hasSubscribers) {\n      channels.bodySent.publish({ request: this })\n    }\n\n    if (this[kHandler].onRequestSent) {\n      try {\n        return this[kHandler].onRequestSent()\n      } catch (err) {\n        this.abort(err)\n      }\n    }\n  }\n\n  onConnect (abort) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    if (this.error) {\n      abort(this.error)\n    } else {\n      this.abort = abort\n      return this[kHandler].onConnect(abort)\n    }\n  }\n\n  onHeaders (statusCode, headers, resume, statusText) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    if (channels.headers.hasSubscribers) {\n      channels.headers.publish({ request: this, response: { statusCode, headers, statusText } })\n    }\n\n    try {\n      return this[kHandler].onHeaders(statusCode, headers, resume, statusText)\n    } catch (err) {\n      this.abort(err)\n    }\n  }\n\n  onData (chunk) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    try {\n      return this[kHandler].onData(chunk)\n    } catch (err) {\n      this.abort(err)\n      return false\n    }\n  }\n\n  onUpgrade (statusCode, headers, socket) {\n    assert(!this.aborted)\n    assert(!this.completed)\n\n    return this[kHandler].onUpgrade(statusCode, headers, socket)\n  }\n\n  onComplete (trailers) {\n    this.onFinally()\n\n    assert(!this.aborted)\n\n    this.completed = true\n    if (channels.trailers.hasSubscribers) {\n      channels.trailers.publish({ request: this, trailers })\n    }\n\n    try {\n      return this[kHandler].onComplete(trailers)\n    } catch (err) {\n      // TODO (fix): This might be a bad idea?\n      this.onError(err)\n    }\n  }\n\n  onError (error) {\n    this.onFinally()\n\n    if (channels.error.hasSubscribers) {\n      channels.error.publish({ request: this, error })\n    }\n\n    if (this.aborted) {\n      return\n    }\n    this.aborted = true\n\n    return this[kHandler].onError(error)\n  }\n\n  onFinally () {\n    if (this.errorHandler) {\n      this.body.off('error', this.errorHandler)\n      this.errorHandler = null\n    }\n\n    if (this.endHandler) {\n      this.body.off('end', this.endHandler)\n      this.endHandler = null\n    }\n  }\n\n  // TODO: adjust to support H2\n  addHeader (key, value) {\n    processHeader(this, key, value)\n    return this\n  }\n\n  static [kHTTP1BuildRequest] (origin, opts, handler) {\n    // TODO: Migrate header parsing here, to make Requests\n    // HTTP agnostic\n    return new Request(origin, opts, handler)\n  }\n\n  static [kHTTP2BuildRequest] (origin, opts, handler) {\n    const headers = opts.headers\n    opts = { ...opts, headers: null }\n\n    const request = new Request(origin, opts, handler)\n\n    request.headers = {}\n\n    if (Array.isArray(headers)) {\n      if (headers.length % 2 !== 0) {\n        throw new InvalidArgumentError('headers array must be even')\n      }\n      for (let i = 0; i < headers.length; i += 2) {\n        processHeader(request, headers[i], headers[i + 1], true)\n      }\n    } else if (headers && typeof headers === 'object') {\n      const keys = Object.keys(headers)\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        processHeader(request, key, headers[key], true)\n      }\n    } else if (headers != null) {\n      throw new InvalidArgumentError('headers must be an object or an array')\n    }\n\n    return request\n  }\n\n  static [kHTTP2CopyHeaders] (raw) {\n    const rawHeaders = raw.split('\\r\\n')\n    const headers = {}\n\n    for (const header of rawHeaders) {\n      const [key, value] = header.split(': ')\n\n      if (value == null || value.length === 0) continue\n\n      if (headers[key]) headers[key] += `,${value}`\n      else headers[key] = value\n    }\n\n    return headers\n  }\n}\n\nfunction processHeaderValue (key, val, skipAppend) {\n  if (val && typeof val === 'object') {\n    throw new InvalidArgumentError(`invalid ${key} header`)\n  }\n\n  val = val != null ? `${val}` : ''\n\n  if (headerCharRegex.exec(val) !== null) {\n    throw new InvalidArgumentError(`invalid ${key} header`)\n  }\n\n  return skipAppend ? val : `${key}: ${val}\\r\\n`\n}\n\nfunction processHeader (request, key, val, skipAppend = false) {\n  if (val && (typeof val === 'object' && !Array.isArray(val))) {\n    throw new InvalidArgumentError(`invalid ${key} header`)\n  } else if (val === undefined) {\n    return\n  }\n\n  if (\n    request.host === null &&\n    key.length === 4 &&\n    key.toLowerCase() === 'host'\n  ) {\n    if (headerCharRegex.exec(val) !== null) {\n      throw new InvalidArgumentError(`invalid ${key} header`)\n    }\n    // Consumed by Client\n    request.host = val\n  } else if (\n    request.contentLength === null &&\n    key.length === 14 &&\n    key.toLowerCase() === 'content-length'\n  ) {\n    request.contentLength = parseInt(val, 10)\n    if (!Number.isFinite(request.contentLength)) {\n      throw new InvalidArgumentError('invalid content-length header')\n    }\n  } else if (\n    request.contentType === null &&\n    key.length === 12 &&\n    key.toLowerCase() === 'content-type'\n  ) {\n    request.contentType = val\n    if (skipAppend) request.headers[key] = processHeaderValue(key, val, skipAppend)\n    else request.headers += processHeaderValue(key, val)\n  } else if (\n    key.length === 17 &&\n    key.toLowerCase() === 'transfer-encoding'\n  ) {\n    throw new InvalidArgumentError('invalid transfer-encoding header')\n  } else if (\n    key.length === 10 &&\n    key.toLowerCase() === 'connection'\n  ) {\n    const value = typeof val === 'string' ? val.toLowerCase() : null\n    if (value !== 'close' && value !== 'keep-alive') {\n      throw new InvalidArgumentError('invalid connection header')\n    } else if (value === 'close') {\n      request.reset = true\n    }\n  } else if (\n    key.length === 10 &&\n    key.toLowerCase() === 'keep-alive'\n  ) {\n    throw new InvalidArgumentError('invalid keep-alive header')\n  } else if (\n    key.length === 7 &&\n    key.toLowerCase() === 'upgrade'\n  ) {\n    throw new InvalidArgumentError('invalid upgrade header')\n  } else if (\n    key.length === 6 &&\n    key.toLowerCase() === 'expect'\n  ) {\n    throw new NotSupportedError('expect header not supported')\n  } else if (tokenRegExp.exec(key) === null) {\n    throw new InvalidArgumentError('invalid header key')\n  } else {\n    if (Array.isArray(val)) {\n      for (let i = 0; i < val.length; i++) {\n        if (skipAppend) {\n          if (request.headers[key]) request.headers[key] += `,${processHeaderValue(key, val[i], skipAppend)}`\n          else request.headers[key] = processHeaderValue(key, val[i], skipAppend)\n        } else {\n          request.headers += processHeaderValue(key, val[i])\n        }\n      }\n    } else {\n      if (skipAppend) request.headers[key] = processHeaderValue(key, val, skipAppend)\n      else request.headers += processHeaderValue(key, val)\n    }\n  }\n}\n\nmodule.exports = Request\n","module.exports = {\n  kClose: Symbol('close'),\n  kDestroy: Symbol('destroy'),\n  kDispatch: Symbol('dispatch'),\n  kUrl: Symbol('url'),\n  kWriting: Symbol('writing'),\n  kResuming: Symbol('resuming'),\n  kQueue: Symbol('queue'),\n  kConnect: Symbol('connect'),\n  kConnecting: Symbol('connecting'),\n  kHeadersList: Symbol('headers list'),\n  kKeepAliveDefaultTimeout: Symbol('default keep alive timeout'),\n  kKeepAliveMaxTimeout: Symbol('max keep alive timeout'),\n  kKeepAliveTimeoutThreshold: Symbol('keep alive timeout threshold'),\n  kKeepAliveTimeoutValue: Symbol('keep alive timeout'),\n  kKeepAlive: Symbol('keep alive'),\n  kHeadersTimeout: Symbol('headers timeout'),\n  kBodyTimeout: Symbol('body timeout'),\n  kServerName: Symbol('server name'),\n  kLocalAddress: Symbol('local address'),\n  kHost: Symbol('host'),\n  kNoRef: Symbol('no ref'),\n  kBodyUsed: Symbol('used'),\n  kRunning: Symbol('running'),\n  kBlocking: Symbol('blocking'),\n  kPending: Symbol('pending'),\n  kSize: Symbol('size'),\n  kBusy: Symbol('busy'),\n  kQueued: Symbol('queued'),\n  kFree: Symbol('free'),\n  kConnected: Symbol('connected'),\n  kClosed: Symbol('closed'),\n  kNeedDrain: Symbol('need drain'),\n  kReset: Symbol('reset'),\n  kDestroyed: Symbol.for('nodejs.stream.destroyed'),\n  kMaxHeadersSize: Symbol('max headers size'),\n  kRunningIdx: Symbol('running index'),\n  kPendingIdx: Symbol('pending index'),\n  kError: Symbol('error'),\n  kClients: Symbol('clients'),\n  kClient: Symbol('client'),\n  kParser: Symbol('parser'),\n  kOnDestroyed: Symbol('destroy callbacks'),\n  kPipelining: Symbol('pipelining'),\n  kSocket: Symbol('socket'),\n  kHostHeader: Symbol('host header'),\n  kConnector: Symbol('connector'),\n  kStrictContentLength: Symbol('strict content length'),\n  kMaxRedirections: Symbol('maxRedirections'),\n  kMaxRequests: Symbol('maxRequestsPerClient'),\n  kProxy: Symbol('proxy agent options'),\n  kCounter: Symbol('socket request counter'),\n  kInterceptors: Symbol('dispatch interceptors'),\n  kMaxResponseSize: Symbol('max response size'),\n  kHTTP2Session: Symbol('http2Session'),\n  kHTTP2SessionState: Symbol('http2Session state'),\n  kHTTP2BuildRequest: Symbol('http2 build request'),\n  kHTTP1BuildRequest: Symbol('http1 build request'),\n  kHTTP2CopyHeaders: Symbol('http2 copy headers'),\n  kHTTPConnVersion: Symbol('http connection version'),\n  kRetryHandlerDefaultRetry: Symbol('retry agent default retry'),\n  kConstruct: Symbol('constructable')\n}\n","'use strict'\n\nconst assert = require('assert')\nconst { kDestroyed, kBodyUsed } = require('./symbols')\nconst { IncomingMessage } = require('http')\nconst stream = require('stream')\nconst net = require('net')\nconst { InvalidArgumentError } = require('./errors')\nconst { Blob } = require('buffer')\nconst nodeUtil = require('util')\nconst { stringify } = require('querystring')\nconst { headerNameLowerCasedRecord } = require('./constants')\n\nconst [nodeMajor, nodeMinor] = process.versions.node.split('.').map(v => Number(v))\n\nfunction nop () {}\n\nfunction isStream (obj) {\n  return obj && typeof obj === 'object' && typeof obj.pipe === 'function' && typeof obj.on === 'function'\n}\n\n// based on https://github.com/node-fetch/fetch-blob/blob/8ab587d34080de94140b54f07168451e7d0b655e/index.js#L229-L241 (MIT License)\nfunction isBlobLike (object) {\n  return (Blob && object instanceof Blob) || (\n    object &&\n    typeof object === 'object' &&\n    (typeof object.stream === 'function' ||\n      typeof object.arrayBuffer === 'function') &&\n    /^(Blob|File)$/.test(object[Symbol.toStringTag])\n  )\n}\n\nfunction buildURL (url, queryParams) {\n  if (url.includes('?') || url.includes('#')) {\n    throw new Error('Query params cannot be passed when url already contains \"?\" or \"#\".')\n  }\n\n  const stringified = stringify(queryParams)\n\n  if (stringified) {\n    url += '?' + stringified\n  }\n\n  return url\n}\n\nfunction parseURL (url) {\n  if (typeof url === 'string') {\n    url = new URL(url)\n\n    if (!/^https?:/.test(url.origin || url.protocol)) {\n      throw new InvalidArgumentError('Invalid URL protocol: the URL must start with `http:` or `https:`.')\n    }\n\n    return url\n  }\n\n  if (!url || typeof url !== 'object') {\n    throw new InvalidArgumentError('Invalid URL: The URL argument must be a non-null object.')\n  }\n\n  if (!/^https?:/.test(url.origin || url.protocol)) {\n    throw new InvalidArgumentError('Invalid URL protocol: the URL must start with `http:` or `https:`.')\n  }\n\n  if (!(url instanceof URL)) {\n    if (url.port != null && url.port !== '' && !Number.isFinite(parseInt(url.port))) {\n      throw new InvalidArgumentError('Invalid URL: port must be a valid integer or a string representation of an integer.')\n    }\n\n    if (url.path != null && typeof url.path !== 'string') {\n      throw new InvalidArgumentError('Invalid URL path: the path must be a string or null/undefined.')\n    }\n\n    if (url.pathname != null && typeof url.pathname !== 'string') {\n      throw new InvalidArgumentError('Invalid URL pathname: the pathname must be a string or null/undefined.')\n    }\n\n    if (url.hostname != null && typeof url.hostname !== 'string') {\n      throw new InvalidArgumentError('Invalid URL hostname: the hostname must be a string or null/undefined.')\n    }\n\n    if (url.origin != null && typeof url.origin !== 'string') {\n      throw new InvalidArgumentError('Invalid URL origin: the origin must be a string or null/undefined.')\n    }\n\n    const port = url.port != null\n      ? url.port\n      : (url.protocol === 'https:' ? 443 : 80)\n    let origin = url.origin != null\n      ? url.origin\n      : `${url.protocol}//${url.hostname}:${port}`\n    let path = url.path != null\n      ? url.path\n      : `${url.pathname || ''}${url.search || ''}`\n\n    if (origin.endsWith('/')) {\n      origin = origin.substring(0, origin.length - 1)\n    }\n\n    if (path && !path.startsWith('/')) {\n      path = `/${path}`\n    }\n    // new URL(path, origin) is unsafe when `path` contains an absolute URL\n    // From https://developer.mozilla.org/en-US/docs/Web/API/URL/URL:\n    // If first parameter is a relative URL, second param is required, and will be used as the base URL.\n    // If first parameter is an absolute URL, a given second param will be ignored.\n    url = new URL(origin + path)\n  }\n\n  return url\n}\n\nfunction parseOrigin (url) {\n  url = parseURL(url)\n\n  if (url.pathname !== '/' || url.search || url.hash) {\n    throw new InvalidArgumentError('invalid url')\n  }\n\n  return url\n}\n\nfunction getHostname (host) {\n  if (host[0] === '[') {\n    const idx = host.indexOf(']')\n\n    assert(idx !== -1)\n    return host.substring(1, idx)\n  }\n\n  const idx = host.indexOf(':')\n  if (idx === -1) return host\n\n  return host.substring(0, idx)\n}\n\n// IP addresses are not valid server names per RFC6066\n// > Currently, the only server names supported are DNS hostnames\nfunction getServerName (host) {\n  if (!host) {\n    return null\n  }\n\n  assert.strictEqual(typeof host, 'string')\n\n  const servername = getHostname(host)\n  if (net.isIP(servername)) {\n    return ''\n  }\n\n  return servername\n}\n\nfunction deepClone (obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nfunction isAsyncIterable (obj) {\n  return !!(obj != null && typeof obj[Symbol.asyncIterator] === 'function')\n}\n\nfunction isIterable (obj) {\n  return !!(obj != null && (typeof obj[Symbol.iterator] === 'function' || typeof obj[Symbol.asyncIterator] === 'function'))\n}\n\nfunction bodyLength (body) {\n  if (body == null) {\n    return 0\n  } else if (isStream(body)) {\n    const state = body._readableState\n    return state && state.objectMode === false && state.ended === true && Number.isFinite(state.length)\n      ? state.length\n      : null\n  } else if (isBlobLike(body)) {\n    return body.size != null ? body.size : null\n  } else if (isBuffer(body)) {\n    return body.byteLength\n  }\n\n  return null\n}\n\nfunction isDestroyed (stream) {\n  return !stream || !!(stream.destroyed || stream[kDestroyed])\n}\n\nfunction isReadableAborted (stream) {\n  const state = stream && stream._readableState\n  return isDestroyed(stream) && state && !state.endEmitted\n}\n\nfunction destroy (stream, err) {\n  if (stream == null || !isStream(stream) || isDestroyed(stream)) {\n    return\n  }\n\n  if (typeof stream.destroy === 'function') {\n    if (Object.getPrototypeOf(stream).constructor === IncomingMessage) {\n      // See: https://github.com/nodejs/node/pull/38505/files\n      stream.socket = null\n    }\n\n    stream.destroy(err)\n  } else if (err) {\n    process.nextTick((stream, err) => {\n      stream.emit('error', err)\n    }, stream, err)\n  }\n\n  if (stream.destroyed !== true) {\n    stream[kDestroyed] = true\n  }\n}\n\nconst KEEPALIVE_TIMEOUT_EXPR = /timeout=(\\d+)/\nfunction parseKeepAliveTimeout (val) {\n  const m = val.toString().match(KEEPALIVE_TIMEOUT_EXPR)\n  return m ? parseInt(m[1], 10) * 1000 : null\n}\n\n/**\n * Retrieves a header name and returns its lowercase value.\n * @param {string | Buffer} value Header name\n * @returns {string}\n */\nfunction headerNameToString (value) {\n  return headerNameLowerCasedRecord[value] || value.toLowerCase()\n}\n\nfunction parseHeaders (headers, obj = {}) {\n  // For H2 support\n  if (!Array.isArray(headers)) return headers\n\n  for (let i = 0; i < headers.length; i += 2) {\n    const key = headers[i].toString().toLowerCase()\n    let val = obj[key]\n\n    if (!val) {\n      if (Array.isArray(headers[i + 1])) {\n        obj[key] = headers[i + 1].map(x => x.toString('utf8'))\n      } else {\n        obj[key] = headers[i + 1].toString('utf8')\n      }\n    } else {\n      if (!Array.isArray(val)) {\n        val = [val]\n        obj[key] = val\n      }\n      val.push(headers[i + 1].toString('utf8'))\n    }\n  }\n\n  // See https://github.com/nodejs/node/pull/46528\n  if ('content-length' in obj && 'content-disposition' in obj) {\n    obj['content-disposition'] = Buffer.from(obj['content-disposition']).toString('latin1')\n  }\n\n  return obj\n}\n\nfunction parseRawHeaders (headers) {\n  const ret = []\n  let hasContentLength = false\n  let contentDispositionIdx = -1\n\n  for (let n = 0; n < headers.length; n += 2) {\n    const key = headers[n + 0].toString()\n    const val = headers[n + 1].toString('utf8')\n\n    if (key.length === 14 && (key === 'content-length' || key.toLowerCase() === 'content-length')) {\n      ret.push(key, val)\n      hasContentLength = true\n    } else if (key.length === 19 && (key === 'content-disposition' || key.toLowerCase() === 'content-disposition')) {\n      contentDispositionIdx = ret.push(key, val) - 1\n    } else {\n      ret.push(key, val)\n    }\n  }\n\n  // See https://github.com/nodejs/node/pull/46528\n  if (hasContentLength && contentDispositionIdx !== -1) {\n    ret[contentDispositionIdx] = Buffer.from(ret[contentDispositionIdx]).toString('latin1')\n  }\n\n  return ret\n}\n\nfunction isBuffer (buffer) {\n  // See, https://github.com/mcollina/undici/pull/319\n  return buffer instanceof Uint8Array || Buffer.isBuffer(buffer)\n}\n\nfunction validateHandler (handler, method, upgrade) {\n  if (!handler || typeof handler !== 'object') {\n    throw new InvalidArgumentError('handler must be an object')\n  }\n\n  if (typeof handler.onConnect !== 'function') {\n    throw new InvalidArgumentError('invalid onConnect method')\n  }\n\n  if (typeof handler.onError !== 'function') {\n    throw new InvalidArgumentError('invalid onError method')\n  }\n\n  if (typeof handler.onBodySent !== 'function' && handler.onBodySent !== undefined) {\n    throw new InvalidArgumentError('invalid onBodySent method')\n  }\n\n  if (upgrade || method === 'CONNECT') {\n    if (typeof handler.onUpgrade !== 'function') {\n      throw new InvalidArgumentError('invalid onUpgrade method')\n    }\n  } else {\n    if (typeof handler.onHeaders !== 'function') {\n      throw new InvalidArgumentError('invalid onHeaders method')\n    }\n\n    if (typeof handler.onData !== 'function') {\n      throw new InvalidArgumentError('invalid onData method')\n    }\n\n    if (typeof handler.onComplete !== 'function') {\n      throw new InvalidArgumentError('invalid onComplete method')\n    }\n  }\n}\n\n// A body is disturbed if it has been read from and it cannot\n// be re-used without losing state or data.\nfunction isDisturbed (body) {\n  return !!(body && (\n    stream.isDisturbed\n      ? stream.isDisturbed(body) || body[kBodyUsed] // TODO (fix): Why is body[kBodyUsed] needed?\n      : body[kBodyUsed] ||\n        body.readableDidRead ||\n        (body._readableState && body._readableState.dataEmitted) ||\n        isReadableAborted(body)\n  ))\n}\n\nfunction isErrored (body) {\n  return !!(body && (\n    stream.isErrored\n      ? stream.isErrored(body)\n      : /state: 'errored'/.test(nodeUtil.inspect(body)\n      )))\n}\n\nfunction isReadable (body) {\n  return !!(body && (\n    stream.isReadable\n      ? stream.isReadable(body)\n      : /state: 'readable'/.test(nodeUtil.inspect(body)\n      )))\n}\n\nfunction getSocketInfo (socket) {\n  return {\n    localAddress: socket.localAddress,\n    localPort: socket.localPort,\n    remoteAddress: socket.remoteAddress,\n    remotePort: socket.remotePort,\n    remoteFamily: socket.remoteFamily,\n    timeout: socket.timeout,\n    bytesWritten: socket.bytesWritten,\n    bytesRead: socket.bytesRead\n  }\n}\n\nasync function * convertIterableToBuffer (iterable) {\n  for await (const chunk of iterable) {\n    yield Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk)\n  }\n}\n\nlet ReadableStream\nfunction ReadableStreamFrom (iterable) {\n  if (!ReadableStream) {\n    ReadableStream = require('stream/web').ReadableStream\n  }\n\n  if (ReadableStream.from) {\n    return ReadableStream.from(convertIterableToBuffer(iterable))\n  }\n\n  let iterator\n  return new ReadableStream(\n    {\n      async start () {\n        iterator = iterable[Symbol.asyncIterator]()\n      },\n      async pull (controller) {\n        const { done, value } = await iterator.next()\n        if (done) {\n          queueMicrotask(() => {\n            controller.close()\n          })\n        } else {\n          const buf = Buffer.isBuffer(value) ? value : Buffer.from(value)\n          controller.enqueue(new Uint8Array(buf))\n        }\n        return controller.desiredSize > 0\n      },\n      async cancel (reason) {\n        await iterator.return()\n      }\n    },\n    0\n  )\n}\n\n// The chunk should be a FormData instance and contains\n// all the required methods.\nfunction isFormDataLike (object) {\n  return (\n    object &&\n    typeof object === 'object' &&\n    typeof object.append === 'function' &&\n    typeof object.delete === 'function' &&\n    typeof object.get === 'function' &&\n    typeof object.getAll === 'function' &&\n    typeof object.has === 'function' &&\n    typeof object.set === 'function' &&\n    object[Symbol.toStringTag] === 'FormData'\n  )\n}\n\nfunction throwIfAborted (signal) {\n  if (!signal) { return }\n  if (typeof signal.throwIfAborted === 'function') {\n    signal.throwIfAborted()\n  } else {\n    if (signal.aborted) {\n      // DOMException not available < v17.0.0\n      const err = new Error('The operation was aborted')\n      err.name = 'AbortError'\n      throw err\n    }\n  }\n}\n\nfunction addAbortListener (signal, listener) {\n  if ('addEventListener' in signal) {\n    signal.addEventListener('abort', listener, { once: true })\n    return () => signal.removeEventListener('abort', listener)\n  }\n  signal.addListener('abort', listener)\n  return () => signal.removeListener('abort', listener)\n}\n\nconst hasToWellFormed = !!String.prototype.toWellFormed\n\n/**\n * @param {string} val\n */\nfunction toUSVString (val) {\n  if (hasToWellFormed) {\n    return `${val}`.toWellFormed()\n  } else if (nodeUtil.toUSVString) {\n    return nodeUtil.toUSVString(val)\n  }\n\n  return `${val}`\n}\n\n// Parsed accordingly to RFC 9110\n// https://www.rfc-editor.org/rfc/rfc9110#field.content-range\nfunction parseRangeHeader (range) {\n  if (range == null || range === '') return { start: 0, end: null, size: null }\n\n  const m = range ? range.match(/^bytes (\\d+)-(\\d+)\\/(\\d+)?$/) : null\n  return m\n    ? {\n        start: parseInt(m[1]),\n        end: m[2] ? parseInt(m[2]) : null,\n        size: m[3] ? parseInt(m[3]) : null\n      }\n    : null\n}\n\nconst kEnumerableProperty = Object.create(null)\nkEnumerableProperty.enumerable = true\n\nmodule.exports = {\n  kEnumerableProperty,\n  nop,\n  isDisturbed,\n  isErrored,\n  isReadable,\n  toUSVString,\n  isReadableAborted,\n  isBlobLike,\n  parseOrigin,\n  parseURL,\n  getServerName,\n  isStream,\n  isIterable,\n  isAsyncIterable,\n  isDestroyed,\n  headerNameToString,\n  parseRawHeaders,\n  parseHeaders,\n  parseKeepAliveTimeout,\n  destroy,\n  bodyLength,\n  deepClone,\n  ReadableStreamFrom,\n  isBuffer,\n  validateHandler,\n  getSocketInfo,\n  isFormDataLike,\n  buildURL,\n  throwIfAborted,\n  addAbortListener,\n  parseRangeHeader,\n  nodeMajor,\n  nodeMinor,\n  nodeHasAutoSelectFamily: nodeMajor > 18 || (nodeMajor === 18 && nodeMinor >= 13),\n  safeHTTPMethods: ['GET', 'HEAD', 'OPTIONS', 'TRACE']\n}\n","'use strict'\n\nconst Dispatcher = require('./dispatcher')\nconst {\n  ClientDestroyedError,\n  ClientClosedError,\n  InvalidArgumentError\n} = require('./core/errors')\nconst { kDestroy, kClose, kDispatch, kInterceptors } = require('./core/symbols')\n\nconst kDestroyed = Symbol('destroyed')\nconst kClosed = Symbol('closed')\nconst kOnDestroyed = Symbol('onDestroyed')\nconst kOnClosed = Symbol('onClosed')\nconst kInterceptedDispatch = Symbol('Intercepted Dispatch')\n\nclass DispatcherBase extends Dispatcher {\n  constructor () {\n    super()\n\n    this[kDestroyed] = false\n    this[kOnDestroyed] = null\n    this[kClosed] = false\n    this[kOnClosed] = []\n  }\n\n  get destroyed () {\n    return this[kDestroyed]\n  }\n\n  get closed () {\n    return this[kClosed]\n  }\n\n  get interceptors () {\n    return this[kInterceptors]\n  }\n\n  set interceptors (newInterceptors) {\n    if (newInterceptors) {\n      for (let i = newInterceptors.length - 1; i >= 0; i--) {\n        const interceptor = this[kInterceptors][i]\n        if (typeof interceptor !== 'function') {\n          throw new InvalidArgumentError('interceptor must be an function')\n        }\n      }\n    }\n\n    this[kInterceptors] = newInterceptors\n  }\n\n  close (callback) {\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.close((err, data) => {\n          return err ? reject(err) : resolve(data)\n        })\n      })\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    if (this[kDestroyed]) {\n      queueMicrotask(() => callback(new ClientDestroyedError(), null))\n      return\n    }\n\n    if (this[kClosed]) {\n      if (this[kOnClosed]) {\n        this[kOnClosed].push(callback)\n      } else {\n        queueMicrotask(() => callback(null, null))\n      }\n      return\n    }\n\n    this[kClosed] = true\n    this[kOnClosed].push(callback)\n\n    const onClosed = () => {\n      const callbacks = this[kOnClosed]\n      this[kOnClosed] = null\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null)\n      }\n    }\n\n    // Should not error.\n    this[kClose]()\n      .then(() => this.destroy())\n      .then(() => {\n        queueMicrotask(onClosed)\n      })\n  }\n\n  destroy (err, callback) {\n    if (typeof err === 'function') {\n      callback = err\n      err = null\n    }\n\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.destroy(err, (err, data) => {\n          return err ? /* istanbul ignore next: should never error */ reject(err) : resolve(data)\n        })\n      })\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    if (this[kDestroyed]) {\n      if (this[kOnDestroyed]) {\n        this[kOnDestroyed].push(callback)\n      } else {\n        queueMicrotask(() => callback(null, null))\n      }\n      return\n    }\n\n    if (!err) {\n      err = new ClientDestroyedError()\n    }\n\n    this[kDestroyed] = true\n    this[kOnDestroyed] = this[kOnDestroyed] || []\n    this[kOnDestroyed].push(callback)\n\n    const onDestroyed = () => {\n      const callbacks = this[kOnDestroyed]\n      this[kOnDestroyed] = null\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null)\n      }\n    }\n\n    // Should not error.\n    this[kDestroy](err).then(() => {\n      queueMicrotask(onDestroyed)\n    })\n  }\n\n  [kInterceptedDispatch] (opts, handler) {\n    if (!this[kInterceptors] || this[kInterceptors].length === 0) {\n      this[kInterceptedDispatch] = this[kDispatch]\n      return this[kDispatch](opts, handler)\n    }\n\n    let dispatch = this[kDispatch].bind(this)\n    for (let i = this[kInterceptors].length - 1; i >= 0; i--) {\n      dispatch = this[kInterceptors][i](dispatch)\n    }\n    this[kInterceptedDispatch] = dispatch\n    return dispatch(opts, handler)\n  }\n\n  dispatch (opts, handler) {\n    if (!handler || typeof handler !== 'object') {\n      throw new InvalidArgumentError('handler must be an object')\n    }\n\n    try {\n      if (!opts || typeof opts !== 'object') {\n        throw new InvalidArgumentError('opts must be an object.')\n      }\n\n      if (this[kDestroyed] || this[kOnDestroyed]) {\n        throw new ClientDestroyedError()\n      }\n\n      if (this[kClosed]) {\n        throw new ClientClosedError()\n      }\n\n      return this[kInterceptedDispatch](opts, handler)\n    } catch (err) {\n      if (typeof handler.onError !== 'function') {\n        throw new InvalidArgumentError('invalid onError method')\n      }\n\n      handler.onError(err)\n\n      return false\n    }\n  }\n}\n\nmodule.exports = DispatcherBase\n","'use strict'\n\nconst EventEmitter = require('events')\n\nclass Dispatcher extends EventEmitter {\n  dispatch () {\n    throw new Error('not implemented')\n  }\n\n  close () {\n    throw new Error('not implemented')\n  }\n\n  destroy () {\n    throw new Error('not implemented')\n  }\n}\n\nmodule.exports = Dispatcher\n","'use strict'\n\nconst Busboy = require('@fastify/busboy')\nconst util = require('../core/util')\nconst {\n  ReadableStreamFrom,\n  isBlobLike,\n  isReadableStreamLike,\n  readableStreamClose,\n  createDeferredPromise,\n  fullyReadBody\n} = require('./util')\nconst { FormData } = require('./formdata')\nconst { kState } = require('./symbols')\nconst { webidl } = require('./webidl')\nconst { DOMException, structuredClone } = require('./constants')\nconst { Blob, File: NativeFile } = require('buffer')\nconst { kBodyUsed } = require('../core/symbols')\nconst assert = require('assert')\nconst { isErrored } = require('../core/util')\nconst { isUint8Array, isArrayBuffer } = require('util/types')\nconst { File: UndiciFile } = require('./file')\nconst { parseMIMEType, serializeAMimeType } = require('./dataURL')\n\nlet random\ntry {\n  const crypto = require('node:crypto')\n  random = (max) => crypto.randomInt(0, max)\n} catch {\n  random = (max) => Math.floor(Math.random(max))\n}\n\nlet ReadableStream = globalThis.ReadableStream\n\n/** @type {globalThis['File']} */\nconst File = NativeFile ?? UndiciFile\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\n// https://fetch.spec.whatwg.org/#concept-bodyinit-extract\nfunction extractBody (object, keepalive = false) {\n  if (!ReadableStream) {\n    ReadableStream = require('stream/web').ReadableStream\n  }\n\n  // 1. Let stream be null.\n  let stream = null\n\n  // 2. If object is a ReadableStream object, then set stream to object.\n  if (object instanceof ReadableStream) {\n    stream = object\n  } else if (isBlobLike(object)) {\n    // 3. Otherwise, if object is a Blob object, set stream to the\n    //    result of running object’s get stream.\n    stream = object.stream()\n  } else {\n    // 4. Otherwise, set stream to a new ReadableStream object, and set\n    //    up stream.\n    stream = new ReadableStream({\n      async pull (controller) {\n        controller.enqueue(\n          typeof source === 'string' ? textEncoder.encode(source) : source\n        )\n        queueMicrotask(() => readableStreamClose(controller))\n      },\n      start () {},\n      type: undefined\n    })\n  }\n\n  // 5. Assert: stream is a ReadableStream object.\n  assert(isReadableStreamLike(stream))\n\n  // 6. Let action be null.\n  let action = null\n\n  // 7. Let source be null.\n  let source = null\n\n  // 8. Let length be null.\n  let length = null\n\n  // 9. Let type be null.\n  let type = null\n\n  // 10. Switch on object:\n  if (typeof object === 'string') {\n    // Set source to the UTF-8 encoding of object.\n    // Note: setting source to a Uint8Array here breaks some mocking assumptions.\n    source = object\n\n    // Set type to `text/plain;charset=UTF-8`.\n    type = 'text/plain;charset=UTF-8'\n  } else if (object instanceof URLSearchParams) {\n    // URLSearchParams\n\n    // spec says to run application/x-www-form-urlencoded on body.list\n    // this is implemented in Node.js as apart of an URLSearchParams instance toString method\n    // See: https://github.com/nodejs/node/blob/e46c680bf2b211bbd52cf959ca17ee98c7f657f5/lib/internal/url.js#L490\n    // and https://github.com/nodejs/node/blob/e46c680bf2b211bbd52cf959ca17ee98c7f657f5/lib/internal/url.js#L1100\n\n    // Set source to the result of running the application/x-www-form-urlencoded serializer with object’s list.\n    source = object.toString()\n\n    // Set type to `application/x-www-form-urlencoded;charset=UTF-8`.\n    type = 'application/x-www-form-urlencoded;charset=UTF-8'\n  } else if (isArrayBuffer(object)) {\n    // BufferSource/ArrayBuffer\n\n    // Set source to a copy of the bytes held by object.\n    source = new Uint8Array(object.slice())\n  } else if (ArrayBuffer.isView(object)) {\n    // BufferSource/ArrayBufferView\n\n    // Set source to a copy of the bytes held by object.\n    source = new Uint8Array(object.buffer.slice(object.byteOffset, object.byteOffset + object.byteLength))\n  } else if (util.isFormDataLike(object)) {\n    const boundary = `----formdata-undici-0${`${random(1e11)}`.padStart(11, '0')}`\n    const prefix = `--${boundary}\\r\\nContent-Disposition: form-data`\n\n    /*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n    const escape = (str) =>\n      str.replace(/\\n/g, '%0A').replace(/\\r/g, '%0D').replace(/\"/g, '%22')\n    const normalizeLinefeeds = (value) => value.replace(/\\r?\\n|\\r/g, '\\r\\n')\n\n    // Set action to this step: run the multipart/form-data\n    // encoding algorithm, with object’s entry list and UTF-8.\n    // - This ensures that the body is immutable and can't be changed afterwords\n    // - That the content-length is calculated in advance.\n    // - And that all parts are pre-encoded and ready to be sent.\n\n    const blobParts = []\n    const rn = new Uint8Array([13, 10]) // '\\r\\n'\n    length = 0\n    let hasUnknownSizeValue = false\n\n    for (const [name, value] of object) {\n      if (typeof value === 'string') {\n        const chunk = textEncoder.encode(prefix +\n          `; name=\"${escape(normalizeLinefeeds(name))}\"` +\n          `\\r\\n\\r\\n${normalizeLinefeeds(value)}\\r\\n`)\n        blobParts.push(chunk)\n        length += chunk.byteLength\n      } else {\n        const chunk = textEncoder.encode(`${prefix}; name=\"${escape(normalizeLinefeeds(name))}\"` +\n          (value.name ? `; filename=\"${escape(value.name)}\"` : '') + '\\r\\n' +\n          `Content-Type: ${\n            value.type || 'application/octet-stream'\n          }\\r\\n\\r\\n`)\n        blobParts.push(chunk, value, rn)\n        if (typeof value.size === 'number') {\n          length += chunk.byteLength + value.size + rn.byteLength\n        } else {\n          hasUnknownSizeValue = true\n        }\n      }\n    }\n\n    const chunk = textEncoder.encode(`--${boundary}--`)\n    blobParts.push(chunk)\n    length += chunk.byteLength\n    if (hasUnknownSizeValue) {\n      length = null\n    }\n\n    // Set source to object.\n    source = object\n\n    action = async function * () {\n      for (const part of blobParts) {\n        if (part.stream) {\n          yield * part.stream()\n        } else {\n          yield part\n        }\n      }\n    }\n\n    // Set type to `multipart/form-data; boundary=`,\n    // followed by the multipart/form-data boundary string generated\n    // by the multipart/form-data encoding algorithm.\n    type = 'multipart/form-data; boundary=' + boundary\n  } else if (isBlobLike(object)) {\n    // Blob\n\n    // Set source to object.\n    source = object\n\n    // Set length to object’s size.\n    length = object.size\n\n    // If object’s type attribute is not the empty byte sequence, set\n    // type to its value.\n    if (object.type) {\n      type = object.type\n    }\n  } else if (typeof object[Symbol.asyncIterator] === 'function') {\n    // If keepalive is true, then throw a TypeError.\n    if (keepalive) {\n      throw new TypeError('keepalive')\n    }\n\n    // If object is disturbed or locked, then throw a TypeError.\n    if (util.isDisturbed(object) || object.locked) {\n      throw new TypeError(\n        'Response body object should not be disturbed or locked'\n      )\n    }\n\n    stream =\n      object instanceof ReadableStream ? object : ReadableStreamFrom(object)\n  }\n\n  // 11. If source is a byte sequence, then set action to a\n  // step that returns source and length to source’s length.\n  if (typeof source === 'string' || util.isBuffer(source)) {\n    length = Buffer.byteLength(source)\n  }\n\n  // 12. If action is non-null, then run these steps in in parallel:\n  if (action != null) {\n    // Run action.\n    let iterator\n    stream = new ReadableStream({\n      async start () {\n        iterator = action(object)[Symbol.asyncIterator]()\n      },\n      async pull (controller) {\n        const { value, done } = await iterator.next()\n        if (done) {\n          // When running action is done, close stream.\n          queueMicrotask(() => {\n            controller.close()\n          })\n        } else {\n          // Whenever one or more bytes are available and stream is not errored,\n          // enqueue a Uint8Array wrapping an ArrayBuffer containing the available\n          // bytes into stream.\n          if (!isErrored(stream)) {\n            controller.enqueue(new Uint8Array(value))\n          }\n        }\n        return controller.desiredSize > 0\n      },\n      async cancel (reason) {\n        await iterator.return()\n      },\n      type: undefined\n    })\n  }\n\n  // 13. Let body be a body whose stream is stream, source is source,\n  // and length is length.\n  const body = { stream, source, length }\n\n  // 14. Return (body, type).\n  return [body, type]\n}\n\n// https://fetch.spec.whatwg.org/#bodyinit-safely-extract\nfunction safelyExtractBody (object, keepalive = false) {\n  if (!ReadableStream) {\n    // istanbul ignore next\n    ReadableStream = require('stream/web').ReadableStream\n  }\n\n  // To safely extract a body and a `Content-Type` value from\n  // a byte sequence or BodyInit object object, run these steps:\n\n  // 1. If object is a ReadableStream object, then:\n  if (object instanceof ReadableStream) {\n    // Assert: object is neither disturbed nor locked.\n    // istanbul ignore next\n    assert(!util.isDisturbed(object), 'The body has already been consumed.')\n    // istanbul ignore next\n    assert(!object.locked, 'The stream is locked.')\n  }\n\n  // 2. Return the results of extracting object.\n  return extractBody(object, keepalive)\n}\n\nfunction cloneBody (body) {\n  // To clone a body body, run these steps:\n\n  // https://fetch.spec.whatwg.org/#concept-body-clone\n\n  // 1. Let « out1, out2 » be the result of teeing body’s stream.\n  const [out1, out2] = body.stream.tee()\n  const out2Clone = structuredClone(out2, { transfer: [out2] })\n  // This, for whatever reasons, unrefs out2Clone which allows\n  // the process to exit by itself.\n  const [, finalClone] = out2Clone.tee()\n\n  // 2. Set body’s stream to out1.\n  body.stream = out1\n\n  // 3. Return a body whose stream is out2 and other members are copied from body.\n  return {\n    stream: finalClone,\n    length: body.length,\n    source: body.source\n  }\n}\n\nasync function * consumeBody (body) {\n  if (body) {\n    if (isUint8Array(body)) {\n      yield body\n    } else {\n      const stream = body.stream\n\n      if (util.isDisturbed(stream)) {\n        throw new TypeError('The body has already been consumed.')\n      }\n\n      if (stream.locked) {\n        throw new TypeError('The stream is locked.')\n      }\n\n      // Compat.\n      stream[kBodyUsed] = true\n\n      yield * stream\n    }\n  }\n}\n\nfunction throwIfAborted (state) {\n  if (state.aborted) {\n    throw new DOMException('The operation was aborted.', 'AbortError')\n  }\n}\n\nfunction bodyMixinMethods (instance) {\n  const methods = {\n    blob () {\n      // The blob() method steps are to return the result of\n      // running consume body with this and the following step\n      // given a byte sequence bytes: return a Blob whose\n      // contents are bytes and whose type attribute is this’s\n      // MIME type.\n      return specConsumeBody(this, (bytes) => {\n        let mimeType = bodyMimeType(this)\n\n        if (mimeType === 'failure') {\n          mimeType = ''\n        } else if (mimeType) {\n          mimeType = serializeAMimeType(mimeType)\n        }\n\n        // Return a Blob whose contents are bytes and type attribute\n        // is mimeType.\n        return new Blob([bytes], { type: mimeType })\n      }, instance)\n    },\n\n    arrayBuffer () {\n      // The arrayBuffer() method steps are to return the result\n      // of running consume body with this and the following step\n      // given a byte sequence bytes: return a new ArrayBuffer\n      // whose contents are bytes.\n      return specConsumeBody(this, (bytes) => {\n        return new Uint8Array(bytes).buffer\n      }, instance)\n    },\n\n    text () {\n      // The text() method steps are to return the result of running\n      // consume body with this and UTF-8 decode.\n      return specConsumeBody(this, utf8DecodeBytes, instance)\n    },\n\n    json () {\n      // The json() method steps are to return the result of running\n      // consume body with this and parse JSON from bytes.\n      return specConsumeBody(this, parseJSONFromBytes, instance)\n    },\n\n    async formData () {\n      webidl.brandCheck(this, instance)\n\n      throwIfAborted(this[kState])\n\n      const contentType = this.headers.get('Content-Type')\n\n      // If mimeType’s essence is \"multipart/form-data\", then:\n      if (/multipart\\/form-data/.test(contentType)) {\n        const headers = {}\n        for (const [key, value] of this.headers) headers[key.toLowerCase()] = value\n\n        const responseFormData = new FormData()\n\n        let busboy\n\n        try {\n          busboy = new Busboy({\n            headers,\n            preservePath: true\n          })\n        } catch (err) {\n          throw new DOMException(`${err}`, 'AbortError')\n        }\n\n        busboy.on('field', (name, value) => {\n          responseFormData.append(name, value)\n        })\n        busboy.on('file', (name, value, filename, encoding, mimeType) => {\n          const chunks = []\n\n          if (encoding === 'base64' || encoding.toLowerCase() === 'base64') {\n            let base64chunk = ''\n\n            value.on('data', (chunk) => {\n              base64chunk += chunk.toString().replace(/[\\r\\n]/gm, '')\n\n              const end = base64chunk.length - base64chunk.length % 4\n              chunks.push(Buffer.from(base64chunk.slice(0, end), 'base64'))\n\n              base64chunk = base64chunk.slice(end)\n            })\n            value.on('end', () => {\n              chunks.push(Buffer.from(base64chunk, 'base64'))\n              responseFormData.append(name, new File(chunks, filename, { type: mimeType }))\n            })\n          } else {\n            value.on('data', (chunk) => {\n              chunks.push(chunk)\n            })\n            value.on('end', () => {\n              responseFormData.append(name, new File(chunks, filename, { type: mimeType }))\n            })\n          }\n        })\n\n        const busboyResolve = new Promise((resolve, reject) => {\n          busboy.on('finish', resolve)\n          busboy.on('error', (err) => reject(new TypeError(err)))\n        })\n\n        if (this.body !== null) for await (const chunk of consumeBody(this[kState].body)) busboy.write(chunk)\n        busboy.end()\n        await busboyResolve\n\n        return responseFormData\n      } else if (/application\\/x-www-form-urlencoded/.test(contentType)) {\n        // Otherwise, if mimeType’s essence is \"application/x-www-form-urlencoded\", then:\n\n        // 1. Let entries be the result of parsing bytes.\n        let entries\n        try {\n          let text = ''\n          // application/x-www-form-urlencoded parser will keep the BOM.\n          // https://url.spec.whatwg.org/#concept-urlencoded-parser\n          // Note that streaming decoder is stateful and cannot be reused\n          const streamingDecoder = new TextDecoder('utf-8', { ignoreBOM: true })\n\n          for await (const chunk of consumeBody(this[kState].body)) {\n            if (!isUint8Array(chunk)) {\n              throw new TypeError('Expected Uint8Array chunk')\n            }\n            text += streamingDecoder.decode(chunk, { stream: true })\n          }\n          text += streamingDecoder.decode()\n          entries = new URLSearchParams(text)\n        } catch (err) {\n          // istanbul ignore next: Unclear when new URLSearchParams can fail on a string.\n          // 2. If entries is failure, then throw a TypeError.\n          throw Object.assign(new TypeError(), { cause: err })\n        }\n\n        // 3. Return a new FormData object whose entries are entries.\n        const formData = new FormData()\n        for (const [name, value] of entries) {\n          formData.append(name, value)\n        }\n        return formData\n      } else {\n        // Wait a tick before checking if the request has been aborted.\n        // Otherwise, a TypeError can be thrown when an AbortError should.\n        await Promise.resolve()\n\n        throwIfAborted(this[kState])\n\n        // Otherwise, throw a TypeError.\n        throw webidl.errors.exception({\n          header: `${instance.name}.formData`,\n          message: 'Could not parse content as FormData.'\n        })\n      }\n    }\n  }\n\n  return methods\n}\n\nfunction mixinBody (prototype) {\n  Object.assign(prototype.prototype, bodyMixinMethods(prototype))\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-body-consume-body\n * @param {Response|Request} object\n * @param {(value: unknown) => unknown} convertBytesToJSValue\n * @param {Response|Request} instance\n */\nasync function specConsumeBody (object, convertBytesToJSValue, instance) {\n  webidl.brandCheck(object, instance)\n\n  throwIfAborted(object[kState])\n\n  // 1. If object is unusable, then return a promise rejected\n  //    with a TypeError.\n  if (bodyUnusable(object[kState].body)) {\n    throw new TypeError('Body is unusable')\n  }\n\n  // 2. Let promise be a new promise.\n  const promise = createDeferredPromise()\n\n  // 3. Let errorSteps given error be to reject promise with error.\n  const errorSteps = (error) => promise.reject(error)\n\n  // 4. Let successSteps given a byte sequence data be to resolve\n  //    promise with the result of running convertBytesToJSValue\n  //    with data. If that threw an exception, then run errorSteps\n  //    with that exception.\n  const successSteps = (data) => {\n    try {\n      promise.resolve(convertBytesToJSValue(data))\n    } catch (e) {\n      errorSteps(e)\n    }\n  }\n\n  // 5. If object’s body is null, then run successSteps with an\n  //    empty byte sequence.\n  if (object[kState].body == null) {\n    successSteps(new Uint8Array())\n    return promise.promise\n  }\n\n  // 6. Otherwise, fully read object’s body given successSteps,\n  //    errorSteps, and object’s relevant global object.\n  await fullyReadBody(object[kState].body, successSteps, errorSteps)\n\n  // 7. Return promise.\n  return promise.promise\n}\n\n// https://fetch.spec.whatwg.org/#body-unusable\nfunction bodyUnusable (body) {\n  // An object including the Body interface mixin is\n  // said to be unusable if its body is non-null and\n  // its body’s stream is disturbed or locked.\n  return body != null && (body.stream.locked || util.isDisturbed(body.stream))\n}\n\n/**\n * @see https://encoding.spec.whatwg.org/#utf-8-decode\n * @param {Buffer} buffer\n */\nfunction utf8DecodeBytes (buffer) {\n  if (buffer.length === 0) {\n    return ''\n  }\n\n  // 1. Let buffer be the result of peeking three bytes from\n  //    ioQueue, converted to a byte sequence.\n\n  // 2. If buffer is 0xEF 0xBB 0xBF, then read three\n  //    bytes from ioQueue. (Do nothing with those bytes.)\n  if (buffer[0] === 0xEF && buffer[1] === 0xBB && buffer[2] === 0xBF) {\n    buffer = buffer.subarray(3)\n  }\n\n  // 3. Process a queue with an instance of UTF-8’s\n  //    decoder, ioQueue, output, and \"replacement\".\n  const output = textDecoder.decode(buffer)\n\n  // 4. Return output.\n  return output\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#parse-json-bytes-to-a-javascript-value\n * @param {Uint8Array} bytes\n */\nfunction parseJSONFromBytes (bytes) {\n  return JSON.parse(utf8DecodeBytes(bytes))\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-body-mime-type\n * @param {import('./response').Response|import('./request').Request} object\n */\nfunction bodyMimeType (object) {\n  const { headersList } = object[kState]\n  const contentType = headersList.get('content-type')\n\n  if (contentType === null) {\n    return 'failure'\n  }\n\n  return parseMIMEType(contentType)\n}\n\nmodule.exports = {\n  extractBody,\n  safelyExtractBody,\n  cloneBody,\n  mixinBody\n}\n","'use strict'\n\nconst { MessageChannel, receiveMessageOnPort } = require('worker_threads')\n\nconst corsSafeListedMethods = ['GET', 'HEAD', 'POST']\nconst corsSafeListedMethodsSet = new Set(corsSafeListedMethods)\n\nconst nullBodyStatus = [101, 204, 205, 304]\n\nconst redirectStatus = [301, 302, 303, 307, 308]\nconst redirectStatusSet = new Set(redirectStatus)\n\n// https://fetch.spec.whatwg.org/#block-bad-port\nconst badPorts = [\n  '1', '7', '9', '11', '13', '15', '17', '19', '20', '21', '22', '23', '25', '37', '42', '43', '53', '69', '77', '79',\n  '87', '95', '101', '102', '103', '104', '109', '110', '111', '113', '115', '117', '119', '123', '135', '137',\n  '139', '143', '161', '179', '389', '427', '465', '512', '513', '514', '515', '526', '530', '531', '532',\n  '540', '548', '554', '556', '563', '587', '601', '636', '989', '990', '993', '995', '1719', '1720', '1723',\n  '2049', '3659', '4045', '5060', '5061', '6000', '6566', '6665', '6666', '6667', '6668', '6669', '6697',\n  '10080'\n]\n\nconst badPortsSet = new Set(badPorts)\n\n// https://w3c.github.io/webappsec-referrer-policy/#referrer-policies\nconst referrerPolicy = [\n  '',\n  'no-referrer',\n  'no-referrer-when-downgrade',\n  'same-origin',\n  'origin',\n  'strict-origin',\n  'origin-when-cross-origin',\n  'strict-origin-when-cross-origin',\n  'unsafe-url'\n]\nconst referrerPolicySet = new Set(referrerPolicy)\n\nconst requestRedirect = ['follow', 'manual', 'error']\n\nconst safeMethods = ['GET', 'HEAD', 'OPTIONS', 'TRACE']\nconst safeMethodsSet = new Set(safeMethods)\n\nconst requestMode = ['navigate', 'same-origin', 'no-cors', 'cors']\n\nconst requestCredentials = ['omit', 'same-origin', 'include']\n\nconst requestCache = [\n  'default',\n  'no-store',\n  'reload',\n  'no-cache',\n  'force-cache',\n  'only-if-cached'\n]\n\n// https://fetch.spec.whatwg.org/#request-body-header-name\nconst requestBodyHeader = [\n  'content-encoding',\n  'content-language',\n  'content-location',\n  'content-type',\n  // See https://github.com/nodejs/undici/issues/2021\n  // 'Content-Length' is a forbidden header name, which is typically\n  // removed in the Headers implementation. However, undici doesn't\n  // filter out headers, so we add it here.\n  'content-length'\n]\n\n// https://fetch.spec.whatwg.org/#enumdef-requestduplex\nconst requestDuplex = [\n  'half'\n]\n\n// http://fetch.spec.whatwg.org/#forbidden-method\nconst forbiddenMethods = ['CONNECT', 'TRACE', 'TRACK']\nconst forbiddenMethodsSet = new Set(forbiddenMethods)\n\nconst subresource = [\n  'audio',\n  'audioworklet',\n  'font',\n  'image',\n  'manifest',\n  'paintworklet',\n  'script',\n  'style',\n  'track',\n  'video',\n  'xslt',\n  ''\n]\nconst subresourceSet = new Set(subresource)\n\n/** @type {globalThis['DOMException']} */\nconst DOMException = globalThis.DOMException ?? (() => {\n  // DOMException was only made a global in Node v17.0.0,\n  // but fetch supports >= v16.8.\n  try {\n    atob('~')\n  } catch (err) {\n    return Object.getPrototypeOf(err).constructor\n  }\n})()\n\nlet channel\n\n/** @type {globalThis['structuredClone']} */\nconst structuredClone =\n  globalThis.structuredClone ??\n  // https://github.com/nodejs/node/blob/b27ae24dcc4251bad726d9d84baf678d1f707fed/lib/internal/structured_clone.js\n  // structuredClone was added in v17.0.0, but fetch supports v16.8\n  function structuredClone (value, options = undefined) {\n    if (arguments.length === 0) {\n      throw new TypeError('missing argument')\n    }\n\n    if (!channel) {\n      channel = new MessageChannel()\n    }\n    channel.port1.unref()\n    channel.port2.unref()\n    channel.port1.postMessage(value, options?.transfer)\n    return receiveMessageOnPort(channel.port2).message\n  }\n\nmodule.exports = {\n  DOMException,\n  structuredClone,\n  subresource,\n  forbiddenMethods,\n  requestBodyHeader,\n  referrerPolicy,\n  requestRedirect,\n  requestMode,\n  requestCredentials,\n  requestCache,\n  redirectStatus,\n  corsSafeListedMethods,\n  nullBodyStatus,\n  safeMethods,\n  badPorts,\n  requestDuplex,\n  subresourceSet,\n  badPortsSet,\n  redirectStatusSet,\n  corsSafeListedMethodsSet,\n  safeMethodsSet,\n  forbiddenMethodsSet,\n  referrerPolicySet\n}\n","const assert = require('assert')\nconst { atob } = require('buffer')\nconst { isomorphicDecode } = require('./util')\n\nconst encoder = new TextEncoder()\n\n/**\n * @see https://mimesniff.spec.whatwg.org/#http-token-code-point\n */\nconst HTTP_TOKEN_CODEPOINTS = /^[!#$%&'*+-.^_|~A-Za-z0-9]+$/\nconst HTTP_WHITESPACE_REGEX = /(\\u000A|\\u000D|\\u0009|\\u0020)/ // eslint-disable-line\n/**\n * @see https://mimesniff.spec.whatwg.org/#http-quoted-string-token-code-point\n */\nconst HTTP_QUOTED_STRING_TOKENS = /[\\u0009|\\u0020-\\u007E|\\u0080-\\u00FF]/ // eslint-disable-line\n\n// https://fetch.spec.whatwg.org/#data-url-processor\n/** @param {URL} dataURL */\nfunction dataURLProcessor (dataURL) {\n  // 1. Assert: dataURL’s scheme is \"data\".\n  assert(dataURL.protocol === 'data:')\n\n  // 2. Let input be the result of running the URL\n  // serializer on dataURL with exclude fragment\n  // set to true.\n  let input = URLSerializer(dataURL, true)\n\n  // 3. Remove the leading \"data:\" string from input.\n  input = input.slice(5)\n\n  // 4. Let position point at the start of input.\n  const position = { position: 0 }\n\n  // 5. Let mimeType be the result of collecting a\n  // sequence of code points that are not equal\n  // to U+002C (,), given position.\n  let mimeType = collectASequenceOfCodePointsFast(\n    ',',\n    input,\n    position\n  )\n\n  // 6. Strip leading and trailing ASCII whitespace\n  // from mimeType.\n  // Undici implementation note: we need to store the\n  // length because if the mimetype has spaces removed,\n  // the wrong amount will be sliced from the input in\n  // step #9\n  const mimeTypeLength = mimeType.length\n  mimeType = removeASCIIWhitespace(mimeType, true, true)\n\n  // 7. If position is past the end of input, then\n  // return failure\n  if (position.position >= input.length) {\n    return 'failure'\n  }\n\n  // 8. Advance position by 1.\n  position.position++\n\n  // 9. Let encodedBody be the remainder of input.\n  const encodedBody = input.slice(mimeTypeLength + 1)\n\n  // 10. Let body be the percent-decoding of encodedBody.\n  let body = stringPercentDecode(encodedBody)\n\n  // 11. If mimeType ends with U+003B (;), followed by\n  // zero or more U+0020 SPACE, followed by an ASCII\n  // case-insensitive match for \"base64\", then:\n  if (/;(\\u0020){0,}base64$/i.test(mimeType)) {\n    // 1. Let stringBody be the isomorphic decode of body.\n    const stringBody = isomorphicDecode(body)\n\n    // 2. Set body to the forgiving-base64 decode of\n    // stringBody.\n    body = forgivingBase64(stringBody)\n\n    // 3. If body is failure, then return failure.\n    if (body === 'failure') {\n      return 'failure'\n    }\n\n    // 4. Remove the last 6 code points from mimeType.\n    mimeType = mimeType.slice(0, -6)\n\n    // 5. Remove trailing U+0020 SPACE code points from mimeType,\n    // if any.\n    mimeType = mimeType.replace(/(\\u0020)+$/, '')\n\n    // 6. Remove the last U+003B (;) code point from mimeType.\n    mimeType = mimeType.slice(0, -1)\n  }\n\n  // 12. If mimeType starts with U+003B (;), then prepend\n  // \"text/plain\" to mimeType.\n  if (mimeType.startsWith(';')) {\n    mimeType = 'text/plain' + mimeType\n  }\n\n  // 13. Let mimeTypeRecord be the result of parsing\n  // mimeType.\n  let mimeTypeRecord = parseMIMEType(mimeType)\n\n  // 14. If mimeTypeRecord is failure, then set\n  // mimeTypeRecord to text/plain;charset=US-ASCII.\n  if (mimeTypeRecord === 'failure') {\n    mimeTypeRecord = parseMIMEType('text/plain;charset=US-ASCII')\n  }\n\n  // 15. Return a new data: URL struct whose MIME\n  // type is mimeTypeRecord and body is body.\n  // https://fetch.spec.whatwg.org/#data-url-struct\n  return { mimeType: mimeTypeRecord, body }\n}\n\n// https://url.spec.whatwg.org/#concept-url-serializer\n/**\n * @param {URL} url\n * @param {boolean} excludeFragment\n */\nfunction URLSerializer (url, excludeFragment = false) {\n  if (!excludeFragment) {\n    return url.href\n  }\n\n  const href = url.href\n  const hashLength = url.hash.length\n\n  return hashLength === 0 ? href : href.substring(0, href.length - hashLength)\n}\n\n// https://infra.spec.whatwg.org/#collect-a-sequence-of-code-points\n/**\n * @param {(char: string) => boolean} condition\n * @param {string} input\n * @param {{ position: number }} position\n */\nfunction collectASequenceOfCodePoints (condition, input, position) {\n  // 1. Let result be the empty string.\n  let result = ''\n\n  // 2. While position doesn’t point past the end of input and the\n  // code point at position within input meets the condition condition:\n  while (position.position < input.length && condition(input[position.position])) {\n    // 1. Append that code point to the end of result.\n    result += input[position.position]\n\n    // 2. Advance position by 1.\n    position.position++\n  }\n\n  // 3. Return result.\n  return result\n}\n\n/**\n * A faster collectASequenceOfCodePoints that only works when comparing a single character.\n * @param {string} char\n * @param {string} input\n * @param {{ position: number }} position\n */\nfunction collectASequenceOfCodePointsFast (char, input, position) {\n  const idx = input.indexOf(char, position.position)\n  const start = position.position\n\n  if (idx === -1) {\n    position.position = input.length\n    return input.slice(start)\n  }\n\n  position.position = idx\n  return input.slice(start, position.position)\n}\n\n// https://url.spec.whatwg.org/#string-percent-decode\n/** @param {string} input */\nfunction stringPercentDecode (input) {\n  // 1. Let bytes be the UTF-8 encoding of input.\n  const bytes = encoder.encode(input)\n\n  // 2. Return the percent-decoding of bytes.\n  return percentDecode(bytes)\n}\n\n// https://url.spec.whatwg.org/#percent-decode\n/** @param {Uint8Array} input */\nfunction percentDecode (input) {\n  // 1. Let output be an empty byte sequence.\n  /** @type {number[]} */\n  const output = []\n\n  // 2. For each byte byte in input:\n  for (let i = 0; i < input.length; i++) {\n    const byte = input[i]\n\n    // 1. If byte is not 0x25 (%), then append byte to output.\n    if (byte !== 0x25) {\n      output.push(byte)\n\n    // 2. Otherwise, if byte is 0x25 (%) and the next two bytes\n    // after byte in input are not in the ranges\n    // 0x30 (0) to 0x39 (9), 0x41 (A) to 0x46 (F),\n    // and 0x61 (a) to 0x66 (f), all inclusive, append byte\n    // to output.\n    } else if (\n      byte === 0x25 &&\n      !/^[0-9A-Fa-f]{2}$/i.test(String.fromCharCode(input[i + 1], input[i + 2]))\n    ) {\n      output.push(0x25)\n\n    // 3. Otherwise:\n    } else {\n      // 1. Let bytePoint be the two bytes after byte in input,\n      // decoded, and then interpreted as hexadecimal number.\n      const nextTwoBytes = String.fromCharCode(input[i + 1], input[i + 2])\n      const bytePoint = Number.parseInt(nextTwoBytes, 16)\n\n      // 2. Append a byte whose value is bytePoint to output.\n      output.push(bytePoint)\n\n      // 3. Skip the next two bytes in input.\n      i += 2\n    }\n  }\n\n  // 3. Return output.\n  return Uint8Array.from(output)\n}\n\n// https://mimesniff.spec.whatwg.org/#parse-a-mime-type\n/** @param {string} input */\nfunction parseMIMEType (input) {\n  // 1. Remove any leading and trailing HTTP whitespace\n  // from input.\n  input = removeHTTPWhitespace(input, true, true)\n\n  // 2. Let position be a position variable for input,\n  // initially pointing at the start of input.\n  const position = { position: 0 }\n\n  // 3. Let type be the result of collecting a sequence\n  // of code points that are not U+002F (/) from\n  // input, given position.\n  const type = collectASequenceOfCodePointsFast(\n    '/',\n    input,\n    position\n  )\n\n  // 4. If type is the empty string or does not solely\n  // contain HTTP token code points, then return failure.\n  // https://mimesniff.spec.whatwg.org/#http-token-code-point\n  if (type.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(type)) {\n    return 'failure'\n  }\n\n  // 5. If position is past the end of input, then return\n  // failure\n  if (position.position > input.length) {\n    return 'failure'\n  }\n\n  // 6. Advance position by 1. (This skips past U+002F (/).)\n  position.position++\n\n  // 7. Let subtype be the result of collecting a sequence of\n  // code points that are not U+003B (;) from input, given\n  // position.\n  let subtype = collectASequenceOfCodePointsFast(\n    ';',\n    input,\n    position\n  )\n\n  // 8. Remove any trailing HTTP whitespace from subtype.\n  subtype = removeHTTPWhitespace(subtype, false, true)\n\n  // 9. If subtype is the empty string or does not solely\n  // contain HTTP token code points, then return failure.\n  if (subtype.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(subtype)) {\n    return 'failure'\n  }\n\n  const typeLowercase = type.toLowerCase()\n  const subtypeLowercase = subtype.toLowerCase()\n\n  // 10. Let mimeType be a new MIME type record whose type\n  // is type, in ASCII lowercase, and subtype is subtype,\n  // in ASCII lowercase.\n  // https://mimesniff.spec.whatwg.org/#mime-type\n  const mimeType = {\n    type: typeLowercase,\n    subtype: subtypeLowercase,\n    /** @type {Map<string, string>} */\n    parameters: new Map(),\n    // https://mimesniff.spec.whatwg.org/#mime-type-essence\n    essence: `${typeLowercase}/${subtypeLowercase}`\n  }\n\n  // 11. While position is not past the end of input:\n  while (position.position < input.length) {\n    // 1. Advance position by 1. (This skips past U+003B (;).)\n    position.position++\n\n    // 2. Collect a sequence of code points that are HTTP\n    // whitespace from input given position.\n    collectASequenceOfCodePoints(\n      // https://fetch.spec.whatwg.org/#http-whitespace\n      char => HTTP_WHITESPACE_REGEX.test(char),\n      input,\n      position\n    )\n\n    // 3. Let parameterName be the result of collecting a\n    // sequence of code points that are not U+003B (;)\n    // or U+003D (=) from input, given position.\n    let parameterName = collectASequenceOfCodePoints(\n      (char) => char !== ';' && char !== '=',\n      input,\n      position\n    )\n\n    // 4. Set parameterName to parameterName, in ASCII\n    // lowercase.\n    parameterName = parameterName.toLowerCase()\n\n    // 5. If position is not past the end of input, then:\n    if (position.position < input.length) {\n      // 1. If the code point at position within input is\n      // U+003B (;), then continue.\n      if (input[position.position] === ';') {\n        continue\n      }\n\n      // 2. Advance position by 1. (This skips past U+003D (=).)\n      position.position++\n    }\n\n    // 6. If position is past the end of input, then break.\n    if (position.position > input.length) {\n      break\n    }\n\n    // 7. Let parameterValue be null.\n    let parameterValue = null\n\n    // 8. If the code point at position within input is\n    // U+0022 (\"), then:\n    if (input[position.position] === '\"') {\n      // 1. Set parameterValue to the result of collecting\n      // an HTTP quoted string from input, given position\n      // and the extract-value flag.\n      parameterValue = collectAnHTTPQuotedString(input, position, true)\n\n      // 2. Collect a sequence of code points that are not\n      // U+003B (;) from input, given position.\n      collectASequenceOfCodePointsFast(\n        ';',\n        input,\n        position\n      )\n\n    // 9. Otherwise:\n    } else {\n      // 1. Set parameterValue to the result of collecting\n      // a sequence of code points that are not U+003B (;)\n      // from input, given position.\n      parameterValue = collectASequenceOfCodePointsFast(\n        ';',\n        input,\n        position\n      )\n\n      // 2. Remove any trailing HTTP whitespace from parameterValue.\n      parameterValue = removeHTTPWhitespace(parameterValue, false, true)\n\n      // 3. If parameterValue is the empty string, then continue.\n      if (parameterValue.length === 0) {\n        continue\n      }\n    }\n\n    // 10. If all of the following are true\n    // - parameterName is not the empty string\n    // - parameterName solely contains HTTP token code points\n    // - parameterValue solely contains HTTP quoted-string token code points\n    // - mimeType’s parameters[parameterName] does not exist\n    // then set mimeType’s parameters[parameterName] to parameterValue.\n    if (\n      parameterName.length !== 0 &&\n      HTTP_TOKEN_CODEPOINTS.test(parameterName) &&\n      (parameterValue.length === 0 || HTTP_QUOTED_STRING_TOKENS.test(parameterValue)) &&\n      !mimeType.parameters.has(parameterName)\n    ) {\n      mimeType.parameters.set(parameterName, parameterValue)\n    }\n  }\n\n  // 12. Return mimeType.\n  return mimeType\n}\n\n// https://infra.spec.whatwg.org/#forgiving-base64-decode\n/** @param {string} data */\nfunction forgivingBase64 (data) {\n  // 1. Remove all ASCII whitespace from data.\n  data = data.replace(/[\\u0009\\u000A\\u000C\\u000D\\u0020]/g, '')  // eslint-disable-line\n\n  // 2. If data’s code point length divides by 4 leaving\n  // no remainder, then:\n  if (data.length % 4 === 0) {\n    // 1. If data ends with one or two U+003D (=) code points,\n    // then remove them from data.\n    data = data.replace(/=?=$/, '')\n  }\n\n  // 3. If data’s code point length divides by 4 leaving\n  // a remainder of 1, then return failure.\n  if (data.length % 4 === 1) {\n    return 'failure'\n  }\n\n  // 4. If data contains a code point that is not one of\n  //  U+002B (+)\n  //  U+002F (/)\n  //  ASCII alphanumeric\n  // then return failure.\n  if (/[^+/0-9A-Za-z]/.test(data)) {\n    return 'failure'\n  }\n\n  const binary = atob(data)\n  const bytes = new Uint8Array(binary.length)\n\n  for (let byte = 0; byte < binary.length; byte++) {\n    bytes[byte] = binary.charCodeAt(byte)\n  }\n\n  return bytes\n}\n\n// https://fetch.spec.whatwg.org/#collect-an-http-quoted-string\n// tests: https://fetch.spec.whatwg.org/#example-http-quoted-string\n/**\n * @param {string} input\n * @param {{ position: number }} position\n * @param {boolean?} extractValue\n */\nfunction collectAnHTTPQuotedString (input, position, extractValue) {\n  // 1. Let positionStart be position.\n  const positionStart = position.position\n\n  // 2. Let value be the empty string.\n  let value = ''\n\n  // 3. Assert: the code point at position within input\n  // is U+0022 (\").\n  assert(input[position.position] === '\"')\n\n  // 4. Advance position by 1.\n  position.position++\n\n  // 5. While true:\n  while (true) {\n    // 1. Append the result of collecting a sequence of code points\n    // that are not U+0022 (\") or U+005C (\\) from input, given\n    // position, to value.\n    value += collectASequenceOfCodePoints(\n      (char) => char !== '\"' && char !== '\\\\',\n      input,\n      position\n    )\n\n    // 2. If position is past the end of input, then break.\n    if (position.position >= input.length) {\n      break\n    }\n\n    // 3. Let quoteOrBackslash be the code point at position within\n    // input.\n    const quoteOrBackslash = input[position.position]\n\n    // 4. Advance position by 1.\n    position.position++\n\n    // 5. If quoteOrBackslash is U+005C (\\), then:\n    if (quoteOrBackslash === '\\\\') {\n      // 1. If position is past the end of input, then append\n      // U+005C (\\) to value and break.\n      if (position.position >= input.length) {\n        value += '\\\\'\n        break\n      }\n\n      // 2. Append the code point at position within input to value.\n      value += input[position.position]\n\n      // 3. Advance position by 1.\n      position.position++\n\n    // 6. Otherwise:\n    } else {\n      // 1. Assert: quoteOrBackslash is U+0022 (\").\n      assert(quoteOrBackslash === '\"')\n\n      // 2. Break.\n      break\n    }\n  }\n\n  // 6. If the extract-value flag is set, then return value.\n  if (extractValue) {\n    return value\n  }\n\n  // 7. Return the code points from positionStart to position,\n  // inclusive, within input.\n  return input.slice(positionStart, position.position)\n}\n\n/**\n * @see https://mimesniff.spec.whatwg.org/#serialize-a-mime-type\n */\nfunction serializeAMimeType (mimeType) {\n  assert(mimeType !== 'failure')\n  const { parameters, essence } = mimeType\n\n  // 1. Let serialization be the concatenation of mimeType’s\n  //    type, U+002F (/), and mimeType’s subtype.\n  let serialization = essence\n\n  // 2. For each name → value of mimeType’s parameters:\n  for (let [name, value] of parameters.entries()) {\n    // 1. Append U+003B (;) to serialization.\n    serialization += ';'\n\n    // 2. Append name to serialization.\n    serialization += name\n\n    // 3. Append U+003D (=) to serialization.\n    serialization += '='\n\n    // 4. If value does not solely contain HTTP token code\n    //    points or value is the empty string, then:\n    if (!HTTP_TOKEN_CODEPOINTS.test(value)) {\n      // 1. Precede each occurence of U+0022 (\") or\n      //    U+005C (\\) in value with U+005C (\\).\n      value = value.replace(/(\\\\|\")/g, '\\\\$1')\n\n      // 2. Prepend U+0022 (\") to value.\n      value = '\"' + value\n\n      // 3. Append U+0022 (\") to value.\n      value += '\"'\n    }\n\n    // 5. Append value to serialization.\n    serialization += value\n  }\n\n  // 3. Return serialization.\n  return serialization\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#http-whitespace\n * @param {string} char\n */\nfunction isHTTPWhiteSpace (char) {\n  return char === '\\r' || char === '\\n' || char === '\\t' || char === ' '\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#http-whitespace\n * @param {string} str\n */\nfunction removeHTTPWhitespace (str, leading = true, trailing = true) {\n  let lead = 0\n  let trail = str.length - 1\n\n  if (leading) {\n    for (; lead < str.length && isHTTPWhiteSpace(str[lead]); lead++);\n  }\n\n  if (trailing) {\n    for (; trail > 0 && isHTTPWhiteSpace(str[trail]); trail--);\n  }\n\n  return str.slice(lead, trail + 1)\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n * @param {string} char\n */\nfunction isASCIIWhitespace (char) {\n  return char === '\\r' || char === '\\n' || char === '\\t' || char === '\\f' || char === ' '\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#strip-leading-and-trailing-ascii-whitespace\n */\nfunction removeASCIIWhitespace (str, leading = true, trailing = true) {\n  let lead = 0\n  let trail = str.length - 1\n\n  if (leading) {\n    for (; lead < str.length && isASCIIWhitespace(str[lead]); lead++);\n  }\n\n  if (trailing) {\n    for (; trail > 0 && isASCIIWhitespace(str[trail]); trail--);\n  }\n\n  return str.slice(lead, trail + 1)\n}\n\nmodule.exports = {\n  dataURLProcessor,\n  URLSerializer,\n  collectASequenceOfCodePoints,\n  collectASequenceOfCodePointsFast,\n  stringPercentDecode,\n  parseMIMEType,\n  collectAnHTTPQuotedString,\n  serializeAMimeType\n}\n","'use strict'\n\nconst { Blob, File: NativeFile } = require('buffer')\nconst { types } = require('util')\nconst { kState } = require('./symbols')\nconst { isBlobLike } = require('./util')\nconst { webidl } = require('./webidl')\nconst { parseMIMEType, serializeAMimeType } = require('./dataURL')\nconst { kEnumerableProperty } = require('../core/util')\nconst encoder = new TextEncoder()\n\nclass File extends Blob {\n  constructor (fileBits, fileName, options = {}) {\n    // The File constructor is invoked with two or three parameters, depending\n    // on whether the optional dictionary parameter is used. When the File()\n    // constructor is invoked, user agents must run the following steps:\n    webidl.argumentLengthCheck(arguments, 2, { header: 'File constructor' })\n\n    fileBits = webidl.converters['sequence<BlobPart>'](fileBits)\n    fileName = webidl.converters.USVString(fileName)\n    options = webidl.converters.FilePropertyBag(options)\n\n    // 1. Let bytes be the result of processing blob parts given fileBits and\n    // options.\n    // Note: Blob handles this for us\n\n    // 2. Let n be the fileName argument to the constructor.\n    const n = fileName\n\n    // 3. Process FilePropertyBag dictionary argument by running the following\n    // substeps:\n\n    //    1. If the type member is provided and is not the empty string, let t\n    //    be set to the type dictionary member. If t contains any characters\n    //    outside the range U+0020 to U+007E, then set t to the empty string\n    //    and return from these substeps.\n    //    2. Convert every character in t to ASCII lowercase.\n    let t = options.type\n    let d\n\n    // eslint-disable-next-line no-labels\n    substep: {\n      if (t) {\n        t = parseMIMEType(t)\n\n        if (t === 'failure') {\n          t = ''\n          // eslint-disable-next-line no-labels\n          break substep\n        }\n\n        t = serializeAMimeType(t).toLowerCase()\n      }\n\n      //    3. If the lastModified member is provided, let d be set to the\n      //    lastModified dictionary member. If it is not provided, set d to the\n      //    current date and time represented as the number of milliseconds since\n      //    the Unix Epoch (which is the equivalent of Date.now() [ECMA-262]).\n      d = options.lastModified\n    }\n\n    // 4. Return a new File object F such that:\n    // F refers to the bytes byte sequence.\n    // F.size is set to the number of total bytes in bytes.\n    // F.name is set to n.\n    // F.type is set to t.\n    // F.lastModified is set to d.\n\n    super(processBlobParts(fileBits, options), { type: t })\n    this[kState] = {\n      name: n,\n      lastModified: d,\n      type: t\n    }\n  }\n\n  get name () {\n    webidl.brandCheck(this, File)\n\n    return this[kState].name\n  }\n\n  get lastModified () {\n    webidl.brandCheck(this, File)\n\n    return this[kState].lastModified\n  }\n\n  get type () {\n    webidl.brandCheck(this, File)\n\n    return this[kState].type\n  }\n}\n\nclass FileLike {\n  constructor (blobLike, fileName, options = {}) {\n    // TODO: argument idl type check\n\n    // The File constructor is invoked with two or three parameters, depending\n    // on whether the optional dictionary parameter is used. When the File()\n    // constructor is invoked, user agents must run the following steps:\n\n    // 1. Let bytes be the result of processing blob parts given fileBits and\n    // options.\n\n    // 2. Let n be the fileName argument to the constructor.\n    const n = fileName\n\n    // 3. Process FilePropertyBag dictionary argument by running the following\n    // substeps:\n\n    //    1. If the type member is provided and is not the empty string, let t\n    //    be set to the type dictionary member. If t contains any characters\n    //    outside the range U+0020 to U+007E, then set t to the empty string\n    //    and return from these substeps.\n    //    TODO\n    const t = options.type\n\n    //    2. Convert every character in t to ASCII lowercase.\n    //    TODO\n\n    //    3. If the lastModified member is provided, let d be set to the\n    //    lastModified dictionary member. If it is not provided, set d to the\n    //    current date and time represented as the number of milliseconds since\n    //    the Unix Epoch (which is the equivalent of Date.now() [ECMA-262]).\n    const d = options.lastModified ?? Date.now()\n\n    // 4. Return a new File object F such that:\n    // F refers to the bytes byte sequence.\n    // F.size is set to the number of total bytes in bytes.\n    // F.name is set to n.\n    // F.type is set to t.\n    // F.lastModified is set to d.\n\n    this[kState] = {\n      blobLike,\n      name: n,\n      type: t,\n      lastModified: d\n    }\n  }\n\n  stream (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.stream(...args)\n  }\n\n  arrayBuffer (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.arrayBuffer(...args)\n  }\n\n  slice (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.slice(...args)\n  }\n\n  text (...args) {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.text(...args)\n  }\n\n  get size () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.size\n  }\n\n  get type () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].blobLike.type\n  }\n\n  get name () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].name\n  }\n\n  get lastModified () {\n    webidl.brandCheck(this, FileLike)\n\n    return this[kState].lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n}\n\nObject.defineProperties(File.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'File',\n    configurable: true\n  },\n  name: kEnumerableProperty,\n  lastModified: kEnumerableProperty\n})\n\nwebidl.converters.Blob = webidl.interfaceConverter(Blob)\n\nwebidl.converters.BlobPart = function (V, opts) {\n  if (webidl.util.Type(V) === 'Object') {\n    if (isBlobLike(V)) {\n      return webidl.converters.Blob(V, { strict: false })\n    }\n\n    if (\n      ArrayBuffer.isView(V) ||\n      types.isAnyArrayBuffer(V)\n    ) {\n      return webidl.converters.BufferSource(V, opts)\n    }\n  }\n\n  return webidl.converters.USVString(V, opts)\n}\n\nwebidl.converters['sequence<BlobPart>'] = webidl.sequenceConverter(\n  webidl.converters.BlobPart\n)\n\n// https://www.w3.org/TR/FileAPI/#dfn-FilePropertyBag\nwebidl.converters.FilePropertyBag = webidl.dictionaryConverter([\n  {\n    key: 'lastModified',\n    converter: webidl.converters['long long'],\n    get defaultValue () {\n      return Date.now()\n    }\n  },\n  {\n    key: 'type',\n    converter: webidl.converters.DOMString,\n    defaultValue: ''\n  },\n  {\n    key: 'endings',\n    converter: (value) => {\n      value = webidl.converters.DOMString(value)\n      value = value.toLowerCase()\n\n      if (value !== 'native') {\n        value = 'transparent'\n      }\n\n      return value\n    },\n    defaultValue: 'transparent'\n  }\n])\n\n/**\n * @see https://www.w3.org/TR/FileAPI/#process-blob-parts\n * @param {(NodeJS.TypedArray|Blob|string)[]} parts\n * @param {{ type: string, endings: string }} options\n */\nfunction processBlobParts (parts, options) {\n  // 1. Let bytes be an empty sequence of bytes.\n  /** @type {NodeJS.TypedArray[]} */\n  const bytes = []\n\n  // 2. For each element in parts:\n  for (const element of parts) {\n    // 1. If element is a USVString, run the following substeps:\n    if (typeof element === 'string') {\n      // 1. Let s be element.\n      let s = element\n\n      // 2. If the endings member of options is \"native\", set s\n      //    to the result of converting line endings to native\n      //    of element.\n      if (options.endings === 'native') {\n        s = convertLineEndingsNative(s)\n      }\n\n      // 3. Append the result of UTF-8 encoding s to bytes.\n      bytes.push(encoder.encode(s))\n    } else if (\n      types.isAnyArrayBuffer(element) ||\n      types.isTypedArray(element)\n    ) {\n      // 2. If element is a BufferSource, get a copy of the\n      //    bytes held by the buffer source, and append those\n      //    bytes to bytes.\n      if (!element.buffer) { // ArrayBuffer\n        bytes.push(new Uint8Array(element))\n      } else {\n        bytes.push(\n          new Uint8Array(element.buffer, element.byteOffset, element.byteLength)\n        )\n      }\n    } else if (isBlobLike(element)) {\n      // 3. If element is a Blob, append the bytes it represents\n      //    to bytes.\n      bytes.push(element)\n    }\n  }\n\n  // 3. Return bytes.\n  return bytes\n}\n\n/**\n * @see https://www.w3.org/TR/FileAPI/#convert-line-endings-to-native\n * @param {string} s\n */\nfunction convertLineEndingsNative (s) {\n  // 1. Let native line ending be be the code point U+000A LF.\n  let nativeLineEnding = '\\n'\n\n  // 2. If the underlying platform’s conventions are to\n  //    represent newlines as a carriage return and line feed\n  //    sequence, set native line ending to the code point\n  //    U+000D CR followed by the code point U+000A LF.\n  if (process.platform === 'win32') {\n    nativeLineEnding = '\\r\\n'\n  }\n\n  return s.replace(/\\r?\\n/g, nativeLineEnding)\n}\n\n// If this function is moved to ./util.js, some tools (such as\n// rollup) will warn about circular dependencies. See:\n// https://github.com/nodejs/undici/issues/1629\nfunction isFileLike (object) {\n  return (\n    (NativeFile && object instanceof NativeFile) ||\n    object instanceof File || (\n      object &&\n      (typeof object.stream === 'function' ||\n      typeof object.arrayBuffer === 'function') &&\n      object[Symbol.toStringTag] === 'File'\n    )\n  )\n}\n\nmodule.exports = { File, FileLike, isFileLike }\n","'use strict'\n\nconst { isBlobLike, toUSVString, makeIterator } = require('./util')\nconst { kState } = require('./symbols')\nconst { File: UndiciFile, FileLike, isFileLike } = require('./file')\nconst { webidl } = require('./webidl')\nconst { Blob, File: NativeFile } = require('buffer')\n\n/** @type {globalThis['File']} */\nconst File = NativeFile ?? UndiciFile\n\n// https://xhr.spec.whatwg.org/#formdata\nclass FormData {\n  constructor (form) {\n    if (form !== undefined) {\n      throw webidl.errors.conversionFailed({\n        prefix: 'FormData constructor',\n        argument: 'Argument 1',\n        types: ['undefined']\n      })\n    }\n\n    this[kState] = []\n  }\n\n  append (name, value, filename = undefined) {\n    webidl.brandCheck(this, FormData)\n\n    webidl.argumentLengthCheck(arguments, 2, { header: 'FormData.append' })\n\n    if (arguments.length === 3 && !isBlobLike(value)) {\n      throw new TypeError(\n        \"Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'\"\n      )\n    }\n\n    // 1. Let value be value if given; otherwise blobValue.\n\n    name = webidl.converters.USVString(name)\n    value = isBlobLike(value)\n      ? webidl.converters.Blob(value, { strict: false })\n      : webidl.converters.USVString(value)\n    filename = arguments.length === 3\n      ? webidl.converters.USVString(filename)\n      : undefined\n\n    // 2. Let entry be the result of creating an entry with\n    // name, value, and filename if given.\n    const entry = makeEntry(name, value, filename)\n\n    // 3. Append entry to this’s entry list.\n    this[kState].push(entry)\n  }\n\n  delete (name) {\n    webidl.brandCheck(this, FormData)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.delete' })\n\n    name = webidl.converters.USVString(name)\n\n    // The delete(name) method steps are to remove all entries whose name\n    // is name from this’s entry list.\n    this[kState] = this[kState].filter(entry => entry.name !== name)\n  }\n\n  get (name) {\n    webidl.brandCheck(this, FormData)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.get' })\n\n    name = webidl.converters.USVString(name)\n\n    // 1. If there is no entry whose name is name in this’s entry list,\n    // then return null.\n    const idx = this[kState].findIndex((entry) => entry.name === name)\n    if (idx === -1) {\n      return null\n    }\n\n    // 2. Return the value of the first entry whose name is name from\n    // this’s entry list.\n    return this[kState][idx].value\n  }\n\n  getAll (name) {\n    webidl.brandCheck(this, FormData)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.getAll' })\n\n    name = webidl.converters.USVString(name)\n\n    // 1. If there is no entry whose name is name in this’s entry list,\n    // then return the empty list.\n    // 2. Return the values of all entries whose name is name, in order,\n    // from this’s entry list.\n    return this[kState]\n      .filter((entry) => entry.name === name)\n      .map((entry) => entry.value)\n  }\n\n  has (name) {\n    webidl.brandCheck(this, FormData)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.has' })\n\n    name = webidl.converters.USVString(name)\n\n    // The has(name) method steps are to return true if there is an entry\n    // whose name is name in this’s entry list; otherwise false.\n    return this[kState].findIndex((entry) => entry.name === name) !== -1\n  }\n\n  set (name, value, filename = undefined) {\n    webidl.brandCheck(this, FormData)\n\n    webidl.argumentLengthCheck(arguments, 2, { header: 'FormData.set' })\n\n    if (arguments.length === 3 && !isBlobLike(value)) {\n      throw new TypeError(\n        \"Failed to execute 'set' on 'FormData': parameter 2 is not of type 'Blob'\"\n      )\n    }\n\n    // The set(name, value) and set(name, blobValue, filename) method steps\n    // are:\n\n    // 1. Let value be value if given; otherwise blobValue.\n\n    name = webidl.converters.USVString(name)\n    value = isBlobLike(value)\n      ? webidl.converters.Blob(value, { strict: false })\n      : webidl.converters.USVString(value)\n    filename = arguments.length === 3\n      ? toUSVString(filename)\n      : undefined\n\n    // 2. Let entry be the result of creating an entry with name, value, and\n    // filename if given.\n    const entry = makeEntry(name, value, filename)\n\n    // 3. If there are entries in this’s entry list whose name is name, then\n    // replace the first such entry with entry and remove the others.\n    const idx = this[kState].findIndex((entry) => entry.name === name)\n    if (idx !== -1) {\n      this[kState] = [\n        ...this[kState].slice(0, idx),\n        entry,\n        ...this[kState].slice(idx + 1).filter((entry) => entry.name !== name)\n      ]\n    } else {\n      // 4. Otherwise, append entry to this’s entry list.\n      this[kState].push(entry)\n    }\n  }\n\n  entries () {\n    webidl.brandCheck(this, FormData)\n\n    return makeIterator(\n      () => this[kState].map(pair => [pair.name, pair.value]),\n      'FormData',\n      'key+value'\n    )\n  }\n\n  keys () {\n    webidl.brandCheck(this, FormData)\n\n    return makeIterator(\n      () => this[kState].map(pair => [pair.name, pair.value]),\n      'FormData',\n      'key'\n    )\n  }\n\n  values () {\n    webidl.brandCheck(this, FormData)\n\n    return makeIterator(\n      () => this[kState].map(pair => [pair.name, pair.value]),\n      'FormData',\n      'value'\n    )\n  }\n\n  /**\n   * @param {(value: string, key: string, self: FormData) => void} callbackFn\n   * @param {unknown} thisArg\n   */\n  forEach (callbackFn, thisArg = globalThis) {\n    webidl.brandCheck(this, FormData)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.forEach' })\n\n    if (typeof callbackFn !== 'function') {\n      throw new TypeError(\n        \"Failed to execute 'forEach' on 'FormData': parameter 1 is not of type 'Function'.\"\n      )\n    }\n\n    for (const [key, value] of this) {\n      callbackFn.apply(thisArg, [value, key, this])\n    }\n  }\n}\n\nFormData.prototype[Symbol.iterator] = FormData.prototype.entries\n\nObject.defineProperties(FormData.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'FormData',\n    configurable: true\n  }\n})\n\n/**\n * @see https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#create-an-entry\n * @param {string} name\n * @param {string|Blob} value\n * @param {?string} filename\n * @returns\n */\nfunction makeEntry (name, value, filename) {\n  // 1. Set name to the result of converting name into a scalar value string.\n  // \"To convert a string into a scalar value string, replace any surrogates\n  //  with U+FFFD.\"\n  // see: https://nodejs.org/dist/latest-v18.x/docs/api/buffer.html#buftostringencoding-start-end\n  name = Buffer.from(name).toString('utf8')\n\n  // 2. If value is a string, then set value to the result of converting\n  //    value into a scalar value string.\n  if (typeof value === 'string') {\n    value = Buffer.from(value).toString('utf8')\n  } else {\n    // 3. Otherwise:\n\n    // 1. If value is not a File object, then set value to a new File object,\n    //    representing the same bytes, whose name attribute value is \"blob\"\n    if (!isFileLike(value)) {\n      value = value instanceof Blob\n        ? new File([value], 'blob', { type: value.type })\n        : new FileLike(value, 'blob', { type: value.type })\n    }\n\n    // 2. If filename is given, then set value to a new File object,\n    //    representing the same bytes, whose name attribute is filename.\n    if (filename !== undefined) {\n      /** @type {FilePropertyBag} */\n      const options = {\n        type: value.type,\n        lastModified: value.lastModified\n      }\n\n      value = (NativeFile && value instanceof NativeFile) || value instanceof UndiciFile\n        ? new File([value], filename, options)\n        : new FileLike(value, filename, options)\n    }\n  }\n\n  // 4. Return an entry whose name is name and whose value is value.\n  return { name, value }\n}\n\nmodule.exports = { FormData }\n","'use strict'\n\n// In case of breaking changes, increase the version\n// number to avoid conflicts.\nconst globalOrigin = Symbol.for('undici.globalOrigin.1')\n\nfunction getGlobalOrigin () {\n  return globalThis[globalOrigin]\n}\n\nfunction setGlobalOrigin (newOrigin) {\n  if (newOrigin === undefined) {\n    Object.defineProperty(globalThis, globalOrigin, {\n      value: undefined,\n      writable: true,\n      enumerable: false,\n      configurable: false\n    })\n\n    return\n  }\n\n  const parsedURL = new URL(newOrigin)\n\n  if (parsedURL.protocol !== 'http:' && parsedURL.protocol !== 'https:') {\n    throw new TypeError(`Only http & https urls are allowed, received ${parsedURL.protocol}`)\n  }\n\n  Object.defineProperty(globalThis, globalOrigin, {\n    value: parsedURL,\n    writable: true,\n    enumerable: false,\n    configurable: false\n  })\n}\n\nmodule.exports = {\n  getGlobalOrigin,\n  setGlobalOrigin\n}\n","// https://github.com/Ethan-Arrowood/undici-fetch\n\n'use strict'\n\nconst { kHeadersList, kConstruct } = require('../core/symbols')\nconst { kGuard } = require('./symbols')\nconst { kEnumerableProperty } = require('../core/util')\nconst {\n  makeIterator,\n  isValidHeaderName,\n  isValidHeaderValue\n} = require('./util')\nconst util = require('util')\nconst { webidl } = require('./webidl')\nconst assert = require('assert')\n\nconst kHeadersMap = Symbol('headers map')\nconst kHeadersSortedMap = Symbol('headers map sorted')\n\n/**\n * @param {number} code\n */\nfunction isHTTPWhiteSpaceCharCode (code) {\n  return code === 0x00a || code === 0x00d || code === 0x009 || code === 0x020\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-header-value-normalize\n * @param {string} potentialValue\n */\nfunction headerValueNormalize (potentialValue) {\n  //  To normalize a byte sequence potentialValue, remove\n  //  any leading and trailing HTTP whitespace bytes from\n  //  potentialValue.\n  let i = 0; let j = potentialValue.length\n\n  while (j > i && isHTTPWhiteSpaceCharCode(potentialValue.charCodeAt(j - 1))) --j\n  while (j > i && isHTTPWhiteSpaceCharCode(potentialValue.charCodeAt(i))) ++i\n\n  return i === 0 && j === potentialValue.length ? potentialValue : potentialValue.substring(i, j)\n}\n\nfunction fill (headers, object) {\n  // To fill a Headers object headers with a given object object, run these steps:\n\n  // 1. If object is a sequence, then for each header in object:\n  // Note: webidl conversion to array has already been done.\n  if (Array.isArray(object)) {\n    for (let i = 0; i < object.length; ++i) {\n      const header = object[i]\n      // 1. If header does not contain exactly two items, then throw a TypeError.\n      if (header.length !== 2) {\n        throw webidl.errors.exception({\n          header: 'Headers constructor',\n          message: `expected name/value pair to be length 2, found ${header.length}.`\n        })\n      }\n\n      // 2. Append (header’s first item, header’s second item) to headers.\n      appendHeader(headers, header[0], header[1])\n    }\n  } else if (typeof object === 'object' && object !== null) {\n    // Note: null should throw\n\n    // 2. Otherwise, object is a record, then for each key → value in object,\n    //    append (key, value) to headers\n    const keys = Object.keys(object)\n    for (let i = 0; i < keys.length; ++i) {\n      appendHeader(headers, keys[i], object[keys[i]])\n    }\n  } else {\n    throw webidl.errors.conversionFailed({\n      prefix: 'Headers constructor',\n      argument: 'Argument 1',\n      types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']\n    })\n  }\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-headers-append\n */\nfunction appendHeader (headers, name, value) {\n  // 1. Normalize value.\n  value = headerValueNormalize(value)\n\n  // 2. If name is not a header name or value is not a\n  //    header value, then throw a TypeError.\n  if (!isValidHeaderName(name)) {\n    throw webidl.errors.invalidArgument({\n      prefix: 'Headers.append',\n      value: name,\n      type: 'header name'\n    })\n  } else if (!isValidHeaderValue(value)) {\n    throw webidl.errors.invalidArgument({\n      prefix: 'Headers.append',\n      value,\n      type: 'header value'\n    })\n  }\n\n  // 3. If headers’s guard is \"immutable\", then throw a TypeError.\n  // 4. Otherwise, if headers’s guard is \"request\" and name is a\n  //    forbidden header name, return.\n  // Note: undici does not implement forbidden header names\n  if (headers[kGuard] === 'immutable') {\n    throw new TypeError('immutable')\n  } else if (headers[kGuard] === 'request-no-cors') {\n    // 5. Otherwise, if headers’s guard is \"request-no-cors\":\n    // TODO\n  }\n\n  // 6. Otherwise, if headers’s guard is \"response\" and name is a\n  //    forbidden response-header name, return.\n\n  // 7. Append (name, value) to headers’s header list.\n  return headers[kHeadersList].append(name, value)\n\n  // 8. If headers’s guard is \"request-no-cors\", then remove\n  //    privileged no-CORS request headers from headers\n}\n\nclass HeadersList {\n  /** @type {[string, string][]|null} */\n  cookies = null\n\n  constructor (init) {\n    if (init instanceof HeadersList) {\n      this[kHeadersMap] = new Map(init[kHeadersMap])\n      this[kHeadersSortedMap] = init[kHeadersSortedMap]\n      this.cookies = init.cookies === null ? null : [...init.cookies]\n    } else {\n      this[kHeadersMap] = new Map(init)\n      this[kHeadersSortedMap] = null\n    }\n  }\n\n  // https://fetch.spec.whatwg.org/#header-list-contains\n  contains (name) {\n    // A header list list contains a header name name if list\n    // contains a header whose name is a byte-case-insensitive\n    // match for name.\n    name = name.toLowerCase()\n\n    return this[kHeadersMap].has(name)\n  }\n\n  clear () {\n    this[kHeadersMap].clear()\n    this[kHeadersSortedMap] = null\n    this.cookies = null\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-append\n  append (name, value) {\n    this[kHeadersSortedMap] = null\n\n    // 1. If list contains name, then set name to the first such\n    //    header’s name.\n    const lowercaseName = name.toLowerCase()\n    const exists = this[kHeadersMap].get(lowercaseName)\n\n    // 2. Append (name, value) to list.\n    if (exists) {\n      const delimiter = lowercaseName === 'cookie' ? '; ' : ', '\n      this[kHeadersMap].set(lowercaseName, {\n        name: exists.name,\n        value: `${exists.value}${delimiter}${value}`\n      })\n    } else {\n      this[kHeadersMap].set(lowercaseName, { name, value })\n    }\n\n    if (lowercaseName === 'set-cookie') {\n      this.cookies ??= []\n      this.cookies.push(value)\n    }\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-set\n  set (name, value) {\n    this[kHeadersSortedMap] = null\n    const lowercaseName = name.toLowerCase()\n\n    if (lowercaseName === 'set-cookie') {\n      this.cookies = [value]\n    }\n\n    // 1. If list contains name, then set the value of\n    //    the first such header to value and remove the\n    //    others.\n    // 2. Otherwise, append header (name, value) to list.\n    this[kHeadersMap].set(lowercaseName, { name, value })\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-delete\n  delete (name) {\n    this[kHeadersSortedMap] = null\n\n    name = name.toLowerCase()\n\n    if (name === 'set-cookie') {\n      this.cookies = null\n    }\n\n    this[kHeadersMap].delete(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-get\n  get (name) {\n    const value = this[kHeadersMap].get(name.toLowerCase())\n\n    // 1. If list does not contain name, then return null.\n    // 2. Return the values of all headers in list whose name\n    //    is a byte-case-insensitive match for name,\n    //    separated from each other by 0x2C 0x20, in order.\n    return value === undefined ? null : value.value\n  }\n\n  * [Symbol.iterator] () {\n    // use the lowercased name\n    for (const [name, { value }] of this[kHeadersMap]) {\n      yield [name, value]\n    }\n  }\n\n  get entries () {\n    const headers = {}\n\n    if (this[kHeadersMap].size) {\n      for (const { name, value } of this[kHeadersMap].values()) {\n        headers[name] = value\n      }\n    }\n\n    return headers\n  }\n}\n\n// https://fetch.spec.whatwg.org/#headers-class\nclass Headers {\n  constructor (init = undefined) {\n    if (init === kConstruct) {\n      return\n    }\n    this[kHeadersList] = new HeadersList()\n\n    // The new Headers(init) constructor steps are:\n\n    // 1. Set this’s guard to \"none\".\n    this[kGuard] = 'none'\n\n    // 2. If init is given, then fill this with init.\n    if (init !== undefined) {\n      init = webidl.converters.HeadersInit(init)\n      fill(this, init)\n    }\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-append\n  append (name, value) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 2, { header: 'Headers.append' })\n\n    name = webidl.converters.ByteString(name)\n    value = webidl.converters.ByteString(value)\n\n    return appendHeader(this, name, value)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-delete\n  delete (name) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.delete' })\n\n    name = webidl.converters.ByteString(name)\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      throw webidl.errors.invalidArgument({\n        prefix: 'Headers.delete',\n        value: name,\n        type: 'header name'\n      })\n    }\n\n    // 2. If this’s guard is \"immutable\", then throw a TypeError.\n    // 3. Otherwise, if this’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // 4. Otherwise, if this’s guard is \"request-no-cors\", name\n    //    is not a no-CORS-safelisted request-header name, and\n    //    name is not a privileged no-CORS request-header name,\n    //    return.\n    // 5. Otherwise, if this’s guard is \"response\" and name is\n    //    a forbidden response-header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable')\n    } else if (this[kGuard] === 'request-no-cors') {\n      // TODO\n    }\n\n    // 6. If this’s header list does not contain name, then\n    //    return.\n    if (!this[kHeadersList].contains(name)) {\n      return\n    }\n\n    // 7. Delete name from this’s header list.\n    // 8. If this’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from this.\n    this[kHeadersList].delete(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-get\n  get (name) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.get' })\n\n    name = webidl.converters.ByteString(name)\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      throw webidl.errors.invalidArgument({\n        prefix: 'Headers.get',\n        value: name,\n        type: 'header name'\n      })\n    }\n\n    // 2. Return the result of getting name from this’s header\n    //    list.\n    return this[kHeadersList].get(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-has\n  has (name) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.has' })\n\n    name = webidl.converters.ByteString(name)\n\n    // 1. If name is not a header name, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      throw webidl.errors.invalidArgument({\n        prefix: 'Headers.has',\n        value: name,\n        type: 'header name'\n      })\n    }\n\n    // 2. Return true if this’s header list contains name;\n    //    otherwise false.\n    return this[kHeadersList].contains(name)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-set\n  set (name, value) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 2, { header: 'Headers.set' })\n\n    name = webidl.converters.ByteString(name)\n    value = webidl.converters.ByteString(value)\n\n    // 1. Normalize value.\n    value = headerValueNormalize(value)\n\n    // 2. If name is not a header name or value is not a\n    //    header value, then throw a TypeError.\n    if (!isValidHeaderName(name)) {\n      throw webidl.errors.invalidArgument({\n        prefix: 'Headers.set',\n        value: name,\n        type: 'header name'\n      })\n    } else if (!isValidHeaderValue(value)) {\n      throw webidl.errors.invalidArgument({\n        prefix: 'Headers.set',\n        value,\n        type: 'header value'\n      })\n    }\n\n    // 3. If this’s guard is \"immutable\", then throw a TypeError.\n    // 4. Otherwise, if this’s guard is \"request\" and name is a\n    //    forbidden header name, return.\n    // 5. Otherwise, if this’s guard is \"request-no-cors\" and\n    //    name/value is not a no-CORS-safelisted request-header,\n    //    return.\n    // 6. Otherwise, if this’s guard is \"response\" and name is a\n    //    forbidden response-header name, return.\n    // Note: undici does not implement forbidden header names\n    if (this[kGuard] === 'immutable') {\n      throw new TypeError('immutable')\n    } else if (this[kGuard] === 'request-no-cors') {\n      // TODO\n    }\n\n    // 7. Set (name, value) in this’s header list.\n    // 8. If this’s guard is \"request-no-cors\", then remove\n    //    privileged no-CORS request headers from this\n    this[kHeadersList].set(name, value)\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-headers-getsetcookie\n  getSetCookie () {\n    webidl.brandCheck(this, Headers)\n\n    // 1. If this’s header list does not contain `Set-Cookie`, then return « ».\n    // 2. Return the values of all headers in this’s header list whose name is\n    //    a byte-case-insensitive match for `Set-Cookie`, in order.\n\n    const list = this[kHeadersList].cookies\n\n    if (list) {\n      return [...list]\n    }\n\n    return []\n  }\n\n  // https://fetch.spec.whatwg.org/#concept-header-list-sort-and-combine\n  get [kHeadersSortedMap] () {\n    if (this[kHeadersList][kHeadersSortedMap]) {\n      return this[kHeadersList][kHeadersSortedMap]\n    }\n\n    // 1. Let headers be an empty list of headers with the key being the name\n    //    and value the value.\n    const headers = []\n\n    // 2. Let names be the result of convert header names to a sorted-lowercase\n    //    set with all the names of the headers in list.\n    const names = [...this[kHeadersList]].sort((a, b) => a[0] < b[0] ? -1 : 1)\n    const cookies = this[kHeadersList].cookies\n\n    // 3. For each name of names:\n    for (let i = 0; i < names.length; ++i) {\n      const [name, value] = names[i]\n      // 1. If name is `set-cookie`, then:\n      if (name === 'set-cookie') {\n        // 1. Let values be a list of all values of headers in list whose name\n        //    is a byte-case-insensitive match for name, in order.\n\n        // 2. For each value of values:\n        // 1. Append (name, value) to headers.\n        for (let j = 0; j < cookies.length; ++j) {\n          headers.push([name, cookies[j]])\n        }\n      } else {\n        // 2. Otherwise:\n\n        // 1. Let value be the result of getting name from list.\n\n        // 2. Assert: value is non-null.\n        assert(value !== null)\n\n        // 3. Append (name, value) to headers.\n        headers.push([name, value])\n      }\n    }\n\n    this[kHeadersList][kHeadersSortedMap] = headers\n\n    // 4. Return headers.\n    return headers\n  }\n\n  keys () {\n    webidl.brandCheck(this, Headers)\n\n    if (this[kGuard] === 'immutable') {\n      const value = this[kHeadersSortedMap]\n      return makeIterator(() => value, 'Headers',\n        'key')\n    }\n\n    return makeIterator(\n      () => [...this[kHeadersSortedMap].values()],\n      'Headers',\n      'key'\n    )\n  }\n\n  values () {\n    webidl.brandCheck(this, Headers)\n\n    if (this[kGuard] === 'immutable') {\n      const value = this[kHeadersSortedMap]\n      return makeIterator(() => value, 'Headers',\n        'value')\n    }\n\n    return makeIterator(\n      () => [...this[kHeadersSortedMap].values()],\n      'Headers',\n      'value'\n    )\n  }\n\n  entries () {\n    webidl.brandCheck(this, Headers)\n\n    if (this[kGuard] === 'immutable') {\n      const value = this[kHeadersSortedMap]\n      return makeIterator(() => value, 'Headers',\n        'key+value')\n    }\n\n    return makeIterator(\n      () => [...this[kHeadersSortedMap].values()],\n      'Headers',\n      'key+value'\n    )\n  }\n\n  /**\n   * @param {(value: string, key: string, self: Headers) => void} callbackFn\n   * @param {unknown} thisArg\n   */\n  forEach (callbackFn, thisArg = globalThis) {\n    webidl.brandCheck(this, Headers)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.forEach' })\n\n    if (typeof callbackFn !== 'function') {\n      throw new TypeError(\n        \"Failed to execute 'forEach' on 'Headers': parameter 1 is not of type 'Function'.\"\n      )\n    }\n\n    for (const [key, value] of this) {\n      callbackFn.apply(thisArg, [value, key, this])\n    }\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    webidl.brandCheck(this, Headers)\n\n    return this[kHeadersList]\n  }\n}\n\nHeaders.prototype[Symbol.iterator] = Headers.prototype.entries\n\nObject.defineProperties(Headers.prototype, {\n  append: kEnumerableProperty,\n  delete: kEnumerableProperty,\n  get: kEnumerableProperty,\n  has: kEnumerableProperty,\n  set: kEnumerableProperty,\n  getSetCookie: kEnumerableProperty,\n  keys: kEnumerableProperty,\n  values: kEnumerableProperty,\n  entries: kEnumerableProperty,\n  forEach: kEnumerableProperty,\n  [Symbol.iterator]: { enumerable: false },\n  [Symbol.toStringTag]: {\n    value: 'Headers',\n    configurable: true\n  },\n  [util.inspect.custom]: {\n    enumerable: false\n  }\n})\n\nwebidl.converters.HeadersInit = function (V) {\n  if (webidl.util.Type(V) === 'Object') {\n    if (V[Symbol.iterator]) {\n      return webidl.converters['sequence<sequence<ByteString>>'](V)\n    }\n\n    return webidl.converters['record<ByteString, ByteString>'](V)\n  }\n\n  throw webidl.errors.conversionFailed({\n    prefix: 'Headers constructor',\n    argument: 'Argument 1',\n    types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']\n  })\n}\n\nmodule.exports = {\n  fill,\n  Headers,\n  HeadersList\n}\n","// https://github.com/Ethan-Arrowood/undici-fetch\n\n'use strict'\n\nconst {\n  Response,\n  makeNetworkError,\n  makeAppropriateNetworkError,\n  filterResponse,\n  makeResponse\n} = require('./response')\nconst { Headers } = require('./headers')\nconst { Request, makeRequest } = require('./request')\nconst zlib = require('zlib')\nconst {\n  bytesMatch,\n  makePolicyContainer,\n  clonePolicyContainer,\n  requestBadPort,\n  TAOCheck,\n  appendRequestOriginHeader,\n  responseLocationURL,\n  requestCurrentURL,\n  setRequestReferrerPolicyOnRedirect,\n  tryUpgradeRequestToAPotentiallyTrustworthyURL,\n  createOpaqueTimingInfo,\n  appendFetchMetadata,\n  corsCheck,\n  crossOriginResourcePolicyCheck,\n  determineRequestsReferrer,\n  coarsenedSharedCurrentTime,\n  createDeferredPromise,\n  isBlobLike,\n  sameOrigin,\n  isCancelled,\n  isAborted,\n  isErrorLike,\n  fullyReadBody,\n  readableStreamClose,\n  isomorphicEncode,\n  urlIsLocal,\n  urlIsHttpHttpsScheme,\n  urlHasHttpsScheme\n} = require('./util')\nconst { kState, kHeaders, kGuard, kRealm } = require('./symbols')\nconst assert = require('assert')\nconst { safelyExtractBody } = require('./body')\nconst {\n  redirectStatusSet,\n  nullBodyStatus,\n  safeMethodsSet,\n  requestBodyHeader,\n  subresourceSet,\n  DOMException\n} = require('./constants')\nconst { kHeadersList } = require('../core/symbols')\nconst EE = require('events')\nconst { Readable, pipeline } = require('stream')\nconst { addAbortListener, isErrored, isReadable, nodeMajor, nodeMinor } = require('../core/util')\nconst { dataURLProcessor, serializeAMimeType } = require('./dataURL')\nconst { TransformStream } = require('stream/web')\nconst { getGlobalDispatcher } = require('../global')\nconst { webidl } = require('./webidl')\nconst { STATUS_CODES } = require('http')\nconst GET_OR_HEAD = ['GET', 'HEAD']\n\n/** @type {import('buffer').resolveObjectURL} */\nlet resolveObjectURL\nlet ReadableStream = globalThis.ReadableStream\n\nclass Fetch extends EE {\n  constructor (dispatcher) {\n    super()\n\n    this.dispatcher = dispatcher\n    this.connection = null\n    this.dump = false\n    this.state = 'ongoing'\n    // 2 terminated listeners get added per request,\n    // but only 1 gets removed. If there are 20 redirects,\n    // 21 listeners will be added.\n    // See https://github.com/nodejs/undici/issues/1711\n    // TODO (fix): Find and fix root cause for leaked listener.\n    this.setMaxListeners(21)\n  }\n\n  terminate (reason) {\n    if (this.state !== 'ongoing') {\n      return\n    }\n\n    this.state = 'terminated'\n    this.connection?.destroy(reason)\n    this.emit('terminated', reason)\n  }\n\n  // https://fetch.spec.whatwg.org/#fetch-controller-abort\n  abort (error) {\n    if (this.state !== 'ongoing') {\n      return\n    }\n\n    // 1. Set controller’s state to \"aborted\".\n    this.state = 'aborted'\n\n    // 2. Let fallbackError be an \"AbortError\" DOMException.\n    // 3. Set error to fallbackError if it is not given.\n    if (!error) {\n      error = new DOMException('The operation was aborted.', 'AbortError')\n    }\n\n    // 4. Let serializedError be StructuredSerialize(error).\n    //    If that threw an exception, catch it, and let\n    //    serializedError be StructuredSerialize(fallbackError).\n\n    // 5. Set controller’s serialized abort reason to serializedError.\n    this.serializedAbortReason = error\n\n    this.connection?.destroy(error)\n    this.emit('terminated', error)\n  }\n}\n\n// https://fetch.spec.whatwg.org/#fetch-method\nfunction fetch (input, init = {}) {\n  webidl.argumentLengthCheck(arguments, 1, { header: 'globalThis.fetch' })\n\n  // 1. Let p be a new promise.\n  const p = createDeferredPromise()\n\n  // 2. Let requestObject be the result of invoking the initial value of\n  // Request as constructor with input and init as arguments. If this throws\n  // an exception, reject p with it and return p.\n  let requestObject\n\n  try {\n    requestObject = new Request(input, init)\n  } catch (e) {\n    p.reject(e)\n    return p.promise\n  }\n\n  // 3. Let request be requestObject’s request.\n  const request = requestObject[kState]\n\n  // 4. If requestObject’s signal’s aborted flag is set, then:\n  if (requestObject.signal.aborted) {\n    // 1. Abort the fetch() call with p, request, null, and\n    //    requestObject’s signal’s abort reason.\n    abortFetch(p, request, null, requestObject.signal.reason)\n\n    // 2. Return p.\n    return p.promise\n  }\n\n  // 5. Let globalObject be request’s client’s global object.\n  const globalObject = request.client.globalObject\n\n  // 6. If globalObject is a ServiceWorkerGlobalScope object, then set\n  // request’s service-workers mode to \"none\".\n  if (globalObject?.constructor?.name === 'ServiceWorkerGlobalScope') {\n    request.serviceWorkers = 'none'\n  }\n\n  // 7. Let responseObject be null.\n  let responseObject = null\n\n  // 8. Let relevantRealm be this’s relevant Realm.\n  const relevantRealm = null\n\n  // 9. Let locallyAborted be false.\n  let locallyAborted = false\n\n  // 10. Let controller be null.\n  let controller = null\n\n  // 11. Add the following abort steps to requestObject’s signal:\n  addAbortListener(\n    requestObject.signal,\n    () => {\n      // 1. Set locallyAborted to true.\n      locallyAborted = true\n\n      // 2. Assert: controller is non-null.\n      assert(controller != null)\n\n      // 3. Abort controller with requestObject’s signal’s abort reason.\n      controller.abort(requestObject.signal.reason)\n\n      // 4. Abort the fetch() call with p, request, responseObject,\n      //    and requestObject’s signal’s abort reason.\n      abortFetch(p, request, responseObject, requestObject.signal.reason)\n    }\n  )\n\n  // 12. Let handleFetchDone given response response be to finalize and\n  // report timing with response, globalObject, and \"fetch\".\n  const handleFetchDone = (response) =>\n    finalizeAndReportTiming(response, 'fetch')\n\n  // 13. Set controller to the result of calling fetch given request,\n  // with processResponseEndOfBody set to handleFetchDone, and processResponse\n  // given response being these substeps:\n\n  const processResponse = (response) => {\n    // 1. If locallyAborted is true, terminate these substeps.\n    if (locallyAborted) {\n      return Promise.resolve()\n    }\n\n    // 2. If response’s aborted flag is set, then:\n    if (response.aborted) {\n      // 1. Let deserializedError be the result of deserialize a serialized\n      //    abort reason given controller’s serialized abort reason and\n      //    relevantRealm.\n\n      // 2. Abort the fetch() call with p, request, responseObject, and\n      //    deserializedError.\n\n      abortFetch(p, request, responseObject, controller.serializedAbortReason)\n      return Promise.resolve()\n    }\n\n    // 3. If response is a network error, then reject p with a TypeError\n    // and terminate these substeps.\n    if (response.type === 'error') {\n      p.reject(\n        Object.assign(new TypeError('fetch failed'), { cause: response.error })\n      )\n      return Promise.resolve()\n    }\n\n    // 4. Set responseObject to the result of creating a Response object,\n    // given response, \"immutable\", and relevantRealm.\n    responseObject = new Response()\n    responseObject[kState] = response\n    responseObject[kRealm] = relevantRealm\n    responseObject[kHeaders][kHeadersList] = response.headersList\n    responseObject[kHeaders][kGuard] = 'immutable'\n    responseObject[kHeaders][kRealm] = relevantRealm\n\n    // 5. Resolve p with responseObject.\n    p.resolve(responseObject)\n  }\n\n  controller = fetching({\n    request,\n    processResponseEndOfBody: handleFetchDone,\n    processResponse,\n    dispatcher: init.dispatcher ?? getGlobalDispatcher() // undici\n  })\n\n  // 14. Return p.\n  return p.promise\n}\n\n// https://fetch.spec.whatwg.org/#finalize-and-report-timing\nfunction finalizeAndReportTiming (response, initiatorType = 'other') {\n  // 1. If response is an aborted network error, then return.\n  if (response.type === 'error' && response.aborted) {\n    return\n  }\n\n  // 2. If response’s URL list is null or empty, then return.\n  if (!response.urlList?.length) {\n    return\n  }\n\n  // 3. Let originalURL be response’s URL list[0].\n  const originalURL = response.urlList[0]\n\n  // 4. Let timingInfo be response’s timing info.\n  let timingInfo = response.timingInfo\n\n  // 5. Let cacheState be response’s cache state.\n  let cacheState = response.cacheState\n\n  // 6. If originalURL’s scheme is not an HTTP(S) scheme, then return.\n  if (!urlIsHttpHttpsScheme(originalURL)) {\n    return\n  }\n\n  // 7. If timingInfo is null, then return.\n  if (timingInfo === null) {\n    return\n  }\n\n  // 8. If response’s timing allow passed flag is not set, then:\n  if (!response.timingAllowPassed) {\n    //  1. Set timingInfo to a the result of creating an opaque timing info for timingInfo.\n    timingInfo = createOpaqueTimingInfo({\n      startTime: timingInfo.startTime\n    })\n\n    //  2. Set cacheState to the empty string.\n    cacheState = ''\n  }\n\n  // 9. Set timingInfo’s end time to the coarsened shared current time\n  // given global’s relevant settings object’s cross-origin isolated\n  // capability.\n  // TODO: given global’s relevant settings object’s cross-origin isolated\n  // capability?\n  timingInfo.endTime = coarsenedSharedCurrentTime()\n\n  // 10. Set response’s timing info to timingInfo.\n  response.timingInfo = timingInfo\n\n  // 11. Mark resource timing for timingInfo, originalURL, initiatorType,\n  // global, and cacheState.\n  markResourceTiming(\n    timingInfo,\n    originalURL,\n    initiatorType,\n    globalThis,\n    cacheState\n  )\n}\n\n// https://w3c.github.io/resource-timing/#dfn-mark-resource-timing\nfunction markResourceTiming (timingInfo, originalURL, initiatorType, globalThis, cacheState) {\n  if (nodeMajor > 18 || (nodeMajor === 18 && nodeMinor >= 2)) {\n    performance.markResourceTiming(timingInfo, originalURL.href, initiatorType, globalThis, cacheState)\n  }\n}\n\n// https://fetch.spec.whatwg.org/#abort-fetch\nfunction abortFetch (p, request, responseObject, error) {\n  // Note: AbortSignal.reason was added in node v17.2.0\n  // which would give us an undefined error to reject with.\n  // Remove this once node v16 is no longer supported.\n  if (!error) {\n    error = new DOMException('The operation was aborted.', 'AbortError')\n  }\n\n  // 1. Reject promise with error.\n  p.reject(error)\n\n  // 2. If request’s body is not null and is readable, then cancel request’s\n  // body with error.\n  if (request.body != null && isReadable(request.body?.stream)) {\n    request.body.stream.cancel(error).catch((err) => {\n      if (err.code === 'ERR_INVALID_STATE') {\n        // Node bug?\n        return\n      }\n      throw err\n    })\n  }\n\n  // 3. If responseObject is null, then return.\n  if (responseObject == null) {\n    return\n  }\n\n  // 4. Let response be responseObject’s response.\n  const response = responseObject[kState]\n\n  // 5. If response’s body is not null and is readable, then error response’s\n  // body with error.\n  if (response.body != null && isReadable(response.body?.stream)) {\n    response.body.stream.cancel(error).catch((err) => {\n      if (err.code === 'ERR_INVALID_STATE') {\n        // Node bug?\n        return\n      }\n      throw err\n    })\n  }\n}\n\n// https://fetch.spec.whatwg.org/#fetching\nfunction fetching ({\n  request,\n  processRequestBodyChunkLength,\n  processRequestEndOfBody,\n  processResponse,\n  processResponseEndOfBody,\n  processResponseConsumeBody,\n  useParallelQueue = false,\n  dispatcher // undici\n}) {\n  // 1. Let taskDestination be null.\n  let taskDestination = null\n\n  // 2. Let crossOriginIsolatedCapability be false.\n  let crossOriginIsolatedCapability = false\n\n  // 3. If request’s client is non-null, then:\n  if (request.client != null) {\n    // 1. Set taskDestination to request’s client’s global object.\n    taskDestination = request.client.globalObject\n\n    // 2. Set crossOriginIsolatedCapability to request’s client’s cross-origin\n    // isolated capability.\n    crossOriginIsolatedCapability =\n      request.client.crossOriginIsolatedCapability\n  }\n\n  // 4. If useParallelQueue is true, then set taskDestination to the result of\n  // starting a new parallel queue.\n  // TODO\n\n  // 5. Let timingInfo be a new fetch timing info whose start time and\n  // post-redirect start time are the coarsened shared current time given\n  // crossOriginIsolatedCapability.\n  const currenTime = coarsenedSharedCurrentTime(crossOriginIsolatedCapability)\n  const timingInfo = createOpaqueTimingInfo({\n    startTime: currenTime\n  })\n\n  // 6. Let fetchParams be a new fetch params whose\n  // request is request,\n  // timing info is timingInfo,\n  // process request body chunk length is processRequestBodyChunkLength,\n  // process request end-of-body is processRequestEndOfBody,\n  // process response is processResponse,\n  // process response consume body is processResponseConsumeBody,\n  // process response end-of-body is processResponseEndOfBody,\n  // task destination is taskDestination,\n  // and cross-origin isolated capability is crossOriginIsolatedCapability.\n  const fetchParams = {\n    controller: new Fetch(dispatcher),\n    request,\n    timingInfo,\n    processRequestBodyChunkLength,\n    processRequestEndOfBody,\n    processResponse,\n    processResponseConsumeBody,\n    processResponseEndOfBody,\n    taskDestination,\n    crossOriginIsolatedCapability\n  }\n\n  // 7. If request’s body is a byte sequence, then set request’s body to\n  //    request’s body as a body.\n  // NOTE: Since fetching is only called from fetch, body should already be\n  // extracted.\n  assert(!request.body || request.body.stream)\n\n  // 8. If request’s window is \"client\", then set request’s window to request’s\n  // client, if request’s client’s global object is a Window object; otherwise\n  // \"no-window\".\n  if (request.window === 'client') {\n    // TODO: What if request.client is null?\n    request.window =\n      request.client?.globalObject?.constructor?.name === 'Window'\n        ? request.client\n        : 'no-window'\n  }\n\n  // 9. If request’s origin is \"client\", then set request’s origin to request’s\n  // client’s origin.\n  if (request.origin === 'client') {\n    // TODO: What if request.client is null?\n    request.origin = request.client?.origin\n  }\n\n  // 10. If all of the following conditions are true:\n  // TODO\n\n  // 11. If request’s policy container is \"client\", then:\n  if (request.policyContainer === 'client') {\n    // 1. If request’s client is non-null, then set request’s policy\n    // container to a clone of request’s client’s policy container. [HTML]\n    if (request.client != null) {\n      request.policyContainer = clonePolicyContainer(\n        request.client.policyContainer\n      )\n    } else {\n      // 2. Otherwise, set request’s policy container to a new policy\n      // container.\n      request.policyContainer = makePolicyContainer()\n    }\n  }\n\n  // 12. If request’s header list does not contain `Accept`, then:\n  if (!request.headersList.contains('accept')) {\n    // 1. Let value be `*/*`.\n    const value = '*/*'\n\n    // 2. A user agent should set value to the first matching statement, if\n    // any, switching on request’s destination:\n    // \"document\"\n    // \"frame\"\n    // \"iframe\"\n    // `text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8`\n    // \"image\"\n    // `image/png,image/svg+xml,image/*;q=0.8,*/*;q=0.5`\n    // \"style\"\n    // `text/css,*/*;q=0.1`\n    // TODO\n\n    // 3. Append `Accept`/value to request’s header list.\n    request.headersList.append('accept', value)\n  }\n\n  // 13. If request’s header list does not contain `Accept-Language`, then\n  // user agents should append `Accept-Language`/an appropriate value to\n  // request’s header list.\n  if (!request.headersList.contains('accept-language')) {\n    request.headersList.append('accept-language', '*')\n  }\n\n  // 14. If request’s priority is null, then use request’s initiator and\n  // destination appropriately in setting request’s priority to a\n  // user-agent-defined object.\n  if (request.priority === null) {\n    // TODO\n  }\n\n  // 15. If request is a subresource request, then:\n  if (subresourceSet.has(request.destination)) {\n    // TODO\n  }\n\n  // 16. Run main fetch given fetchParams.\n  mainFetch(fetchParams)\n    .catch(err => {\n      fetchParams.controller.terminate(err)\n    })\n\n  // 17. Return fetchParam's controller\n  return fetchParams.controller\n}\n\n// https://fetch.spec.whatwg.org/#concept-main-fetch\nasync function mainFetch (fetchParams, recursive = false) {\n  // 1. Let request be fetchParams’s request.\n  const request = fetchParams.request\n\n  // 2. Let response be null.\n  let response = null\n\n  // 3. If request’s local-URLs-only flag is set and request’s current URL is\n  // not local, then set response to a network error.\n  if (request.localURLsOnly && !urlIsLocal(requestCurrentURL(request))) {\n    response = makeNetworkError('local URLs only')\n  }\n\n  // 4. Run report Content Security Policy violations for request.\n  // TODO\n\n  // 5. Upgrade request to a potentially trustworthy URL, if appropriate.\n  tryUpgradeRequestToAPotentiallyTrustworthyURL(request)\n\n  // 6. If should request be blocked due to a bad port, should fetching request\n  // be blocked as mixed content, or should request be blocked by Content\n  // Security Policy returns blocked, then set response to a network error.\n  if (requestBadPort(request) === 'blocked') {\n    response = makeNetworkError('bad port')\n  }\n  // TODO: should fetching request be blocked as mixed content?\n  // TODO: should request be blocked by Content Security Policy?\n\n  // 7. If request’s referrer policy is the empty string, then set request’s\n  // referrer policy to request’s policy container’s referrer policy.\n  if (request.referrerPolicy === '') {\n    request.referrerPolicy = request.policyContainer.referrerPolicy\n  }\n\n  // 8. If request’s referrer is not \"no-referrer\", then set request’s\n  // referrer to the result of invoking determine request’s referrer.\n  if (request.referrer !== 'no-referrer') {\n    request.referrer = determineRequestsReferrer(request)\n  }\n\n  // 9. Set request’s current URL’s scheme to \"https\" if all of the following\n  // conditions are true:\n  // - request’s current URL’s scheme is \"http\"\n  // - request’s current URL’s host is a domain\n  // - Matching request’s current URL’s host per Known HSTS Host Domain Name\n  //   Matching results in either a superdomain match with an asserted\n  //   includeSubDomains directive or a congruent match (with or without an\n  //   asserted includeSubDomains directive). [HSTS]\n  // TODO\n\n  // 10. If recursive is false, then run the remaining steps in parallel.\n  // TODO\n\n  // 11. If response is null, then set response to the result of running\n  // the steps corresponding to the first matching statement:\n  if (response === null) {\n    response = await (async () => {\n      const currentURL = requestCurrentURL(request)\n\n      if (\n        // - request’s current URL’s origin is same origin with request’s origin,\n        //   and request’s response tainting is \"basic\"\n        (sameOrigin(currentURL, request.url) && request.responseTainting === 'basic') ||\n        // request’s current URL’s scheme is \"data\"\n        (currentURL.protocol === 'data:') ||\n        // - request’s mode is \"navigate\" or \"websocket\"\n        (request.mode === 'navigate' || request.mode === 'websocket')\n      ) {\n        // 1. Set request’s response tainting to \"basic\".\n        request.responseTainting = 'basic'\n\n        // 2. Return the result of running scheme fetch given fetchParams.\n        return await schemeFetch(fetchParams)\n      }\n\n      // request’s mode is \"same-origin\"\n      if (request.mode === 'same-origin') {\n        // 1. Return a network error.\n        return makeNetworkError('request mode cannot be \"same-origin\"')\n      }\n\n      // request’s mode is \"no-cors\"\n      if (request.mode === 'no-cors') {\n        // 1. If request’s redirect mode is not \"follow\", then return a network\n        // error.\n        if (request.redirect !== 'follow') {\n          return makeNetworkError(\n            'redirect mode cannot be \"follow\" for \"no-cors\" request'\n          )\n        }\n\n        // 2. Set request’s response tainting to \"opaque\".\n        request.responseTainting = 'opaque'\n\n        // 3. Return the result of running scheme fetch given fetchParams.\n        return await schemeFetch(fetchParams)\n      }\n\n      // request’s current URL’s scheme is not an HTTP(S) scheme\n      if (!urlIsHttpHttpsScheme(requestCurrentURL(request))) {\n        // Return a network error.\n        return makeNetworkError('URL scheme must be a HTTP(S) scheme')\n      }\n\n      // - request’s use-CORS-preflight flag is set\n      // - request’s unsafe-request flag is set and either request’s method is\n      //   not a CORS-safelisted method or CORS-unsafe request-header names with\n      //   request’s header list is not empty\n      //    1. Set request’s response tainting to \"cors\".\n      //    2. Let corsWithPreflightResponse be the result of running HTTP fetch\n      //    given fetchParams and true.\n      //    3. If corsWithPreflightResponse is a network error, then clear cache\n      //    entries using request.\n      //    4. Return corsWithPreflightResponse.\n      // TODO\n\n      // Otherwise\n      //    1. Set request’s response tainting to \"cors\".\n      request.responseTainting = 'cors'\n\n      //    2. Return the result of running HTTP fetch given fetchParams.\n      return await httpFetch(fetchParams)\n    })()\n  }\n\n  // 12. If recursive is true, then return response.\n  if (recursive) {\n    return response\n  }\n\n  // 13. If response is not a network error and response is not a filtered\n  // response, then:\n  if (response.status !== 0 && !response.internalResponse) {\n    // If request’s response tainting is \"cors\", then:\n    if (request.responseTainting === 'cors') {\n      // 1. Let headerNames be the result of extracting header list values\n      // given `Access-Control-Expose-Headers` and response’s header list.\n      // TODO\n      // 2. If request’s credentials mode is not \"include\" and headerNames\n      // contains `*`, then set response’s CORS-exposed header-name list to\n      // all unique header names in response’s header list.\n      // TODO\n      // 3. Otherwise, if headerNames is not null or failure, then set\n      // response’s CORS-exposed header-name list to headerNames.\n      // TODO\n    }\n\n    // Set response to the following filtered response with response as its\n    // internal response, depending on request’s response tainting:\n    if (request.responseTainting === 'basic') {\n      response = filterResponse(response, 'basic')\n    } else if (request.responseTainting === 'cors') {\n      response = filterResponse(response, 'cors')\n    } else if (request.responseTainting === 'opaque') {\n      response = filterResponse(response, 'opaque')\n    } else {\n      assert(false)\n    }\n  }\n\n  // 14. Let internalResponse be response, if response is a network error,\n  // and response’s internal response otherwise.\n  let internalResponse =\n    response.status === 0 ? response : response.internalResponse\n\n  // 15. If internalResponse’s URL list is empty, then set it to a clone of\n  // request’s URL list.\n  if (internalResponse.urlList.length === 0) {\n    internalResponse.urlList.push(...request.urlList)\n  }\n\n  // 16. If request’s timing allow failed flag is unset, then set\n  // internalResponse’s timing allow passed flag.\n  if (!request.timingAllowFailed) {\n    response.timingAllowPassed = true\n  }\n\n  // 17. If response is not a network error and any of the following returns\n  // blocked\n  // - should internalResponse to request be blocked as mixed content\n  // - should internalResponse to request be blocked by Content Security Policy\n  // - should internalResponse to request be blocked due to its MIME type\n  // - should internalResponse to request be blocked due to nosniff\n  // TODO\n\n  // 18. If response’s type is \"opaque\", internalResponse’s status is 206,\n  // internalResponse’s range-requested flag is set, and request’s header\n  // list does not contain `Range`, then set response and internalResponse\n  // to a network error.\n  if (\n    response.type === 'opaque' &&\n    internalResponse.status === 206 &&\n    internalResponse.rangeRequested &&\n    !request.headers.contains('range')\n  ) {\n    response = internalResponse = makeNetworkError()\n  }\n\n  // 19. If response is not a network error and either request’s method is\n  // `HEAD` or `CONNECT`, or internalResponse’s status is a null body status,\n  // set internalResponse’s body to null and disregard any enqueuing toward\n  // it (if any).\n  if (\n    response.status !== 0 &&\n    (request.method === 'HEAD' ||\n      request.method === 'CONNECT' ||\n      nullBodyStatus.includes(internalResponse.status))\n  ) {\n    internalResponse.body = null\n    fetchParams.controller.dump = true\n  }\n\n  // 20. If request’s integrity metadata is not the empty string, then:\n  if (request.integrity) {\n    // 1. Let processBodyError be this step: run fetch finale given fetchParams\n    // and a network error.\n    const processBodyError = (reason) =>\n      fetchFinale(fetchParams, makeNetworkError(reason))\n\n    // 2. If request’s response tainting is \"opaque\", or response’s body is null,\n    // then run processBodyError and abort these steps.\n    if (request.responseTainting === 'opaque' || response.body == null) {\n      processBodyError(response.error)\n      return\n    }\n\n    // 3. Let processBody given bytes be these steps:\n    const processBody = (bytes) => {\n      // 1. If bytes do not match request’s integrity metadata,\n      // then run processBodyError and abort these steps. [SRI]\n      if (!bytesMatch(bytes, request.integrity)) {\n        processBodyError('integrity mismatch')\n        return\n      }\n\n      // 2. Set response’s body to bytes as a body.\n      response.body = safelyExtractBody(bytes)[0]\n\n      // 3. Run fetch finale given fetchParams and response.\n      fetchFinale(fetchParams, response)\n    }\n\n    // 4. Fully read response’s body given processBody and processBodyError.\n    await fullyReadBody(response.body, processBody, processBodyError)\n  } else {\n    // 21. Otherwise, run fetch finale given fetchParams and response.\n    fetchFinale(fetchParams, response)\n  }\n}\n\n// https://fetch.spec.whatwg.org/#concept-scheme-fetch\n// given a fetch params fetchParams\nfunction schemeFetch (fetchParams) {\n  // Note: since the connection is destroyed on redirect, which sets fetchParams to a\n  // cancelled state, we do not want this condition to trigger *unless* there have been\n  // no redirects. See https://github.com/nodejs/undici/issues/1776\n  // 1. If fetchParams is canceled, then return the appropriate network error for fetchParams.\n  if (isCancelled(fetchParams) && fetchParams.request.redirectCount === 0) {\n    return Promise.resolve(makeAppropriateNetworkError(fetchParams))\n  }\n\n  // 2. Let request be fetchParams’s request.\n  const { request } = fetchParams\n\n  const { protocol: scheme } = requestCurrentURL(request)\n\n  // 3. Switch on request’s current URL’s scheme and run the associated steps:\n  switch (scheme) {\n    case 'about:': {\n      // If request’s current URL’s path is the string \"blank\", then return a new response\n      // whose status message is `OK`, header list is « (`Content-Type`, `text/html;charset=utf-8`) »,\n      // and body is the empty byte sequence as a body.\n\n      // Otherwise, return a network error.\n      return Promise.resolve(makeNetworkError('about scheme is not supported'))\n    }\n    case 'blob:': {\n      if (!resolveObjectURL) {\n        resolveObjectURL = require('buffer').resolveObjectURL\n      }\n\n      // 1. Let blobURLEntry be request’s current URL’s blob URL entry.\n      const blobURLEntry = requestCurrentURL(request)\n\n      // https://github.com/web-platform-tests/wpt/blob/7b0ebaccc62b566a1965396e5be7bb2bc06f841f/FileAPI/url/resources/fetch-tests.js#L52-L56\n      // Buffer.resolveObjectURL does not ignore URL queries.\n      if (blobURLEntry.search.length !== 0) {\n        return Promise.resolve(makeNetworkError('NetworkError when attempting to fetch resource.'))\n      }\n\n      const blobURLEntryObject = resolveObjectURL(blobURLEntry.toString())\n\n      // 2. If request’s method is not `GET`, blobURLEntry is null, or blobURLEntry’s\n      //    object is not a Blob object, then return a network error.\n      if (request.method !== 'GET' || !isBlobLike(blobURLEntryObject)) {\n        return Promise.resolve(makeNetworkError('invalid method'))\n      }\n\n      // 3. Let bodyWithType be the result of safely extracting blobURLEntry’s object.\n      const bodyWithType = safelyExtractBody(blobURLEntryObject)\n\n      // 4. Let body be bodyWithType’s body.\n      const body = bodyWithType[0]\n\n      // 5. Let length be body’s length, serialized and isomorphic encoded.\n      const length = isomorphicEncode(`${body.length}`)\n\n      // 6. Let type be bodyWithType’s type if it is non-null; otherwise the empty byte sequence.\n      const type = bodyWithType[1] ?? ''\n\n      // 7. Return a new response whose status message is `OK`, header list is\n      //    « (`Content-Length`, length), (`Content-Type`, type) », and body is body.\n      const response = makeResponse({\n        statusText: 'OK',\n        headersList: [\n          ['content-length', { name: 'Content-Length', value: length }],\n          ['content-type', { name: 'Content-Type', value: type }]\n        ]\n      })\n\n      response.body = body\n\n      return Promise.resolve(response)\n    }\n    case 'data:': {\n      // 1. Let dataURLStruct be the result of running the\n      //    data: URL processor on request’s current URL.\n      const currentURL = requestCurrentURL(request)\n      const dataURLStruct = dataURLProcessor(currentURL)\n\n      // 2. If dataURLStruct is failure, then return a\n      //    network error.\n      if (dataURLStruct === 'failure') {\n        return Promise.resolve(makeNetworkError('failed to fetch the data URL'))\n      }\n\n      // 3. Let mimeType be dataURLStruct’s MIME type, serialized.\n      const mimeType = serializeAMimeType(dataURLStruct.mimeType)\n\n      // 4. Return a response whose status message is `OK`,\n      //    header list is « (`Content-Type`, mimeType) »,\n      //    and body is dataURLStruct’s body as a body.\n      return Promise.resolve(makeResponse({\n        statusText: 'OK',\n        headersList: [\n          ['content-type', { name: 'Content-Type', value: mimeType }]\n        ],\n        body: safelyExtractBody(dataURLStruct.body)[0]\n      }))\n    }\n    case 'file:': {\n      // For now, unfortunate as it is, file URLs are left as an exercise for the reader.\n      // When in doubt, return a network error.\n      return Promise.resolve(makeNetworkError('not implemented... yet...'))\n    }\n    case 'http:':\n    case 'https:': {\n      // Return the result of running HTTP fetch given fetchParams.\n\n      return httpFetch(fetchParams)\n        .catch((err) => makeNetworkError(err))\n    }\n    default: {\n      return Promise.resolve(makeNetworkError('unknown scheme'))\n    }\n  }\n}\n\n// https://fetch.spec.whatwg.org/#finalize-response\nfunction finalizeResponse (fetchParams, response) {\n  // 1. Set fetchParams’s request’s done flag.\n  fetchParams.request.done = true\n\n  // 2, If fetchParams’s process response done is not null, then queue a fetch\n  // task to run fetchParams’s process response done given response, with\n  // fetchParams’s task destination.\n  if (fetchParams.processResponseDone != null) {\n    queueMicrotask(() => fetchParams.processResponseDone(response))\n  }\n}\n\n// https://fetch.spec.whatwg.org/#fetch-finale\nfunction fetchFinale (fetchParams, response) {\n  // 1. If response is a network error, then:\n  if (response.type === 'error') {\n    // 1. Set response’s URL list to « fetchParams’s request’s URL list[0] ».\n    response.urlList = [fetchParams.request.urlList[0]]\n\n    // 2. Set response’s timing info to the result of creating an opaque timing\n    // info for fetchParams’s timing info.\n    response.timingInfo = createOpaqueTimingInfo({\n      startTime: fetchParams.timingInfo.startTime\n    })\n  }\n\n  // 2. Let processResponseEndOfBody be the following steps:\n  const processResponseEndOfBody = () => {\n    // 1. Set fetchParams’s request’s done flag.\n    fetchParams.request.done = true\n\n    // If fetchParams’s process response end-of-body is not null,\n    // then queue a fetch task to run fetchParams’s process response\n    // end-of-body given response with fetchParams’s task destination.\n    if (fetchParams.processResponseEndOfBody != null) {\n      queueMicrotask(() => fetchParams.processResponseEndOfBody(response))\n    }\n  }\n\n  // 3. If fetchParams’s process response is non-null, then queue a fetch task\n  // to run fetchParams’s process response given response, with fetchParams’s\n  // task destination.\n  if (fetchParams.processResponse != null) {\n    queueMicrotask(() => fetchParams.processResponse(response))\n  }\n\n  // 4. If response’s body is null, then run processResponseEndOfBody.\n  if (response.body == null) {\n    processResponseEndOfBody()\n  } else {\n  // 5. Otherwise:\n\n    // 1. Let transformStream be a new a TransformStream.\n\n    // 2. Let identityTransformAlgorithm be an algorithm which, given chunk,\n    // enqueues chunk in transformStream.\n    const identityTransformAlgorithm = (chunk, controller) => {\n      controller.enqueue(chunk)\n    }\n\n    // 3. Set up transformStream with transformAlgorithm set to identityTransformAlgorithm\n    // and flushAlgorithm set to processResponseEndOfBody.\n    const transformStream = new TransformStream({\n      start () {},\n      transform: identityTransformAlgorithm,\n      flush: processResponseEndOfBody\n    }, {\n      size () {\n        return 1\n      }\n    }, {\n      size () {\n        return 1\n      }\n    })\n\n    // 4. Set response’s body to the result of piping response’s body through transformStream.\n    response.body = { stream: response.body.stream.pipeThrough(transformStream) }\n  }\n\n  // 6. If fetchParams’s process response consume body is non-null, then:\n  if (fetchParams.processResponseConsumeBody != null) {\n    // 1. Let processBody given nullOrBytes be this step: run fetchParams’s\n    // process response consume body given response and nullOrBytes.\n    const processBody = (nullOrBytes) => fetchParams.processResponseConsumeBody(response, nullOrBytes)\n\n    // 2. Let processBodyError be this step: run fetchParams’s process\n    // response consume body given response and failure.\n    const processBodyError = (failure) => fetchParams.processResponseConsumeBody(response, failure)\n\n    // 3. If response’s body is null, then queue a fetch task to run processBody\n    // given null, with fetchParams’s task destination.\n    if (response.body == null) {\n      queueMicrotask(() => processBody(null))\n    } else {\n      // 4. Otherwise, fully read response’s body given processBody, processBodyError,\n      // and fetchParams’s task destination.\n      return fullyReadBody(response.body, processBody, processBodyError)\n    }\n    return Promise.resolve()\n  }\n}\n\n// https://fetch.spec.whatwg.org/#http-fetch\nasync function httpFetch (fetchParams) {\n  // 1. Let request be fetchParams’s request.\n  const request = fetchParams.request\n\n  // 2. Let response be null.\n  let response = null\n\n  // 3. Let actualResponse be null.\n  let actualResponse = null\n\n  // 4. Let timingInfo be fetchParams’s timing info.\n  const timingInfo = fetchParams.timingInfo\n\n  // 5. If request’s service-workers mode is \"all\", then:\n  if (request.serviceWorkers === 'all') {\n    // TODO\n  }\n\n  // 6. If response is null, then:\n  if (response === null) {\n    // 1. If makeCORSPreflight is true and one of these conditions is true:\n    // TODO\n\n    // 2. If request’s redirect mode is \"follow\", then set request’s\n    // service-workers mode to \"none\".\n    if (request.redirect === 'follow') {\n      request.serviceWorkers = 'none'\n    }\n\n    // 3. Set response and actualResponse to the result of running\n    // HTTP-network-or-cache fetch given fetchParams.\n    actualResponse = response = await httpNetworkOrCacheFetch(fetchParams)\n\n    // 4. If request’s response tainting is \"cors\" and a CORS check\n    // for request and response returns failure, then return a network error.\n    if (\n      request.responseTainting === 'cors' &&\n      corsCheck(request, response) === 'failure'\n    ) {\n      return makeNetworkError('cors failure')\n    }\n\n    // 5. If the TAO check for request and response returns failure, then set\n    // request’s timing allow failed flag.\n    if (TAOCheck(request, response) === 'failure') {\n      request.timingAllowFailed = true\n    }\n  }\n\n  // 7. If either request’s response tainting or response’s type\n  // is \"opaque\", and the cross-origin resource policy check with\n  // request’s origin, request’s client, request’s destination,\n  // and actualResponse returns blocked, then return a network error.\n  if (\n    (request.responseTainting === 'opaque' || response.type === 'opaque') &&\n    crossOriginResourcePolicyCheck(\n      request.origin,\n      request.client,\n      request.destination,\n      actualResponse\n    ) === 'blocked'\n  ) {\n    return makeNetworkError('blocked')\n  }\n\n  // 8. If actualResponse’s status is a redirect status, then:\n  if (redirectStatusSet.has(actualResponse.status)) {\n    // 1. If actualResponse’s status is not 303, request’s body is not null,\n    // and the connection uses HTTP/2, then user agents may, and are even\n    // encouraged to, transmit an RST_STREAM frame.\n    // See, https://github.com/whatwg/fetch/issues/1288\n    if (request.redirect !== 'manual') {\n      fetchParams.controller.connection.destroy()\n    }\n\n    // 2. Switch on request’s redirect mode:\n    if (request.redirect === 'error') {\n      // Set response to a network error.\n      response = makeNetworkError('unexpected redirect')\n    } else if (request.redirect === 'manual') {\n      // Set response to an opaque-redirect filtered response whose internal\n      // response is actualResponse.\n      // NOTE(spec): On the web this would return an `opaqueredirect` response,\n      // but that doesn't make sense server side.\n      // See https://github.com/nodejs/undici/issues/1193.\n      response = actualResponse\n    } else if (request.redirect === 'follow') {\n      // Set response to the result of running HTTP-redirect fetch given\n      // fetchParams and response.\n      response = await httpRedirectFetch(fetchParams, response)\n    } else {\n      assert(false)\n    }\n  }\n\n  // 9. Set response’s timing info to timingInfo.\n  response.timingInfo = timingInfo\n\n  // 10. Return response.\n  return response\n}\n\n// https://fetch.spec.whatwg.org/#http-redirect-fetch\nfunction httpRedirectFetch (fetchParams, response) {\n  // 1. Let request be fetchParams’s request.\n  const request = fetchParams.request\n\n  // 2. Let actualResponse be response, if response is not a filtered response,\n  // and response’s internal response otherwise.\n  const actualResponse = response.internalResponse\n    ? response.internalResponse\n    : response\n\n  // 3. Let locationURL be actualResponse’s location URL given request’s current\n  // URL’s fragment.\n  let locationURL\n\n  try {\n    locationURL = responseLocationURL(\n      actualResponse,\n      requestCurrentURL(request).hash\n    )\n\n    // 4. If locationURL is null, then return response.\n    if (locationURL == null) {\n      return response\n    }\n  } catch (err) {\n    // 5. If locationURL is failure, then return a network error.\n    return Promise.resolve(makeNetworkError(err))\n  }\n\n  // 6. If locationURL’s scheme is not an HTTP(S) scheme, then return a network\n  // error.\n  if (!urlIsHttpHttpsScheme(locationURL)) {\n    return Promise.resolve(makeNetworkError('URL scheme must be a HTTP(S) scheme'))\n  }\n\n  // 7. If request’s redirect count is 20, then return a network error.\n  if (request.redirectCount === 20) {\n    return Promise.resolve(makeNetworkError('redirect count exceeded'))\n  }\n\n  // 8. Increase request’s redirect count by 1.\n  request.redirectCount += 1\n\n  // 9. If request’s mode is \"cors\", locationURL includes credentials, and\n  // request’s origin is not same origin with locationURL’s origin, then return\n  //  a network error.\n  if (\n    request.mode === 'cors' &&\n    (locationURL.username || locationURL.password) &&\n    !sameOrigin(request, locationURL)\n  ) {\n    return Promise.resolve(makeNetworkError('cross origin not allowed for request mode \"cors\"'))\n  }\n\n  // 10. If request’s response tainting is \"cors\" and locationURL includes\n  // credentials, then return a network error.\n  if (\n    request.responseTainting === 'cors' &&\n    (locationURL.username || locationURL.password)\n  ) {\n    return Promise.resolve(makeNetworkError(\n      'URL cannot contain credentials for request mode \"cors\"'\n    ))\n  }\n\n  // 11. If actualResponse’s status is not 303, request’s body is non-null,\n  // and request’s body’s source is null, then return a network error.\n  if (\n    actualResponse.status !== 303 &&\n    request.body != null &&\n    request.body.source == null\n  ) {\n    return Promise.resolve(makeNetworkError())\n  }\n\n  // 12. If one of the following is true\n  // - actualResponse’s status is 301 or 302 and request’s method is `POST`\n  // - actualResponse’s status is 303 and request’s method is not `GET` or `HEAD`\n  if (\n    ([301, 302].includes(actualResponse.status) && request.method === 'POST') ||\n    (actualResponse.status === 303 &&\n      !GET_OR_HEAD.includes(request.method))\n  ) {\n    // then:\n    // 1. Set request’s method to `GET` and request’s body to null.\n    request.method = 'GET'\n    request.body = null\n\n    // 2. For each headerName of request-body-header name, delete headerName from\n    // request’s header list.\n    for (const headerName of requestBodyHeader) {\n      request.headersList.delete(headerName)\n    }\n  }\n\n  // 13. If request’s current URL’s origin is not same origin with locationURL’s\n  //     origin, then for each headerName of CORS non-wildcard request-header name,\n  //     delete headerName from request’s header list.\n  if (!sameOrigin(requestCurrentURL(request), locationURL)) {\n    // https://fetch.spec.whatwg.org/#cors-non-wildcard-request-header-name\n    request.headersList.delete('authorization')\n\n    // https://fetch.spec.whatwg.org/#authentication-entries\n    request.headersList.delete('proxy-authorization', true)\n\n    // \"Cookie\" and \"Host\" are forbidden request-headers, which undici doesn't implement.\n    request.headersList.delete('cookie')\n    request.headersList.delete('host')\n  }\n\n  // 14. If request’s body is non-null, then set request’s body to the first return\n  // value of safely extracting request’s body’s source.\n  if (request.body != null) {\n    assert(request.body.source != null)\n    request.body = safelyExtractBody(request.body.source)[0]\n  }\n\n  // 15. Let timingInfo be fetchParams’s timing info.\n  const timingInfo = fetchParams.timingInfo\n\n  // 16. Set timingInfo’s redirect end time and post-redirect start time to the\n  // coarsened shared current time given fetchParams’s cross-origin isolated\n  // capability.\n  timingInfo.redirectEndTime = timingInfo.postRedirectStartTime =\n    coarsenedSharedCurrentTime(fetchParams.crossOriginIsolatedCapability)\n\n  // 17. If timingInfo’s redirect start time is 0, then set timingInfo’s\n  //  redirect start time to timingInfo’s start time.\n  if (timingInfo.redirectStartTime === 0) {\n    timingInfo.redirectStartTime = timingInfo.startTime\n  }\n\n  // 18. Append locationURL to request’s URL list.\n  request.urlList.push(locationURL)\n\n  // 19. Invoke set request’s referrer policy on redirect on request and\n  // actualResponse.\n  setRequestReferrerPolicyOnRedirect(request, actualResponse)\n\n  // 20. Return the result of running main fetch given fetchParams and true.\n  return mainFetch(fetchParams, true)\n}\n\n// https://fetch.spec.whatwg.org/#http-network-or-cache-fetch\nasync function httpNetworkOrCacheFetch (\n  fetchParams,\n  isAuthenticationFetch = false,\n  isNewConnectionFetch = false\n) {\n  // 1. Let request be fetchParams’s request.\n  const request = fetchParams.request\n\n  // 2. Let httpFetchParams be null.\n  let httpFetchParams = null\n\n  // 3. Let httpRequest be null.\n  let httpRequest = null\n\n  // 4. Let response be null.\n  let response = null\n\n  // 5. Let storedResponse be null.\n  // TODO: cache\n\n  // 6. Let httpCache be null.\n  const httpCache = null\n\n  // 7. Let the revalidatingFlag be unset.\n  const revalidatingFlag = false\n\n  // 8. Run these steps, but abort when the ongoing fetch is terminated:\n\n  //    1. If request’s window is \"no-window\" and request’s redirect mode is\n  //    \"error\", then set httpFetchParams to fetchParams and httpRequest to\n  //    request.\n  if (request.window === 'no-window' && request.redirect === 'error') {\n    httpFetchParams = fetchParams\n    httpRequest = request\n  } else {\n    // Otherwise:\n\n    // 1. Set httpRequest to a clone of request.\n    httpRequest = makeRequest(request)\n\n    // 2. Set httpFetchParams to a copy of fetchParams.\n    httpFetchParams = { ...fetchParams }\n\n    // 3. Set httpFetchParams’s request to httpRequest.\n    httpFetchParams.request = httpRequest\n  }\n\n  //    3. Let includeCredentials be true if one of\n  const includeCredentials =\n    request.credentials === 'include' ||\n    (request.credentials === 'same-origin' &&\n      request.responseTainting === 'basic')\n\n  //    4. Let contentLength be httpRequest’s body’s length, if httpRequest’s\n  //    body is non-null; otherwise null.\n  const contentLength = httpRequest.body ? httpRequest.body.length : null\n\n  //    5. Let contentLengthHeaderValue be null.\n  let contentLengthHeaderValue = null\n\n  //    6. If httpRequest’s body is null and httpRequest’s method is `POST` or\n  //    `PUT`, then set contentLengthHeaderValue to `0`.\n  if (\n    httpRequest.body == null &&\n    ['POST', 'PUT'].includes(httpRequest.method)\n  ) {\n    contentLengthHeaderValue = '0'\n  }\n\n  //    7. If contentLength is non-null, then set contentLengthHeaderValue to\n  //    contentLength, serialized and isomorphic encoded.\n  if (contentLength != null) {\n    contentLengthHeaderValue = isomorphicEncode(`${contentLength}`)\n  }\n\n  //    8. If contentLengthHeaderValue is non-null, then append\n  //    `Content-Length`/contentLengthHeaderValue to httpRequest’s header\n  //    list.\n  if (contentLengthHeaderValue != null) {\n    httpRequest.headersList.append('content-length', contentLengthHeaderValue)\n  }\n\n  //    9. If contentLengthHeaderValue is non-null, then append (`Content-Length`,\n  //    contentLengthHeaderValue) to httpRequest’s header list.\n\n  //    10. If contentLength is non-null and httpRequest’s keepalive is true,\n  //    then:\n  if (contentLength != null && httpRequest.keepalive) {\n    // NOTE: keepalive is a noop outside of browser context.\n  }\n\n  //    11. If httpRequest’s referrer is a URL, then append\n  //    `Referer`/httpRequest’s referrer, serialized and isomorphic encoded,\n  //     to httpRequest’s header list.\n  if (httpRequest.referrer instanceof URL) {\n    httpRequest.headersList.append('referer', isomorphicEncode(httpRequest.referrer.href))\n  }\n\n  //    12. Append a request `Origin` header for httpRequest.\n  appendRequestOriginHeader(httpRequest)\n\n  //    13. Append the Fetch metadata headers for httpRequest. [FETCH-METADATA]\n  appendFetchMetadata(httpRequest)\n\n  //    14. If httpRequest’s header list does not contain `User-Agent`, then\n  //    user agents should append `User-Agent`/default `User-Agent` value to\n  //    httpRequest’s header list.\n  if (!httpRequest.headersList.contains('user-agent')) {\n    httpRequest.headersList.append('user-agent', typeof esbuildDetection === 'undefined' ? 'undici' : 'node')\n  }\n\n  //    15. If httpRequest’s cache mode is \"default\" and httpRequest’s header\n  //    list contains `If-Modified-Since`, `If-None-Match`,\n  //    `If-Unmodified-Since`, `If-Match`, or `If-Range`, then set\n  //    httpRequest’s cache mode to \"no-store\".\n  if (\n    httpRequest.cache === 'default' &&\n    (httpRequest.headersList.contains('if-modified-since') ||\n      httpRequest.headersList.contains('if-none-match') ||\n      httpRequest.headersList.contains('if-unmodified-since') ||\n      httpRequest.headersList.contains('if-match') ||\n      httpRequest.headersList.contains('if-range'))\n  ) {\n    httpRequest.cache = 'no-store'\n  }\n\n  //    16. If httpRequest’s cache mode is \"no-cache\", httpRequest’s prevent\n  //    no-cache cache-control header modification flag is unset, and\n  //    httpRequest’s header list does not contain `Cache-Control`, then append\n  //    `Cache-Control`/`max-age=0` to httpRequest’s header list.\n  if (\n    httpRequest.cache === 'no-cache' &&\n    !httpRequest.preventNoCacheCacheControlHeaderModification &&\n    !httpRequest.headersList.contains('cache-control')\n  ) {\n    httpRequest.headersList.append('cache-control', 'max-age=0')\n  }\n\n  //    17. If httpRequest’s cache mode is \"no-store\" or \"reload\", then:\n  if (httpRequest.cache === 'no-store' || httpRequest.cache === 'reload') {\n    // 1. If httpRequest’s header list does not contain `Pragma`, then append\n    // `Pragma`/`no-cache` to httpRequest’s header list.\n    if (!httpRequest.headersList.contains('pragma')) {\n      httpRequest.headersList.append('pragma', 'no-cache')\n    }\n\n    // 2. If httpRequest’s header list does not contain `Cache-Control`,\n    // then append `Cache-Control`/`no-cache` to httpRequest’s header list.\n    if (!httpRequest.headersList.contains('cache-control')) {\n      httpRequest.headersList.append('cache-control', 'no-cache')\n    }\n  }\n\n  //    18. If httpRequest’s header list contains `Range`, then append\n  //    `Accept-Encoding`/`identity` to httpRequest’s header list.\n  if (httpRequest.headersList.contains('range')) {\n    httpRequest.headersList.append('accept-encoding', 'identity')\n  }\n\n  //    19. Modify httpRequest’s header list per HTTP. Do not append a given\n  //    header if httpRequest’s header list contains that header’s name.\n  //    TODO: https://github.com/whatwg/fetch/issues/1285#issuecomment-896560129\n  if (!httpRequest.headersList.contains('accept-encoding')) {\n    if (urlHasHttpsScheme(requestCurrentURL(httpRequest))) {\n      httpRequest.headersList.append('accept-encoding', 'br, gzip, deflate')\n    } else {\n      httpRequest.headersList.append('accept-encoding', 'gzip, deflate')\n    }\n  }\n\n  httpRequest.headersList.delete('host')\n\n  //    20. If includeCredentials is true, then:\n  if (includeCredentials) {\n    // 1. If the user agent is not configured to block cookies for httpRequest\n    // (see section 7 of [COOKIES]), then:\n    // TODO: credentials\n    // 2. If httpRequest’s header list does not contain `Authorization`, then:\n    // TODO: credentials\n  }\n\n  //    21. If there’s a proxy-authentication entry, use it as appropriate.\n  //    TODO: proxy-authentication\n\n  //    22. Set httpCache to the result of determining the HTTP cache\n  //    partition, given httpRequest.\n  //    TODO: cache\n\n  //    23. If httpCache is null, then set httpRequest’s cache mode to\n  //    \"no-store\".\n  if (httpCache == null) {\n    httpRequest.cache = 'no-store'\n  }\n\n  //    24. If httpRequest’s cache mode is neither \"no-store\" nor \"reload\",\n  //    then:\n  if (httpRequest.mode !== 'no-store' && httpRequest.mode !== 'reload') {\n    // TODO: cache\n  }\n\n  // 9. If aborted, then return the appropriate network error for fetchParams.\n  // TODO\n\n  // 10. If response is null, then:\n  if (response == null) {\n    // 1. If httpRequest’s cache mode is \"only-if-cached\", then return a\n    // network error.\n    if (httpRequest.mode === 'only-if-cached') {\n      return makeNetworkError('only if cached')\n    }\n\n    // 2. Let forwardResponse be the result of running HTTP-network fetch\n    // given httpFetchParams, includeCredentials, and isNewConnectionFetch.\n    const forwardResponse = await httpNetworkFetch(\n      httpFetchParams,\n      includeCredentials,\n      isNewConnectionFetch\n    )\n\n    // 3. If httpRequest’s method is unsafe and forwardResponse’s status is\n    // in the range 200 to 399, inclusive, invalidate appropriate stored\n    // responses in httpCache, as per the \"Invalidation\" chapter of HTTP\n    // Caching, and set storedResponse to null. [HTTP-CACHING]\n    if (\n      !safeMethodsSet.has(httpRequest.method) &&\n      forwardResponse.status >= 200 &&\n      forwardResponse.status <= 399\n    ) {\n      // TODO: cache\n    }\n\n    // 4. If the revalidatingFlag is set and forwardResponse’s status is 304,\n    // then:\n    if (revalidatingFlag && forwardResponse.status === 304) {\n      // TODO: cache\n    }\n\n    // 5. If response is null, then:\n    if (response == null) {\n      // 1. Set response to forwardResponse.\n      response = forwardResponse\n\n      // 2. Store httpRequest and forwardResponse in httpCache, as per the\n      // \"Storing Responses in Caches\" chapter of HTTP Caching. [HTTP-CACHING]\n      // TODO: cache\n    }\n  }\n\n  // 11. Set response’s URL list to a clone of httpRequest’s URL list.\n  response.urlList = [...httpRequest.urlList]\n\n  // 12. If httpRequest’s header list contains `Range`, then set response’s\n  // range-requested flag.\n  if (httpRequest.headersList.contains('range')) {\n    response.rangeRequested = true\n  }\n\n  // 13. Set response’s request-includes-credentials to includeCredentials.\n  response.requestIncludesCredentials = includeCredentials\n\n  // 14. If response’s status is 401, httpRequest’s response tainting is not\n  // \"cors\", includeCredentials is true, and request’s window is an environment\n  // settings object, then:\n  // TODO\n\n  // 15. If response’s status is 407, then:\n  if (response.status === 407) {\n    // 1. If request’s window is \"no-window\", then return a network error.\n    if (request.window === 'no-window') {\n      return makeNetworkError()\n    }\n\n    // 2. ???\n\n    // 3. If fetchParams is canceled, then return the appropriate network error for fetchParams.\n    if (isCancelled(fetchParams)) {\n      return makeAppropriateNetworkError(fetchParams)\n    }\n\n    // 4. Prompt the end user as appropriate in request’s window and store\n    // the result as a proxy-authentication entry. [HTTP-AUTH]\n    // TODO: Invoke some kind of callback?\n\n    // 5. Set response to the result of running HTTP-network-or-cache fetch given\n    // fetchParams.\n    // TODO\n    return makeNetworkError('proxy authentication required')\n  }\n\n  // 16. If all of the following are true\n  if (\n    // response’s status is 421\n    response.status === 421 &&\n    // isNewConnectionFetch is false\n    !isNewConnectionFetch &&\n    // request’s body is null, or request’s body is non-null and request’s body’s source is non-null\n    (request.body == null || request.body.source != null)\n  ) {\n    // then:\n\n    // 1. If fetchParams is canceled, then return the appropriate network error for fetchParams.\n    if (isCancelled(fetchParams)) {\n      return makeAppropriateNetworkError(fetchParams)\n    }\n\n    // 2. Set response to the result of running HTTP-network-or-cache\n    // fetch given fetchParams, isAuthenticationFetch, and true.\n\n    // TODO (spec): The spec doesn't specify this but we need to cancel\n    // the active response before we can start a new one.\n    // https://github.com/whatwg/fetch/issues/1293\n    fetchParams.controller.connection.destroy()\n\n    response = await httpNetworkOrCacheFetch(\n      fetchParams,\n      isAuthenticationFetch,\n      true\n    )\n  }\n\n  // 17. If isAuthenticationFetch is true, then create an authentication entry\n  if (isAuthenticationFetch) {\n    // TODO\n  }\n\n  // 18. Return response.\n  return response\n}\n\n// https://fetch.spec.whatwg.org/#http-network-fetch\nasync function httpNetworkFetch (\n  fetchParams,\n  includeCredentials = false,\n  forceNewConnection = false\n) {\n  assert(!fetchParams.controller.connection || fetchParams.controller.connection.destroyed)\n\n  fetchParams.controller.connection = {\n    abort: null,\n    destroyed: false,\n    destroy (err) {\n      if (!this.destroyed) {\n        this.destroyed = true\n        this.abort?.(err ?? new DOMException('The operation was aborted.', 'AbortError'))\n      }\n    }\n  }\n\n  // 1. Let request be fetchParams’s request.\n  const request = fetchParams.request\n\n  // 2. Let response be null.\n  let response = null\n\n  // 3. Let timingInfo be fetchParams’s timing info.\n  const timingInfo = fetchParams.timingInfo\n\n  // 4. Let httpCache be the result of determining the HTTP cache partition,\n  // given request.\n  // TODO: cache\n  const httpCache = null\n\n  // 5. If httpCache is null, then set request’s cache mode to \"no-store\".\n  if (httpCache == null) {\n    request.cache = 'no-store'\n  }\n\n  // 6. Let networkPartitionKey be the result of determining the network\n  // partition key given request.\n  // TODO\n\n  // 7. Let newConnection be \"yes\" if forceNewConnection is true; otherwise\n  // \"no\".\n  const newConnection = forceNewConnection ? 'yes' : 'no' // eslint-disable-line no-unused-vars\n\n  // 8. Switch on request’s mode:\n  if (request.mode === 'websocket') {\n    // Let connection be the result of obtaining a WebSocket connection,\n    // given request’s current URL.\n    // TODO\n  } else {\n    // Let connection be the result of obtaining a connection, given\n    // networkPartitionKey, request’s current URL’s origin,\n    // includeCredentials, and forceNewConnection.\n    // TODO\n  }\n\n  // 9. Run these steps, but abort when the ongoing fetch is terminated:\n\n  //    1. If connection is failure, then return a network error.\n\n  //    2. Set timingInfo’s final connection timing info to the result of\n  //    calling clamp and coarsen connection timing info with connection’s\n  //    timing info, timingInfo’s post-redirect start time, and fetchParams’s\n  //    cross-origin isolated capability.\n\n  //    3. If connection is not an HTTP/2 connection, request’s body is non-null,\n  //    and request’s body’s source is null, then append (`Transfer-Encoding`,\n  //    `chunked`) to request’s header list.\n\n  //    4. Set timingInfo’s final network-request start time to the coarsened\n  //    shared current time given fetchParams’s cross-origin isolated\n  //    capability.\n\n  //    5. Set response to the result of making an HTTP request over connection\n  //    using request with the following caveats:\n\n  //        - Follow the relevant requirements from HTTP. [HTTP] [HTTP-SEMANTICS]\n  //        [HTTP-COND] [HTTP-CACHING] [HTTP-AUTH]\n\n  //        - If request’s body is non-null, and request’s body’s source is null,\n  //        then the user agent may have a buffer of up to 64 kibibytes and store\n  //        a part of request’s body in that buffer. If the user agent reads from\n  //        request’s body beyond that buffer’s size and the user agent needs to\n  //        resend request, then instead return a network error.\n\n  //        - Set timingInfo’s final network-response start time to the coarsened\n  //        shared current time given fetchParams’s cross-origin isolated capability,\n  //        immediately after the user agent’s HTTP parser receives the first byte\n  //        of the response (e.g., frame header bytes for HTTP/2 or response status\n  //        line for HTTP/1.x).\n\n  //        - Wait until all the headers are transmitted.\n\n  //        - Any responses whose status is in the range 100 to 199, inclusive,\n  //        and is not 101, are to be ignored, except for the purposes of setting\n  //        timingInfo’s final network-response start time above.\n\n  //    - If request’s header list contains `Transfer-Encoding`/`chunked` and\n  //    response is transferred via HTTP/1.0 or older, then return a network\n  //    error.\n\n  //    - If the HTTP request results in a TLS client certificate dialog, then:\n\n  //        1. If request’s window is an environment settings object, make the\n  //        dialog available in request’s window.\n\n  //        2. Otherwise, return a network error.\n\n  // To transmit request’s body body, run these steps:\n  let requestBody = null\n  // 1. If body is null and fetchParams’s process request end-of-body is\n  // non-null, then queue a fetch task given fetchParams’s process request\n  // end-of-body and fetchParams’s task destination.\n  if (request.body == null && fetchParams.processRequestEndOfBody) {\n    queueMicrotask(() => fetchParams.processRequestEndOfBody())\n  } else if (request.body != null) {\n    // 2. Otherwise, if body is non-null:\n\n    //    1. Let processBodyChunk given bytes be these steps:\n    const processBodyChunk = async function * (bytes) {\n      // 1. If the ongoing fetch is terminated, then abort these steps.\n      if (isCancelled(fetchParams)) {\n        return\n      }\n\n      // 2. Run this step in parallel: transmit bytes.\n      yield bytes\n\n      // 3. If fetchParams’s process request body is non-null, then run\n      // fetchParams’s process request body given bytes’s length.\n      fetchParams.processRequestBodyChunkLength?.(bytes.byteLength)\n    }\n\n    // 2. Let processEndOfBody be these steps:\n    const processEndOfBody = () => {\n      // 1. If fetchParams is canceled, then abort these steps.\n      if (isCancelled(fetchParams)) {\n        return\n      }\n\n      // 2. If fetchParams’s process request end-of-body is non-null,\n      // then run fetchParams’s process request end-of-body.\n      if (fetchParams.processRequestEndOfBody) {\n        fetchParams.processRequestEndOfBody()\n      }\n    }\n\n    // 3. Let processBodyError given e be these steps:\n    const processBodyError = (e) => {\n      // 1. If fetchParams is canceled, then abort these steps.\n      if (isCancelled(fetchParams)) {\n        return\n      }\n\n      // 2. If e is an \"AbortError\" DOMException, then abort fetchParams’s controller.\n      if (e.name === 'AbortError') {\n        fetchParams.controller.abort()\n      } else {\n        fetchParams.controller.terminate(e)\n      }\n    }\n\n    // 4. Incrementally read request’s body given processBodyChunk, processEndOfBody,\n    // processBodyError, and fetchParams’s task destination.\n    requestBody = (async function * () {\n      try {\n        for await (const bytes of request.body.stream) {\n          yield * processBodyChunk(bytes)\n        }\n        processEndOfBody()\n      } catch (err) {\n        processBodyError(err)\n      }\n    })()\n  }\n\n  try {\n    // socket is only provided for websockets\n    const { body, status, statusText, headersList, socket } = await dispatch({ body: requestBody })\n\n    if (socket) {\n      response = makeResponse({ status, statusText, headersList, socket })\n    } else {\n      const iterator = body[Symbol.asyncIterator]()\n      fetchParams.controller.next = () => iterator.next()\n\n      response = makeResponse({ status, statusText, headersList })\n    }\n  } catch (err) {\n    // 10. If aborted, then:\n    if (err.name === 'AbortError') {\n      // 1. If connection uses HTTP/2, then transmit an RST_STREAM frame.\n      fetchParams.controller.connection.destroy()\n\n      // 2. Return the appropriate network error for fetchParams.\n      return makeAppropriateNetworkError(fetchParams, err)\n    }\n\n    return makeNetworkError(err)\n  }\n\n  // 11. Let pullAlgorithm be an action that resumes the ongoing fetch\n  // if it is suspended.\n  const pullAlgorithm = () => {\n    fetchParams.controller.resume()\n  }\n\n  // 12. Let cancelAlgorithm be an algorithm that aborts fetchParams’s\n  // controller with reason, given reason.\n  const cancelAlgorithm = (reason) => {\n    fetchParams.controller.abort(reason)\n  }\n\n  // 13. Let highWaterMark be a non-negative, non-NaN number, chosen by\n  // the user agent.\n  // TODO\n\n  // 14. Let sizeAlgorithm be an algorithm that accepts a chunk object\n  // and returns a non-negative, non-NaN, non-infinite number, chosen by the user agent.\n  // TODO\n\n  // 15. Let stream be a new ReadableStream.\n  // 16. Set up stream with pullAlgorithm set to pullAlgorithm,\n  // cancelAlgorithm set to cancelAlgorithm, highWaterMark set to\n  // highWaterMark, and sizeAlgorithm set to sizeAlgorithm.\n  if (!ReadableStream) {\n    ReadableStream = require('stream/web').ReadableStream\n  }\n\n  const stream = new ReadableStream(\n    {\n      async start (controller) {\n        fetchParams.controller.controller = controller\n      },\n      async pull (controller) {\n        await pullAlgorithm(controller)\n      },\n      async cancel (reason) {\n        await cancelAlgorithm(reason)\n      }\n    },\n    {\n      highWaterMark: 0,\n      size () {\n        return 1\n      }\n    }\n  )\n\n  // 17. Run these steps, but abort when the ongoing fetch is terminated:\n\n  //    1. Set response’s body to a new body whose stream is stream.\n  response.body = { stream }\n\n  //    2. If response is not a network error and request’s cache mode is\n  //    not \"no-store\", then update response in httpCache for request.\n  //    TODO\n\n  //    3. If includeCredentials is true and the user agent is not configured\n  //    to block cookies for request (see section 7 of [COOKIES]), then run the\n  //    \"set-cookie-string\" parsing algorithm (see section 5.2 of [COOKIES]) on\n  //    the value of each header whose name is a byte-case-insensitive match for\n  //    `Set-Cookie` in response’s header list, if any, and request’s current URL.\n  //    TODO\n\n  // 18. If aborted, then:\n  // TODO\n\n  // 19. Run these steps in parallel:\n\n  //    1. Run these steps, but abort when fetchParams is canceled:\n  fetchParams.controller.on('terminated', onAborted)\n  fetchParams.controller.resume = async () => {\n    // 1. While true\n    while (true) {\n      // 1-3. See onData...\n\n      // 4. Set bytes to the result of handling content codings given\n      // codings and bytes.\n      let bytes\n      let isFailure\n      try {\n        const { done, value } = await fetchParams.controller.next()\n\n        if (isAborted(fetchParams)) {\n          break\n        }\n\n        bytes = done ? undefined : value\n      } catch (err) {\n        if (fetchParams.controller.ended && !timingInfo.encodedBodySize) {\n          // zlib doesn't like empty streams.\n          bytes = undefined\n        } else {\n          bytes = err\n\n          // err may be propagated from the result of calling readablestream.cancel,\n          // which might not be an error. https://github.com/nodejs/undici/issues/2009\n          isFailure = true\n        }\n      }\n\n      if (bytes === undefined) {\n        // 2. Otherwise, if the bytes transmission for response’s message\n        // body is done normally and stream is readable, then close\n        // stream, finalize response for fetchParams and response, and\n        // abort these in-parallel steps.\n        readableStreamClose(fetchParams.controller.controller)\n\n        finalizeResponse(fetchParams, response)\n\n        return\n      }\n\n      // 5. Increase timingInfo’s decoded body size by bytes’s length.\n      timingInfo.decodedBodySize += bytes?.byteLength ?? 0\n\n      // 6. If bytes is failure, then terminate fetchParams’s controller.\n      if (isFailure) {\n        fetchParams.controller.terminate(bytes)\n        return\n      }\n\n      // 7. Enqueue a Uint8Array wrapping an ArrayBuffer containing bytes\n      // into stream.\n      fetchParams.controller.controller.enqueue(new Uint8Array(bytes))\n\n      // 8. If stream is errored, then terminate the ongoing fetch.\n      if (isErrored(stream)) {\n        fetchParams.controller.terminate()\n        return\n      }\n\n      // 9. If stream doesn’t need more data ask the user agent to suspend\n      // the ongoing fetch.\n      if (!fetchParams.controller.controller.desiredSize) {\n        return\n      }\n    }\n  }\n\n  //    2. If aborted, then:\n  function onAborted (reason) {\n    // 2. If fetchParams is aborted, then:\n    if (isAborted(fetchParams)) {\n      // 1. Set response’s aborted flag.\n      response.aborted = true\n\n      // 2. If stream is readable, then error stream with the result of\n      //    deserialize a serialized abort reason given fetchParams’s\n      //    controller’s serialized abort reason and an\n      //    implementation-defined realm.\n      if (isReadable(stream)) {\n        fetchParams.controller.controller.error(\n          fetchParams.controller.serializedAbortReason\n        )\n      }\n    } else {\n      // 3. Otherwise, if stream is readable, error stream with a TypeError.\n      if (isReadable(stream)) {\n        fetchParams.controller.controller.error(new TypeError('terminated', {\n          cause: isErrorLike(reason) ? reason : undefined\n        }))\n      }\n    }\n\n    // 4. If connection uses HTTP/2, then transmit an RST_STREAM frame.\n    // 5. Otherwise, the user agent should close connection unless it would be bad for performance to do so.\n    fetchParams.controller.connection.destroy()\n  }\n\n  // 20. Return response.\n  return response\n\n  async function dispatch ({ body }) {\n    const url = requestCurrentURL(request)\n    /** @type {import('../..').Agent} */\n    const agent = fetchParams.controller.dispatcher\n\n    return new Promise((resolve, reject) => agent.dispatch(\n      {\n        path: url.pathname + url.search,\n        origin: url.origin,\n        method: request.method,\n        body: fetchParams.controller.dispatcher.isMockActive ? request.body && (request.body.source || request.body.stream) : body,\n        headers: request.headersList.entries,\n        maxRedirections: 0,\n        upgrade: request.mode === 'websocket' ? 'websocket' : undefined\n      },\n      {\n        body: null,\n        abort: null,\n\n        onConnect (abort) {\n          // TODO (fix): Do we need connection here?\n          const { connection } = fetchParams.controller\n\n          if (connection.destroyed) {\n            abort(new DOMException('The operation was aborted.', 'AbortError'))\n          } else {\n            fetchParams.controller.on('terminated', abort)\n            this.abort = connection.abort = abort\n          }\n        },\n\n        onHeaders (status, headersList, resume, statusText) {\n          if (status < 200) {\n            return\n          }\n\n          let codings = []\n          let location = ''\n\n          const headers = new Headers()\n\n          // For H2, the headers are a plain JS object\n          // We distinguish between them and iterate accordingly\n          if (Array.isArray(headersList)) {\n            for (let n = 0; n < headersList.length; n += 2) {\n              const key = headersList[n + 0].toString('latin1')\n              const val = headersList[n + 1].toString('latin1')\n              if (key.toLowerCase() === 'content-encoding') {\n                // https://www.rfc-editor.org/rfc/rfc7231#section-3.1.2.1\n                // \"All content-coding values are case-insensitive...\"\n                codings = val.toLowerCase().split(',').map((x) => x.trim())\n              } else if (key.toLowerCase() === 'location') {\n                location = val\n              }\n\n              headers[kHeadersList].append(key, val)\n            }\n          } else {\n            const keys = Object.keys(headersList)\n            for (const key of keys) {\n              const val = headersList[key]\n              if (key.toLowerCase() === 'content-encoding') {\n                // https://www.rfc-editor.org/rfc/rfc7231#section-3.1.2.1\n                // \"All content-coding values are case-insensitive...\"\n                codings = val.toLowerCase().split(',').map((x) => x.trim()).reverse()\n              } else if (key.toLowerCase() === 'location') {\n                location = val\n              }\n\n              headers[kHeadersList].append(key, val)\n            }\n          }\n\n          this.body = new Readable({ read: resume })\n\n          const decoders = []\n\n          const willFollow = request.redirect === 'follow' &&\n            location &&\n            redirectStatusSet.has(status)\n\n          // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding\n          if (request.method !== 'HEAD' && request.method !== 'CONNECT' && !nullBodyStatus.includes(status) && !willFollow) {\n            for (const coding of codings) {\n              // https://www.rfc-editor.org/rfc/rfc9112.html#section-7.2\n              if (coding === 'x-gzip' || coding === 'gzip') {\n                decoders.push(zlib.createGunzip({\n                  // Be less strict when decoding compressed responses, since sometimes\n                  // servers send slightly invalid responses that are still accepted\n                  // by common browsers.\n                  // Always using Z_SYNC_FLUSH is what cURL does.\n                  flush: zlib.constants.Z_SYNC_FLUSH,\n                  finishFlush: zlib.constants.Z_SYNC_FLUSH\n                }))\n              } else if (coding === 'deflate') {\n                decoders.push(zlib.createInflate())\n              } else if (coding === 'br') {\n                decoders.push(zlib.createBrotliDecompress())\n              } else {\n                decoders.length = 0\n                break\n              }\n            }\n          }\n\n          resolve({\n            status,\n            statusText,\n            headersList: headers[kHeadersList],\n            body: decoders.length\n              ? pipeline(this.body, ...decoders, () => { })\n              : this.body.on('error', () => {})\n          })\n\n          return true\n        },\n\n        onData (chunk) {\n          if (fetchParams.controller.dump) {\n            return\n          }\n\n          // 1. If one or more bytes have been transmitted from response’s\n          // message body, then:\n\n          //  1. Let bytes be the transmitted bytes.\n          const bytes = chunk\n\n          //  2. Let codings be the result of extracting header list values\n          //  given `Content-Encoding` and response’s header list.\n          //  See pullAlgorithm.\n\n          //  3. Increase timingInfo’s encoded body size by bytes’s length.\n          timingInfo.encodedBodySize += bytes.byteLength\n\n          //  4. See pullAlgorithm...\n\n          return this.body.push(bytes)\n        },\n\n        onComplete () {\n          if (this.abort) {\n            fetchParams.controller.off('terminated', this.abort)\n          }\n\n          fetchParams.controller.ended = true\n\n          this.body.push(null)\n        },\n\n        onError (error) {\n          if (this.abort) {\n            fetchParams.controller.off('terminated', this.abort)\n          }\n\n          this.body?.destroy(error)\n\n          fetchParams.controller.terminate(error)\n\n          reject(error)\n        },\n\n        onUpgrade (status, headersList, socket) {\n          if (status !== 101) {\n            return\n          }\n\n          const headers = new Headers()\n\n          for (let n = 0; n < headersList.length; n += 2) {\n            const key = headersList[n + 0].toString('latin1')\n            const val = headersList[n + 1].toString('latin1')\n\n            headers[kHeadersList].append(key, val)\n          }\n\n          resolve({\n            status,\n            statusText: STATUS_CODES[status],\n            headersList: headers[kHeadersList],\n            socket\n          })\n\n          return true\n        }\n      }\n    ))\n  }\n}\n\nmodule.exports = {\n  fetch,\n  Fetch,\n  fetching,\n  finalizeAndReportTiming\n}\n","/* globals AbortController */\n\n'use strict'\n\nconst { extractBody, mixinBody, cloneBody } = require('./body')\nconst { Headers, fill: fillHeaders, HeadersList } = require('./headers')\nconst { FinalizationRegistry } = require('../compat/dispatcher-weakref')()\nconst util = require('../core/util')\nconst {\n  isValidHTTPToken,\n  sameOrigin,\n  normalizeMethod,\n  makePolicyContainer,\n  normalizeMethodRecord\n} = require('./util')\nconst {\n  forbiddenMethodsSet,\n  corsSafeListedMethodsSet,\n  referrerPolicy,\n  requestRedirect,\n  requestMode,\n  requestCredentials,\n  requestCache,\n  requestDuplex\n} = require('./constants')\nconst { kEnumerableProperty } = util\nconst { kHeaders, kSignal, kState, kGuard, kRealm } = require('./symbols')\nconst { webidl } = require('./webidl')\nconst { getGlobalOrigin } = require('./global')\nconst { URLSerializer } = require('./dataURL')\nconst { kHeadersList, kConstruct } = require('../core/symbols')\nconst assert = require('assert')\nconst { getMaxListeners, setMaxListeners, getEventListeners, defaultMaxListeners } = require('events')\n\nlet TransformStream = globalThis.TransformStream\n\nconst kAbortController = Symbol('abortController')\n\nconst requestFinalizer = new FinalizationRegistry(({ signal, abort }) => {\n  signal.removeEventListener('abort', abort)\n})\n\n// https://fetch.spec.whatwg.org/#request-class\nclass Request {\n  // https://fetch.spec.whatwg.org/#dom-request\n  constructor (input, init = {}) {\n    if (input === kConstruct) {\n      return\n    }\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Request constructor' })\n\n    input = webidl.converters.RequestInfo(input)\n    init = webidl.converters.RequestInit(init)\n\n    // https://html.spec.whatwg.org/multipage/webappapis.html#environment-settings-object\n    this[kRealm] = {\n      settingsObject: {\n        baseUrl: getGlobalOrigin(),\n        get origin () {\n          return this.baseUrl?.origin\n        },\n        policyContainer: makePolicyContainer()\n      }\n    }\n\n    // 1. Let request be null.\n    let request = null\n\n    // 2. Let fallbackMode be null.\n    let fallbackMode = null\n\n    // 3. Let baseURL be this’s relevant settings object’s API base URL.\n    const baseUrl = this[kRealm].settingsObject.baseUrl\n\n    // 4. Let signal be null.\n    let signal = null\n\n    // 5. If input is a string, then:\n    if (typeof input === 'string') {\n      // 1. Let parsedURL be the result of parsing input with baseURL.\n      // 2. If parsedURL is failure, then throw a TypeError.\n      let parsedURL\n      try {\n        parsedURL = new URL(input, baseUrl)\n      } catch (err) {\n        throw new TypeError('Failed to parse URL from ' + input, { cause: err })\n      }\n\n      // 3. If parsedURL includes credentials, then throw a TypeError.\n      if (parsedURL.username || parsedURL.password) {\n        throw new TypeError(\n          'Request cannot be constructed from a URL that includes credentials: ' +\n            input\n        )\n      }\n\n      // 4. Set request to a new request whose URL is parsedURL.\n      request = makeRequest({ urlList: [parsedURL] })\n\n      // 5. Set fallbackMode to \"cors\".\n      fallbackMode = 'cors'\n    } else {\n      // 6. Otherwise:\n\n      // 7. Assert: input is a Request object.\n      assert(input instanceof Request)\n\n      // 8. Set request to input’s request.\n      request = input[kState]\n\n      // 9. Set signal to input’s signal.\n      signal = input[kSignal]\n    }\n\n    // 7. Let origin be this’s relevant settings object’s origin.\n    const origin = this[kRealm].settingsObject.origin\n\n    // 8. Let window be \"client\".\n    let window = 'client'\n\n    // 9. If request’s window is an environment settings object and its origin\n    // is same origin with origin, then set window to request’s window.\n    if (\n      request.window?.constructor?.name === 'EnvironmentSettingsObject' &&\n      sameOrigin(request.window, origin)\n    ) {\n      window = request.window\n    }\n\n    // 10. If init[\"window\"] exists and is non-null, then throw a TypeError.\n    if (init.window != null) {\n      throw new TypeError(`'window' option '${window}' must be null`)\n    }\n\n    // 11. If init[\"window\"] exists, then set window to \"no-window\".\n    if ('window' in init) {\n      window = 'no-window'\n    }\n\n    // 12. Set request to a new request with the following properties:\n    request = makeRequest({\n      // URL request’s URL.\n      // undici implementation note: this is set as the first item in request's urlList in makeRequest\n      // method request’s method.\n      method: request.method,\n      // header list A copy of request’s header list.\n      // undici implementation note: headersList is cloned in makeRequest\n      headersList: request.headersList,\n      // unsafe-request flag Set.\n      unsafeRequest: request.unsafeRequest,\n      // client This’s relevant settings object.\n      client: this[kRealm].settingsObject,\n      // window window.\n      window,\n      // priority request’s priority.\n      priority: request.priority,\n      // origin request’s origin. The propagation of the origin is only significant for navigation requests\n      // being handled by a service worker. In this scenario a request can have an origin that is different\n      // from the current client.\n      origin: request.origin,\n      // referrer request’s referrer.\n      referrer: request.referrer,\n      // referrer policy request’s referrer policy.\n      referrerPolicy: request.referrerPolicy,\n      // mode request’s mode.\n      mode: request.mode,\n      // credentials mode request’s credentials mode.\n      credentials: request.credentials,\n      // cache mode request’s cache mode.\n      cache: request.cache,\n      // redirect mode request’s redirect mode.\n      redirect: request.redirect,\n      // integrity metadata request’s integrity metadata.\n      integrity: request.integrity,\n      // keepalive request’s keepalive.\n      keepalive: request.keepalive,\n      // reload-navigation flag request’s reload-navigation flag.\n      reloadNavigation: request.reloadNavigation,\n      // history-navigation flag request’s history-navigation flag.\n      historyNavigation: request.historyNavigation,\n      // URL list A clone of request’s URL list.\n      urlList: [...request.urlList]\n    })\n\n    const initHasKey = Object.keys(init).length !== 0\n\n    // 13. If init is not empty, then:\n    if (initHasKey) {\n      // 1. If request’s mode is \"navigate\", then set it to \"same-origin\".\n      if (request.mode === 'navigate') {\n        request.mode = 'same-origin'\n      }\n\n      // 2. Unset request’s reload-navigation flag.\n      request.reloadNavigation = false\n\n      // 3. Unset request’s history-navigation flag.\n      request.historyNavigation = false\n\n      // 4. Set request’s origin to \"client\".\n      request.origin = 'client'\n\n      // 5. Set request’s referrer to \"client\"\n      request.referrer = 'client'\n\n      // 6. Set request’s referrer policy to the empty string.\n      request.referrerPolicy = ''\n\n      // 7. Set request’s URL to request’s current URL.\n      request.url = request.urlList[request.urlList.length - 1]\n\n      // 8. Set request’s URL list to « request’s URL ».\n      request.urlList = [request.url]\n    }\n\n    // 14. If init[\"referrer\"] exists, then:\n    if (init.referrer !== undefined) {\n      // 1. Let referrer be init[\"referrer\"].\n      const referrer = init.referrer\n\n      // 2. If referrer is the empty string, then set request’s referrer to \"no-referrer\".\n      if (referrer === '') {\n        request.referrer = 'no-referrer'\n      } else {\n        // 1. Let parsedReferrer be the result of parsing referrer with\n        // baseURL.\n        // 2. If parsedReferrer is failure, then throw a TypeError.\n        let parsedReferrer\n        try {\n          parsedReferrer = new URL(referrer, baseUrl)\n        } catch (err) {\n          throw new TypeError(`Referrer \"${referrer}\" is not a valid URL.`, { cause: err })\n        }\n\n        // 3. If one of the following is true\n        // - parsedReferrer’s scheme is \"about\" and path is the string \"client\"\n        // - parsedReferrer’s origin is not same origin with origin\n        // then set request’s referrer to \"client\".\n        if (\n          (parsedReferrer.protocol === 'about:' && parsedReferrer.hostname === 'client') ||\n          (origin && !sameOrigin(parsedReferrer, this[kRealm].settingsObject.baseUrl))\n        ) {\n          request.referrer = 'client'\n        } else {\n          // 4. Otherwise, set request’s referrer to parsedReferrer.\n          request.referrer = parsedReferrer\n        }\n      }\n    }\n\n    // 15. If init[\"referrerPolicy\"] exists, then set request’s referrer policy\n    // to it.\n    if (init.referrerPolicy !== undefined) {\n      request.referrerPolicy = init.referrerPolicy\n    }\n\n    // 16. Let mode be init[\"mode\"] if it exists, and fallbackMode otherwise.\n    let mode\n    if (init.mode !== undefined) {\n      mode = init.mode\n    } else {\n      mode = fallbackMode\n    }\n\n    // 17. If mode is \"navigate\", then throw a TypeError.\n    if (mode === 'navigate') {\n      throw webidl.errors.exception({\n        header: 'Request constructor',\n        message: 'invalid request mode navigate.'\n      })\n    }\n\n    // 18. If mode is non-null, set request’s mode to mode.\n    if (mode != null) {\n      request.mode = mode\n    }\n\n    // 19. If init[\"credentials\"] exists, then set request’s credentials mode\n    // to it.\n    if (init.credentials !== undefined) {\n      request.credentials = init.credentials\n    }\n\n    // 18. If init[\"cache\"] exists, then set request’s cache mode to it.\n    if (init.cache !== undefined) {\n      request.cache = init.cache\n    }\n\n    // 21. If request’s cache mode is \"only-if-cached\" and request’s mode is\n    // not \"same-origin\", then throw a TypeError.\n    if (request.cache === 'only-if-cached' && request.mode !== 'same-origin') {\n      throw new TypeError(\n        \"'only-if-cached' can be set only with 'same-origin' mode\"\n      )\n    }\n\n    // 22. If init[\"redirect\"] exists, then set request’s redirect mode to it.\n    if (init.redirect !== undefined) {\n      request.redirect = init.redirect\n    }\n\n    // 23. If init[\"integrity\"] exists, then set request’s integrity metadata to it.\n    if (init.integrity != null) {\n      request.integrity = String(init.integrity)\n    }\n\n    // 24. If init[\"keepalive\"] exists, then set request’s keepalive to it.\n    if (init.keepalive !== undefined) {\n      request.keepalive = Boolean(init.keepalive)\n    }\n\n    // 25. If init[\"method\"] exists, then:\n    if (init.method !== undefined) {\n      // 1. Let method be init[\"method\"].\n      let method = init.method\n\n      // 2. If method is not a method or method is a forbidden method, then\n      // throw a TypeError.\n      if (!isValidHTTPToken(method)) {\n        throw new TypeError(`'${method}' is not a valid HTTP method.`)\n      }\n\n      if (forbiddenMethodsSet.has(method.toUpperCase())) {\n        throw new TypeError(`'${method}' HTTP method is unsupported.`)\n      }\n\n      // 3. Normalize method.\n      method = normalizeMethodRecord[method] ?? normalizeMethod(method)\n\n      // 4. Set request’s method to method.\n      request.method = method\n    }\n\n    // 26. If init[\"signal\"] exists, then set signal to it.\n    if (init.signal !== undefined) {\n      signal = init.signal\n    }\n\n    // 27. Set this’s request to request.\n    this[kState] = request\n\n    // 28. Set this’s signal to a new AbortSignal object with this’s relevant\n    // Realm.\n    // TODO: could this be simplified with AbortSignal.any\n    // (https://dom.spec.whatwg.org/#dom-abortsignal-any)\n    const ac = new AbortController()\n    this[kSignal] = ac.signal\n    this[kSignal][kRealm] = this[kRealm]\n\n    // 29. If signal is not null, then make this’s signal follow signal.\n    if (signal != null) {\n      if (\n        !signal ||\n        typeof signal.aborted !== 'boolean' ||\n        typeof signal.addEventListener !== 'function'\n      ) {\n        throw new TypeError(\n          \"Failed to construct 'Request': member signal is not of type AbortSignal.\"\n        )\n      }\n\n      if (signal.aborted) {\n        ac.abort(signal.reason)\n      } else {\n        // Keep a strong ref to ac while request object\n        // is alive. This is needed to prevent AbortController\n        // from being prematurely garbage collected.\n        // See, https://github.com/nodejs/undici/issues/1926.\n        this[kAbortController] = ac\n\n        const acRef = new WeakRef(ac)\n        const abort = function () {\n          const ac = acRef.deref()\n          if (ac !== undefined) {\n            ac.abort(this.reason)\n          }\n        }\n\n        // Third-party AbortControllers may not work with these.\n        // See, https://github.com/nodejs/undici/pull/1910#issuecomment-1464495619.\n        try {\n          // If the max amount of listeners is equal to the default, increase it\n          // This is only available in node >= v19.9.0\n          if (typeof getMaxListeners === 'function' && getMaxListeners(signal) === defaultMaxListeners) {\n            setMaxListeners(100, signal)\n          } else if (getEventListeners(signal, 'abort').length >= defaultMaxListeners) {\n            setMaxListeners(100, signal)\n          }\n        } catch {}\n\n        util.addAbortListener(signal, abort)\n        requestFinalizer.register(ac, { signal, abort })\n      }\n    }\n\n    // 30. Set this’s headers to a new Headers object with this’s relevant\n    // Realm, whose header list is request’s header list and guard is\n    // \"request\".\n    this[kHeaders] = new Headers(kConstruct)\n    this[kHeaders][kHeadersList] = request.headersList\n    this[kHeaders][kGuard] = 'request'\n    this[kHeaders][kRealm] = this[kRealm]\n\n    // 31. If this’s request’s mode is \"no-cors\", then:\n    if (mode === 'no-cors') {\n      // 1. If this’s request’s method is not a CORS-safelisted method,\n      // then throw a TypeError.\n      if (!corsSafeListedMethodsSet.has(request.method)) {\n        throw new TypeError(\n          `'${request.method} is unsupported in no-cors mode.`\n        )\n      }\n\n      // 2. Set this’s headers’s guard to \"request-no-cors\".\n      this[kHeaders][kGuard] = 'request-no-cors'\n    }\n\n    // 32. If init is not empty, then:\n    if (initHasKey) {\n      /** @type {HeadersList} */\n      const headersList = this[kHeaders][kHeadersList]\n      // 1. Let headers be a copy of this’s headers and its associated header\n      // list.\n      // 2. If init[\"headers\"] exists, then set headers to init[\"headers\"].\n      const headers = init.headers !== undefined ? init.headers : new HeadersList(headersList)\n\n      // 3. Empty this’s headers’s header list.\n      headersList.clear()\n\n      // 4. If headers is a Headers object, then for each header in its header\n      // list, append header’s name/header’s value to this’s headers.\n      if (headers instanceof HeadersList) {\n        for (const [key, val] of headers) {\n          headersList.append(key, val)\n        }\n        // Note: Copy the `set-cookie` meta-data.\n        headersList.cookies = headers.cookies\n      } else {\n        // 5. Otherwise, fill this’s headers with headers.\n        fillHeaders(this[kHeaders], headers)\n      }\n    }\n\n    // 33. Let inputBody be input’s request’s body if input is a Request\n    // object; otherwise null.\n    const inputBody = input instanceof Request ? input[kState].body : null\n\n    // 34. If either init[\"body\"] exists and is non-null or inputBody is\n    // non-null, and request’s method is `GET` or `HEAD`, then throw a\n    // TypeError.\n    if (\n      (init.body != null || inputBody != null) &&\n      (request.method === 'GET' || request.method === 'HEAD')\n    ) {\n      throw new TypeError('Request with GET/HEAD method cannot have body.')\n    }\n\n    // 35. Let initBody be null.\n    let initBody = null\n\n    // 36. If init[\"body\"] exists and is non-null, then:\n    if (init.body != null) {\n      // 1. Let Content-Type be null.\n      // 2. Set initBody and Content-Type to the result of extracting\n      // init[\"body\"], with keepalive set to request’s keepalive.\n      const [extractedBody, contentType] = extractBody(\n        init.body,\n        request.keepalive\n      )\n      initBody = extractedBody\n\n      // 3, If Content-Type is non-null and this’s headers’s header list does\n      // not contain `Content-Type`, then append `Content-Type`/Content-Type to\n      // this’s headers.\n      if (contentType && !this[kHeaders][kHeadersList].contains('content-type')) {\n        this[kHeaders].append('content-type', contentType)\n      }\n    }\n\n    // 37. Let inputOrInitBody be initBody if it is non-null; otherwise\n    // inputBody.\n    const inputOrInitBody = initBody ?? inputBody\n\n    // 38. If inputOrInitBody is non-null and inputOrInitBody’s source is\n    // null, then:\n    if (inputOrInitBody != null && inputOrInitBody.source == null) {\n      // 1. If initBody is non-null and init[\"duplex\"] does not exist,\n      //    then throw a TypeError.\n      if (initBody != null && init.duplex == null) {\n        throw new TypeError('RequestInit: duplex option is required when sending a body.')\n      }\n\n      // 2. If this’s request’s mode is neither \"same-origin\" nor \"cors\",\n      // then throw a TypeError.\n      if (request.mode !== 'same-origin' && request.mode !== 'cors') {\n        throw new TypeError(\n          'If request is made from ReadableStream, mode should be \"same-origin\" or \"cors\"'\n        )\n      }\n\n      // 3. Set this’s request’s use-CORS-preflight flag.\n      request.useCORSPreflightFlag = true\n    }\n\n    // 39. Let finalBody be inputOrInitBody.\n    let finalBody = inputOrInitBody\n\n    // 40. If initBody is null and inputBody is non-null, then:\n    if (initBody == null && inputBody != null) {\n      // 1. If input is unusable, then throw a TypeError.\n      if (util.isDisturbed(inputBody.stream) || inputBody.stream.locked) {\n        throw new TypeError(\n          'Cannot construct a Request with a Request object that has already been used.'\n        )\n      }\n\n      // 2. Set finalBody to the result of creating a proxy for inputBody.\n      if (!TransformStream) {\n        TransformStream = require('stream/web').TransformStream\n      }\n\n      // https://streams.spec.whatwg.org/#readablestream-create-a-proxy\n      const identityTransform = new TransformStream()\n      inputBody.stream.pipeThrough(identityTransform)\n      finalBody = {\n        source: inputBody.source,\n        length: inputBody.length,\n        stream: identityTransform.readable\n      }\n    }\n\n    // 41. Set this’s request’s body to finalBody.\n    this[kState].body = finalBody\n  }\n\n  // Returns request’s HTTP method, which is \"GET\" by default.\n  get method () {\n    webidl.brandCheck(this, Request)\n\n    // The method getter steps are to return this’s request’s method.\n    return this[kState].method\n  }\n\n  // Returns the URL of request as a string.\n  get url () {\n    webidl.brandCheck(this, Request)\n\n    // The url getter steps are to return this’s request’s URL, serialized.\n    return URLSerializer(this[kState].url)\n  }\n\n  // Returns a Headers object consisting of the headers associated with request.\n  // Note that headers added in the network layer by the user agent will not\n  // be accounted for in this object, e.g., the \"Host\" header.\n  get headers () {\n    webidl.brandCheck(this, Request)\n\n    // The headers getter steps are to return this’s headers.\n    return this[kHeaders]\n  }\n\n  // Returns the kind of resource requested by request, e.g., \"document\"\n  // or \"script\".\n  get destination () {\n    webidl.brandCheck(this, Request)\n\n    // The destination getter are to return this’s request’s destination.\n    return this[kState].destination\n  }\n\n  // Returns the referrer of request. Its value can be a same-origin URL if\n  // explicitly set in init, the empty string to indicate no referrer, and\n  // \"about:client\" when defaulting to the global’s default. This is used\n  // during fetching to determine the value of the `Referer` header of the\n  // request being made.\n  get referrer () {\n    webidl.brandCheck(this, Request)\n\n    // 1. If this’s request’s referrer is \"no-referrer\", then return the\n    // empty string.\n    if (this[kState].referrer === 'no-referrer') {\n      return ''\n    }\n\n    // 2. If this’s request’s referrer is \"client\", then return\n    // \"about:client\".\n    if (this[kState].referrer === 'client') {\n      return 'about:client'\n    }\n\n    // Return this’s request’s referrer, serialized.\n    return this[kState].referrer.toString()\n  }\n\n  // Returns the referrer policy associated with request.\n  // This is used during fetching to compute the value of the request’s\n  // referrer.\n  get referrerPolicy () {\n    webidl.brandCheck(this, Request)\n\n    // The referrerPolicy getter steps are to return this’s request’s referrer policy.\n    return this[kState].referrerPolicy\n  }\n\n  // Returns the mode associated with request, which is a string indicating\n  // whether the request will use CORS, or will be restricted to same-origin\n  // URLs.\n  get mode () {\n    webidl.brandCheck(this, Request)\n\n    // The mode getter steps are to return this’s request’s mode.\n    return this[kState].mode\n  }\n\n  // Returns the credentials mode associated with request,\n  // which is a string indicating whether credentials will be sent with the\n  // request always, never, or only when sent to a same-origin URL.\n  get credentials () {\n    // The credentials getter steps are to return this’s request’s credentials mode.\n    return this[kState].credentials\n  }\n\n  // Returns the cache mode associated with request,\n  // which is a string indicating how the request will\n  // interact with the browser’s cache when fetching.\n  get cache () {\n    webidl.brandCheck(this, Request)\n\n    // The cache getter steps are to return this’s request’s cache mode.\n    return this[kState].cache\n  }\n\n  // Returns the redirect mode associated with request,\n  // which is a string indicating how redirects for the\n  // request will be handled during fetching. A request\n  // will follow redirects by default.\n  get redirect () {\n    webidl.brandCheck(this, Request)\n\n    // The redirect getter steps are to return this’s request’s redirect mode.\n    return this[kState].redirect\n  }\n\n  // Returns request’s subresource integrity metadata, which is a\n  // cryptographic hash of the resource being fetched. Its value\n  // consists of multiple hashes separated by whitespace. [SRI]\n  get integrity () {\n    webidl.brandCheck(this, Request)\n\n    // The integrity getter steps are to return this’s request’s integrity\n    // metadata.\n    return this[kState].integrity\n  }\n\n  // Returns a boolean indicating whether or not request can outlive the\n  // global in which it was created.\n  get keepalive () {\n    webidl.brandCheck(this, Request)\n\n    // The keepalive getter steps are to return this’s request’s keepalive.\n    return this[kState].keepalive\n  }\n\n  // Returns a boolean indicating whether or not request is for a reload\n  // navigation.\n  get isReloadNavigation () {\n    webidl.brandCheck(this, Request)\n\n    // The isReloadNavigation getter steps are to return true if this’s\n    // request’s reload-navigation flag is set; otherwise false.\n    return this[kState].reloadNavigation\n  }\n\n  // Returns a boolean indicating whether or not request is for a history\n  // navigation (a.k.a. back-foward navigation).\n  get isHistoryNavigation () {\n    webidl.brandCheck(this, Request)\n\n    // The isHistoryNavigation getter steps are to return true if this’s request’s\n    // history-navigation flag is set; otherwise false.\n    return this[kState].historyNavigation\n  }\n\n  // Returns the signal associated with request, which is an AbortSignal\n  // object indicating whether or not request has been aborted, and its\n  // abort event handler.\n  get signal () {\n    webidl.brandCheck(this, Request)\n\n    // The signal getter steps are to return this’s signal.\n    return this[kSignal]\n  }\n\n  get body () {\n    webidl.brandCheck(this, Request)\n\n    return this[kState].body ? this[kState].body.stream : null\n  }\n\n  get bodyUsed () {\n    webidl.brandCheck(this, Request)\n\n    return !!this[kState].body && util.isDisturbed(this[kState].body.stream)\n  }\n\n  get duplex () {\n    webidl.brandCheck(this, Request)\n\n    return 'half'\n  }\n\n  // Returns a clone of request.\n  clone () {\n    webidl.brandCheck(this, Request)\n\n    // 1. If this is unusable, then throw a TypeError.\n    if (this.bodyUsed || this.body?.locked) {\n      throw new TypeError('unusable')\n    }\n\n    // 2. Let clonedRequest be the result of cloning this’s request.\n    const clonedRequest = cloneRequest(this[kState])\n\n    // 3. Let clonedRequestObject be the result of creating a Request object,\n    // given clonedRequest, this’s headers’s guard, and this’s relevant Realm.\n    const clonedRequestObject = new Request(kConstruct)\n    clonedRequestObject[kState] = clonedRequest\n    clonedRequestObject[kRealm] = this[kRealm]\n    clonedRequestObject[kHeaders] = new Headers(kConstruct)\n    clonedRequestObject[kHeaders][kHeadersList] = clonedRequest.headersList\n    clonedRequestObject[kHeaders][kGuard] = this[kHeaders][kGuard]\n    clonedRequestObject[kHeaders][kRealm] = this[kHeaders][kRealm]\n\n    // 4. Make clonedRequestObject’s signal follow this’s signal.\n    const ac = new AbortController()\n    if (this.signal.aborted) {\n      ac.abort(this.signal.reason)\n    } else {\n      util.addAbortListener(\n        this.signal,\n        () => {\n          ac.abort(this.signal.reason)\n        }\n      )\n    }\n    clonedRequestObject[kSignal] = ac.signal\n\n    // 4. Return clonedRequestObject.\n    return clonedRequestObject\n  }\n}\n\nmixinBody(Request)\n\nfunction makeRequest (init) {\n  // https://fetch.spec.whatwg.org/#requests\n  const request = {\n    method: 'GET',\n    localURLsOnly: false,\n    unsafeRequest: false,\n    body: null,\n    client: null,\n    reservedClient: null,\n    replacesClientId: '',\n    window: 'client',\n    keepalive: false,\n    serviceWorkers: 'all',\n    initiator: '',\n    destination: '',\n    priority: null,\n    origin: 'client',\n    policyContainer: 'client',\n    referrer: 'client',\n    referrerPolicy: '',\n    mode: 'no-cors',\n    useCORSPreflightFlag: false,\n    credentials: 'same-origin',\n    useCredentials: false,\n    cache: 'default',\n    redirect: 'follow',\n    integrity: '',\n    cryptoGraphicsNonceMetadata: '',\n    parserMetadata: '',\n    reloadNavigation: false,\n    historyNavigation: false,\n    userActivation: false,\n    taintedOrigin: false,\n    redirectCount: 0,\n    responseTainting: 'basic',\n    preventNoCacheCacheControlHeaderModification: false,\n    done: false,\n    timingAllowFailed: false,\n    ...init,\n    headersList: init.headersList\n      ? new HeadersList(init.headersList)\n      : new HeadersList()\n  }\n  request.url = request.urlList[0]\n  return request\n}\n\n// https://fetch.spec.whatwg.org/#concept-request-clone\nfunction cloneRequest (request) {\n  // To clone a request request, run these steps:\n\n  // 1. Let newRequest be a copy of request, except for its body.\n  const newRequest = makeRequest({ ...request, body: null })\n\n  // 2. If request’s body is non-null, set newRequest’s body to the\n  // result of cloning request’s body.\n  if (request.body != null) {\n    newRequest.body = cloneBody(request.body)\n  }\n\n  // 3. Return newRequest.\n  return newRequest\n}\n\nObject.defineProperties(Request.prototype, {\n  method: kEnumerableProperty,\n  url: kEnumerableProperty,\n  headers: kEnumerableProperty,\n  redirect: kEnumerableProperty,\n  clone: kEnumerableProperty,\n  signal: kEnumerableProperty,\n  duplex: kEnumerableProperty,\n  destination: kEnumerableProperty,\n  body: kEnumerableProperty,\n  bodyUsed: kEnumerableProperty,\n  isHistoryNavigation: kEnumerableProperty,\n  isReloadNavigation: kEnumerableProperty,\n  keepalive: kEnumerableProperty,\n  integrity: kEnumerableProperty,\n  cache: kEnumerableProperty,\n  credentials: kEnumerableProperty,\n  attribute: kEnumerableProperty,\n  referrerPolicy: kEnumerableProperty,\n  referrer: kEnumerableProperty,\n  mode: kEnumerableProperty,\n  [Symbol.toStringTag]: {\n    value: 'Request',\n    configurable: true\n  }\n})\n\nwebidl.converters.Request = webidl.interfaceConverter(\n  Request\n)\n\n// https://fetch.spec.whatwg.org/#requestinfo\nwebidl.converters.RequestInfo = function (V) {\n  if (typeof V === 'string') {\n    return webidl.converters.USVString(V)\n  }\n\n  if (V instanceof Request) {\n    return webidl.converters.Request(V)\n  }\n\n  return webidl.converters.USVString(V)\n}\n\nwebidl.converters.AbortSignal = webidl.interfaceConverter(\n  AbortSignal\n)\n\n// https://fetch.spec.whatwg.org/#requestinit\nwebidl.converters.RequestInit = webidl.dictionaryConverter([\n  {\n    key: 'method',\n    converter: webidl.converters.ByteString\n  },\n  {\n    key: 'headers',\n    converter: webidl.converters.HeadersInit\n  },\n  {\n    key: 'body',\n    converter: webidl.nullableConverter(\n      webidl.converters.BodyInit\n    )\n  },\n  {\n    key: 'referrer',\n    converter: webidl.converters.USVString\n  },\n  {\n    key: 'referrerPolicy',\n    converter: webidl.converters.DOMString,\n    // https://w3c.github.io/webappsec-referrer-policy/#referrer-policy\n    allowedValues: referrerPolicy\n  },\n  {\n    key: 'mode',\n    converter: webidl.converters.DOMString,\n    // https://fetch.spec.whatwg.org/#concept-request-mode\n    allowedValues: requestMode\n  },\n  {\n    key: 'credentials',\n    converter: webidl.converters.DOMString,\n    // https://fetch.spec.whatwg.org/#requestcredentials\n    allowedValues: requestCredentials\n  },\n  {\n    key: 'cache',\n    converter: webidl.converters.DOMString,\n    // https://fetch.spec.whatwg.org/#requestcache\n    allowedValues: requestCache\n  },\n  {\n    key: 'redirect',\n    converter: webidl.converters.DOMString,\n    // https://fetch.spec.whatwg.org/#requestredirect\n    allowedValues: requestRedirect\n  },\n  {\n    key: 'integrity',\n    converter: webidl.converters.DOMString\n  },\n  {\n    key: 'keepalive',\n    converter: webidl.converters.boolean\n  },\n  {\n    key: 'signal',\n    converter: webidl.nullableConverter(\n      (signal) => webidl.converters.AbortSignal(\n        signal,\n        { strict: false }\n      )\n    )\n  },\n  {\n    key: 'window',\n    converter: webidl.converters.any\n  },\n  {\n    key: 'duplex',\n    converter: webidl.converters.DOMString,\n    allowedValues: requestDuplex\n  }\n])\n\nmodule.exports = { Request, makeRequest }\n","'use strict'\n\nconst { Headers, HeadersList, fill } = require('./headers')\nconst { extractBody, cloneBody, mixinBody } = require('./body')\nconst util = require('../core/util')\nconst { kEnumerableProperty } = util\nconst {\n  isValidReasonPhrase,\n  isCancelled,\n  isAborted,\n  isBlobLike,\n  serializeJavascriptValueToJSONString,\n  isErrorLike,\n  isomorphicEncode\n} = require('./util')\nconst {\n  redirectStatusSet,\n  nullBodyStatus,\n  DOMException\n} = require('./constants')\nconst { kState, kHeaders, kGuard, kRealm } = require('./symbols')\nconst { webidl } = require('./webidl')\nconst { FormData } = require('./formdata')\nconst { getGlobalOrigin } = require('./global')\nconst { URLSerializer } = require('./dataURL')\nconst { kHeadersList, kConstruct } = require('../core/symbols')\nconst assert = require('assert')\nconst { types } = require('util')\n\nconst ReadableStream = globalThis.ReadableStream || require('stream/web').ReadableStream\nconst textEncoder = new TextEncoder('utf-8')\n\n// https://fetch.spec.whatwg.org/#response-class\nclass Response {\n  // Creates network error Response.\n  static error () {\n    // TODO\n    const relevantRealm = { settingsObject: {} }\n\n    // The static error() method steps are to return the result of creating a\n    // Response object, given a new network error, \"immutable\", and this’s\n    // relevant Realm.\n    const responseObject = new Response()\n    responseObject[kState] = makeNetworkError()\n    responseObject[kRealm] = relevantRealm\n    responseObject[kHeaders][kHeadersList] = responseObject[kState].headersList\n    responseObject[kHeaders][kGuard] = 'immutable'\n    responseObject[kHeaders][kRealm] = relevantRealm\n    return responseObject\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-response-json\n  static json (data, init = {}) {\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Response.json' })\n\n    if (init !== null) {\n      init = webidl.converters.ResponseInit(init)\n    }\n\n    // 1. Let bytes the result of running serialize a JavaScript value to JSON bytes on data.\n    const bytes = textEncoder.encode(\n      serializeJavascriptValueToJSONString(data)\n    )\n\n    // 2. Let body be the result of extracting bytes.\n    const body = extractBody(bytes)\n\n    // 3. Let responseObject be the result of creating a Response object, given a new response,\n    //    \"response\", and this’s relevant Realm.\n    const relevantRealm = { settingsObject: {} }\n    const responseObject = new Response()\n    responseObject[kRealm] = relevantRealm\n    responseObject[kHeaders][kGuard] = 'response'\n    responseObject[kHeaders][kRealm] = relevantRealm\n\n    // 4. Perform initialize a response given responseObject, init, and (body, \"application/json\").\n    initializeResponse(responseObject, init, { body: body[0], type: 'application/json' })\n\n    // 5. Return responseObject.\n    return responseObject\n  }\n\n  // Creates a redirect Response that redirects to url with status status.\n  static redirect (url, status = 302) {\n    const relevantRealm = { settingsObject: {} }\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'Response.redirect' })\n\n    url = webidl.converters.USVString(url)\n    status = webidl.converters['unsigned short'](status)\n\n    // 1. Let parsedURL be the result of parsing url with current settings\n    // object’s API base URL.\n    // 2. If parsedURL is failure, then throw a TypeError.\n    // TODO: base-URL?\n    let parsedURL\n    try {\n      parsedURL = new URL(url, getGlobalOrigin())\n    } catch (err) {\n      throw Object.assign(new TypeError('Failed to parse URL from ' + url), {\n        cause: err\n      })\n    }\n\n    // 3. If status is not a redirect status, then throw a RangeError.\n    if (!redirectStatusSet.has(status)) {\n      throw new RangeError('Invalid status code ' + status)\n    }\n\n    // 4. Let responseObject be the result of creating a Response object,\n    // given a new response, \"immutable\", and this’s relevant Realm.\n    const responseObject = new Response()\n    responseObject[kRealm] = relevantRealm\n    responseObject[kHeaders][kGuard] = 'immutable'\n    responseObject[kHeaders][kRealm] = relevantRealm\n\n    // 5. Set responseObject’s response’s status to status.\n    responseObject[kState].status = status\n\n    // 6. Let value be parsedURL, serialized and isomorphic encoded.\n    const value = isomorphicEncode(URLSerializer(parsedURL))\n\n    // 7. Append `Location`/value to responseObject’s response’s header list.\n    responseObject[kState].headersList.append('location', value)\n\n    // 8. Return responseObject.\n    return responseObject\n  }\n\n  // https://fetch.spec.whatwg.org/#dom-response\n  constructor (body = null, init = {}) {\n    if (body !== null) {\n      body = webidl.converters.BodyInit(body)\n    }\n\n    init = webidl.converters.ResponseInit(init)\n\n    // TODO\n    this[kRealm] = { settingsObject: {} }\n\n    // 1. Set this’s response to a new response.\n    this[kState] = makeResponse({})\n\n    // 2. Set this’s headers to a new Headers object with this’s relevant\n    // Realm, whose header list is this’s response’s header list and guard\n    // is \"response\".\n    this[kHeaders] = new Headers(kConstruct)\n    this[kHeaders][kGuard] = 'response'\n    this[kHeaders][kHeadersList] = this[kState].headersList\n    this[kHeaders][kRealm] = this[kRealm]\n\n    // 3. Let bodyWithType be null.\n    let bodyWithType = null\n\n    // 4. If body is non-null, then set bodyWithType to the result of extracting body.\n    if (body != null) {\n      const [extractedBody, type] = extractBody(body)\n      bodyWithType = { body: extractedBody, type }\n    }\n\n    // 5. Perform initialize a response given this, init, and bodyWithType.\n    initializeResponse(this, init, bodyWithType)\n  }\n\n  // Returns response’s type, e.g., \"cors\".\n  get type () {\n    webidl.brandCheck(this, Response)\n\n    // The type getter steps are to return this’s response’s type.\n    return this[kState].type\n  }\n\n  // Returns response’s URL, if it has one; otherwise the empty string.\n  get url () {\n    webidl.brandCheck(this, Response)\n\n    const urlList = this[kState].urlList\n\n    // The url getter steps are to return the empty string if this’s\n    // response’s URL is null; otherwise this’s response’s URL,\n    // serialized with exclude fragment set to true.\n    const url = urlList[urlList.length - 1] ?? null\n\n    if (url === null) {\n      return ''\n    }\n\n    return URLSerializer(url, true)\n  }\n\n  // Returns whether response was obtained through a redirect.\n  get redirected () {\n    webidl.brandCheck(this, Response)\n\n    // The redirected getter steps are to return true if this’s response’s URL\n    // list has more than one item; otherwise false.\n    return this[kState].urlList.length > 1\n  }\n\n  // Returns response’s status.\n  get status () {\n    webidl.brandCheck(this, Response)\n\n    // The status getter steps are to return this’s response’s status.\n    return this[kState].status\n  }\n\n  // Returns whether response’s status is an ok status.\n  get ok () {\n    webidl.brandCheck(this, Response)\n\n    // The ok getter steps are to return true if this’s response’s status is an\n    // ok status; otherwise false.\n    return this[kState].status >= 200 && this[kState].status <= 299\n  }\n\n  // Returns response’s status message.\n  get statusText () {\n    webidl.brandCheck(this, Response)\n\n    // The statusText getter steps are to return this’s response’s status\n    // message.\n    return this[kState].statusText\n  }\n\n  // Returns response’s headers as Headers.\n  get headers () {\n    webidl.brandCheck(this, Response)\n\n    // The headers getter steps are to return this’s headers.\n    return this[kHeaders]\n  }\n\n  get body () {\n    webidl.brandCheck(this, Response)\n\n    return this[kState].body ? this[kState].body.stream : null\n  }\n\n  get bodyUsed () {\n    webidl.brandCheck(this, Response)\n\n    return !!this[kState].body && util.isDisturbed(this[kState].body.stream)\n  }\n\n  // Returns a clone of response.\n  clone () {\n    webidl.brandCheck(this, Response)\n\n    // 1. If this is unusable, then throw a TypeError.\n    if (this.bodyUsed || (this.body && this.body.locked)) {\n      throw webidl.errors.exception({\n        header: 'Response.clone',\n        message: 'Body has already been consumed.'\n      })\n    }\n\n    // 2. Let clonedResponse be the result of cloning this’s response.\n    const clonedResponse = cloneResponse(this[kState])\n\n    // 3. Return the result of creating a Response object, given\n    // clonedResponse, this’s headers’s guard, and this’s relevant Realm.\n    const clonedResponseObject = new Response()\n    clonedResponseObject[kState] = clonedResponse\n    clonedResponseObject[kRealm] = this[kRealm]\n    clonedResponseObject[kHeaders][kHeadersList] = clonedResponse.headersList\n    clonedResponseObject[kHeaders][kGuard] = this[kHeaders][kGuard]\n    clonedResponseObject[kHeaders][kRealm] = this[kHeaders][kRealm]\n\n    return clonedResponseObject\n  }\n}\n\nmixinBody(Response)\n\nObject.defineProperties(Response.prototype, {\n  type: kEnumerableProperty,\n  url: kEnumerableProperty,\n  status: kEnumerableProperty,\n  ok: kEnumerableProperty,\n  redirected: kEnumerableProperty,\n  statusText: kEnumerableProperty,\n  headers: kEnumerableProperty,\n  clone: kEnumerableProperty,\n  body: kEnumerableProperty,\n  bodyUsed: kEnumerableProperty,\n  [Symbol.toStringTag]: {\n    value: 'Response',\n    configurable: true\n  }\n})\n\nObject.defineProperties(Response, {\n  json: kEnumerableProperty,\n  redirect: kEnumerableProperty,\n  error: kEnumerableProperty\n})\n\n// https://fetch.spec.whatwg.org/#concept-response-clone\nfunction cloneResponse (response) {\n  // To clone a response response, run these steps:\n\n  // 1. If response is a filtered response, then return a new identical\n  // filtered response whose internal response is a clone of response’s\n  // internal response.\n  if (response.internalResponse) {\n    return filterResponse(\n      cloneResponse(response.internalResponse),\n      response.type\n    )\n  }\n\n  // 2. Let newResponse be a copy of response, except for its body.\n  const newResponse = makeResponse({ ...response, body: null })\n\n  // 3. If response’s body is non-null, then set newResponse’s body to the\n  // result of cloning response’s body.\n  if (response.body != null) {\n    newResponse.body = cloneBody(response.body)\n  }\n\n  // 4. Return newResponse.\n  return newResponse\n}\n\nfunction makeResponse (init) {\n  return {\n    aborted: false,\n    rangeRequested: false,\n    timingAllowPassed: false,\n    requestIncludesCredentials: false,\n    type: 'default',\n    status: 200,\n    timingInfo: null,\n    cacheState: '',\n    statusText: '',\n    ...init,\n    headersList: init.headersList\n      ? new HeadersList(init.headersList)\n      : new HeadersList(),\n    urlList: init.urlList ? [...init.urlList] : []\n  }\n}\n\nfunction makeNetworkError (reason) {\n  const isError = isErrorLike(reason)\n  return makeResponse({\n    type: 'error',\n    status: 0,\n    error: isError\n      ? reason\n      : new Error(reason ? String(reason) : reason),\n    aborted: reason && reason.name === 'AbortError'\n  })\n}\n\nfunction makeFilteredResponse (response, state) {\n  state = {\n    internalResponse: response,\n    ...state\n  }\n\n  return new Proxy(response, {\n    get (target, p) {\n      return p in state ? state[p] : target[p]\n    },\n    set (target, p, value) {\n      assert(!(p in state))\n      target[p] = value\n      return true\n    }\n  })\n}\n\n// https://fetch.spec.whatwg.org/#concept-filtered-response\nfunction filterResponse (response, type) {\n  // Set response to the following filtered response with response as its\n  // internal response, depending on request’s response tainting:\n  if (type === 'basic') {\n    // A basic filtered response is a filtered response whose type is \"basic\"\n    // and header list excludes any headers in internal response’s header list\n    // whose name is a forbidden response-header name.\n\n    // Note: undici does not implement forbidden response-header names\n    return makeFilteredResponse(response, {\n      type: 'basic',\n      headersList: response.headersList\n    })\n  } else if (type === 'cors') {\n    // A CORS filtered response is a filtered response whose type is \"cors\"\n    // and header list excludes any headers in internal response’s header\n    // list whose name is not a CORS-safelisted response-header name, given\n    // internal response’s CORS-exposed header-name list.\n\n    // Note: undici does not implement CORS-safelisted response-header names\n    return makeFilteredResponse(response, {\n      type: 'cors',\n      headersList: response.headersList\n    })\n  } else if (type === 'opaque') {\n    // An opaque filtered response is a filtered response whose type is\n    // \"opaque\", URL list is the empty list, status is 0, status message\n    // is the empty byte sequence, header list is empty, and body is null.\n\n    return makeFilteredResponse(response, {\n      type: 'opaque',\n      urlList: Object.freeze([]),\n      status: 0,\n      statusText: '',\n      body: null\n    })\n  } else if (type === 'opaqueredirect') {\n    // An opaque-redirect filtered response is a filtered response whose type\n    // is \"opaqueredirect\", status is 0, status message is the empty byte\n    // sequence, header list is empty, and body is null.\n\n    return makeFilteredResponse(response, {\n      type: 'opaqueredirect',\n      status: 0,\n      statusText: '',\n      headersList: [],\n      body: null\n    })\n  } else {\n    assert(false)\n  }\n}\n\n// https://fetch.spec.whatwg.org/#appropriate-network-error\nfunction makeAppropriateNetworkError (fetchParams, err = null) {\n  // 1. Assert: fetchParams is canceled.\n  assert(isCancelled(fetchParams))\n\n  // 2. Return an aborted network error if fetchParams is aborted;\n  // otherwise return a network error.\n  return isAborted(fetchParams)\n    ? makeNetworkError(Object.assign(new DOMException('The operation was aborted.', 'AbortError'), { cause: err }))\n    : makeNetworkError(Object.assign(new DOMException('Request was cancelled.'), { cause: err }))\n}\n\n// https://whatpr.org/fetch/1392.html#initialize-a-response\nfunction initializeResponse (response, init, body) {\n  // 1. If init[\"status\"] is not in the range 200 to 599, inclusive, then\n  //    throw a RangeError.\n  if (init.status !== null && (init.status < 200 || init.status > 599)) {\n    throw new RangeError('init[\"status\"] must be in the range of 200 to 599, inclusive.')\n  }\n\n  // 2. If init[\"statusText\"] does not match the reason-phrase token production,\n  //    then throw a TypeError.\n  if ('statusText' in init && init.statusText != null) {\n    // See, https://datatracker.ietf.org/doc/html/rfc7230#section-3.1.2:\n    //   reason-phrase  = *( HTAB / SP / VCHAR / obs-text )\n    if (!isValidReasonPhrase(String(init.statusText))) {\n      throw new TypeError('Invalid statusText')\n    }\n  }\n\n  // 3. Set response’s response’s status to init[\"status\"].\n  if ('status' in init && init.status != null) {\n    response[kState].status = init.status\n  }\n\n  // 4. Set response’s response’s status message to init[\"statusText\"].\n  if ('statusText' in init && init.statusText != null) {\n    response[kState].statusText = init.statusText\n  }\n\n  // 5. If init[\"headers\"] exists, then fill response’s headers with init[\"headers\"].\n  if ('headers' in init && init.headers != null) {\n    fill(response[kHeaders], init.headers)\n  }\n\n  // 6. If body was given, then:\n  if (body) {\n    // 1. If response's status is a null body status, then throw a TypeError.\n    if (nullBodyStatus.includes(response.status)) {\n      throw webidl.errors.exception({\n        header: 'Response constructor',\n        message: 'Invalid response status code ' + response.status\n      })\n    }\n\n    // 2. Set response's body to body's body.\n    response[kState].body = body.body\n\n    // 3. If body's type is non-null and response's header list does not contain\n    //    `Content-Type`, then append (`Content-Type`, body's type) to response's header list.\n    if (body.type != null && !response[kState].headersList.contains('Content-Type')) {\n      response[kState].headersList.append('content-type', body.type)\n    }\n  }\n}\n\nwebidl.converters.ReadableStream = webidl.interfaceConverter(\n  ReadableStream\n)\n\nwebidl.converters.FormData = webidl.interfaceConverter(\n  FormData\n)\n\nwebidl.converters.URLSearchParams = webidl.interfaceConverter(\n  URLSearchParams\n)\n\n// https://fetch.spec.whatwg.org/#typedefdef-xmlhttprequestbodyinit\nwebidl.converters.XMLHttpRequestBodyInit = function (V) {\n  if (typeof V === 'string') {\n    return webidl.converters.USVString(V)\n  }\n\n  if (isBlobLike(V)) {\n    return webidl.converters.Blob(V, { strict: false })\n  }\n\n  if (types.isArrayBuffer(V) || types.isTypedArray(V) || types.isDataView(V)) {\n    return webidl.converters.BufferSource(V)\n  }\n\n  if (util.isFormDataLike(V)) {\n    return webidl.converters.FormData(V, { strict: false })\n  }\n\n  if (V instanceof URLSearchParams) {\n    return webidl.converters.URLSearchParams(V)\n  }\n\n  return webidl.converters.DOMString(V)\n}\n\n// https://fetch.spec.whatwg.org/#bodyinit\nwebidl.converters.BodyInit = function (V) {\n  if (V instanceof ReadableStream) {\n    return webidl.converters.ReadableStream(V)\n  }\n\n  // Note: the spec doesn't include async iterables,\n  // this is an undici extension.\n  if (V?.[Symbol.asyncIterator]) {\n    return V\n  }\n\n  return webidl.converters.XMLHttpRequestBodyInit(V)\n}\n\nwebidl.converters.ResponseInit = webidl.dictionaryConverter([\n  {\n    key: 'status',\n    converter: webidl.converters['unsigned short'],\n    defaultValue: 200\n  },\n  {\n    key: 'statusText',\n    converter: webidl.converters.ByteString,\n    defaultValue: ''\n  },\n  {\n    key: 'headers',\n    converter: webidl.converters.HeadersInit\n  }\n])\n\nmodule.exports = {\n  makeNetworkError,\n  makeResponse,\n  makeAppropriateNetworkError,\n  filterResponse,\n  Response,\n  cloneResponse\n}\n","'use strict'\n\nmodule.exports = {\n  kUrl: Symbol('url'),\n  kHeaders: Symbol('headers'),\n  kSignal: Symbol('signal'),\n  kState: Symbol('state'),\n  kGuard: Symbol('guard'),\n  kRealm: Symbol('realm')\n}\n","'use strict'\n\nconst { redirectStatusSet, referrerPolicySet: referrerPolicyTokens, badPortsSet } = require('./constants')\nconst { getGlobalOrigin } = require('./global')\nconst { performance } = require('perf_hooks')\nconst { isBlobLike, toUSVString, ReadableStreamFrom } = require('../core/util')\nconst assert = require('assert')\nconst { isUint8Array } = require('util/types')\n\nlet supportedHashes = []\n\n// https://nodejs.org/api/crypto.html#determining-if-crypto-support-is-unavailable\n/** @type {import('crypto')|undefined} */\nlet crypto\n\ntry {\n  crypto = require('crypto')\n  const possibleRelevantHashes = ['sha256', 'sha384', 'sha512']\n  supportedHashes = crypto.getHashes().filter((hash) => possibleRelevantHashes.includes(hash))\n/* c8 ignore next 3 */\n} catch {\n}\n\nfunction responseURL (response) {\n  // https://fetch.spec.whatwg.org/#responses\n  // A response has an associated URL. It is a pointer to the last URL\n  // in response’s URL list and null if response’s URL list is empty.\n  const urlList = response.urlList\n  const length = urlList.length\n  return length === 0 ? null : urlList[length - 1].toString()\n}\n\n// https://fetch.spec.whatwg.org/#concept-response-location-url\nfunction responseLocationURL (response, requestFragment) {\n  // 1. If response’s status is not a redirect status, then return null.\n  if (!redirectStatusSet.has(response.status)) {\n    return null\n  }\n\n  // 2. Let location be the result of extracting header list values given\n  // `Location` and response’s header list.\n  let location = response.headersList.get('location')\n\n  // 3. If location is a header value, then set location to the result of\n  //    parsing location with response’s URL.\n  if (location !== null && isValidHeaderValue(location)) {\n    location = new URL(location, responseURL(response))\n  }\n\n  // 4. If location is a URL whose fragment is null, then set location’s\n  // fragment to requestFragment.\n  if (location && !location.hash) {\n    location.hash = requestFragment\n  }\n\n  // 5. Return location.\n  return location\n}\n\n/** @returns {URL} */\nfunction requestCurrentURL (request) {\n  return request.urlList[request.urlList.length - 1]\n}\n\nfunction requestBadPort (request) {\n  // 1. Let url be request’s current URL.\n  const url = requestCurrentURL(request)\n\n  // 2. If url’s scheme is an HTTP(S) scheme and url’s port is a bad port,\n  // then return blocked.\n  if (urlIsHttpHttpsScheme(url) && badPortsSet.has(url.port)) {\n    return 'blocked'\n  }\n\n  // 3. Return allowed.\n  return 'allowed'\n}\n\nfunction isErrorLike (object) {\n  return object instanceof Error || (\n    object?.constructor?.name === 'Error' ||\n    object?.constructor?.name === 'DOMException'\n  )\n}\n\n// Check whether |statusText| is a ByteString and\n// matches the Reason-Phrase token production.\n// RFC 2616: https://tools.ietf.org/html/rfc2616\n// RFC 7230: https://tools.ietf.org/html/rfc7230\n// \"reason-phrase = *( HTAB / SP / VCHAR / obs-text )\"\n// https://github.com/chromium/chromium/blob/94.0.4604.1/third_party/blink/renderer/core/fetch/response.cc#L116\nfunction isValidReasonPhrase (statusText) {\n  for (let i = 0; i < statusText.length; ++i) {\n    const c = statusText.charCodeAt(i)\n    if (\n      !(\n        (\n          c === 0x09 || // HTAB\n          (c >= 0x20 && c <= 0x7e) || // SP / VCHAR\n          (c >= 0x80 && c <= 0xff)\n        ) // obs-text\n      )\n    ) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * @see https://tools.ietf.org/html/rfc7230#section-3.2.6\n * @param {number} c\n */\nfunction isTokenCharCode (c) {\n  switch (c) {\n    case 0x22:\n    case 0x28:\n    case 0x29:\n    case 0x2c:\n    case 0x2f:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x7b:\n    case 0x7d:\n      // DQUOTE and \"(),/:;<=>?@[\\]{}\"\n      return false\n    default:\n      // VCHAR %x21-7E\n      return c >= 0x21 && c <= 0x7e\n  }\n}\n\n/**\n * @param {string} characters\n */\nfunction isValidHTTPToken (characters) {\n  if (characters.length === 0) {\n    return false\n  }\n  for (let i = 0; i < characters.length; ++i) {\n    if (!isTokenCharCode(characters.charCodeAt(i))) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#header-name\n * @param {string} potentialValue\n */\nfunction isValidHeaderName (potentialValue) {\n  return isValidHTTPToken(potentialValue)\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#header-value\n * @param {string} potentialValue\n */\nfunction isValidHeaderValue (potentialValue) {\n  // - Has no leading or trailing HTTP tab or space bytes.\n  // - Contains no 0x00 (NUL) or HTTP newline bytes.\n  if (\n    potentialValue.startsWith('\\t') ||\n    potentialValue.startsWith(' ') ||\n    potentialValue.endsWith('\\t') ||\n    potentialValue.endsWith(' ')\n  ) {\n    return false\n  }\n\n  if (\n    potentialValue.includes('\\0') ||\n    potentialValue.includes('\\r') ||\n    potentialValue.includes('\\n')\n  ) {\n    return false\n  }\n\n  return true\n}\n\n// https://w3c.github.io/webappsec-referrer-policy/#set-requests-referrer-policy-on-redirect\nfunction setRequestReferrerPolicyOnRedirect (request, actualResponse) {\n  //  Given a request request and a response actualResponse, this algorithm\n  //  updates request’s referrer policy according to the Referrer-Policy\n  //  header (if any) in actualResponse.\n\n  // 1. Let policy be the result of executing § 8.1 Parse a referrer policy\n  // from a Referrer-Policy header on actualResponse.\n\n  // 8.1 Parse a referrer policy from a Referrer-Policy header\n  // 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy` and response’s header list.\n  const { headersList } = actualResponse\n  // 2. Let policy be the empty string.\n  // 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty string, then set policy to token.\n  // 4. Return policy.\n  const policyHeader = (headersList.get('referrer-policy') ?? '').split(',')\n\n  // Note: As the referrer-policy can contain multiple policies\n  // separated by comma, we need to loop through all of them\n  // and pick the first valid one.\n  // Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy#specify_a_fallback_policy\n  let policy = ''\n  if (policyHeader.length > 0) {\n    // The right-most policy takes precedence.\n    // The left-most policy is the fallback.\n    for (let i = policyHeader.length; i !== 0; i--) {\n      const token = policyHeader[i - 1].trim()\n      if (referrerPolicyTokens.has(token)) {\n        policy = token\n        break\n      }\n    }\n  }\n\n  // 2. If policy is not the empty string, then set request’s referrer policy to policy.\n  if (policy !== '') {\n    request.referrerPolicy = policy\n  }\n}\n\n// https://fetch.spec.whatwg.org/#cross-origin-resource-policy-check\nfunction crossOriginResourcePolicyCheck () {\n  // TODO\n  return 'allowed'\n}\n\n// https://fetch.spec.whatwg.org/#concept-cors-check\nfunction corsCheck () {\n  // TODO\n  return 'success'\n}\n\n// https://fetch.spec.whatwg.org/#concept-tao-check\nfunction TAOCheck () {\n  // TODO\n  return 'success'\n}\n\nfunction appendFetchMetadata (httpRequest) {\n  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-dest-header\n  //  TODO\n\n  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-mode-header\n\n  //  1. Assert: r’s url is a potentially trustworthy URL.\n  //  TODO\n\n  //  2. Let header be a Structured Header whose value is a token.\n  let header = null\n\n  //  3. Set header’s value to r’s mode.\n  header = httpRequest.mode\n\n  //  4. Set a structured field value `Sec-Fetch-Mode`/header in r’s header list.\n  httpRequest.headersList.set('sec-fetch-mode', header)\n\n  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-site-header\n  //  TODO\n\n  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-user-header\n  //  TODO\n}\n\n// https://fetch.spec.whatwg.org/#append-a-request-origin-header\nfunction appendRequestOriginHeader (request) {\n  // 1. Let serializedOrigin be the result of byte-serializing a request origin with request.\n  let serializedOrigin = request.origin\n\n  // 2. If request’s response tainting is \"cors\" or request’s mode is \"websocket\", then append (`Origin`, serializedOrigin) to request’s header list.\n  if (request.responseTainting === 'cors' || request.mode === 'websocket') {\n    if (serializedOrigin) {\n      request.headersList.append('origin', serializedOrigin)\n    }\n\n  // 3. Otherwise, if request’s method is neither `GET` nor `HEAD`, then:\n  } else if (request.method !== 'GET' && request.method !== 'HEAD') {\n    // 1. Switch on request’s referrer policy:\n    switch (request.referrerPolicy) {\n      case 'no-referrer':\n        // Set serializedOrigin to `null`.\n        serializedOrigin = null\n        break\n      case 'no-referrer-when-downgrade':\n      case 'strict-origin':\n      case 'strict-origin-when-cross-origin':\n        // If request’s origin is a tuple origin, its scheme is \"https\", and request’s current URL’s scheme is not \"https\", then set serializedOrigin to `null`.\n        if (request.origin && urlHasHttpsScheme(request.origin) && !urlHasHttpsScheme(requestCurrentURL(request))) {\n          serializedOrigin = null\n        }\n        break\n      case 'same-origin':\n        // If request’s origin is not same origin with request’s current URL’s origin, then set serializedOrigin to `null`.\n        if (!sameOrigin(request, requestCurrentURL(request))) {\n          serializedOrigin = null\n        }\n        break\n      default:\n        // Do nothing.\n    }\n\n    if (serializedOrigin) {\n      // 2. Append (`Origin`, serializedOrigin) to request’s header list.\n      request.headersList.append('origin', serializedOrigin)\n    }\n  }\n}\n\nfunction coarsenedSharedCurrentTime (crossOriginIsolatedCapability) {\n  // TODO\n  return performance.now()\n}\n\n// https://fetch.spec.whatwg.org/#create-an-opaque-timing-info\nfunction createOpaqueTimingInfo (timingInfo) {\n  return {\n    startTime: timingInfo.startTime ?? 0,\n    redirectStartTime: 0,\n    redirectEndTime: 0,\n    postRedirectStartTime: timingInfo.startTime ?? 0,\n    finalServiceWorkerStartTime: 0,\n    finalNetworkResponseStartTime: 0,\n    finalNetworkRequestStartTime: 0,\n    endTime: 0,\n    encodedBodySize: 0,\n    decodedBodySize: 0,\n    finalConnectionTimingInfo: null\n  }\n}\n\n// https://html.spec.whatwg.org/multipage/origin.html#policy-container\nfunction makePolicyContainer () {\n  // Note: the fetch spec doesn't make use of embedder policy or CSP list\n  return {\n    referrerPolicy: 'strict-origin-when-cross-origin'\n  }\n}\n\n// https://html.spec.whatwg.org/multipage/origin.html#clone-a-policy-container\nfunction clonePolicyContainer (policyContainer) {\n  return {\n    referrerPolicy: policyContainer.referrerPolicy\n  }\n}\n\n// https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer\nfunction determineRequestsReferrer (request) {\n  // 1. Let policy be request's referrer policy.\n  const policy = request.referrerPolicy\n\n  // Note: policy cannot (shouldn't) be null or an empty string.\n  assert(policy)\n\n  // 2. Let environment be request’s client.\n\n  let referrerSource = null\n\n  // 3. Switch on request’s referrer:\n  if (request.referrer === 'client') {\n    // Note: node isn't a browser and doesn't implement document/iframes,\n    // so we bypass this step and replace it with our own.\n\n    const globalOrigin = getGlobalOrigin()\n\n    if (!globalOrigin || globalOrigin.origin === 'null') {\n      return 'no-referrer'\n    }\n\n    // note: we need to clone it as it's mutated\n    referrerSource = new URL(globalOrigin)\n  } else if (request.referrer instanceof URL) {\n    // Let referrerSource be request’s referrer.\n    referrerSource = request.referrer\n  }\n\n  // 4. Let request’s referrerURL be the result of stripping referrerSource for\n  //    use as a referrer.\n  let referrerURL = stripURLForReferrer(referrerSource)\n\n  // 5. Let referrerOrigin be the result of stripping referrerSource for use as\n  //    a referrer, with the origin-only flag set to true.\n  const referrerOrigin = stripURLForReferrer(referrerSource, true)\n\n  // 6. If the result of serializing referrerURL is a string whose length is\n  //    greater than 4096, set referrerURL to referrerOrigin.\n  if (referrerURL.toString().length > 4096) {\n    referrerURL = referrerOrigin\n  }\n\n  const areSameOrigin = sameOrigin(request, referrerURL)\n  const isNonPotentiallyTrustWorthy = isURLPotentiallyTrustworthy(referrerURL) &&\n    !isURLPotentiallyTrustworthy(request.url)\n\n  // 8. Execute the switch statements corresponding to the value of policy:\n  switch (policy) {\n    case 'origin': return referrerOrigin != null ? referrerOrigin : stripURLForReferrer(referrerSource, true)\n    case 'unsafe-url': return referrerURL\n    case 'same-origin':\n      return areSameOrigin ? referrerOrigin : 'no-referrer'\n    case 'origin-when-cross-origin':\n      return areSameOrigin ? referrerURL : referrerOrigin\n    case 'strict-origin-when-cross-origin': {\n      const currentURL = requestCurrentURL(request)\n\n      // 1. If the origin of referrerURL and the origin of request’s current\n      //    URL are the same, then return referrerURL.\n      if (sameOrigin(referrerURL, currentURL)) {\n        return referrerURL\n      }\n\n      // 2. If referrerURL is a potentially trustworthy URL and request’s\n      //    current URL is not a potentially trustworthy URL, then return no\n      //    referrer.\n      if (isURLPotentiallyTrustworthy(referrerURL) && !isURLPotentiallyTrustworthy(currentURL)) {\n        return 'no-referrer'\n      }\n\n      // 3. Return referrerOrigin.\n      return referrerOrigin\n    }\n    case 'strict-origin': // eslint-disable-line\n      /**\n         * 1. If referrerURL is a potentially trustworthy URL and\n         * request’s current URL is not a potentially trustworthy URL,\n         * then return no referrer.\n         * 2. Return referrerOrigin\n        */\n    case 'no-referrer-when-downgrade': // eslint-disable-line\n      /**\n       * 1. If referrerURL is a potentially trustworthy URL and\n       * request’s current URL is not a potentially trustworthy URL,\n       * then return no referrer.\n       * 2. Return referrerOrigin\n      */\n\n    default: // eslint-disable-line\n      return isNonPotentiallyTrustWorthy ? 'no-referrer' : referrerOrigin\n  }\n}\n\n/**\n * @see https://w3c.github.io/webappsec-referrer-policy/#strip-url\n * @param {URL} url\n * @param {boolean|undefined} originOnly\n */\nfunction stripURLForReferrer (url, originOnly) {\n  // 1. Assert: url is a URL.\n  assert(url instanceof URL)\n\n  // 2. If url’s scheme is a local scheme, then return no referrer.\n  if (url.protocol === 'file:' || url.protocol === 'about:' || url.protocol === 'blank:') {\n    return 'no-referrer'\n  }\n\n  // 3. Set url’s username to the empty string.\n  url.username = ''\n\n  // 4. Set url’s password to the empty string.\n  url.password = ''\n\n  // 5. Set url’s fragment to null.\n  url.hash = ''\n\n  // 6. If the origin-only flag is true, then:\n  if (originOnly) {\n    // 1. Set url’s path to « the empty string ».\n    url.pathname = ''\n\n    // 2. Set url’s query to null.\n    url.search = ''\n  }\n\n  // 7. Return url.\n  return url\n}\n\nfunction isURLPotentiallyTrustworthy (url) {\n  if (!(url instanceof URL)) {\n    return false\n  }\n\n  // If child of about, return true\n  if (url.href === 'about:blank' || url.href === 'about:srcdoc') {\n    return true\n  }\n\n  // If scheme is data, return true\n  if (url.protocol === 'data:') return true\n\n  // If file, return true\n  if (url.protocol === 'file:') return true\n\n  return isOriginPotentiallyTrustworthy(url.origin)\n\n  function isOriginPotentiallyTrustworthy (origin) {\n    // If origin is explicitly null, return false\n    if (origin == null || origin === 'null') return false\n\n    const originAsURL = new URL(origin)\n\n    // If secure, return true\n    if (originAsURL.protocol === 'https:' || originAsURL.protocol === 'wss:') {\n      return true\n    }\n\n    // If localhost or variants, return true\n    if (/^127(?:\\.[0-9]+){0,2}\\.[0-9]+$|^\\[(?:0*:)*?:?0*1\\]$/.test(originAsURL.hostname) ||\n     (originAsURL.hostname === 'localhost' || originAsURL.hostname.includes('localhost.')) ||\n     (originAsURL.hostname.endsWith('.localhost'))) {\n      return true\n    }\n\n    // If any other, return false\n    return false\n  }\n}\n\n/**\n * @see https://w3c.github.io/webappsec-subresource-integrity/#does-response-match-metadatalist\n * @param {Uint8Array} bytes\n * @param {string} metadataList\n */\nfunction bytesMatch (bytes, metadataList) {\n  // If node is not built with OpenSSL support, we cannot check\n  // a request's integrity, so allow it by default (the spec will\n  // allow requests if an invalid hash is given, as precedence).\n  /* istanbul ignore if: only if node is built with --without-ssl */\n  if (crypto === undefined) {\n    return true\n  }\n\n  // 1. Let parsedMetadata be the result of parsing metadataList.\n  const parsedMetadata = parseMetadata(metadataList)\n\n  // 2. If parsedMetadata is no metadata, return true.\n  if (parsedMetadata === 'no metadata') {\n    return true\n  }\n\n  // 3. If response is not eligible for integrity validation, return false.\n  // TODO\n\n  // 4. If parsedMetadata is the empty set, return true.\n  if (parsedMetadata.length === 0) {\n    return true\n  }\n\n  // 5. Let metadata be the result of getting the strongest\n  //    metadata from parsedMetadata.\n  const strongest = getStrongestMetadata(parsedMetadata)\n  const metadata = filterMetadataListByAlgorithm(parsedMetadata, strongest)\n\n  // 6. For each item in metadata:\n  for (const item of metadata) {\n    // 1. Let algorithm be the alg component of item.\n    const algorithm = item.algo\n\n    // 2. Let expectedValue be the val component of item.\n    const expectedValue = item.hash\n\n    // See https://github.com/web-platform-tests/wpt/commit/e4c5cc7a5e48093220528dfdd1c4012dc3837a0e\n    // \"be liberal with padding\". This is annoying, and it's not even in the spec.\n\n    // 3. Let actualValue be the result of applying algorithm to bytes.\n    let actualValue = crypto.createHash(algorithm).update(bytes).digest('base64')\n\n    if (actualValue[actualValue.length - 1] === '=') {\n      if (actualValue[actualValue.length - 2] === '=') {\n        actualValue = actualValue.slice(0, -2)\n      } else {\n        actualValue = actualValue.slice(0, -1)\n      }\n    }\n\n    // 4. If actualValue is a case-sensitive match for expectedValue,\n    //    return true.\n    if (compareBase64Mixed(actualValue, expectedValue)) {\n      return true\n    }\n  }\n\n  // 7. Return false.\n  return false\n}\n\n// https://w3c.github.io/webappsec-subresource-integrity/#grammardef-hash-with-options\n// https://www.w3.org/TR/CSP2/#source-list-syntax\n// https://www.rfc-editor.org/rfc/rfc5234#appendix-B.1\nconst parseHashWithOptions = /(?<algo>sha256|sha384|sha512)-((?<hash>[A-Za-z0-9+/]+|[A-Za-z0-9_-]+)={0,2}(?:\\s|$)( +[!-~]*)?)?/i\n\n/**\n * @see https://w3c.github.io/webappsec-subresource-integrity/#parse-metadata\n * @param {string} metadata\n */\nfunction parseMetadata (metadata) {\n  // 1. Let result be the empty set.\n  /** @type {{ algo: string, hash: string }[]} */\n  const result = []\n\n  // 2. Let empty be equal to true.\n  let empty = true\n\n  // 3. For each token returned by splitting metadata on spaces:\n  for (const token of metadata.split(' ')) {\n    // 1. Set empty to false.\n    empty = false\n\n    // 2. Parse token as a hash-with-options.\n    const parsedToken = parseHashWithOptions.exec(token)\n\n    // 3. If token does not parse, continue to the next token.\n    if (\n      parsedToken === null ||\n      parsedToken.groups === undefined ||\n      parsedToken.groups.algo === undefined\n    ) {\n      // Note: Chromium blocks the request at this point, but Firefox\n      // gives a warning that an invalid integrity was given. The\n      // correct behavior is to ignore these, and subsequently not\n      // check the integrity of the resource.\n      continue\n    }\n\n    // 4. Let algorithm be the hash-algo component of token.\n    const algorithm = parsedToken.groups.algo.toLowerCase()\n\n    // 5. If algorithm is a hash function recognized by the user\n    //    agent, add the parsed token to result.\n    if (supportedHashes.includes(algorithm)) {\n      result.push(parsedToken.groups)\n    }\n  }\n\n  // 4. Return no metadata if empty is true, otherwise return result.\n  if (empty === true) {\n    return 'no metadata'\n  }\n\n  return result\n}\n\n/**\n * @param {{ algo: 'sha256' | 'sha384' | 'sha512' }[]} metadataList\n */\nfunction getStrongestMetadata (metadataList) {\n  // Let algorithm be the algo component of the first item in metadataList.\n  // Can be sha256\n  let algorithm = metadataList[0].algo\n  // If the algorithm is sha512, then it is the strongest\n  // and we can return immediately\n  if (algorithm[3] === '5') {\n    return algorithm\n  }\n\n  for (let i = 1; i < metadataList.length; ++i) {\n    const metadata = metadataList[i]\n    // If the algorithm is sha512, then it is the strongest\n    // and we can break the loop immediately\n    if (metadata.algo[3] === '5') {\n      algorithm = 'sha512'\n      break\n    // If the algorithm is sha384, then a potential sha256 or sha384 is ignored\n    } else if (algorithm[3] === '3') {\n      continue\n    // algorithm is sha256, check if algorithm is sha384 and if so, set it as\n    // the strongest\n    } else if (metadata.algo[3] === '3') {\n      algorithm = 'sha384'\n    }\n  }\n  return algorithm\n}\n\nfunction filterMetadataListByAlgorithm (metadataList, algorithm) {\n  if (metadataList.length === 1) {\n    return metadataList\n  }\n\n  let pos = 0\n  for (let i = 0; i < metadataList.length; ++i) {\n    if (metadataList[i].algo === algorithm) {\n      metadataList[pos++] = metadataList[i]\n    }\n  }\n\n  metadataList.length = pos\n\n  return metadataList\n}\n\n/**\n * Compares two base64 strings, allowing for base64url\n * in the second string.\n *\n* @param {string} actualValue always base64\n * @param {string} expectedValue base64 or base64url\n * @returns {boolean}\n */\nfunction compareBase64Mixed (actualValue, expectedValue) {\n  if (actualValue.length !== expectedValue.length) {\n    return false\n  }\n  for (let i = 0; i < actualValue.length; ++i) {\n    if (actualValue[i] !== expectedValue[i]) {\n      if (\n        (actualValue[i] === '+' && expectedValue[i] === '-') ||\n        (actualValue[i] === '/' && expectedValue[i] === '_')\n      ) {\n        continue\n      }\n      return false\n    }\n  }\n\n  return true\n}\n\n// https://w3c.github.io/webappsec-upgrade-insecure-requests/#upgrade-request\nfunction tryUpgradeRequestToAPotentiallyTrustworthyURL (request) {\n  // TODO\n}\n\n/**\n * @link {https://html.spec.whatwg.org/multipage/origin.html#same-origin}\n * @param {URL} A\n * @param {URL} B\n */\nfunction sameOrigin (A, B) {\n  // 1. If A and B are the same opaque origin, then return true.\n  if (A.origin === B.origin && A.origin === 'null') {\n    return true\n  }\n\n  // 2. If A and B are both tuple origins and their schemes,\n  //    hosts, and port are identical, then return true.\n  if (A.protocol === B.protocol && A.hostname === B.hostname && A.port === B.port) {\n    return true\n  }\n\n  // 3. Return false.\n  return false\n}\n\nfunction createDeferredPromise () {\n  let res\n  let rej\n  const promise = new Promise((resolve, reject) => {\n    res = resolve\n    rej = reject\n  })\n\n  return { promise, resolve: res, reject: rej }\n}\n\nfunction isAborted (fetchParams) {\n  return fetchParams.controller.state === 'aborted'\n}\n\nfunction isCancelled (fetchParams) {\n  return fetchParams.controller.state === 'aborted' ||\n    fetchParams.controller.state === 'terminated'\n}\n\nconst normalizeMethodRecord = {\n  delete: 'DELETE',\n  DELETE: 'DELETE',\n  get: 'GET',\n  GET: 'GET',\n  head: 'HEAD',\n  HEAD: 'HEAD',\n  options: 'OPTIONS',\n  OPTIONS: 'OPTIONS',\n  post: 'POST',\n  POST: 'POST',\n  put: 'PUT',\n  PUT: 'PUT'\n}\n\n// Note: object prototypes should not be able to be referenced. e.g. `Object#hasOwnProperty`.\nObject.setPrototypeOf(normalizeMethodRecord, null)\n\n/**\n * @see https://fetch.spec.whatwg.org/#concept-method-normalize\n * @param {string} method\n */\nfunction normalizeMethod (method) {\n  return normalizeMethodRecord[method.toLowerCase()] ?? method\n}\n\n// https://infra.spec.whatwg.org/#serialize-a-javascript-value-to-a-json-string\nfunction serializeJavascriptValueToJSONString (value) {\n  // 1. Let result be ? Call(%JSON.stringify%, undefined, « value »).\n  const result = JSON.stringify(value)\n\n  // 2. If result is undefined, then throw a TypeError.\n  if (result === undefined) {\n    throw new TypeError('Value is not JSON serializable')\n  }\n\n  // 3. Assert: result is a string.\n  assert(typeof result === 'string')\n\n  // 4. Return result.\n  return result\n}\n\n// https://tc39.es/ecma262/#sec-%25iteratorprototype%25-object\nconst esIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()))\n\n/**\n * @see https://webidl.spec.whatwg.org/#dfn-iterator-prototype-object\n * @param {() => unknown[]} iterator\n * @param {string} name name of the instance\n * @param {'key'|'value'|'key+value'} kind\n */\nfunction makeIterator (iterator, name, kind) {\n  const object = {\n    index: 0,\n    kind,\n    target: iterator\n  }\n\n  const i = {\n    next () {\n      // 1. Let interface be the interface for which the iterator prototype object exists.\n\n      // 2. Let thisValue be the this value.\n\n      // 3. Let object be ? ToObject(thisValue).\n\n      // 4. If object is a platform object, then perform a security\n      //    check, passing:\n\n      // 5. If object is not a default iterator object for interface,\n      //    then throw a TypeError.\n      if (Object.getPrototypeOf(this) !== i) {\n        throw new TypeError(\n          `'next' called on an object that does not implement interface ${name} Iterator.`\n        )\n      }\n\n      // 6. Let index be object’s index.\n      // 7. Let kind be object’s kind.\n      // 8. Let values be object’s target's value pairs to iterate over.\n      const { index, kind, target } = object\n      const values = target()\n\n      // 9. Let len be the length of values.\n      const len = values.length\n\n      // 10. If index is greater than or equal to len, then return\n      //     CreateIterResultObject(undefined, true).\n      if (index >= len) {\n        return { value: undefined, done: true }\n      }\n\n      // 11. Let pair be the entry in values at index index.\n      const pair = values[index]\n\n      // 12. Set object’s index to index + 1.\n      object.index = index + 1\n\n      // 13. Return the iterator result for pair and kind.\n      return iteratorResult(pair, kind)\n    },\n    // The class string of an iterator prototype object for a given interface is the\n    // result of concatenating the identifier of the interface and the string \" Iterator\".\n    [Symbol.toStringTag]: `${name} Iterator`\n  }\n\n  // The [[Prototype]] internal slot of an iterator prototype object must be %IteratorPrototype%.\n  Object.setPrototypeOf(i, esIteratorPrototype)\n  // esIteratorPrototype needs to be the prototype of i\n  // which is the prototype of an empty object. Yes, it's confusing.\n  return Object.setPrototypeOf({}, i)\n}\n\n// https://webidl.spec.whatwg.org/#iterator-result\nfunction iteratorResult (pair, kind) {\n  let result\n\n  // 1. Let result be a value determined by the value of kind:\n  switch (kind) {\n    case 'key': {\n      // 1. Let idlKey be pair’s key.\n      // 2. Let key be the result of converting idlKey to an\n      //    ECMAScript value.\n      // 3. result is key.\n      result = pair[0]\n      break\n    }\n    case 'value': {\n      // 1. Let idlValue be pair’s value.\n      // 2. Let value be the result of converting idlValue to\n      //    an ECMAScript value.\n      // 3. result is value.\n      result = pair[1]\n      break\n    }\n    case 'key+value': {\n      // 1. Let idlKey be pair’s key.\n      // 2. Let idlValue be pair’s value.\n      // 3. Let key be the result of converting idlKey to an\n      //    ECMAScript value.\n      // 4. Let value be the result of converting idlValue to\n      //    an ECMAScript value.\n      // 5. Let array be ! ArrayCreate(2).\n      // 6. Call ! CreateDataProperty(array, \"0\", key).\n      // 7. Call ! CreateDataProperty(array, \"1\", value).\n      // 8. result is array.\n      result = pair\n      break\n    }\n  }\n\n  // 2. Return CreateIterResultObject(result, false).\n  return { value: result, done: false }\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#body-fully-read\n */\nasync function fullyReadBody (body, processBody, processBodyError) {\n  // 1. If taskDestination is null, then set taskDestination to\n  //    the result of starting a new parallel queue.\n\n  // 2. Let successSteps given a byte sequence bytes be to queue a\n  //    fetch task to run processBody given bytes, with taskDestination.\n  const successSteps = processBody\n\n  // 3. Let errorSteps be to queue a fetch task to run processBodyError,\n  //    with taskDestination.\n  const errorSteps = processBodyError\n\n  // 4. Let reader be the result of getting a reader for body’s stream.\n  //    If that threw an exception, then run errorSteps with that\n  //    exception and return.\n  let reader\n\n  try {\n    reader = body.stream.getReader()\n  } catch (e) {\n    errorSteps(e)\n    return\n  }\n\n  // 5. Read all bytes from reader, given successSteps and errorSteps.\n  try {\n    const result = await readAllBytes(reader)\n    successSteps(result)\n  } catch (e) {\n    errorSteps(e)\n  }\n}\n\n/** @type {ReadableStream} */\nlet ReadableStream = globalThis.ReadableStream\n\nfunction isReadableStreamLike (stream) {\n  if (!ReadableStream) {\n    ReadableStream = require('stream/web').ReadableStream\n  }\n\n  return stream instanceof ReadableStream || (\n    stream[Symbol.toStringTag] === 'ReadableStream' &&\n    typeof stream.tee === 'function'\n  )\n}\n\nconst MAXIMUM_ARGUMENT_LENGTH = 65535\n\n/**\n * @see https://infra.spec.whatwg.org/#isomorphic-decode\n * @param {number[]|Uint8Array} input\n */\nfunction isomorphicDecode (input) {\n  // 1. To isomorphic decode a byte sequence input, return a string whose code point\n  //    length is equal to input’s length and whose code points have the same values\n  //    as the values of input’s bytes, in the same order.\n\n  if (input.length < MAXIMUM_ARGUMENT_LENGTH) {\n    return String.fromCharCode(...input)\n  }\n\n  return input.reduce((previous, current) => previous + String.fromCharCode(current), '')\n}\n\n/**\n * @param {ReadableStreamController<Uint8Array>} controller\n */\nfunction readableStreamClose (controller) {\n  try {\n    controller.close()\n  } catch (err) {\n    // TODO: add comment explaining why this error occurs.\n    if (!err.message.includes('Controller is already closed')) {\n      throw err\n    }\n  }\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#isomorphic-encode\n * @param {string} input\n */\nfunction isomorphicEncode (input) {\n  // 1. Assert: input contains no code points greater than U+00FF.\n  for (let i = 0; i < input.length; i++) {\n    assert(input.charCodeAt(i) <= 0xFF)\n  }\n\n  // 2. Return a byte sequence whose length is equal to input’s code\n  //    point length and whose bytes have the same values as the\n  //    values of input’s code points, in the same order\n  return input\n}\n\n/**\n * @see https://streams.spec.whatwg.org/#readablestreamdefaultreader-read-all-bytes\n * @see https://streams.spec.whatwg.org/#read-loop\n * @param {ReadableStreamDefaultReader} reader\n */\nasync function readAllBytes (reader) {\n  const bytes = []\n  let byteLength = 0\n\n  while (true) {\n    const { done, value: chunk } = await reader.read()\n\n    if (done) {\n      // 1. Call successSteps with bytes.\n      return Buffer.concat(bytes, byteLength)\n    }\n\n    // 1. If chunk is not a Uint8Array object, call failureSteps\n    //    with a TypeError and abort these steps.\n    if (!isUint8Array(chunk)) {\n      throw new TypeError('Received non-Uint8Array chunk')\n    }\n\n    // 2. Append the bytes represented by chunk to bytes.\n    bytes.push(chunk)\n    byteLength += chunk.length\n\n    // 3. Read-loop given reader, bytes, successSteps, and failureSteps.\n  }\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#is-local\n * @param {URL} url\n */\nfunction urlIsLocal (url) {\n  assert('protocol' in url) // ensure it's a url object\n\n  const protocol = url.protocol\n\n  return protocol === 'about:' || protocol === 'blob:' || protocol === 'data:'\n}\n\n/**\n * @param {string|URL} url\n */\nfunction urlHasHttpsScheme (url) {\n  if (typeof url === 'string') {\n    return url.startsWith('https:')\n  }\n\n  return url.protocol === 'https:'\n}\n\n/**\n * @see https://fetch.spec.whatwg.org/#http-scheme\n * @param {URL} url\n */\nfunction urlIsHttpHttpsScheme (url) {\n  assert('protocol' in url) // ensure it's a url object\n\n  const protocol = url.protocol\n\n  return protocol === 'http:' || protocol === 'https:'\n}\n\n/**\n * Fetch supports node >= 16.8.0, but Object.hasOwn was added in v16.9.0.\n */\nconst hasOwn = Object.hasOwn || ((dict, key) => Object.prototype.hasOwnProperty.call(dict, key))\n\nmodule.exports = {\n  isAborted,\n  isCancelled,\n  createDeferredPromise,\n  ReadableStreamFrom,\n  toUSVString,\n  tryUpgradeRequestToAPotentiallyTrustworthyURL,\n  coarsenedSharedCurrentTime,\n  determineRequestsReferrer,\n  makePolicyContainer,\n  clonePolicyContainer,\n  appendFetchMetadata,\n  appendRequestOriginHeader,\n  TAOCheck,\n  corsCheck,\n  crossOriginResourcePolicyCheck,\n  createOpaqueTimingInfo,\n  setRequestReferrerPolicyOnRedirect,\n  isValidHTTPToken,\n  requestBadPort,\n  requestCurrentURL,\n  responseURL,\n  responseLocationURL,\n  isBlobLike,\n  isURLPotentiallyTrustworthy,\n  isValidReasonPhrase,\n  sameOrigin,\n  normalizeMethod,\n  serializeJavascriptValueToJSONString,\n  makeIterator,\n  isValidHeaderName,\n  isValidHeaderValue,\n  hasOwn,\n  isErrorLike,\n  fullyReadBody,\n  bytesMatch,\n  isReadableStreamLike,\n  readableStreamClose,\n  isomorphicEncode,\n  isomorphicDecode,\n  urlIsLocal,\n  urlHasHttpsScheme,\n  urlIsHttpHttpsScheme,\n  readAllBytes,\n  normalizeMethodRecord,\n  parseMetadata\n}\n","'use strict'\n\nconst { types } = require('util')\nconst { hasOwn, toUSVString } = require('./util')\n\n/** @type {import('../../types/webidl').Webidl} */\nconst webidl = {}\nwebidl.converters = {}\nwebidl.util = {}\nwebidl.errors = {}\n\nwebidl.errors.exception = function (message) {\n  return new TypeError(`${message.header}: ${message.message}`)\n}\n\nwebidl.errors.conversionFailed = function (context) {\n  const plural = context.types.length === 1 ? '' : ' one of'\n  const message =\n    `${context.argument} could not be converted to` +\n    `${plural}: ${context.types.join(', ')}.`\n\n  return webidl.errors.exception({\n    header: context.prefix,\n    message\n  })\n}\n\nwebidl.errors.invalidArgument = function (context) {\n  return webidl.errors.exception({\n    header: context.prefix,\n    message: `\"${context.value}\" is an invalid ${context.type}.`\n  })\n}\n\n// https://webidl.spec.whatwg.org/#implements\nwebidl.brandCheck = function (V, I, opts = undefined) {\n  if (opts?.strict !== false && !(V instanceof I)) {\n    throw new TypeError('Illegal invocation')\n  } else {\n    return V?.[Symbol.toStringTag] === I.prototype[Symbol.toStringTag]\n  }\n}\n\nwebidl.argumentLengthCheck = function ({ length }, min, ctx) {\n  if (length < min) {\n    throw webidl.errors.exception({\n      message: `${min} argument${min !== 1 ? 's' : ''} required, ` +\n               `but${length ? ' only' : ''} ${length} found.`,\n      ...ctx\n    })\n  }\n}\n\nwebidl.illegalConstructor = function () {\n  throw webidl.errors.exception({\n    header: 'TypeError',\n    message: 'Illegal constructor'\n  })\n}\n\n// https://tc39.es/ecma262/#sec-ecmascript-data-types-and-values\nwebidl.util.Type = function (V) {\n  switch (typeof V) {\n    case 'undefined': return 'Undefined'\n    case 'boolean': return 'Boolean'\n    case 'string': return 'String'\n    case 'symbol': return 'Symbol'\n    case 'number': return 'Number'\n    case 'bigint': return 'BigInt'\n    case 'function':\n    case 'object': {\n      if (V === null) {\n        return 'Null'\n      }\n\n      return 'Object'\n    }\n  }\n}\n\n// https://webidl.spec.whatwg.org/#abstract-opdef-converttoint\nwebidl.util.ConvertToInt = function (V, bitLength, signedness, opts = {}) {\n  let upperBound\n  let lowerBound\n\n  // 1. If bitLength is 64, then:\n  if (bitLength === 64) {\n    // 1. Let upperBound be 2^53 − 1.\n    upperBound = Math.pow(2, 53) - 1\n\n    // 2. If signedness is \"unsigned\", then let lowerBound be 0.\n    if (signedness === 'unsigned') {\n      lowerBound = 0\n    } else {\n      // 3. Otherwise let lowerBound be −2^53 + 1.\n      lowerBound = Math.pow(-2, 53) + 1\n    }\n  } else if (signedness === 'unsigned') {\n    // 2. Otherwise, if signedness is \"unsigned\", then:\n\n    // 1. Let lowerBound be 0.\n    lowerBound = 0\n\n    // 2. Let upperBound be 2^bitLength − 1.\n    upperBound = Math.pow(2, bitLength) - 1\n  } else {\n    // 3. Otherwise:\n\n    // 1. Let lowerBound be -2^bitLength − 1.\n    lowerBound = Math.pow(-2, bitLength) - 1\n\n    // 2. Let upperBound be 2^bitLength − 1 − 1.\n    upperBound = Math.pow(2, bitLength - 1) - 1\n  }\n\n  // 4. Let x be ? ToNumber(V).\n  let x = Number(V)\n\n  // 5. If x is −0, then set x to +0.\n  if (x === 0) {\n    x = 0\n  }\n\n  // 6. If the conversion is to an IDL type associated\n  //    with the [EnforceRange] extended attribute, then:\n  if (opts.enforceRange === true) {\n    // 1. If x is NaN, +∞, or −∞, then throw a TypeError.\n    if (\n      Number.isNaN(x) ||\n      x === Number.POSITIVE_INFINITY ||\n      x === Number.NEGATIVE_INFINITY\n    ) {\n      throw webidl.errors.exception({\n        header: 'Integer conversion',\n        message: `Could not convert ${V} to an integer.`\n      })\n    }\n\n    // 2. Set x to IntegerPart(x).\n    x = webidl.util.IntegerPart(x)\n\n    // 3. If x < lowerBound or x > upperBound, then\n    //    throw a TypeError.\n    if (x < lowerBound || x > upperBound) {\n      throw webidl.errors.exception({\n        header: 'Integer conversion',\n        message: `Value must be between ${lowerBound}-${upperBound}, got ${x}.`\n      })\n    }\n\n    // 4. Return x.\n    return x\n  }\n\n  // 7. If x is not NaN and the conversion is to an IDL\n  //    type associated with the [Clamp] extended\n  //    attribute, then:\n  if (!Number.isNaN(x) && opts.clamp === true) {\n    // 1. Set x to min(max(x, lowerBound), upperBound).\n    x = Math.min(Math.max(x, lowerBound), upperBound)\n\n    // 2. Round x to the nearest integer, choosing the\n    //    even integer if it lies halfway between two,\n    //    and choosing +0 rather than −0.\n    if (Math.floor(x) % 2 === 0) {\n      x = Math.floor(x)\n    } else {\n      x = Math.ceil(x)\n    }\n\n    // 3. Return x.\n    return x\n  }\n\n  // 8. If x is NaN, +0, +∞, or −∞, then return +0.\n  if (\n    Number.isNaN(x) ||\n    (x === 0 && Object.is(0, x)) ||\n    x === Number.POSITIVE_INFINITY ||\n    x === Number.NEGATIVE_INFINITY\n  ) {\n    return 0\n  }\n\n  // 9. Set x to IntegerPart(x).\n  x = webidl.util.IntegerPart(x)\n\n  // 10. Set x to x modulo 2^bitLength.\n  x = x % Math.pow(2, bitLength)\n\n  // 11. If signedness is \"signed\" and x ≥ 2^bitLength − 1,\n  //    then return x − 2^bitLength.\n  if (signedness === 'signed' && x >= Math.pow(2, bitLength) - 1) {\n    return x - Math.pow(2, bitLength)\n  }\n\n  // 12. Otherwise, return x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#abstract-opdef-integerpart\nwebidl.util.IntegerPart = function (n) {\n  // 1. Let r be floor(abs(n)).\n  const r = Math.floor(Math.abs(n))\n\n  // 2. If n < 0, then return -1 × r.\n  if (n < 0) {\n    return -1 * r\n  }\n\n  // 3. Otherwise, return r.\n  return r\n}\n\n// https://webidl.spec.whatwg.org/#es-sequence\nwebidl.sequenceConverter = function (converter) {\n  return (V) => {\n    // 1. If Type(V) is not Object, throw a TypeError.\n    if (webidl.util.Type(V) !== 'Object') {\n      throw webidl.errors.exception({\n        header: 'Sequence',\n        message: `Value of type ${webidl.util.Type(V)} is not an Object.`\n      })\n    }\n\n    // 2. Let method be ? GetMethod(V, @@iterator).\n    /** @type {Generator} */\n    const method = V?.[Symbol.iterator]?.()\n    const seq = []\n\n    // 3. If method is undefined, throw a TypeError.\n    if (\n      method === undefined ||\n      typeof method.next !== 'function'\n    ) {\n      throw webidl.errors.exception({\n        header: 'Sequence',\n        message: 'Object is not an iterator.'\n      })\n    }\n\n    // https://webidl.spec.whatwg.org/#create-sequence-from-iterable\n    while (true) {\n      const { done, value } = method.next()\n\n      if (done) {\n        break\n      }\n\n      seq.push(converter(value))\n    }\n\n    return seq\n  }\n}\n\n// https://webidl.spec.whatwg.org/#es-to-record\nwebidl.recordConverter = function (keyConverter, valueConverter) {\n  return (O) => {\n    // 1. If Type(O) is not Object, throw a TypeError.\n    if (webidl.util.Type(O) !== 'Object') {\n      throw webidl.errors.exception({\n        header: 'Record',\n        message: `Value of type ${webidl.util.Type(O)} is not an Object.`\n      })\n    }\n\n    // 2. Let result be a new empty instance of record<K, V>.\n    const result = {}\n\n    if (!types.isProxy(O)) {\n      // Object.keys only returns enumerable properties\n      const keys = Object.keys(O)\n\n      for (const key of keys) {\n        // 1. Let typedKey be key converted to an IDL value of type K.\n        const typedKey = keyConverter(key)\n\n        // 2. Let value be ? Get(O, key).\n        // 3. Let typedValue be value converted to an IDL value of type V.\n        const typedValue = valueConverter(O[key])\n\n        // 4. Set result[typedKey] to typedValue.\n        result[typedKey] = typedValue\n      }\n\n      // 5. Return result.\n      return result\n    }\n\n    // 3. Let keys be ? O.[[OwnPropertyKeys]]().\n    const keys = Reflect.ownKeys(O)\n\n    // 4. For each key of keys.\n    for (const key of keys) {\n      // 1. Let desc be ? O.[[GetOwnProperty]](key).\n      const desc = Reflect.getOwnPropertyDescriptor(O, key)\n\n      // 2. If desc is not undefined and desc.[[Enumerable]] is true:\n      if (desc?.enumerable) {\n        // 1. Let typedKey be key converted to an IDL value of type K.\n        const typedKey = keyConverter(key)\n\n        // 2. Let value be ? Get(O, key).\n        // 3. Let typedValue be value converted to an IDL value of type V.\n        const typedValue = valueConverter(O[key])\n\n        // 4. Set result[typedKey] to typedValue.\n        result[typedKey] = typedValue\n      }\n    }\n\n    // 5. Return result.\n    return result\n  }\n}\n\nwebidl.interfaceConverter = function (i) {\n  return (V, opts = {}) => {\n    if (opts.strict !== false && !(V instanceof i)) {\n      throw webidl.errors.exception({\n        header: i.name,\n        message: `Expected ${V} to be an instance of ${i.name}.`\n      })\n    }\n\n    return V\n  }\n}\n\nwebidl.dictionaryConverter = function (converters) {\n  return (dictionary) => {\n    const type = webidl.util.Type(dictionary)\n    const dict = {}\n\n    if (type === 'Null' || type === 'Undefined') {\n      return dict\n    } else if (type !== 'Object') {\n      throw webidl.errors.exception({\n        header: 'Dictionary',\n        message: `Expected ${dictionary} to be one of: Null, Undefined, Object.`\n      })\n    }\n\n    for (const options of converters) {\n      const { key, defaultValue, required, converter } = options\n\n      if (required === true) {\n        if (!hasOwn(dictionary, key)) {\n          throw webidl.errors.exception({\n            header: 'Dictionary',\n            message: `Missing required key \"${key}\".`\n          })\n        }\n      }\n\n      let value = dictionary[key]\n      const hasDefault = hasOwn(options, 'defaultValue')\n\n      // Only use defaultValue if value is undefined and\n      // a defaultValue options was provided.\n      if (hasDefault && value !== null) {\n        value = value ?? defaultValue\n      }\n\n      // A key can be optional and have no default value.\n      // When this happens, do not perform a conversion,\n      // and do not assign the key a value.\n      if (required || hasDefault || value !== undefined) {\n        value = converter(value)\n\n        if (\n          options.allowedValues &&\n          !options.allowedValues.includes(value)\n        ) {\n          throw webidl.errors.exception({\n            header: 'Dictionary',\n            message: `${value} is not an accepted type. Expected one of ${options.allowedValues.join(', ')}.`\n          })\n        }\n\n        dict[key] = value\n      }\n    }\n\n    return dict\n  }\n}\n\nwebidl.nullableConverter = function (converter) {\n  return (V) => {\n    if (V === null) {\n      return V\n    }\n\n    return converter(V)\n  }\n}\n\n// https://webidl.spec.whatwg.org/#es-DOMString\nwebidl.converters.DOMString = function (V, opts = {}) {\n  // 1. If V is null and the conversion is to an IDL type\n  //    associated with the [LegacyNullToEmptyString]\n  //    extended attribute, then return the DOMString value\n  //    that represents the empty string.\n  if (V === null && opts.legacyNullToEmptyString) {\n    return ''\n  }\n\n  // 2. Let x be ? ToString(V).\n  if (typeof V === 'symbol') {\n    throw new TypeError('Could not convert argument of type symbol to string.')\n  }\n\n  // 3. Return the IDL DOMString value that represents the\n  //    same sequence of code units as the one the\n  //    ECMAScript String value x represents.\n  return String(V)\n}\n\n// https://webidl.spec.whatwg.org/#es-ByteString\nwebidl.converters.ByteString = function (V) {\n  // 1. Let x be ? ToString(V).\n  // Note: DOMString converter perform ? ToString(V)\n  const x = webidl.converters.DOMString(V)\n\n  // 2. If the value of any element of x is greater than\n  //    255, then throw a TypeError.\n  for (let index = 0; index < x.length; index++) {\n    if (x.charCodeAt(index) > 255) {\n      throw new TypeError(\n        'Cannot convert argument to a ByteString because the character at ' +\n        `index ${index} has a value of ${x.charCodeAt(index)} which is greater than 255.`\n      )\n    }\n  }\n\n  // 3. Return an IDL ByteString value whose length is the\n  //    length of x, and where the value of each element is\n  //    the value of the corresponding element of x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#es-USVString\nwebidl.converters.USVString = toUSVString\n\n// https://webidl.spec.whatwg.org/#es-boolean\nwebidl.converters.boolean = function (V) {\n  // 1. Let x be the result of computing ToBoolean(V).\n  const x = Boolean(V)\n\n  // 2. Return the IDL boolean value that is the one that represents\n  //    the same truth value as the ECMAScript Boolean value x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#es-any\nwebidl.converters.any = function (V) {\n  return V\n}\n\n// https://webidl.spec.whatwg.org/#es-long-long\nwebidl.converters['long long'] = function (V) {\n  // 1. Let x be ? ConvertToInt(V, 64, \"signed\").\n  const x = webidl.util.ConvertToInt(V, 64, 'signed')\n\n  // 2. Return the IDL long long value that represents\n  //    the same numeric value as x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#es-unsigned-long-long\nwebidl.converters['unsigned long long'] = function (V) {\n  // 1. Let x be ? ConvertToInt(V, 64, \"unsigned\").\n  const x = webidl.util.ConvertToInt(V, 64, 'unsigned')\n\n  // 2. Return the IDL unsigned long long value that\n  //    represents the same numeric value as x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#es-unsigned-long\nwebidl.converters['unsigned long'] = function (V) {\n  // 1. Let x be ? ConvertToInt(V, 32, \"unsigned\").\n  const x = webidl.util.ConvertToInt(V, 32, 'unsigned')\n\n  // 2. Return the IDL unsigned long value that\n  //    represents the same numeric value as x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#es-unsigned-short\nwebidl.converters['unsigned short'] = function (V, opts) {\n  // 1. Let x be ? ConvertToInt(V, 16, \"unsigned\").\n  const x = webidl.util.ConvertToInt(V, 16, 'unsigned', opts)\n\n  // 2. Return the IDL unsigned short value that represents\n  //    the same numeric value as x.\n  return x\n}\n\n// https://webidl.spec.whatwg.org/#idl-ArrayBuffer\nwebidl.converters.ArrayBuffer = function (V, opts = {}) {\n  // 1. If Type(V) is not Object, or V does not have an\n  //    [[ArrayBufferData]] internal slot, then throw a\n  //    TypeError.\n  // see: https://tc39.es/ecma262/#sec-properties-of-the-arraybuffer-instances\n  // see: https://tc39.es/ecma262/#sec-properties-of-the-sharedarraybuffer-instances\n  if (\n    webidl.util.Type(V) !== 'Object' ||\n    !types.isAnyArrayBuffer(V)\n  ) {\n    throw webidl.errors.conversionFailed({\n      prefix: `${V}`,\n      argument: `${V}`,\n      types: ['ArrayBuffer']\n    })\n  }\n\n  // 2. If the conversion is not to an IDL type associated\n  //    with the [AllowShared] extended attribute, and\n  //    IsSharedArrayBuffer(V) is true, then throw a\n  //    TypeError.\n  if (opts.allowShared === false && types.isSharedArrayBuffer(V)) {\n    throw webidl.errors.exception({\n      header: 'ArrayBuffer',\n      message: 'SharedArrayBuffer is not allowed.'\n    })\n  }\n\n  // 3. If the conversion is not to an IDL type associated\n  //    with the [AllowResizable] extended attribute, and\n  //    IsResizableArrayBuffer(V) is true, then throw a\n  //    TypeError.\n  // Note: resizable ArrayBuffers are currently a proposal.\n\n  // 4. Return the IDL ArrayBuffer value that is a\n  //    reference to the same object as V.\n  return V\n}\n\nwebidl.converters.TypedArray = function (V, T, opts = {}) {\n  // 1. Let T be the IDL type V is being converted to.\n\n  // 2. If Type(V) is not Object, or V does not have a\n  //    [[TypedArrayName]] internal slot with a value\n  //    equal to T’s name, then throw a TypeError.\n  if (\n    webidl.util.Type(V) !== 'Object' ||\n    !types.isTypedArray(V) ||\n    V.constructor.name !== T.name\n  ) {\n    throw webidl.errors.conversionFailed({\n      prefix: `${T.name}`,\n      argument: `${V}`,\n      types: [T.name]\n    })\n  }\n\n  // 3. If the conversion is not to an IDL type associated\n  //    with the [AllowShared] extended attribute, and\n  //    IsSharedArrayBuffer(V.[[ViewedArrayBuffer]]) is\n  //    true, then throw a TypeError.\n  if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {\n    throw webidl.errors.exception({\n      header: 'ArrayBuffer',\n      message: 'SharedArrayBuffer is not allowed.'\n    })\n  }\n\n  // 4. If the conversion is not to an IDL type associated\n  //    with the [AllowResizable] extended attribute, and\n  //    IsResizableArrayBuffer(V.[[ViewedArrayBuffer]]) is\n  //    true, then throw a TypeError.\n  // Note: resizable array buffers are currently a proposal\n\n  // 5. Return the IDL value of type T that is a reference\n  //    to the same object as V.\n  return V\n}\n\nwebidl.converters.DataView = function (V, opts = {}) {\n  // 1. If Type(V) is not Object, or V does not have a\n  //    [[DataView]] internal slot, then throw a TypeError.\n  if (webidl.util.Type(V) !== 'Object' || !types.isDataView(V)) {\n    throw webidl.errors.exception({\n      header: 'DataView',\n      message: 'Object is not a DataView.'\n    })\n  }\n\n  // 2. If the conversion is not to an IDL type associated\n  //    with the [AllowShared] extended attribute, and\n  //    IsSharedArrayBuffer(V.[[ViewedArrayBuffer]]) is true,\n  //    then throw a TypeError.\n  if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {\n    throw webidl.errors.exception({\n      header: 'ArrayBuffer',\n      message: 'SharedArrayBuffer is not allowed.'\n    })\n  }\n\n  // 3. If the conversion is not to an IDL type associated\n  //    with the [AllowResizable] extended attribute, and\n  //    IsResizableArrayBuffer(V.[[ViewedArrayBuffer]]) is\n  //    true, then throw a TypeError.\n  // Note: resizable ArrayBuffers are currently a proposal\n\n  // 4. Return the IDL DataView value that is a reference\n  //    to the same object as V.\n  return V\n}\n\n// https://webidl.spec.whatwg.org/#BufferSource\nwebidl.converters.BufferSource = function (V, opts = {}) {\n  if (types.isAnyArrayBuffer(V)) {\n    return webidl.converters.ArrayBuffer(V, opts)\n  }\n\n  if (types.isTypedArray(V)) {\n    return webidl.converters.TypedArray(V, V.constructor)\n  }\n\n  if (types.isDataView(V)) {\n    return webidl.converters.DataView(V, opts)\n  }\n\n  throw new TypeError(`Could not convert ${V} to a BufferSource.`)\n}\n\nwebidl.converters['sequence<ByteString>'] = webidl.sequenceConverter(\n  webidl.converters.ByteString\n)\n\nwebidl.converters['sequence<sequence<ByteString>>'] = webidl.sequenceConverter(\n  webidl.converters['sequence<ByteString>']\n)\n\nwebidl.converters['record<ByteString, ByteString>'] = webidl.recordConverter(\n  webidl.converters.ByteString,\n  webidl.converters.ByteString\n)\n\nmodule.exports = {\n  webidl\n}\n","'use strict'\n\n/**\n * @see https://encoding.spec.whatwg.org/#concept-encoding-get\n * @param {string|undefined} label\n */\nfunction getEncoding (label) {\n  if (!label) {\n    return 'failure'\n  }\n\n  // 1. Remove any leading and trailing ASCII whitespace from label.\n  // 2. If label is an ASCII case-insensitive match for any of the\n  //    labels listed in the table below, then return the\n  //    corresponding encoding; otherwise return failure.\n  switch (label.trim().toLowerCase()) {\n    case 'unicode-1-1-utf-8':\n    case 'unicode11utf8':\n    case 'unicode20utf8':\n    case 'utf-8':\n    case 'utf8':\n    case 'x-unicode20utf8':\n      return 'UTF-8'\n    case '866':\n    case 'cp866':\n    case 'csibm866':\n    case 'ibm866':\n      return 'IBM866'\n    case 'csisolatin2':\n    case 'iso-8859-2':\n    case 'iso-ir-101':\n    case 'iso8859-2':\n    case 'iso88592':\n    case 'iso_8859-2':\n    case 'iso_8859-2:1987':\n    case 'l2':\n    case 'latin2':\n      return 'ISO-8859-2'\n    case 'csisolatin3':\n    case 'iso-8859-3':\n    case 'iso-ir-109':\n    case 'iso8859-3':\n    case 'iso88593':\n    case 'iso_8859-3':\n    case 'iso_8859-3:1988':\n    case 'l3':\n    case 'latin3':\n      return 'ISO-8859-3'\n    case 'csisolatin4':\n    case 'iso-8859-4':\n    case 'iso-ir-110':\n    case 'iso8859-4':\n    case 'iso88594':\n    case 'iso_8859-4':\n    case 'iso_8859-4:1988':\n    case 'l4':\n    case 'latin4':\n      return 'ISO-8859-4'\n    case 'csisolatincyrillic':\n    case 'cyrillic':\n    case 'iso-8859-5':\n    case 'iso-ir-144':\n    case 'iso8859-5':\n    case 'iso88595':\n    case 'iso_8859-5':\n    case 'iso_8859-5:1988':\n      return 'ISO-8859-5'\n    case 'arabic':\n    case 'asmo-708':\n    case 'csiso88596e':\n    case 'csiso88596i':\n    case 'csisolatinarabic':\n    case 'ecma-114':\n    case 'iso-8859-6':\n    case 'iso-8859-6-e':\n    case 'iso-8859-6-i':\n    case 'iso-ir-127':\n    case 'iso8859-6':\n    case 'iso88596':\n    case 'iso_8859-6':\n    case 'iso_8859-6:1987':\n      return 'ISO-8859-6'\n    case 'csisolatingreek':\n    case 'ecma-118':\n    case 'elot_928':\n    case 'greek':\n    case 'greek8':\n    case 'iso-8859-7':\n    case 'iso-ir-126':\n    case 'iso8859-7':\n    case 'iso88597':\n    case 'iso_8859-7':\n    case 'iso_8859-7:1987':\n    case 'sun_eu_greek':\n      return 'ISO-8859-7'\n    case 'csiso88598e':\n    case 'csisolatinhebrew':\n    case 'hebrew':\n    case 'iso-8859-8':\n    case 'iso-8859-8-e':\n    case 'iso-ir-138':\n    case 'iso8859-8':\n    case 'iso88598':\n    case 'iso_8859-8':\n    case 'iso_8859-8:1988':\n    case 'visual':\n      return 'ISO-8859-8'\n    case 'csiso88598i':\n    case 'iso-8859-8-i':\n    case 'logical':\n      return 'ISO-8859-8-I'\n    case 'csisolatin6':\n    case 'iso-8859-10':\n    case 'iso-ir-157':\n    case 'iso8859-10':\n    case 'iso885910':\n    case 'l6':\n    case 'latin6':\n      return 'ISO-8859-10'\n    case 'iso-8859-13':\n    case 'iso8859-13':\n    case 'iso885913':\n      return 'ISO-8859-13'\n    case 'iso-8859-14':\n    case 'iso8859-14':\n    case 'iso885914':\n      return 'ISO-8859-14'\n    case 'csisolatin9':\n    case 'iso-8859-15':\n    case 'iso8859-15':\n    case 'iso885915':\n    case 'iso_8859-15':\n    case 'l9':\n      return 'ISO-8859-15'\n    case 'iso-8859-16':\n      return 'ISO-8859-16'\n    case 'cskoi8r':\n    case 'koi':\n    case 'koi8':\n    case 'koi8-r':\n    case 'koi8_r':\n      return 'KOI8-R'\n    case 'koi8-ru':\n    case 'koi8-u':\n      return 'KOI8-U'\n    case 'csmacintosh':\n    case 'mac':\n    case 'macintosh':\n    case 'x-mac-roman':\n      return 'macintosh'\n    case 'iso-8859-11':\n    case 'iso8859-11':\n    case 'iso885911':\n    case 'tis-620':\n    case 'windows-874':\n      return 'windows-874'\n    case 'cp1250':\n    case 'windows-1250':\n    case 'x-cp1250':\n      return 'windows-1250'\n    case 'cp1251':\n    case 'windows-1251':\n    case 'x-cp1251':\n      return 'windows-1251'\n    case 'ansi_x3.4-1968':\n    case 'ascii':\n    case 'cp1252':\n    case 'cp819':\n    case 'csisolatin1':\n    case 'ibm819':\n    case 'iso-8859-1':\n    case 'iso-ir-100':\n    case 'iso8859-1':\n    case 'iso88591':\n    case 'iso_8859-1':\n    case 'iso_8859-1:1987':\n    case 'l1':\n    case 'latin1':\n    case 'us-ascii':\n    case 'windows-1252':\n    case 'x-cp1252':\n      return 'windows-1252'\n    case 'cp1253':\n    case 'windows-1253':\n    case 'x-cp1253':\n      return 'windows-1253'\n    case 'cp1254':\n    case 'csisolatin5':\n    case 'iso-8859-9':\n    case 'iso-ir-148':\n    case 'iso8859-9':\n    case 'iso88599':\n    case 'iso_8859-9':\n    case 'iso_8859-9:1989':\n    case 'l5':\n    case 'latin5':\n    case 'windows-1254':\n    case 'x-cp1254':\n      return 'windows-1254'\n    case 'cp1255':\n    case 'windows-1255':\n    case 'x-cp1255':\n      return 'windows-1255'\n    case 'cp1256':\n    case 'windows-1256':\n    case 'x-cp1256':\n      return 'windows-1256'\n    case 'cp1257':\n    case 'windows-1257':\n    case 'x-cp1257':\n      return 'windows-1257'\n    case 'cp1258':\n    case 'windows-1258':\n    case 'x-cp1258':\n      return 'windows-1258'\n    case 'x-mac-cyrillic':\n    case 'x-mac-ukrainian':\n      return 'x-mac-cyrillic'\n    case 'chinese':\n    case 'csgb2312':\n    case 'csiso58gb231280':\n    case 'gb2312':\n    case 'gb_2312':\n    case 'gb_2312-80':\n    case 'gbk':\n    case 'iso-ir-58':\n    case 'x-gbk':\n      return 'GBK'\n    case 'gb18030':\n      return 'gb18030'\n    case 'big5':\n    case 'big5-hkscs':\n    case 'cn-big5':\n    case 'csbig5':\n    case 'x-x-big5':\n      return 'Big5'\n    case 'cseucpkdfmtjapanese':\n    case 'euc-jp':\n    case 'x-euc-jp':\n      return 'EUC-JP'\n    case 'csiso2022jp':\n    case 'iso-2022-jp':\n      return 'ISO-2022-JP'\n    case 'csshiftjis':\n    case 'ms932':\n    case 'ms_kanji':\n    case 'shift-jis':\n    case 'shift_jis':\n    case 'sjis':\n    case 'windows-31j':\n    case 'x-sjis':\n      return 'Shift_JIS'\n    case 'cseuckr':\n    case 'csksc56011987':\n    case 'euc-kr':\n    case 'iso-ir-149':\n    case 'korean':\n    case 'ks_c_5601-1987':\n    case 'ks_c_5601-1989':\n    case 'ksc5601':\n    case 'ksc_5601':\n    case 'windows-949':\n      return 'EUC-KR'\n    case 'csiso2022kr':\n    case 'hz-gb-2312':\n    case 'iso-2022-cn':\n    case 'iso-2022-cn-ext':\n    case 'iso-2022-kr':\n    case 'replacement':\n      return 'replacement'\n    case 'unicodefffe':\n    case 'utf-16be':\n      return 'UTF-16BE'\n    case 'csunicode':\n    case 'iso-10646-ucs-2':\n    case 'ucs-2':\n    case 'unicode':\n    case 'unicodefeff':\n    case 'utf-16':\n    case 'utf-16le':\n      return 'UTF-16LE'\n    case 'x-user-defined':\n      return 'x-user-defined'\n    default: return 'failure'\n  }\n}\n\nmodule.exports = {\n  getEncoding\n}\n","'use strict'\n\nconst {\n  staticPropertyDescriptors,\n  readOperation,\n  fireAProgressEvent\n} = require('./util')\nconst {\n  kState,\n  kError,\n  kResult,\n  kEvents,\n  kAborted\n} = require('./symbols')\nconst { webidl } = require('../fetch/webidl')\nconst { kEnumerableProperty } = require('../core/util')\n\nclass FileReader extends EventTarget {\n  constructor () {\n    super()\n\n    this[kState] = 'empty'\n    this[kResult] = null\n    this[kError] = null\n    this[kEvents] = {\n      loadend: null,\n      error: null,\n      abort: null,\n      load: null,\n      progress: null,\n      loadstart: null\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dfn-readAsArrayBuffer\n   * @param {import('buffer').Blob} blob\n   */\n  readAsArrayBuffer (blob) {\n    webidl.brandCheck(this, FileReader)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsArrayBuffer' })\n\n    blob = webidl.converters.Blob(blob, { strict: false })\n\n    // The readAsArrayBuffer(blob) method, when invoked,\n    // must initiate a read operation for blob with ArrayBuffer.\n    readOperation(this, blob, 'ArrayBuffer')\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#readAsBinaryString\n   * @param {import('buffer').Blob} blob\n   */\n  readAsBinaryString (blob) {\n    webidl.brandCheck(this, FileReader)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsBinaryString' })\n\n    blob = webidl.converters.Blob(blob, { strict: false })\n\n    // The readAsBinaryString(blob) method, when invoked,\n    // must initiate a read operation for blob with BinaryString.\n    readOperation(this, blob, 'BinaryString')\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#readAsDataText\n   * @param {import('buffer').Blob} blob\n   * @param {string?} encoding\n   */\n  readAsText (blob, encoding = undefined) {\n    webidl.brandCheck(this, FileReader)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsText' })\n\n    blob = webidl.converters.Blob(blob, { strict: false })\n\n    if (encoding !== undefined) {\n      encoding = webidl.converters.DOMString(encoding)\n    }\n\n    // The readAsText(blob, encoding) method, when invoked,\n    // must initiate a read operation for blob with Text and encoding.\n    readOperation(this, blob, 'Text', encoding)\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dfn-readAsDataURL\n   * @param {import('buffer').Blob} blob\n   */\n  readAsDataURL (blob) {\n    webidl.brandCheck(this, FileReader)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsDataURL' })\n\n    blob = webidl.converters.Blob(blob, { strict: false })\n\n    // The readAsDataURL(blob) method, when invoked, must\n    // initiate a read operation for blob with DataURL.\n    readOperation(this, blob, 'DataURL')\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dfn-abort\n   */\n  abort () {\n    // 1. If this's state is \"empty\" or if this's state is\n    //    \"done\" set this's result to null and terminate\n    //    this algorithm.\n    if (this[kState] === 'empty' || this[kState] === 'done') {\n      this[kResult] = null\n      return\n    }\n\n    // 2. If this's state is \"loading\" set this's state to\n    //    \"done\" and set this's result to null.\n    if (this[kState] === 'loading') {\n      this[kState] = 'done'\n      this[kResult] = null\n    }\n\n    // 3. If there are any tasks from this on the file reading\n    //    task source in an affiliated task queue, then remove\n    //    those tasks from that task queue.\n    this[kAborted] = true\n\n    // 4. Terminate the algorithm for the read method being processed.\n    // TODO\n\n    // 5. Fire a progress event called abort at this.\n    fireAProgressEvent('abort', this)\n\n    // 6. If this's state is not \"loading\", fire a progress\n    //    event called loadend at this.\n    if (this[kState] !== 'loading') {\n      fireAProgressEvent('loadend', this)\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dom-filereader-readystate\n   */\n  get readyState () {\n    webidl.brandCheck(this, FileReader)\n\n    switch (this[kState]) {\n      case 'empty': return this.EMPTY\n      case 'loading': return this.LOADING\n      case 'done': return this.DONE\n    }\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dom-filereader-result\n   */\n  get result () {\n    webidl.brandCheck(this, FileReader)\n\n    // The result attribute’s getter, when invoked, must return\n    // this's result.\n    return this[kResult]\n  }\n\n  /**\n   * @see https://w3c.github.io/FileAPI/#dom-filereader-error\n   */\n  get error () {\n    webidl.brandCheck(this, FileReader)\n\n    // The error attribute’s getter, when invoked, must return\n    // this's error.\n    return this[kError]\n  }\n\n  get onloadend () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].loadend\n  }\n\n  set onloadend (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].loadend) {\n      this.removeEventListener('loadend', this[kEvents].loadend)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].loadend = fn\n      this.addEventListener('loadend', fn)\n    } else {\n      this[kEvents].loadend = null\n    }\n  }\n\n  get onerror () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].error\n  }\n\n  set onerror (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].error) {\n      this.removeEventListener('error', this[kEvents].error)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].error = fn\n      this.addEventListener('error', fn)\n    } else {\n      this[kEvents].error = null\n    }\n  }\n\n  get onloadstart () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].loadstart\n  }\n\n  set onloadstart (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].loadstart) {\n      this.removeEventListener('loadstart', this[kEvents].loadstart)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].loadstart = fn\n      this.addEventListener('loadstart', fn)\n    } else {\n      this[kEvents].loadstart = null\n    }\n  }\n\n  get onprogress () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].progress\n  }\n\n  set onprogress (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].progress) {\n      this.removeEventListener('progress', this[kEvents].progress)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].progress = fn\n      this.addEventListener('progress', fn)\n    } else {\n      this[kEvents].progress = null\n    }\n  }\n\n  get onload () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].load\n  }\n\n  set onload (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].load) {\n      this.removeEventListener('load', this[kEvents].load)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].load = fn\n      this.addEventListener('load', fn)\n    } else {\n      this[kEvents].load = null\n    }\n  }\n\n  get onabort () {\n    webidl.brandCheck(this, FileReader)\n\n    return this[kEvents].abort\n  }\n\n  set onabort (fn) {\n    webidl.brandCheck(this, FileReader)\n\n    if (this[kEvents].abort) {\n      this.removeEventListener('abort', this[kEvents].abort)\n    }\n\n    if (typeof fn === 'function') {\n      this[kEvents].abort = fn\n      this.addEventListener('abort', fn)\n    } else {\n      this[kEvents].abort = null\n    }\n  }\n}\n\n// https://w3c.github.io/FileAPI/#dom-filereader-empty\nFileReader.EMPTY = FileReader.prototype.EMPTY = 0\n// https://w3c.github.io/FileAPI/#dom-filereader-loading\nFileReader.LOADING = FileReader.prototype.LOADING = 1\n// https://w3c.github.io/FileAPI/#dom-filereader-done\nFileReader.DONE = FileReader.prototype.DONE = 2\n\nObject.defineProperties(FileReader.prototype, {\n  EMPTY: staticPropertyDescriptors,\n  LOADING: staticPropertyDescriptors,\n  DONE: staticPropertyDescriptors,\n  readAsArrayBuffer: kEnumerableProperty,\n  readAsBinaryString: kEnumerableProperty,\n  readAsText: kEnumerableProperty,\n  readAsDataURL: kEnumerableProperty,\n  abort: kEnumerableProperty,\n  readyState: kEnumerableProperty,\n  result: kEnumerableProperty,\n  error: kEnumerableProperty,\n  onloadstart: kEnumerableProperty,\n  onprogress: kEnumerableProperty,\n  onload: kEnumerableProperty,\n  onabort: kEnumerableProperty,\n  onerror: kEnumerableProperty,\n  onloadend: kEnumerableProperty,\n  [Symbol.toStringTag]: {\n    value: 'FileReader',\n    writable: false,\n    enumerable: false,\n    configurable: true\n  }\n})\n\nObject.defineProperties(FileReader, {\n  EMPTY: staticPropertyDescriptors,\n  LOADING: staticPropertyDescriptors,\n  DONE: staticPropertyDescriptors\n})\n\nmodule.exports = {\n  FileReader\n}\n","'use strict'\n\nconst { webidl } = require('../fetch/webidl')\n\nconst kState = Symbol('ProgressEvent state')\n\n/**\n * @see https://xhr.spec.whatwg.org/#progressevent\n */\nclass ProgressEvent extends Event {\n  constructor (type, eventInitDict = {}) {\n    type = webidl.converters.DOMString(type)\n    eventInitDict = webidl.converters.ProgressEventInit(eventInitDict ?? {})\n\n    super(type, eventInitDict)\n\n    this[kState] = {\n      lengthComputable: eventInitDict.lengthComputable,\n      loaded: eventInitDict.loaded,\n      total: eventInitDict.total\n    }\n  }\n\n  get lengthComputable () {\n    webidl.brandCheck(this, ProgressEvent)\n\n    return this[kState].lengthComputable\n  }\n\n  get loaded () {\n    webidl.brandCheck(this, ProgressEvent)\n\n    return this[kState].loaded\n  }\n\n  get total () {\n    webidl.brandCheck(this, ProgressEvent)\n\n    return this[kState].total\n  }\n}\n\nwebidl.converters.ProgressEventInit = webidl.dictionaryConverter([\n  {\n    key: 'lengthComputable',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'loaded',\n    converter: webidl.converters['unsigned long long'],\n    defaultValue: 0\n  },\n  {\n    key: 'total',\n    converter: webidl.converters['unsigned long long'],\n    defaultValue: 0\n  },\n  {\n    key: 'bubbles',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'cancelable',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'composed',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  }\n])\n\nmodule.exports = {\n  ProgressEvent\n}\n","'use strict'\n\nmodule.exports = {\n  kState: Symbol('FileReader state'),\n  kResult: Symbol('FileReader result'),\n  kError: Symbol('FileReader error'),\n  kLastProgressEventFired: Symbol('FileReader last progress event fired timestamp'),\n  kEvents: Symbol('FileReader events'),\n  kAborted: Symbol('FileReader aborted')\n}\n","'use strict'\n\nconst {\n  kState,\n  kError,\n  kResult,\n  kAborted,\n  kLastProgressEventFired\n} = require('./symbols')\nconst { ProgressEvent } = require('./progressevent')\nconst { getEncoding } = require('./encoding')\nconst { DOMException } = require('../fetch/constants')\nconst { serializeAMimeType, parseMIMEType } = require('../fetch/dataURL')\nconst { types } = require('util')\nconst { StringDecoder } = require('string_decoder')\nconst { btoa } = require('buffer')\n\n/** @type {PropertyDescriptor} */\nconst staticPropertyDescriptors = {\n  enumerable: true,\n  writable: false,\n  configurable: false\n}\n\n/**\n * @see https://w3c.github.io/FileAPI/#readOperation\n * @param {import('./filereader').FileReader} fr\n * @param {import('buffer').Blob} blob\n * @param {string} type\n * @param {string?} encodingName\n */\nfunction readOperation (fr, blob, type, encodingName) {\n  // 1. If fr’s state is \"loading\", throw an InvalidStateError\n  //    DOMException.\n  if (fr[kState] === 'loading') {\n    throw new DOMException('Invalid state', 'InvalidStateError')\n  }\n\n  // 2. Set fr’s state to \"loading\".\n  fr[kState] = 'loading'\n\n  // 3. Set fr’s result to null.\n  fr[kResult] = null\n\n  // 4. Set fr’s error to null.\n  fr[kError] = null\n\n  // 5. Let stream be the result of calling get stream on blob.\n  /** @type {import('stream/web').ReadableStream} */\n  const stream = blob.stream()\n\n  // 6. Let reader be the result of getting a reader from stream.\n  const reader = stream.getReader()\n\n  // 7. Let bytes be an empty byte sequence.\n  /** @type {Uint8Array[]} */\n  const bytes = []\n\n  // 8. Let chunkPromise be the result of reading a chunk from\n  //    stream with reader.\n  let chunkPromise = reader.read()\n\n  // 9. Let isFirstChunk be true.\n  let isFirstChunk = true\n\n  // 10. In parallel, while true:\n  // Note: \"In parallel\" just means non-blocking\n  // Note 2: readOperation itself cannot be async as double\n  // reading the body would then reject the promise, instead\n  // of throwing an error.\n  ;(async () => {\n    while (!fr[kAborted]) {\n      // 1. Wait for chunkPromise to be fulfilled or rejected.\n      try {\n        const { done, value } = await chunkPromise\n\n        // 2. If chunkPromise is fulfilled, and isFirstChunk is\n        //    true, queue a task to fire a progress event called\n        //    loadstart at fr.\n        if (isFirstChunk && !fr[kAborted]) {\n          queueMicrotask(() => {\n            fireAProgressEvent('loadstart', fr)\n          })\n        }\n\n        // 3. Set isFirstChunk to false.\n        isFirstChunk = false\n\n        // 4. If chunkPromise is fulfilled with an object whose\n        //    done property is false and whose value property is\n        //    a Uint8Array object, run these steps:\n        if (!done && types.isUint8Array(value)) {\n          // 1. Let bs be the byte sequence represented by the\n          //    Uint8Array object.\n\n          // 2. Append bs to bytes.\n          bytes.push(value)\n\n          // 3. If roughly 50ms have passed since these steps\n          //    were last invoked, queue a task to fire a\n          //    progress event called progress at fr.\n          if (\n            (\n              fr[kLastProgressEventFired] === undefined ||\n              Date.now() - fr[kLastProgressEventFired] >= 50\n            ) &&\n            !fr[kAborted]\n          ) {\n            fr[kLastProgressEventFired] = Date.now()\n            queueMicrotask(() => {\n              fireAProgressEvent('progress', fr)\n            })\n          }\n\n          // 4. Set chunkPromise to the result of reading a\n          //    chunk from stream with reader.\n          chunkPromise = reader.read()\n        } else if (done) {\n          // 5. Otherwise, if chunkPromise is fulfilled with an\n          //    object whose done property is true, queue a task\n          //    to run the following steps and abort this algorithm:\n          queueMicrotask(() => {\n            // 1. Set fr’s state to \"done\".\n            fr[kState] = 'done'\n\n            // 2. Let result be the result of package data given\n            //    bytes, type, blob’s type, and encodingName.\n            try {\n              const result = packageData(bytes, type, blob.type, encodingName)\n\n              // 4. Else:\n\n              if (fr[kAborted]) {\n                return\n              }\n\n              // 1. Set fr’s result to result.\n              fr[kResult] = result\n\n              // 2. Fire a progress event called load at the fr.\n              fireAProgressEvent('load', fr)\n            } catch (error) {\n              // 3. If package data threw an exception error:\n\n              // 1. Set fr’s error to error.\n              fr[kError] = error\n\n              // 2. Fire a progress event called error at fr.\n              fireAProgressEvent('error', fr)\n            }\n\n            // 5. If fr’s state is not \"loading\", fire a progress\n            //    event called loadend at the fr.\n            if (fr[kState] !== 'loading') {\n              fireAProgressEvent('loadend', fr)\n            }\n          })\n\n          break\n        }\n      } catch (error) {\n        if (fr[kAborted]) {\n          return\n        }\n\n        // 6. Otherwise, if chunkPromise is rejected with an\n        //    error error, queue a task to run the following\n        //    steps and abort this algorithm:\n        queueMicrotask(() => {\n          // 1. Set fr’s state to \"done\".\n          fr[kState] = 'done'\n\n          // 2. Set fr’s error to error.\n          fr[kError] = error\n\n          // 3. Fire a progress event called error at fr.\n          fireAProgressEvent('error', fr)\n\n          // 4. If fr’s state is not \"loading\", fire a progress\n          //    event called loadend at fr.\n          if (fr[kState] !== 'loading') {\n            fireAProgressEvent('loadend', fr)\n          }\n        })\n\n        break\n      }\n    }\n  })()\n}\n\n/**\n * @see https://w3c.github.io/FileAPI/#fire-a-progress-event\n * @see https://dom.spec.whatwg.org/#concept-event-fire\n * @param {string} e The name of the event\n * @param {import('./filereader').FileReader} reader\n */\nfunction fireAProgressEvent (e, reader) {\n  // The progress event e does not bubble. e.bubbles must be false\n  // The progress event e is NOT cancelable. e.cancelable must be false\n  const event = new ProgressEvent(e, {\n    bubbles: false,\n    cancelable: false\n  })\n\n  reader.dispatchEvent(event)\n}\n\n/**\n * @see https://w3c.github.io/FileAPI/#blob-package-data\n * @param {Uint8Array[]} bytes\n * @param {string} type\n * @param {string?} mimeType\n * @param {string?} encodingName\n */\nfunction packageData (bytes, type, mimeType, encodingName) {\n  // 1. A Blob has an associated package data algorithm, given\n  //    bytes, a type, a optional mimeType, and a optional\n  //    encodingName, which switches on type and runs the\n  //    associated steps:\n\n  switch (type) {\n    case 'DataURL': {\n      // 1. Return bytes as a DataURL [RFC2397] subject to\n      //    the considerations below:\n      //  * Use mimeType as part of the Data URL if it is\n      //    available in keeping with the Data URL\n      //    specification [RFC2397].\n      //  * If mimeType is not available return a Data URL\n      //    without a media-type. [RFC2397].\n\n      // https://datatracker.ietf.org/doc/html/rfc2397#section-3\n      // dataurl    := \"data:\" [ mediatype ] [ \";base64\" ] \",\" data\n      // mediatype  := [ type \"/\" subtype ] *( \";\" parameter )\n      // data       := *urlchar\n      // parameter  := attribute \"=\" value\n      let dataURL = 'data:'\n\n      const parsed = parseMIMEType(mimeType || 'application/octet-stream')\n\n      if (parsed !== 'failure') {\n        dataURL += serializeAMimeType(parsed)\n      }\n\n      dataURL += ';base64,'\n\n      const decoder = new StringDecoder('latin1')\n\n      for (const chunk of bytes) {\n        dataURL += btoa(decoder.write(chunk))\n      }\n\n      dataURL += btoa(decoder.end())\n\n      return dataURL\n    }\n    case 'Text': {\n      // 1. Let encoding be failure\n      let encoding = 'failure'\n\n      // 2. If the encodingName is present, set encoding to the\n      //    result of getting an encoding from encodingName.\n      if (encodingName) {\n        encoding = getEncoding(encodingName)\n      }\n\n      // 3. If encoding is failure, and mimeType is present:\n      if (encoding === 'failure' && mimeType) {\n        // 1. Let type be the result of parse a MIME type\n        //    given mimeType.\n        const type = parseMIMEType(mimeType)\n\n        // 2. If type is not failure, set encoding to the result\n        //    of getting an encoding from type’s parameters[\"charset\"].\n        if (type !== 'failure') {\n          encoding = getEncoding(type.parameters.get('charset'))\n        }\n      }\n\n      // 4. If encoding is failure, then set encoding to UTF-8.\n      if (encoding === 'failure') {\n        encoding = 'UTF-8'\n      }\n\n      // 5. Decode bytes using fallback encoding encoding, and\n      //    return the result.\n      return decode(bytes, encoding)\n    }\n    case 'ArrayBuffer': {\n      // Return a new ArrayBuffer whose contents are bytes.\n      const sequence = combineByteSequences(bytes)\n\n      return sequence.buffer\n    }\n    case 'BinaryString': {\n      // Return bytes as a binary string, in which every byte\n      //  is represented by a code unit of equal value [0..255].\n      let binaryString = ''\n\n      const decoder = new StringDecoder('latin1')\n\n      for (const chunk of bytes) {\n        binaryString += decoder.write(chunk)\n      }\n\n      binaryString += decoder.end()\n\n      return binaryString\n    }\n  }\n}\n\n/**\n * @see https://encoding.spec.whatwg.org/#decode\n * @param {Uint8Array[]} ioQueue\n * @param {string} encoding\n */\nfunction decode (ioQueue, encoding) {\n  const bytes = combineByteSequences(ioQueue)\n\n  // 1. Let BOMEncoding be the result of BOM sniffing ioQueue.\n  const BOMEncoding = BOMSniffing(bytes)\n\n  let slice = 0\n\n  // 2. If BOMEncoding is non-null:\n  if (BOMEncoding !== null) {\n    // 1. Set encoding to BOMEncoding.\n    encoding = BOMEncoding\n\n    // 2. Read three bytes from ioQueue, if BOMEncoding is\n    //    UTF-8; otherwise read two bytes.\n    //    (Do nothing with those bytes.)\n    slice = BOMEncoding === 'UTF-8' ? 3 : 2\n  }\n\n  // 3. Process a queue with an instance of encoding’s\n  //    decoder, ioQueue, output, and \"replacement\".\n\n  // 4. Return output.\n\n  const sliced = bytes.slice(slice)\n  return new TextDecoder(encoding).decode(sliced)\n}\n\n/**\n * @see https://encoding.spec.whatwg.org/#bom-sniff\n * @param {Uint8Array} ioQueue\n */\nfunction BOMSniffing (ioQueue) {\n  // 1. Let BOM be the result of peeking 3 bytes from ioQueue,\n  //    converted to a byte sequence.\n  const [a, b, c] = ioQueue\n\n  // 2. For each of the rows in the table below, starting with\n  //    the first one and going down, if BOM starts with the\n  //    bytes given in the first column, then return the\n  //    encoding given in the cell in the second column of that\n  //    row. Otherwise, return null.\n  if (a === 0xEF && b === 0xBB && c === 0xBF) {\n    return 'UTF-8'\n  } else if (a === 0xFE && b === 0xFF) {\n    return 'UTF-16BE'\n  } else if (a === 0xFF && b === 0xFE) {\n    return 'UTF-16LE'\n  }\n\n  return null\n}\n\n/**\n * @param {Uint8Array[]} sequences\n */\nfunction combineByteSequences (sequences) {\n  const size = sequences.reduce((a, b) => {\n    return a + b.byteLength\n  }, 0)\n\n  let offset = 0\n\n  return sequences.reduce((a, b) => {\n    a.set(b, offset)\n    offset += b.byteLength\n    return a\n  }, new Uint8Array(size))\n}\n\nmodule.exports = {\n  staticPropertyDescriptors,\n  readOperation,\n  fireAProgressEvent\n}\n","'use strict'\n\n// We include a version number for the Dispatcher API. In case of breaking changes,\n// this version number must be increased to avoid conflicts.\nconst globalDispatcher = Symbol.for('undici.globalDispatcher.1')\nconst { InvalidArgumentError } = require('./core/errors')\nconst Agent = require('./agent')\n\nif (getGlobalDispatcher() === undefined) {\n  setGlobalDispatcher(new Agent())\n}\n\nfunction setGlobalDispatcher (agent) {\n  if (!agent || typeof agent.dispatch !== 'function') {\n    throw new InvalidArgumentError('Argument agent must implement Agent')\n  }\n  Object.defineProperty(globalThis, globalDispatcher, {\n    value: agent,\n    writable: true,\n    enumerable: false,\n    configurable: false\n  })\n}\n\nfunction getGlobalDispatcher () {\n  return globalThis[globalDispatcher]\n}\n\nmodule.exports = {\n  setGlobalDispatcher,\n  getGlobalDispatcher\n}\n","'use strict'\n\nmodule.exports = class DecoratorHandler {\n  constructor (handler) {\n    this.handler = handler\n  }\n\n  onConnect (...args) {\n    return this.handler.onConnect(...args)\n  }\n\n  onError (...args) {\n    return this.handler.onError(...args)\n  }\n\n  onUpgrade (...args) {\n    return this.handler.onUpgrade(...args)\n  }\n\n  onHeaders (...args) {\n    return this.handler.onHeaders(...args)\n  }\n\n  onData (...args) {\n    return this.handler.onData(...args)\n  }\n\n  onComplete (...args) {\n    return this.handler.onComplete(...args)\n  }\n\n  onBodySent (...args) {\n    return this.handler.onBodySent(...args)\n  }\n}\n","'use strict'\n\nconst util = require('../core/util')\nconst { kBodyUsed } = require('../core/symbols')\nconst assert = require('assert')\nconst { InvalidArgumentError } = require('../core/errors')\nconst EE = require('events')\n\nconst redirectableStatusCodes = [300, 301, 302, 303, 307, 308]\n\nconst kBody = Symbol('body')\n\nclass BodyAsyncIterable {\n  constructor (body) {\n    this[kBody] = body\n    this[kBodyUsed] = false\n  }\n\n  async * [Symbol.asyncIterator] () {\n    assert(!this[kBodyUsed], 'disturbed')\n    this[kBodyUsed] = true\n    yield * this[kBody]\n  }\n}\n\nclass RedirectHandler {\n  constructor (dispatch, maxRedirections, opts, handler) {\n    if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {\n      throw new InvalidArgumentError('maxRedirections must be a positive number')\n    }\n\n    util.validateHandler(handler, opts.method, opts.upgrade)\n\n    this.dispatch = dispatch\n    this.location = null\n    this.abort = null\n    this.opts = { ...opts, maxRedirections: 0 } // opts must be a copy\n    this.maxRedirections = maxRedirections\n    this.handler = handler\n    this.history = []\n\n    if (util.isStream(this.opts.body)) {\n      // TODO (fix): Provide some way for the user to cache the file to e.g. /tmp\n      // so that it can be dispatched again?\n      // TODO (fix): Do we need 100-expect support to provide a way to do this properly?\n      if (util.bodyLength(this.opts.body) === 0) {\n        this.opts.body\n          .on('data', function () {\n            assert(false)\n          })\n      }\n\n      if (typeof this.opts.body.readableDidRead !== 'boolean') {\n        this.opts.body[kBodyUsed] = false\n        EE.prototype.on.call(this.opts.body, 'data', function () {\n          this[kBodyUsed] = true\n        })\n      }\n    } else if (this.opts.body && typeof this.opts.body.pipeTo === 'function') {\n      // TODO (fix): We can't access ReadableStream internal state\n      // to determine whether or not it has been disturbed. This is just\n      // a workaround.\n      this.opts.body = new BodyAsyncIterable(this.opts.body)\n    } else if (\n      this.opts.body &&\n      typeof this.opts.body !== 'string' &&\n      !ArrayBuffer.isView(this.opts.body) &&\n      util.isIterable(this.opts.body)\n    ) {\n      // TODO: Should we allow re-using iterable if !this.opts.idempotent\n      // or through some other flag?\n      this.opts.body = new BodyAsyncIterable(this.opts.body)\n    }\n  }\n\n  onConnect (abort) {\n    this.abort = abort\n    this.handler.onConnect(abort, { history: this.history })\n  }\n\n  onUpgrade (statusCode, headers, socket) {\n    this.handler.onUpgrade(statusCode, headers, socket)\n  }\n\n  onError (error) {\n    this.handler.onError(error)\n  }\n\n  onHeaders (statusCode, headers, resume, statusText) {\n    this.location = this.history.length >= this.maxRedirections || util.isDisturbed(this.opts.body)\n      ? null\n      : parseLocation(statusCode, headers)\n\n    if (this.opts.origin) {\n      this.history.push(new URL(this.opts.path, this.opts.origin))\n    }\n\n    if (!this.location) {\n      return this.handler.onHeaders(statusCode, headers, resume, statusText)\n    }\n\n    const { origin, pathname, search } = util.parseURL(new URL(this.location, this.opts.origin && new URL(this.opts.path, this.opts.origin)))\n    const path = search ? `${pathname}${search}` : pathname\n\n    // Remove headers referring to the original URL.\n    // By default it is Host only, unless it's a 303 (see below), which removes also all Content-* headers.\n    // https://tools.ietf.org/html/rfc7231#section-6.4\n    this.opts.headers = cleanRequestHeaders(this.opts.headers, statusCode === 303, this.opts.origin !== origin)\n    this.opts.path = path\n    this.opts.origin = origin\n    this.opts.maxRedirections = 0\n    this.opts.query = null\n\n    // https://tools.ietf.org/html/rfc7231#section-6.4.4\n    // In case of HTTP 303, always replace method to be either HEAD or GET\n    if (statusCode === 303 && this.opts.method !== 'HEAD') {\n      this.opts.method = 'GET'\n      this.opts.body = null\n    }\n  }\n\n  onData (chunk) {\n    if (this.location) {\n      /*\n        https://tools.ietf.org/html/rfc7231#section-6.4\n\n        TLDR: undici always ignores 3xx response bodies.\n\n        Redirection is used to serve the requested resource from another URL, so it is assumes that\n        no body is generated (and thus can be ignored). Even though generating a body is not prohibited.\n\n        For status 301, 302, 303, 307 and 308 (the latter from RFC 7238), the specs mention that the body usually\n        (which means it's optional and not mandated) contain just an hyperlink to the value of\n        the Location response header, so the body can be ignored safely.\n\n        For status 300, which is \"Multiple Choices\", the spec mentions both generating a Location\n        response header AND a response body with the other possible location to follow.\n        Since the spec explicitily chooses not to specify a format for such body and leave it to\n        servers and browsers implementors, we ignore the body as there is no specified way to eventually parse it.\n      */\n    } else {\n      return this.handler.onData(chunk)\n    }\n  }\n\n  onComplete (trailers) {\n    if (this.location) {\n      /*\n        https://tools.ietf.org/html/rfc7231#section-6.4\n\n        TLDR: undici always ignores 3xx response trailers as they are not expected in case of redirections\n        and neither are useful if present.\n\n        See comment on onData method above for more detailed informations.\n      */\n\n      this.location = null\n      this.abort = null\n\n      this.dispatch(this.opts, this)\n    } else {\n      this.handler.onComplete(trailers)\n    }\n  }\n\n  onBodySent (chunk) {\n    if (this.handler.onBodySent) {\n      this.handler.onBodySent(chunk)\n    }\n  }\n}\n\nfunction parseLocation (statusCode, headers) {\n  if (redirectableStatusCodes.indexOf(statusCode) === -1) {\n    return null\n  }\n\n  for (let i = 0; i < headers.length; i += 2) {\n    if (headers[i].toString().toLowerCase() === 'location') {\n      return headers[i + 1]\n    }\n  }\n}\n\n// https://tools.ietf.org/html/rfc7231#section-6.4.4\nfunction shouldRemoveHeader (header, removeContent, unknownOrigin) {\n  if (header.length === 4) {\n    return util.headerNameToString(header) === 'host'\n  }\n  if (removeContent && util.headerNameToString(header).startsWith('content-')) {\n    return true\n  }\n  if (unknownOrigin && (header.length === 13 || header.length === 6 || header.length === 19)) {\n    const name = util.headerNameToString(header)\n    return name === 'authorization' || name === 'cookie' || name === 'proxy-authorization'\n  }\n  return false\n}\n\n// https://tools.ietf.org/html/rfc7231#section-6.4\nfunction cleanRequestHeaders (headers, removeContent, unknownOrigin) {\n  const ret = []\n  if (Array.isArray(headers)) {\n    for (let i = 0; i < headers.length; i += 2) {\n      if (!shouldRemoveHeader(headers[i], removeContent, unknownOrigin)) {\n        ret.push(headers[i], headers[i + 1])\n      }\n    }\n  } else if (headers && typeof headers === 'object') {\n    for (const key of Object.keys(headers)) {\n      if (!shouldRemoveHeader(key, removeContent, unknownOrigin)) {\n        ret.push(key, headers[key])\n      }\n    }\n  } else {\n    assert(headers == null, 'headers must be an object or an array')\n  }\n  return ret\n}\n\nmodule.exports = RedirectHandler\n","const assert = require('assert')\n\nconst { kRetryHandlerDefaultRetry } = require('../core/symbols')\nconst { RequestRetryError } = require('../core/errors')\nconst { isDisturbed, parseHeaders, parseRangeHeader } = require('../core/util')\n\nfunction calculateRetryAfterHeader (retryAfter) {\n  const current = Date.now()\n  const diff = new Date(retryAfter).getTime() - current\n\n  return diff\n}\n\nclass RetryHandler {\n  constructor (opts, handlers) {\n    const { retryOptions, ...dispatchOpts } = opts\n    const {\n      // Retry scoped\n      retry: retryFn,\n      maxRetries,\n      maxTimeout,\n      minTimeout,\n      timeoutFactor,\n      // Response scoped\n      methods,\n      errorCodes,\n      retryAfter,\n      statusCodes\n    } = retryOptions ?? {}\n\n    this.dispatch = handlers.dispatch\n    this.handler = handlers.handler\n    this.opts = dispatchOpts\n    this.abort = null\n    this.aborted = false\n    this.retryOpts = {\n      retry: retryFn ?? RetryHandler[kRetryHandlerDefaultRetry],\n      retryAfter: retryAfter ?? true,\n      maxTimeout: maxTimeout ?? 30 * 1000, // 30s,\n      timeout: minTimeout ?? 500, // .5s\n      timeoutFactor: timeoutFactor ?? 2,\n      maxRetries: maxRetries ?? 5,\n      // What errors we should retry\n      methods: methods ?? ['GET', 'HEAD', 'OPTIONS', 'PUT', 'DELETE', 'TRACE'],\n      // Indicates which errors to retry\n      statusCodes: statusCodes ?? [500, 502, 503, 504, 429],\n      // List of errors to retry\n      errorCodes: errorCodes ?? [\n        'ECONNRESET',\n        'ECONNREFUSED',\n        'ENOTFOUND',\n        'ENETDOWN',\n        'ENETUNREACH',\n        'EHOSTDOWN',\n        'EHOSTUNREACH',\n        'EPIPE'\n      ]\n    }\n\n    this.retryCount = 0\n    this.start = 0\n    this.end = null\n    this.etag = null\n    this.resume = null\n\n    // Handle possible onConnect duplication\n    this.handler.onConnect(reason => {\n      this.aborted = true\n      if (this.abort) {\n        this.abort(reason)\n      } else {\n        this.reason = reason\n      }\n    })\n  }\n\n  onRequestSent () {\n    if (this.handler.onRequestSent) {\n      this.handler.onRequestSent()\n    }\n  }\n\n  onUpgrade (statusCode, headers, socket) {\n    if (this.handler.onUpgrade) {\n      this.handler.onUpgrade(statusCode, headers, socket)\n    }\n  }\n\n  onConnect (abort) {\n    if (this.aborted) {\n      abort(this.reason)\n    } else {\n      this.abort = abort\n    }\n  }\n\n  onBodySent (chunk) {\n    if (this.handler.onBodySent) return this.handler.onBodySent(chunk)\n  }\n\n  static [kRetryHandlerDefaultRetry] (err, { state, opts }, cb) {\n    const { statusCode, code, headers } = err\n    const { method, retryOptions } = opts\n    const {\n      maxRetries,\n      timeout,\n      maxTimeout,\n      timeoutFactor,\n      statusCodes,\n      errorCodes,\n      methods\n    } = retryOptions\n    let { counter, currentTimeout } = state\n\n    currentTimeout =\n      currentTimeout != null && currentTimeout > 0 ? currentTimeout : timeout\n\n    // Any code that is not a Undici's originated and allowed to retry\n    if (\n      code &&\n      code !== 'UND_ERR_REQ_RETRY' &&\n      code !== 'UND_ERR_SOCKET' &&\n      !errorCodes.includes(code)\n    ) {\n      cb(err)\n      return\n    }\n\n    // If a set of method are provided and the current method is not in the list\n    if (Array.isArray(methods) && !methods.includes(method)) {\n      cb(err)\n      return\n    }\n\n    // If a set of status code are provided and the current status code is not in the list\n    if (\n      statusCode != null &&\n      Array.isArray(statusCodes) &&\n      !statusCodes.includes(statusCode)\n    ) {\n      cb(err)\n      return\n    }\n\n    // If we reached the max number of retries\n    if (counter > maxRetries) {\n      cb(err)\n      return\n    }\n\n    let retryAfterHeader = headers != null && headers['retry-after']\n    if (retryAfterHeader) {\n      retryAfterHeader = Number(retryAfterHeader)\n      retryAfterHeader = isNaN(retryAfterHeader)\n        ? calculateRetryAfterHeader(retryAfterHeader)\n        : retryAfterHeader * 1e3 // Retry-After is in seconds\n    }\n\n    const retryTimeout =\n      retryAfterHeader > 0\n        ? Math.min(retryAfterHeader, maxTimeout)\n        : Math.min(currentTimeout * timeoutFactor ** counter, maxTimeout)\n\n    state.currentTimeout = retryTimeout\n\n    setTimeout(() => cb(null), retryTimeout)\n  }\n\n  onHeaders (statusCode, rawHeaders, resume, statusMessage) {\n    const headers = parseHeaders(rawHeaders)\n\n    this.retryCount += 1\n\n    if (statusCode >= 300) {\n      this.abort(\n        new RequestRetryError('Request failed', statusCode, {\n          headers,\n          count: this.retryCount\n        })\n      )\n      return false\n    }\n\n    // Checkpoint for resume from where we left it\n    if (this.resume != null) {\n      this.resume = null\n\n      if (statusCode !== 206) {\n        return true\n      }\n\n      const contentRange = parseRangeHeader(headers['content-range'])\n      // If no content range\n      if (!contentRange) {\n        this.abort(\n          new RequestRetryError('Content-Range mismatch', statusCode, {\n            headers,\n            count: this.retryCount\n          })\n        )\n        return false\n      }\n\n      // Let's start with a weak etag check\n      if (this.etag != null && this.etag !== headers.etag) {\n        this.abort(\n          new RequestRetryError('ETag mismatch', statusCode, {\n            headers,\n            count: this.retryCount\n          })\n        )\n        return false\n      }\n\n      const { start, size, end = size } = contentRange\n\n      assert(this.start === start, 'content-range mismatch')\n      assert(this.end == null || this.end === end, 'content-range mismatch')\n\n      this.resume = resume\n      return true\n    }\n\n    if (this.end == null) {\n      if (statusCode === 206) {\n        // First time we receive 206\n        const range = parseRangeHeader(headers['content-range'])\n\n        if (range == null) {\n          return this.handler.onHeaders(\n            statusCode,\n            rawHeaders,\n            resume,\n            statusMessage\n          )\n        }\n\n        const { start, size, end = size } = range\n\n        assert(\n          start != null && Number.isFinite(start) && this.start !== start,\n          'content-range mismatch'\n        )\n        assert(Number.isFinite(start))\n        assert(\n          end != null && Number.isFinite(end) && this.end !== end,\n          'invalid content-length'\n        )\n\n        this.start = start\n        this.end = end\n      }\n\n      // We make our best to checkpoint the body for further range headers\n      if (this.end == null) {\n        const contentLength = headers['content-length']\n        this.end = contentLength != null ? Number(contentLength) : null\n      }\n\n      assert(Number.isFinite(this.start))\n      assert(\n        this.end == null || Number.isFinite(this.end),\n        'invalid content-length'\n      )\n\n      this.resume = resume\n      this.etag = headers.etag != null ? headers.etag : null\n\n      return this.handler.onHeaders(\n        statusCode,\n        rawHeaders,\n        resume,\n        statusMessage\n      )\n    }\n\n    const err = new RequestRetryError('Request failed', statusCode, {\n      headers,\n      count: this.retryCount\n    })\n\n    this.abort(err)\n\n    return false\n  }\n\n  onData (chunk) {\n    this.start += chunk.length\n\n    return this.handler.onData(chunk)\n  }\n\n  onComplete (rawTrailers) {\n    this.retryCount = 0\n    return this.handler.onComplete(rawTrailers)\n  }\n\n  onError (err) {\n    if (this.aborted || isDisturbed(this.opts.body)) {\n      return this.handler.onError(err)\n    }\n\n    this.retryOpts.retry(\n      err,\n      {\n        state: { counter: this.retryCount++, currentTimeout: this.retryAfter },\n        opts: { retryOptions: this.retryOpts, ...this.opts }\n      },\n      onRetry.bind(this)\n    )\n\n    function onRetry (err) {\n      if (err != null || this.aborted || isDisturbed(this.opts.body)) {\n        return this.handler.onError(err)\n      }\n\n      if (this.start !== 0) {\n        this.opts = {\n          ...this.opts,\n          headers: {\n            ...this.opts.headers,\n            range: `bytes=${this.start}-${this.end ?? ''}`\n          }\n        }\n      }\n\n      try {\n        this.dispatch(this.opts, this)\n      } catch (err) {\n        this.handler.onError(err)\n      }\n    }\n  }\n}\n\nmodule.exports = RetryHandler\n","'use strict'\n\nconst RedirectHandler = require('../handler/RedirectHandler')\n\nfunction createRedirectInterceptor ({ maxRedirections: defaultMaxRedirections }) {\n  return (dispatch) => {\n    return function Intercept (opts, handler) {\n      const { maxRedirections = defaultMaxRedirections } = opts\n\n      if (!maxRedirections) {\n        return dispatch(opts, handler)\n      }\n\n      const redirectHandler = new RedirectHandler(dispatch, maxRedirections, opts, handler)\n      opts = { ...opts, maxRedirections: 0 } // Stop sub dispatcher from also redirecting.\n      return dispatch(opts, redirectHandler)\n    }\n  }\n}\n\nmodule.exports = createRedirectInterceptor\n",null,"module.exports = ''\n","module.exports = ''\n",null,"'use strict'\n\nconst { kClients } = require('../core/symbols')\nconst Agent = require('../agent')\nconst {\n  kAgent,\n  kMockAgentSet,\n  kMockAgentGet,\n  kDispatches,\n  kIsMockActive,\n  kNetConnect,\n  kGetNetConnect,\n  kOptions,\n  kFactory\n} = require('./mock-symbols')\nconst MockClient = require('./mock-client')\nconst MockPool = require('./mock-pool')\nconst { matchValue, buildMockOptions } = require('./mock-utils')\nconst { InvalidArgumentError, UndiciError } = require('../core/errors')\nconst Dispatcher = require('../dispatcher')\nconst Pluralizer = require('./pluralizer')\nconst PendingInterceptorsFormatter = require('./pending-interceptors-formatter')\n\nclass FakeWeakRef {\n  constructor (value) {\n    this.value = value\n  }\n\n  deref () {\n    return this.value\n  }\n}\n\nclass MockAgent extends Dispatcher {\n  constructor (opts) {\n    super(opts)\n\n    this[kNetConnect] = true\n    this[kIsMockActive] = true\n\n    // Instantiate Agent and encapsulate\n    if ((opts && opts.agent && typeof opts.agent.dispatch !== 'function')) {\n      throw new InvalidArgumentError('Argument opts.agent must implement Agent')\n    }\n    const agent = opts && opts.agent ? opts.agent : new Agent(opts)\n    this[kAgent] = agent\n\n    this[kClients] = agent[kClients]\n    this[kOptions] = buildMockOptions(opts)\n  }\n\n  get (origin) {\n    let dispatcher = this[kMockAgentGet](origin)\n\n    if (!dispatcher) {\n      dispatcher = this[kFactory](origin)\n      this[kMockAgentSet](origin, dispatcher)\n    }\n    return dispatcher\n  }\n\n  dispatch (opts, handler) {\n    // Call MockAgent.get to perform additional setup before dispatching as normal\n    this.get(opts.origin)\n    return this[kAgent].dispatch(opts, handler)\n  }\n\n  async close () {\n    await this[kAgent].close()\n    this[kClients].clear()\n  }\n\n  deactivate () {\n    this[kIsMockActive] = false\n  }\n\n  activate () {\n    this[kIsMockActive] = true\n  }\n\n  enableNetConnect (matcher) {\n    if (typeof matcher === 'string' || typeof matcher === 'function' || matcher instanceof RegExp) {\n      if (Array.isArray(this[kNetConnect])) {\n        this[kNetConnect].push(matcher)\n      } else {\n        this[kNetConnect] = [matcher]\n      }\n    } else if (typeof matcher === 'undefined') {\n      this[kNetConnect] = true\n    } else {\n      throw new InvalidArgumentError('Unsupported matcher. Must be one of String|Function|RegExp.')\n    }\n  }\n\n  disableNetConnect () {\n    this[kNetConnect] = false\n  }\n\n  // This is required to bypass issues caused by using global symbols - see:\n  // https://github.com/nodejs/undici/issues/1447\n  get isMockActive () {\n    return this[kIsMockActive]\n  }\n\n  [kMockAgentSet] (origin, dispatcher) {\n    this[kClients].set(origin, new FakeWeakRef(dispatcher))\n  }\n\n  [kFactory] (origin) {\n    const mockOptions = Object.assign({ agent: this }, this[kOptions])\n    return this[kOptions] && this[kOptions].connections === 1\n      ? new MockClient(origin, mockOptions)\n      : new MockPool(origin, mockOptions)\n  }\n\n  [kMockAgentGet] (origin) {\n    // First check if we can immediately find it\n    const ref = this[kClients].get(origin)\n    if (ref) {\n      return ref.deref()\n    }\n\n    // If the origin is not a string create a dummy parent pool and return to user\n    if (typeof origin !== 'string') {\n      const dispatcher = this[kFactory]('http://localhost:9999')\n      this[kMockAgentSet](origin, dispatcher)\n      return dispatcher\n    }\n\n    // If we match, create a pool and assign the same dispatches\n    for (const [keyMatcher, nonExplicitRef] of Array.from(this[kClients])) {\n      const nonExplicitDispatcher = nonExplicitRef.deref()\n      if (nonExplicitDispatcher && typeof keyMatcher !== 'string' && matchValue(keyMatcher, origin)) {\n        const dispatcher = this[kFactory](origin)\n        this[kMockAgentSet](origin, dispatcher)\n        dispatcher[kDispatches] = nonExplicitDispatcher[kDispatches]\n        return dispatcher\n      }\n    }\n  }\n\n  [kGetNetConnect] () {\n    return this[kNetConnect]\n  }\n\n  pendingInterceptors () {\n    const mockAgentClients = this[kClients]\n\n    return Array.from(mockAgentClients.entries())\n      .flatMap(([origin, scope]) => scope.deref()[kDispatches].map(dispatch => ({ ...dispatch, origin })))\n      .filter(({ pending }) => pending)\n  }\n\n  assertNoPendingInterceptors ({ pendingInterceptorsFormatter = new PendingInterceptorsFormatter() } = {}) {\n    const pending = this.pendingInterceptors()\n\n    if (pending.length === 0) {\n      return\n    }\n\n    const pluralizer = new Pluralizer('interceptor', 'interceptors').pluralize(pending.length)\n\n    throw new UndiciError(`\n${pluralizer.count} ${pluralizer.noun} ${pluralizer.is} pending:\n\n${pendingInterceptorsFormatter.format(pending)}\n`.trim())\n  }\n}\n\nmodule.exports = MockAgent\n","'use strict'\n\nconst { promisify } = require('util')\nconst Client = require('../client')\nconst { buildMockDispatch } = require('./mock-utils')\nconst {\n  kDispatches,\n  kMockAgent,\n  kClose,\n  kOriginalClose,\n  kOrigin,\n  kOriginalDispatch,\n  kConnected\n} = require('./mock-symbols')\nconst { MockInterceptor } = require('./mock-interceptor')\nconst Symbols = require('../core/symbols')\nconst { InvalidArgumentError } = require('../core/errors')\n\n/**\n * MockClient provides an API that extends the Client to influence the mockDispatches.\n */\nclass MockClient extends Client {\n  constructor (origin, opts) {\n    super(origin, opts)\n\n    if (!opts || !opts.agent || typeof opts.agent.dispatch !== 'function') {\n      throw new InvalidArgumentError('Argument opts.agent must implement Agent')\n    }\n\n    this[kMockAgent] = opts.agent\n    this[kOrigin] = origin\n    this[kDispatches] = []\n    this[kConnected] = 1\n    this[kOriginalDispatch] = this.dispatch\n    this[kOriginalClose] = this.close.bind(this)\n\n    this.dispatch = buildMockDispatch.call(this)\n    this.close = this[kClose]\n  }\n\n  get [Symbols.kConnected] () {\n    return this[kConnected]\n  }\n\n  /**\n   * Sets up the base interceptor for mocking replies from undici.\n   */\n  intercept (opts) {\n    return new MockInterceptor(opts, this[kDispatches])\n  }\n\n  async [kClose] () {\n    await promisify(this[kOriginalClose])()\n    this[kConnected] = 0\n    this[kMockAgent][Symbols.kClients].delete(this[kOrigin])\n  }\n}\n\nmodule.exports = MockClient\n","'use strict'\n\nconst { UndiciError } = require('../core/errors')\n\nclass MockNotMatchedError extends UndiciError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, MockNotMatchedError)\n    this.name = 'MockNotMatchedError'\n    this.message = message || 'The request does not match any registered mock dispatches'\n    this.code = 'UND_MOCK_ERR_MOCK_NOT_MATCHED'\n  }\n}\n\nmodule.exports = {\n  MockNotMatchedError\n}\n","'use strict'\n\nconst { getResponseData, buildKey, addMockDispatch } = require('./mock-utils')\nconst {\n  kDispatches,\n  kDispatchKey,\n  kDefaultHeaders,\n  kDefaultTrailers,\n  kContentLength,\n  kMockDispatch\n} = require('./mock-symbols')\nconst { InvalidArgumentError } = require('../core/errors')\nconst { buildURL } = require('../core/util')\n\n/**\n * Defines the scope API for an interceptor reply\n */\nclass MockScope {\n  constructor (mockDispatch) {\n    this[kMockDispatch] = mockDispatch\n  }\n\n  /**\n   * Delay a reply by a set amount in ms.\n   */\n  delay (waitInMs) {\n    if (typeof waitInMs !== 'number' || !Number.isInteger(waitInMs) || waitInMs <= 0) {\n      throw new InvalidArgumentError('waitInMs must be a valid integer > 0')\n    }\n\n    this[kMockDispatch].delay = waitInMs\n    return this\n  }\n\n  /**\n   * For a defined reply, never mark as consumed.\n   */\n  persist () {\n    this[kMockDispatch].persist = true\n    return this\n  }\n\n  /**\n   * Allow one to define a reply for a set amount of matching requests.\n   */\n  times (repeatTimes) {\n    if (typeof repeatTimes !== 'number' || !Number.isInteger(repeatTimes) || repeatTimes <= 0) {\n      throw new InvalidArgumentError('repeatTimes must be a valid integer > 0')\n    }\n\n    this[kMockDispatch].times = repeatTimes\n    return this\n  }\n}\n\n/**\n * Defines an interceptor for a Mock\n */\nclass MockInterceptor {\n  constructor (opts, mockDispatches) {\n    if (typeof opts !== 'object') {\n      throw new InvalidArgumentError('opts must be an object')\n    }\n    if (typeof opts.path === 'undefined') {\n      throw new InvalidArgumentError('opts.path must be defined')\n    }\n    if (typeof opts.method === 'undefined') {\n      opts.method = 'GET'\n    }\n    // See https://github.com/nodejs/undici/issues/1245\n    // As per RFC 3986, clients are not supposed to send URI\n    // fragments to servers when they retrieve a document,\n    if (typeof opts.path === 'string') {\n      if (opts.query) {\n        opts.path = buildURL(opts.path, opts.query)\n      } else {\n        // Matches https://github.com/nodejs/undici/blob/main/lib/fetch/index.js#L1811\n        const parsedURL = new URL(opts.path, 'data://')\n        opts.path = parsedURL.pathname + parsedURL.search\n      }\n    }\n    if (typeof opts.method === 'string') {\n      opts.method = opts.method.toUpperCase()\n    }\n\n    this[kDispatchKey] = buildKey(opts)\n    this[kDispatches] = mockDispatches\n    this[kDefaultHeaders] = {}\n    this[kDefaultTrailers] = {}\n    this[kContentLength] = false\n  }\n\n  createMockScopeDispatchData (statusCode, data, responseOptions = {}) {\n    const responseData = getResponseData(data)\n    const contentLength = this[kContentLength] ? { 'content-length': responseData.length } : {}\n    const headers = { ...this[kDefaultHeaders], ...contentLength, ...responseOptions.headers }\n    const trailers = { ...this[kDefaultTrailers], ...responseOptions.trailers }\n\n    return { statusCode, data, headers, trailers }\n  }\n\n  validateReplyParameters (statusCode, data, responseOptions) {\n    if (typeof statusCode === 'undefined') {\n      throw new InvalidArgumentError('statusCode must be defined')\n    }\n    if (typeof data === 'undefined') {\n      throw new InvalidArgumentError('data must be defined')\n    }\n    if (typeof responseOptions !== 'object') {\n      throw new InvalidArgumentError('responseOptions must be an object')\n    }\n  }\n\n  /**\n   * Mock an undici request with a defined reply.\n   */\n  reply (replyData) {\n    // Values of reply aren't available right now as they\n    // can only be available when the reply callback is invoked.\n    if (typeof replyData === 'function') {\n      // We'll first wrap the provided callback in another function,\n      // this function will properly resolve the data from the callback\n      // when invoked.\n      const wrappedDefaultsCallback = (opts) => {\n        // Our reply options callback contains the parameter for statusCode, data and options.\n        const resolvedData = replyData(opts)\n\n        // Check if it is in the right format\n        if (typeof resolvedData !== 'object') {\n          throw new InvalidArgumentError('reply options callback must return an object')\n        }\n\n        const { statusCode, data = '', responseOptions = {} } = resolvedData\n        this.validateReplyParameters(statusCode, data, responseOptions)\n        // Since the values can be obtained immediately we return them\n        // from this higher order function that will be resolved later.\n        return {\n          ...this.createMockScopeDispatchData(statusCode, data, responseOptions)\n        }\n      }\n\n      // Add usual dispatch data, but this time set the data parameter to function that will eventually provide data.\n      const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], wrappedDefaultsCallback)\n      return new MockScope(newMockDispatch)\n    }\n\n    // We can have either one or three parameters, if we get here,\n    // we should have 1-3 parameters. So we spread the arguments of\n    // this function to obtain the parameters, since replyData will always\n    // just be the statusCode.\n    const [statusCode, data = '', responseOptions = {}] = [...arguments]\n    this.validateReplyParameters(statusCode, data, responseOptions)\n\n    // Send in-already provided data like usual\n    const dispatchData = this.createMockScopeDispatchData(statusCode, data, responseOptions)\n    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], dispatchData)\n    return new MockScope(newMockDispatch)\n  }\n\n  /**\n   * Mock an undici request with a defined error.\n   */\n  replyWithError (error) {\n    if (typeof error === 'undefined') {\n      throw new InvalidArgumentError('error must be defined')\n    }\n\n    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], { error })\n    return new MockScope(newMockDispatch)\n  }\n\n  /**\n   * Set default reply headers on the interceptor for subsequent replies\n   */\n  defaultReplyHeaders (headers) {\n    if (typeof headers === 'undefined') {\n      throw new InvalidArgumentError('headers must be defined')\n    }\n\n    this[kDefaultHeaders] = headers\n    return this\n  }\n\n  /**\n   * Set default reply trailers on the interceptor for subsequent replies\n   */\n  defaultReplyTrailers (trailers) {\n    if (typeof trailers === 'undefined') {\n      throw new InvalidArgumentError('trailers must be defined')\n    }\n\n    this[kDefaultTrailers] = trailers\n    return this\n  }\n\n  /**\n   * Set reply content length header for replies on the interceptor\n   */\n  replyContentLength () {\n    this[kContentLength] = true\n    return this\n  }\n}\n\nmodule.exports.MockInterceptor = MockInterceptor\nmodule.exports.MockScope = MockScope\n","'use strict'\n\nconst { promisify } = require('util')\nconst Pool = require('../pool')\nconst { buildMockDispatch } = require('./mock-utils')\nconst {\n  kDispatches,\n  kMockAgent,\n  kClose,\n  kOriginalClose,\n  kOrigin,\n  kOriginalDispatch,\n  kConnected\n} = require('./mock-symbols')\nconst { MockInterceptor } = require('./mock-interceptor')\nconst Symbols = require('../core/symbols')\nconst { InvalidArgumentError } = require('../core/errors')\n\n/**\n * MockPool provides an API that extends the Pool to influence the mockDispatches.\n */\nclass MockPool extends Pool {\n  constructor (origin, opts) {\n    super(origin, opts)\n\n    if (!opts || !opts.agent || typeof opts.agent.dispatch !== 'function') {\n      throw new InvalidArgumentError('Argument opts.agent must implement Agent')\n    }\n\n    this[kMockAgent] = opts.agent\n    this[kOrigin] = origin\n    this[kDispatches] = []\n    this[kConnected] = 1\n    this[kOriginalDispatch] = this.dispatch\n    this[kOriginalClose] = this.close.bind(this)\n\n    this.dispatch = buildMockDispatch.call(this)\n    this.close = this[kClose]\n  }\n\n  get [Symbols.kConnected] () {\n    return this[kConnected]\n  }\n\n  /**\n   * Sets up the base interceptor for mocking replies from undici.\n   */\n  intercept (opts) {\n    return new MockInterceptor(opts, this[kDispatches])\n  }\n\n  async [kClose] () {\n    await promisify(this[kOriginalClose])()\n    this[kConnected] = 0\n    this[kMockAgent][Symbols.kClients].delete(this[kOrigin])\n  }\n}\n\nmodule.exports = MockPool\n","'use strict'\n\nmodule.exports = {\n  kAgent: Symbol('agent'),\n  kOptions: Symbol('options'),\n  kFactory: Symbol('factory'),\n  kDispatches: Symbol('dispatches'),\n  kDispatchKey: Symbol('dispatch key'),\n  kDefaultHeaders: Symbol('default headers'),\n  kDefaultTrailers: Symbol('default trailers'),\n  kContentLength: Symbol('content length'),\n  kMockAgent: Symbol('mock agent'),\n  kMockAgentSet: Symbol('mock agent set'),\n  kMockAgentGet: Symbol('mock agent get'),\n  kMockDispatch: Symbol('mock dispatch'),\n  kClose: Symbol('close'),\n  kOriginalClose: Symbol('original agent close'),\n  kOrigin: Symbol('origin'),\n  kIsMockActive: Symbol('is mock active'),\n  kNetConnect: Symbol('net connect'),\n  kGetNetConnect: Symbol('get net connect'),\n  kConnected: Symbol('connected')\n}\n","'use strict'\n\nconst { MockNotMatchedError } = require('./mock-errors')\nconst {\n  kDispatches,\n  kMockAgent,\n  kOriginalDispatch,\n  kOrigin,\n  kGetNetConnect\n} = require('./mock-symbols')\nconst { buildURL, nop } = require('../core/util')\nconst { STATUS_CODES } = require('http')\nconst {\n  types: {\n    isPromise\n  }\n} = require('util')\n\nfunction matchValue (match, value) {\n  if (typeof match === 'string') {\n    return match === value\n  }\n  if (match instanceof RegExp) {\n    return match.test(value)\n  }\n  if (typeof match === 'function') {\n    return match(value) === true\n  }\n  return false\n}\n\nfunction lowerCaseEntries (headers) {\n  return Object.fromEntries(\n    Object.entries(headers).map(([headerName, headerValue]) => {\n      return [headerName.toLocaleLowerCase(), headerValue]\n    })\n  )\n}\n\n/**\n * @param {import('../../index').Headers|string[]|Record<string, string>} headers\n * @param {string} key\n */\nfunction getHeaderByName (headers, key) {\n  if (Array.isArray(headers)) {\n    for (let i = 0; i < headers.length; i += 2) {\n      if (headers[i].toLocaleLowerCase() === key.toLocaleLowerCase()) {\n        return headers[i + 1]\n      }\n    }\n\n    return undefined\n  } else if (typeof headers.get === 'function') {\n    return headers.get(key)\n  } else {\n    return lowerCaseEntries(headers)[key.toLocaleLowerCase()]\n  }\n}\n\n/** @param {string[]} headers */\nfunction buildHeadersFromArray (headers) { // fetch HeadersList\n  const clone = headers.slice()\n  const entries = []\n  for (let index = 0; index < clone.length; index += 2) {\n    entries.push([clone[index], clone[index + 1]])\n  }\n  return Object.fromEntries(entries)\n}\n\nfunction matchHeaders (mockDispatch, headers) {\n  if (typeof mockDispatch.headers === 'function') {\n    if (Array.isArray(headers)) { // fetch HeadersList\n      headers = buildHeadersFromArray(headers)\n    }\n    return mockDispatch.headers(headers ? lowerCaseEntries(headers) : {})\n  }\n  if (typeof mockDispatch.headers === 'undefined') {\n    return true\n  }\n  if (typeof headers !== 'object' || typeof mockDispatch.headers !== 'object') {\n    return false\n  }\n\n  for (const [matchHeaderName, matchHeaderValue] of Object.entries(mockDispatch.headers)) {\n    const headerValue = getHeaderByName(headers, matchHeaderName)\n\n    if (!matchValue(matchHeaderValue, headerValue)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction safeUrl (path) {\n  if (typeof path !== 'string') {\n    return path\n  }\n\n  const pathSegments = path.split('?')\n\n  if (pathSegments.length !== 2) {\n    return path\n  }\n\n  const qp = new URLSearchParams(pathSegments.pop())\n  qp.sort()\n  return [...pathSegments, qp.toString()].join('?')\n}\n\nfunction matchKey (mockDispatch, { path, method, body, headers }) {\n  const pathMatch = matchValue(mockDispatch.path, path)\n  const methodMatch = matchValue(mockDispatch.method, method)\n  const bodyMatch = typeof mockDispatch.body !== 'undefined' ? matchValue(mockDispatch.body, body) : true\n  const headersMatch = matchHeaders(mockDispatch, headers)\n  return pathMatch && methodMatch && bodyMatch && headersMatch\n}\n\nfunction getResponseData (data) {\n  if (Buffer.isBuffer(data)) {\n    return data\n  } else if (typeof data === 'object') {\n    return JSON.stringify(data)\n  } else {\n    return data.toString()\n  }\n}\n\nfunction getMockDispatch (mockDispatches, key) {\n  const basePath = key.query ? buildURL(key.path, key.query) : key.path\n  const resolvedPath = typeof basePath === 'string' ? safeUrl(basePath) : basePath\n\n  // Match path\n  let matchedMockDispatches = mockDispatches.filter(({ consumed }) => !consumed).filter(({ path }) => matchValue(safeUrl(path), resolvedPath))\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for path '${resolvedPath}'`)\n  }\n\n  // Match method\n  matchedMockDispatches = matchedMockDispatches.filter(({ method }) => matchValue(method, key.method))\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for method '${key.method}'`)\n  }\n\n  // Match body\n  matchedMockDispatches = matchedMockDispatches.filter(({ body }) => typeof body !== 'undefined' ? matchValue(body, key.body) : true)\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for body '${key.body}'`)\n  }\n\n  // Match headers\n  matchedMockDispatches = matchedMockDispatches.filter((mockDispatch) => matchHeaders(mockDispatch, key.headers))\n  if (matchedMockDispatches.length === 0) {\n    throw new MockNotMatchedError(`Mock dispatch not matched for headers '${typeof key.headers === 'object' ? JSON.stringify(key.headers) : key.headers}'`)\n  }\n\n  return matchedMockDispatches[0]\n}\n\nfunction addMockDispatch (mockDispatches, key, data) {\n  const baseData = { timesInvoked: 0, times: 1, persist: false, consumed: false }\n  const replyData = typeof data === 'function' ? { callback: data } : { ...data }\n  const newMockDispatch = { ...baseData, ...key, pending: true, data: { error: null, ...replyData } }\n  mockDispatches.push(newMockDispatch)\n  return newMockDispatch\n}\n\nfunction deleteMockDispatch (mockDispatches, key) {\n  const index = mockDispatches.findIndex(dispatch => {\n    if (!dispatch.consumed) {\n      return false\n    }\n    return matchKey(dispatch, key)\n  })\n  if (index !== -1) {\n    mockDispatches.splice(index, 1)\n  }\n}\n\nfunction buildKey (opts) {\n  const { path, method, body, headers, query } = opts\n  return {\n    path,\n    method,\n    body,\n    headers,\n    query\n  }\n}\n\nfunction generateKeyValues (data) {\n  return Object.entries(data).reduce((keyValuePairs, [key, value]) => [\n    ...keyValuePairs,\n    Buffer.from(`${key}`),\n    Array.isArray(value) ? value.map(x => Buffer.from(`${x}`)) : Buffer.from(`${value}`)\n  ], [])\n}\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\n * @param {number} statusCode\n */\nfunction getStatusText (statusCode) {\n  return STATUS_CODES[statusCode] || 'unknown'\n}\n\nasync function getResponse (body) {\n  const buffers = []\n  for await (const data of body) {\n    buffers.push(data)\n  }\n  return Buffer.concat(buffers).toString('utf8')\n}\n\n/**\n * Mock dispatch function used to simulate undici dispatches\n */\nfunction mockDispatch (opts, handler) {\n  // Get mock dispatch from built key\n  const key = buildKey(opts)\n  const mockDispatch = getMockDispatch(this[kDispatches], key)\n\n  mockDispatch.timesInvoked++\n\n  // Here's where we resolve a callback if a callback is present for the dispatch data.\n  if (mockDispatch.data.callback) {\n    mockDispatch.data = { ...mockDispatch.data, ...mockDispatch.data.callback(opts) }\n  }\n\n  // Parse mockDispatch data\n  const { data: { statusCode, data, headers, trailers, error }, delay, persist } = mockDispatch\n  const { timesInvoked, times } = mockDispatch\n\n  // If it's used up and not persistent, mark as consumed\n  mockDispatch.consumed = !persist && timesInvoked >= times\n  mockDispatch.pending = timesInvoked < times\n\n  // If specified, trigger dispatch error\n  if (error !== null) {\n    deleteMockDispatch(this[kDispatches], key)\n    handler.onError(error)\n    return true\n  }\n\n  // Handle the request with a delay if necessary\n  if (typeof delay === 'number' && delay > 0) {\n    setTimeout(() => {\n      handleReply(this[kDispatches])\n    }, delay)\n  } else {\n    handleReply(this[kDispatches])\n  }\n\n  function handleReply (mockDispatches, _data = data) {\n    // fetch's HeadersList is a 1D string array\n    const optsHeaders = Array.isArray(opts.headers)\n      ? buildHeadersFromArray(opts.headers)\n      : opts.headers\n    const body = typeof _data === 'function'\n      ? _data({ ...opts, headers: optsHeaders })\n      : _data\n\n    // util.types.isPromise is likely needed for jest.\n    if (isPromise(body)) {\n      // If handleReply is asynchronous, throwing an error\n      // in the callback will reject the promise, rather than\n      // synchronously throw the error, which breaks some tests.\n      // Rather, we wait for the callback to resolve if it is a\n      // promise, and then re-run handleReply with the new body.\n      body.then((newData) => handleReply(mockDispatches, newData))\n      return\n    }\n\n    const responseData = getResponseData(body)\n    const responseHeaders = generateKeyValues(headers)\n    const responseTrailers = generateKeyValues(trailers)\n\n    handler.abort = nop\n    handler.onHeaders(statusCode, responseHeaders, resume, getStatusText(statusCode))\n    handler.onData(Buffer.from(responseData))\n    handler.onComplete(responseTrailers)\n    deleteMockDispatch(mockDispatches, key)\n  }\n\n  function resume () {}\n\n  return true\n}\n\nfunction buildMockDispatch () {\n  const agent = this[kMockAgent]\n  const origin = this[kOrigin]\n  const originalDispatch = this[kOriginalDispatch]\n\n  return function dispatch (opts, handler) {\n    if (agent.isMockActive) {\n      try {\n        mockDispatch.call(this, opts, handler)\n      } catch (error) {\n        if (error instanceof MockNotMatchedError) {\n          const netConnect = agent[kGetNetConnect]()\n          if (netConnect === false) {\n            throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect disabled)`)\n          }\n          if (checkNetConnect(netConnect, origin)) {\n            originalDispatch.call(this, opts, handler)\n          } else {\n            throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect is not enabled for this origin)`)\n          }\n        } else {\n          throw error\n        }\n      }\n    } else {\n      originalDispatch.call(this, opts, handler)\n    }\n  }\n}\n\nfunction checkNetConnect (netConnect, origin) {\n  const url = new URL(origin)\n  if (netConnect === true) {\n    return true\n  } else if (Array.isArray(netConnect) && netConnect.some((matcher) => matchValue(matcher, url.host))) {\n    return true\n  }\n  return false\n}\n\nfunction buildMockOptions (opts) {\n  if (opts) {\n    const { agent, ...mockOptions } = opts\n    return mockOptions\n  }\n}\n\nmodule.exports = {\n  getResponseData,\n  getMockDispatch,\n  addMockDispatch,\n  deleteMockDispatch,\n  buildKey,\n  generateKeyValues,\n  matchValue,\n  getResponse,\n  getStatusText,\n  mockDispatch,\n  buildMockDispatch,\n  checkNetConnect,\n  buildMockOptions,\n  getHeaderByName\n}\n","'use strict'\n\nconst { Transform } = require('stream')\nconst { Console } = require('console')\n\n/**\n * Gets the output of `console.table(…)` as a string.\n */\nmodule.exports = class PendingInterceptorsFormatter {\n  constructor ({ disableColors } = {}) {\n    this.transform = new Transform({\n      transform (chunk, _enc, cb) {\n        cb(null, chunk)\n      }\n    })\n\n    this.logger = new Console({\n      stdout: this.transform,\n      inspectOptions: {\n        colors: !disableColors && !process.env.CI\n      }\n    })\n  }\n\n  format (pendingInterceptors) {\n    const withPrettyHeaders = pendingInterceptors.map(\n      ({ method, path, data: { statusCode }, persist, times, timesInvoked, origin }) => ({\n        Method: method,\n        Origin: origin,\n        Path: path,\n        'Status code': statusCode,\n        Persistent: persist ? '✅' : '❌',\n        Invocations: timesInvoked,\n        Remaining: persist ? Infinity : times - timesInvoked\n      }))\n\n    this.logger.table(withPrettyHeaders)\n    return this.transform.read().toString()\n  }\n}\n","'use strict'\n\nconst singulars = {\n  pronoun: 'it',\n  is: 'is',\n  was: 'was',\n  this: 'this'\n}\n\nconst plurals = {\n  pronoun: 'they',\n  is: 'are',\n  was: 'were',\n  this: 'these'\n}\n\nmodule.exports = class Pluralizer {\n  constructor (singular, plural) {\n    this.singular = singular\n    this.plural = plural\n  }\n\n  pluralize (count) {\n    const one = count === 1\n    const keys = one ? singulars : plurals\n    const noun = one ? this.singular : this.plural\n    return { ...keys, count, noun }\n  }\n}\n","/* eslint-disable */\n\n'use strict'\n\n// Extracted from node/lib/internal/fixed_queue.js\n\n// Currently optimal queue size, tested on V8 6.0 - 6.6. Must be power of two.\nconst kSize = 2048;\nconst kMask = kSize - 1;\n\n// The FixedQueue is implemented as a singly-linked list of fixed-size\n// circular buffers. It looks something like this:\n//\n//  head                                                       tail\n//    |                                                          |\n//    v                                                          v\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\n// +-----------+               +-----------+                  +-----------+\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |       bottom --> |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |    ...    |               |    ...    |                  |    ...    |\n// |   item    |               |   item    |                  |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |  [empty]  | <-- top       |   item    |                  |   item    |\n// |  [empty]  |               |   item    |                  |   item    |\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\n// +-----------+               +-----------+                  +-----------+\n//\n// Or, if there is only one circular buffer, it looks something\n// like either of these:\n//\n//  head   tail                                 head   tail\n//    |     |                                     |     |\n//    v     v                                     v     v\n// +-----------+                               +-----------+\n// |  [null]   |                               |  [null]   |\n// +-----------+                               +-----------+\n// |  [empty]  |                               |   item    |\n// |  [empty]  |                               |   item    |\n// |   item    | <-- bottom            top --> |  [empty]  |\n// |   item    |                               |  [empty]  |\n// |  [empty]  | <-- top            bottom --> |   item    |\n// |  [empty]  |                               |   item    |\n// +-----------+                               +-----------+\n//\n// Adding a value means moving `top` forward by one, removing means\n// moving `bottom` forward by one. After reaching the end, the queue\n// wraps around.\n//\n// When `top === bottom` the current queue is empty and when\n// `top + 1 === bottom` it's full. This wastes a single space of storage\n// but allows much quicker checks.\n\nclass FixedCircularBuffer {\n  constructor() {\n    this.bottom = 0;\n    this.top = 0;\n    this.list = new Array(kSize);\n    this.next = null;\n  }\n\n  isEmpty() {\n    return this.top === this.bottom;\n  }\n\n  isFull() {\n    return ((this.top + 1) & kMask) === this.bottom;\n  }\n\n  push(data) {\n    this.list[this.top] = data;\n    this.top = (this.top + 1) & kMask;\n  }\n\n  shift() {\n    const nextItem = this.list[this.bottom];\n    if (nextItem === undefined)\n      return null;\n    this.list[this.bottom] = undefined;\n    this.bottom = (this.bottom + 1) & kMask;\n    return nextItem;\n  }\n}\n\nmodule.exports = class FixedQueue {\n  constructor() {\n    this.head = this.tail = new FixedCircularBuffer();\n  }\n\n  isEmpty() {\n    return this.head.isEmpty();\n  }\n\n  push(data) {\n    if (this.head.isFull()) {\n      // Head is full: Creates a new queue, sets the old queue's `.next` to it,\n      // and sets it as the new main queue.\n      this.head = this.head.next = new FixedCircularBuffer();\n    }\n    this.head.push(data);\n  }\n\n  shift() {\n    const tail = this.tail;\n    const next = tail.shift();\n    if (tail.isEmpty() && tail.next !== null) {\n      // If there is another queue, it forms the new tail.\n      this.tail = tail.next;\n    }\n    return next;\n  }\n};\n","'use strict'\n\nconst DispatcherBase = require('./dispatcher-base')\nconst FixedQueue = require('./node/fixed-queue')\nconst { kConnected, kSize, kRunning, kPending, kQueued, kBusy, kFree, kUrl, kClose, kDestroy, kDispatch } = require('./core/symbols')\nconst PoolStats = require('./pool-stats')\n\nconst kClients = Symbol('clients')\nconst kNeedDrain = Symbol('needDrain')\nconst kQueue = Symbol('queue')\nconst kClosedResolve = Symbol('closed resolve')\nconst kOnDrain = Symbol('onDrain')\nconst kOnConnect = Symbol('onConnect')\nconst kOnDisconnect = Symbol('onDisconnect')\nconst kOnConnectionError = Symbol('onConnectionError')\nconst kGetDispatcher = Symbol('get dispatcher')\nconst kAddClient = Symbol('add client')\nconst kRemoveClient = Symbol('remove client')\nconst kStats = Symbol('stats')\n\nclass PoolBase extends DispatcherBase {\n  constructor () {\n    super()\n\n    this[kQueue] = new FixedQueue()\n    this[kClients] = []\n    this[kQueued] = 0\n\n    const pool = this\n\n    this[kOnDrain] = function onDrain (origin, targets) {\n      const queue = pool[kQueue]\n\n      let needDrain = false\n\n      while (!needDrain) {\n        const item = queue.shift()\n        if (!item) {\n          break\n        }\n        pool[kQueued]--\n        needDrain = !this.dispatch(item.opts, item.handler)\n      }\n\n      this[kNeedDrain] = needDrain\n\n      if (!this[kNeedDrain] && pool[kNeedDrain]) {\n        pool[kNeedDrain] = false\n        pool.emit('drain', origin, [pool, ...targets])\n      }\n\n      if (pool[kClosedResolve] && queue.isEmpty()) {\n        Promise\n          .all(pool[kClients].map(c => c.close()))\n          .then(pool[kClosedResolve])\n      }\n    }\n\n    this[kOnConnect] = (origin, targets) => {\n      pool.emit('connect', origin, [pool, ...targets])\n    }\n\n    this[kOnDisconnect] = (origin, targets, err) => {\n      pool.emit('disconnect', origin, [pool, ...targets], err)\n    }\n\n    this[kOnConnectionError] = (origin, targets, err) => {\n      pool.emit('connectionError', origin, [pool, ...targets], err)\n    }\n\n    this[kStats] = new PoolStats(this)\n  }\n\n  get [kBusy] () {\n    return this[kNeedDrain]\n  }\n\n  get [kConnected] () {\n    return this[kClients].filter(client => client[kConnected]).length\n  }\n\n  get [kFree] () {\n    return this[kClients].filter(client => client[kConnected] && !client[kNeedDrain]).length\n  }\n\n  get [kPending] () {\n    let ret = this[kQueued]\n    for (const { [kPending]: pending } of this[kClients]) {\n      ret += pending\n    }\n    return ret\n  }\n\n  get [kRunning] () {\n    let ret = 0\n    for (const { [kRunning]: running } of this[kClients]) {\n      ret += running\n    }\n    return ret\n  }\n\n  get [kSize] () {\n    let ret = this[kQueued]\n    for (const { [kSize]: size } of this[kClients]) {\n      ret += size\n    }\n    return ret\n  }\n\n  get stats () {\n    return this[kStats]\n  }\n\n  async [kClose] () {\n    if (this[kQueue].isEmpty()) {\n      return Promise.all(this[kClients].map(c => c.close()))\n    } else {\n      return new Promise((resolve) => {\n        this[kClosedResolve] = resolve\n      })\n    }\n  }\n\n  async [kDestroy] (err) {\n    while (true) {\n      const item = this[kQueue].shift()\n      if (!item) {\n        break\n      }\n      item.handler.onError(err)\n    }\n\n    return Promise.all(this[kClients].map(c => c.destroy(err)))\n  }\n\n  [kDispatch] (opts, handler) {\n    const dispatcher = this[kGetDispatcher]()\n\n    if (!dispatcher) {\n      this[kNeedDrain] = true\n      this[kQueue].push({ opts, handler })\n      this[kQueued]++\n    } else if (!dispatcher.dispatch(opts, handler)) {\n      dispatcher[kNeedDrain] = true\n      this[kNeedDrain] = !this[kGetDispatcher]()\n    }\n\n    return !this[kNeedDrain]\n  }\n\n  [kAddClient] (client) {\n    client\n      .on('drain', this[kOnDrain])\n      .on('connect', this[kOnConnect])\n      .on('disconnect', this[kOnDisconnect])\n      .on('connectionError', this[kOnConnectionError])\n\n    this[kClients].push(client)\n\n    if (this[kNeedDrain]) {\n      process.nextTick(() => {\n        if (this[kNeedDrain]) {\n          this[kOnDrain](client[kUrl], [this, client])\n        }\n      })\n    }\n\n    return this\n  }\n\n  [kRemoveClient] (client) {\n    client.close(() => {\n      const idx = this[kClients].indexOf(client)\n      if (idx !== -1) {\n        this[kClients].splice(idx, 1)\n      }\n    })\n\n    this[kNeedDrain] = this[kClients].some(dispatcher => (\n      !dispatcher[kNeedDrain] &&\n      dispatcher.closed !== true &&\n      dispatcher.destroyed !== true\n    ))\n  }\n}\n\nmodule.exports = {\n  PoolBase,\n  kClients,\n  kNeedDrain,\n  kAddClient,\n  kRemoveClient,\n  kGetDispatcher\n}\n","const { kFree, kConnected, kPending, kQueued, kRunning, kSize } = require('./core/symbols')\nconst kPool = Symbol('pool')\n\nclass PoolStats {\n  constructor (pool) {\n    this[kPool] = pool\n  }\n\n  get connected () {\n    return this[kPool][kConnected]\n  }\n\n  get free () {\n    return this[kPool][kFree]\n  }\n\n  get pending () {\n    return this[kPool][kPending]\n  }\n\n  get queued () {\n    return this[kPool][kQueued]\n  }\n\n  get running () {\n    return this[kPool][kRunning]\n  }\n\n  get size () {\n    return this[kPool][kSize]\n  }\n}\n\nmodule.exports = PoolStats\n","'use strict'\n\nconst {\n  PoolBase,\n  kClients,\n  kNeedDrain,\n  kAddClient,\n  kGetDispatcher\n} = require('./pool-base')\nconst Client = require('./client')\nconst {\n  InvalidArgumentError\n} = require('./core/errors')\nconst util = require('./core/util')\nconst { kUrl, kInterceptors } = require('./core/symbols')\nconst buildConnector = require('./core/connect')\n\nconst kOptions = Symbol('options')\nconst kConnections = Symbol('connections')\nconst kFactory = Symbol('factory')\n\nfunction defaultFactory (origin, opts) {\n  return new Client(origin, opts)\n}\n\nclass Pool extends PoolBase {\n  constructor (origin, {\n    connections,\n    factory = defaultFactory,\n    connect,\n    connectTimeout,\n    tls,\n    maxCachedSessions,\n    socketPath,\n    autoSelectFamily,\n    autoSelectFamilyAttemptTimeout,\n    allowH2,\n    ...options\n  } = {}) {\n    super()\n\n    if (connections != null && (!Number.isFinite(connections) || connections < 0)) {\n      throw new InvalidArgumentError('invalid connections')\n    }\n\n    if (typeof factory !== 'function') {\n      throw new InvalidArgumentError('factory must be a function.')\n    }\n\n    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {\n      throw new InvalidArgumentError('connect must be a function or an object')\n    }\n\n    if (typeof connect !== 'function') {\n      connect = buildConnector({\n        ...tls,\n        maxCachedSessions,\n        allowH2,\n        socketPath,\n        timeout: connectTimeout,\n        ...(util.nodeHasAutoSelectFamily && autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : undefined),\n        ...connect\n      })\n    }\n\n    this[kInterceptors] = options.interceptors && options.interceptors.Pool && Array.isArray(options.interceptors.Pool)\n      ? options.interceptors.Pool\n      : []\n    this[kConnections] = connections || null\n    this[kUrl] = util.parseOrigin(origin)\n    this[kOptions] = { ...util.deepClone(options), connect, allowH2 }\n    this[kOptions].interceptors = options.interceptors\n      ? { ...options.interceptors }\n      : undefined\n    this[kFactory] = factory\n\n    this.on('connectionError', (origin, targets, error) => {\n      // If a connection error occurs, we remove the client from the pool,\n      // and emit a connectionError event. They will not be re-used.\n      // Fixes https://github.com/nodejs/undici/issues/3895\n      for (const target of targets) {\n        // Do not use kRemoveClient here, as it will close the client,\n        // but the client cannot be closed in this state.\n        const idx = this[kClients].indexOf(target)\n        if (idx !== -1) {\n          this[kClients].splice(idx, 1)\n        }\n      }\n    })\n  }\n\n  [kGetDispatcher] () {\n    let dispatcher = this[kClients].find(dispatcher => !dispatcher[kNeedDrain])\n\n    if (dispatcher) {\n      return dispatcher\n    }\n\n    if (!this[kConnections] || this[kClients].length < this[kConnections]) {\n      dispatcher = this[kFactory](this[kUrl], this[kOptions])\n      this[kAddClient](dispatcher)\n    }\n\n    return dispatcher\n  }\n}\n\nmodule.exports = Pool\n","'use strict'\n\nconst { kProxy, kClose, kDestroy, kInterceptors } = require('./core/symbols')\nconst { URL } = require('url')\nconst Agent = require('./agent')\nconst Pool = require('./pool')\nconst DispatcherBase = require('./dispatcher-base')\nconst { InvalidArgumentError, RequestAbortedError } = require('./core/errors')\nconst buildConnector = require('./core/connect')\n\nconst kAgent = Symbol('proxy agent')\nconst kClient = Symbol('proxy client')\nconst kProxyHeaders = Symbol('proxy headers')\nconst kRequestTls = Symbol('request tls settings')\nconst kProxyTls = Symbol('proxy tls settings')\nconst kConnectEndpoint = Symbol('connect endpoint function')\n\nfunction defaultProtocolPort (protocol) {\n  return protocol === 'https:' ? 443 : 80\n}\n\nfunction buildProxyOptions (opts) {\n  if (typeof opts === 'string') {\n    opts = { uri: opts }\n  }\n\n  if (!opts || !opts.uri) {\n    throw new InvalidArgumentError('Proxy opts.uri is mandatory')\n  }\n\n  return {\n    uri: opts.uri,\n    protocol: opts.protocol || 'https'\n  }\n}\n\nfunction defaultFactory (origin, opts) {\n  return new Pool(origin, opts)\n}\n\nclass ProxyAgent extends DispatcherBase {\n  constructor (opts) {\n    super(opts)\n    this[kProxy] = buildProxyOptions(opts)\n    this[kAgent] = new Agent(opts)\n    this[kInterceptors] = opts.interceptors && opts.interceptors.ProxyAgent && Array.isArray(opts.interceptors.ProxyAgent)\n      ? opts.interceptors.ProxyAgent\n      : []\n\n    if (typeof opts === 'string') {\n      opts = { uri: opts }\n    }\n\n    if (!opts || !opts.uri) {\n      throw new InvalidArgumentError('Proxy opts.uri is mandatory')\n    }\n\n    const { clientFactory = defaultFactory } = opts\n\n    if (typeof clientFactory !== 'function') {\n      throw new InvalidArgumentError('Proxy opts.clientFactory must be a function.')\n    }\n\n    this[kRequestTls] = opts.requestTls\n    this[kProxyTls] = opts.proxyTls\n    this[kProxyHeaders] = opts.headers || {}\n\n    const resolvedUrl = new URL(opts.uri)\n    const { origin, port, host, username, password } = resolvedUrl\n\n    if (opts.auth && opts.token) {\n      throw new InvalidArgumentError('opts.auth cannot be used in combination with opts.token')\n    } else if (opts.auth) {\n      /* @deprecated in favour of opts.token */\n      this[kProxyHeaders]['proxy-authorization'] = `Basic ${opts.auth}`\n    } else if (opts.token) {\n      this[kProxyHeaders]['proxy-authorization'] = opts.token\n    } else if (username && password) {\n      this[kProxyHeaders]['proxy-authorization'] = `Basic ${Buffer.from(`${decodeURIComponent(username)}:${decodeURIComponent(password)}`).toString('base64')}`\n    }\n\n    const connect = buildConnector({ ...opts.proxyTls })\n    this[kConnectEndpoint] = buildConnector({ ...opts.requestTls })\n    this[kClient] = clientFactory(resolvedUrl, { connect })\n    this[kAgent] = new Agent({\n      ...opts,\n      connect: async (opts, callback) => {\n        let requestedHost = opts.host\n        if (!opts.port) {\n          requestedHost += `:${defaultProtocolPort(opts.protocol)}`\n        }\n        try {\n          const { socket, statusCode } = await this[kClient].connect({\n            origin,\n            port,\n            path: requestedHost,\n            signal: opts.signal,\n            headers: {\n              ...this[kProxyHeaders],\n              host\n            }\n          })\n          if (statusCode !== 200) {\n            socket.on('error', () => {}).destroy()\n            callback(new RequestAbortedError(`Proxy response (${statusCode}) !== 200 when HTTP Tunneling`))\n          }\n          if (opts.protocol !== 'https:') {\n            callback(null, socket)\n            return\n          }\n          let servername\n          if (this[kRequestTls]) {\n            servername = this[kRequestTls].servername\n          } else {\n            servername = opts.servername\n          }\n          this[kConnectEndpoint]({ ...opts, servername, httpSocket: socket }, callback)\n        } catch (err) {\n          callback(err)\n        }\n      }\n    })\n  }\n\n  dispatch (opts, handler) {\n    const { host } = new URL(opts.origin)\n    const headers = buildHeaders(opts.headers)\n    throwIfProxyAuthIsSent(headers)\n    return this[kAgent].dispatch(\n      {\n        ...opts,\n        headers: {\n          ...headers,\n          host\n        }\n      },\n      handler\n    )\n  }\n\n  async [kClose] () {\n    await this[kAgent].close()\n    await this[kClient].close()\n  }\n\n  async [kDestroy] () {\n    await this[kAgent].destroy()\n    await this[kClient].destroy()\n  }\n}\n\n/**\n * @param {string[] | Record<string, string>} headers\n * @returns {Record<string, string>}\n */\nfunction buildHeaders (headers) {\n  // When using undici.fetch, the headers list is stored\n  // as an array.\n  if (Array.isArray(headers)) {\n    /** @type {Record<string, string>} */\n    const headersPair = {}\n\n    for (let i = 0; i < headers.length; i += 2) {\n      headersPair[headers[i]] = headers[i + 1]\n    }\n\n    return headersPair\n  }\n\n  return headers\n}\n\n/**\n * @param {Record<string, string>} headers\n *\n * Previous versions of ProxyAgent suggests the Proxy-Authorization in request headers\n * Nevertheless, it was changed and to avoid a security vulnerability by end users\n * this check was created.\n * It should be removed in the next major version for performance reasons\n */\nfunction throwIfProxyAuthIsSent (headers) {\n  const existProxyAuth = headers && Object.keys(headers)\n    .find((key) => key.toLowerCase() === 'proxy-authorization')\n  if (existProxyAuth) {\n    throw new InvalidArgumentError('Proxy-Authorization should be sent in ProxyAgent constructor')\n  }\n}\n\nmodule.exports = ProxyAgent\n","'use strict'\n\nlet fastNow = Date.now()\nlet fastNowTimeout\n\nconst fastTimers = []\n\nfunction onTimeout () {\n  fastNow = Date.now()\n\n  let len = fastTimers.length\n  let idx = 0\n  while (idx < len) {\n    const timer = fastTimers[idx]\n\n    if (timer.state === 0) {\n      timer.state = fastNow + timer.delay\n    } else if (timer.state > 0 && fastNow >= timer.state) {\n      timer.state = -1\n      timer.callback(timer.opaque)\n    }\n\n    if (timer.state === -1) {\n      timer.state = -2\n      if (idx !== len - 1) {\n        fastTimers[idx] = fastTimers.pop()\n      } else {\n        fastTimers.pop()\n      }\n      len -= 1\n    } else {\n      idx += 1\n    }\n  }\n\n  if (fastTimers.length > 0) {\n    refreshTimeout()\n  }\n}\n\nfunction refreshTimeout () {\n  if (fastNowTimeout && fastNowTimeout.refresh) {\n    fastNowTimeout.refresh()\n  } else {\n    clearTimeout(fastNowTimeout)\n    fastNowTimeout = setTimeout(onTimeout, 1e3)\n    if (fastNowTimeout.unref) {\n      fastNowTimeout.unref()\n    }\n  }\n}\n\nclass Timeout {\n  constructor (callback, delay, opaque) {\n    this.callback = callback\n    this.delay = delay\n    this.opaque = opaque\n\n    //  -2 not in timer list\n    //  -1 in timer list but inactive\n    //   0 in timer list waiting for time\n    // > 0 in timer list waiting for time to expire\n    this.state = -2\n\n    this.refresh()\n  }\n\n  refresh () {\n    if (this.state === -2) {\n      fastTimers.push(this)\n      if (!fastNowTimeout || fastTimers.length === 1) {\n        refreshTimeout()\n      }\n    }\n\n    this.state = 0\n  }\n\n  clear () {\n    this.state = -1\n  }\n}\n\nmodule.exports = {\n  setTimeout (callback, delay, opaque) {\n    return delay < 1e3\n      ? setTimeout(callback, delay, opaque)\n      : new Timeout(callback, delay, opaque)\n  },\n  clearTimeout (timeout) {\n    if (timeout instanceof Timeout) {\n      timeout.clear()\n    } else {\n      clearTimeout(timeout)\n    }\n  }\n}\n","'use strict'\n\nconst diagnosticsChannel = require('diagnostics_channel')\nconst { uid, states } = require('./constants')\nconst {\n  kReadyState,\n  kSentClose,\n  kByteParser,\n  kReceivedClose\n} = require('./symbols')\nconst { fireEvent, failWebsocketConnection } = require('./util')\nconst { CloseEvent } = require('./events')\nconst { makeRequest } = require('../fetch/request')\nconst { fetching } = require('../fetch/index')\nconst { Headers } = require('../fetch/headers')\nconst { getGlobalDispatcher } = require('../global')\nconst { kHeadersList } = require('../core/symbols')\n\nconst channels = {}\nchannels.open = diagnosticsChannel.channel('undici:websocket:open')\nchannels.close = diagnosticsChannel.channel('undici:websocket:close')\nchannels.socketError = diagnosticsChannel.channel('undici:websocket:socket_error')\n\n/** @type {import('crypto')} */\nlet crypto\ntry {\n  crypto = require('crypto')\n} catch {\n\n}\n\n/**\n * @see https://websockets.spec.whatwg.org/#concept-websocket-establish\n * @param {URL} url\n * @param {string|string[]} protocols\n * @param {import('./websocket').WebSocket} ws\n * @param {(response: any) => void} onEstablish\n * @param {Partial<import('../../types/websocket').WebSocketInit>} options\n */\nfunction establishWebSocketConnection (url, protocols, ws, onEstablish, options) {\n  // 1. Let requestURL be a copy of url, with its scheme set to \"http\", if url’s\n  //    scheme is \"ws\", and to \"https\" otherwise.\n  const requestURL = url\n\n  requestURL.protocol = url.protocol === 'ws:' ? 'http:' : 'https:'\n\n  // 2. Let request be a new request, whose URL is requestURL, client is client,\n  //    service-workers mode is \"none\", referrer is \"no-referrer\", mode is\n  //    \"websocket\", credentials mode is \"include\", cache mode is \"no-store\" ,\n  //    and redirect mode is \"error\".\n  const request = makeRequest({\n    urlList: [requestURL],\n    serviceWorkers: 'none',\n    referrer: 'no-referrer',\n    mode: 'websocket',\n    credentials: 'include',\n    cache: 'no-store',\n    redirect: 'error'\n  })\n\n  // Note: undici extension, allow setting custom headers.\n  if (options.headers) {\n    const headersList = new Headers(options.headers)[kHeadersList]\n\n    request.headersList = headersList\n  }\n\n  // 3. Append (`Upgrade`, `websocket`) to request’s header list.\n  // 4. Append (`Connection`, `Upgrade`) to request’s header list.\n  // Note: both of these are handled by undici currently.\n  // https://github.com/nodejs/undici/blob/68c269c4144c446f3f1220951338daef4a6b5ec4/lib/client.js#L1397\n\n  // 5. Let keyValue be a nonce consisting of a randomly selected\n  //    16-byte value that has been forgiving-base64-encoded and\n  //    isomorphic encoded.\n  const keyValue = crypto.randomBytes(16).toString('base64')\n\n  // 6. Append (`Sec-WebSocket-Key`, keyValue) to request’s\n  //    header list.\n  request.headersList.append('sec-websocket-key', keyValue)\n\n  // 7. Append (`Sec-WebSocket-Version`, `13`) to request’s\n  //    header list.\n  request.headersList.append('sec-websocket-version', '13')\n\n  // 8. For each protocol in protocols, combine\n  //    (`Sec-WebSocket-Protocol`, protocol) in request’s header\n  //    list.\n  for (const protocol of protocols) {\n    request.headersList.append('sec-websocket-protocol', protocol)\n  }\n\n  // 9. Let permessageDeflate be a user-agent defined\n  //    \"permessage-deflate\" extension header value.\n  // https://github.com/mozilla/gecko-dev/blob/ce78234f5e653a5d3916813ff990f053510227bc/netwerk/protocol/websocket/WebSocketChannel.cpp#L2673\n  // TODO: enable once permessage-deflate is supported\n  const permessageDeflate = '' // 'permessage-deflate; 15'\n\n  // 10. Append (`Sec-WebSocket-Extensions`, permessageDeflate) to\n  //     request’s header list.\n  // request.headersList.append('sec-websocket-extensions', permessageDeflate)\n\n  // 11. Fetch request with useParallelQueue set to true, and\n  //     processResponse given response being these steps:\n  const controller = fetching({\n    request,\n    useParallelQueue: true,\n    dispatcher: options.dispatcher ?? getGlobalDispatcher(),\n    processResponse (response) {\n      // 1. If response is a network error or its status is not 101,\n      //    fail the WebSocket connection.\n      if (response.type === 'error' || response.status !== 101) {\n        failWebsocketConnection(ws, 'Received network error or non-101 status code.')\n        return\n      }\n\n      // 2. If protocols is not the empty list and extracting header\n      //    list values given `Sec-WebSocket-Protocol` and response’s\n      //    header list results in null, failure, or the empty byte\n      //    sequence, then fail the WebSocket connection.\n      if (protocols.length !== 0 && !response.headersList.get('Sec-WebSocket-Protocol')) {\n        failWebsocketConnection(ws, 'Server did not respond with sent protocols.')\n        return\n      }\n\n      // 3. Follow the requirements stated step 2 to step 6, inclusive,\n      //    of the last set of steps in section 4.1 of The WebSocket\n      //    Protocol to validate response. This either results in fail\n      //    the WebSocket connection or the WebSocket connection is\n      //    established.\n\n      // 2. If the response lacks an |Upgrade| header field or the |Upgrade|\n      //    header field contains a value that is not an ASCII case-\n      //    insensitive match for the value \"websocket\", the client MUST\n      //    _Fail the WebSocket Connection_.\n      if (response.headersList.get('Upgrade')?.toLowerCase() !== 'websocket') {\n        failWebsocketConnection(ws, 'Server did not set Upgrade header to \"websocket\".')\n        return\n      }\n\n      // 3. If the response lacks a |Connection| header field or the\n      //    |Connection| header field doesn't contain a token that is an\n      //    ASCII case-insensitive match for the value \"Upgrade\", the client\n      //    MUST _Fail the WebSocket Connection_.\n      if (response.headersList.get('Connection')?.toLowerCase() !== 'upgrade') {\n        failWebsocketConnection(ws, 'Server did not set Connection header to \"upgrade\".')\n        return\n      }\n\n      // 4. If the response lacks a |Sec-WebSocket-Accept| header field or\n      //    the |Sec-WebSocket-Accept| contains a value other than the\n      //    base64-encoded SHA-1 of the concatenation of the |Sec-WebSocket-\n      //    Key| (as a string, not base64-decoded) with the string \"258EAFA5-\n      //    E914-47DA-95CA-C5AB0DC85B11\" but ignoring any leading and\n      //    trailing whitespace, the client MUST _Fail the WebSocket\n      //    Connection_.\n      const secWSAccept = response.headersList.get('Sec-WebSocket-Accept')\n      const digest = crypto.createHash('sha1').update(keyValue + uid).digest('base64')\n      if (secWSAccept !== digest) {\n        failWebsocketConnection(ws, 'Incorrect hash received in Sec-WebSocket-Accept header.')\n        return\n      }\n\n      // 5. If the response includes a |Sec-WebSocket-Extensions| header\n      //    field and this header field indicates the use of an extension\n      //    that was not present in the client's handshake (the server has\n      //    indicated an extension not requested by the client), the client\n      //    MUST _Fail the WebSocket Connection_.  (The parsing of this\n      //    header field to determine which extensions are requested is\n      //    discussed in Section 9.1.)\n      const secExtension = response.headersList.get('Sec-WebSocket-Extensions')\n\n      if (secExtension !== null && secExtension !== permessageDeflate) {\n        failWebsocketConnection(ws, 'Received different permessage-deflate than the one set.')\n        return\n      }\n\n      // 6. If the response includes a |Sec-WebSocket-Protocol| header field\n      //    and this header field indicates the use of a subprotocol that was\n      //    not present in the client's handshake (the server has indicated a\n      //    subprotocol not requested by the client), the client MUST _Fail\n      //    the WebSocket Connection_.\n      const secProtocol = response.headersList.get('Sec-WebSocket-Protocol')\n\n      if (secProtocol !== null && secProtocol !== request.headersList.get('Sec-WebSocket-Protocol')) {\n        failWebsocketConnection(ws, 'Protocol was not set in the opening handshake.')\n        return\n      }\n\n      response.socket.on('data', onSocketData)\n      response.socket.on('close', onSocketClose)\n      response.socket.on('error', onSocketError)\n\n      if (channels.open.hasSubscribers) {\n        channels.open.publish({\n          address: response.socket.address(),\n          protocol: secProtocol,\n          extensions: secExtension\n        })\n      }\n\n      onEstablish(response)\n    }\n  })\n\n  return controller\n}\n\n/**\n * @param {Buffer} chunk\n */\nfunction onSocketData (chunk) {\n  if (!this.ws[kByteParser].write(chunk)) {\n    this.pause()\n  }\n}\n\n/**\n * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol\n * @see https://datatracker.ietf.org/doc/html/rfc6455#section-7.1.4\n */\nfunction onSocketClose () {\n  const { ws } = this\n\n  // If the TCP connection was closed after the\n  // WebSocket closing handshake was completed, the WebSocket connection\n  // is said to have been closed _cleanly_.\n  const wasClean = ws[kSentClose] && ws[kReceivedClose]\n\n  let code = 1005\n  let reason = ''\n\n  const result = ws[kByteParser].closingInfo\n\n  if (result) {\n    code = result.code ?? 1005\n    reason = result.reason\n  } else if (!ws[kSentClose]) {\n    // If _The WebSocket\n    // Connection is Closed_ and no Close control frame was received by the\n    // endpoint (such as could occur if the underlying transport connection\n    // is lost), _The WebSocket Connection Close Code_ is considered to be\n    // 1006.\n    code = 1006\n  }\n\n  // 1. Change the ready state to CLOSED (3).\n  ws[kReadyState] = states.CLOSED\n\n  // 2. If the user agent was required to fail the WebSocket\n  //    connection, or if the WebSocket connection was closed\n  //    after being flagged as full, fire an event named error\n  //    at the WebSocket object.\n  // TODO\n\n  // 3. Fire an event named close at the WebSocket object,\n  //    using CloseEvent, with the wasClean attribute\n  //    initialized to true if the connection closed cleanly\n  //    and false otherwise, the code attribute initialized to\n  //    the WebSocket connection close code, and the reason\n  //    attribute initialized to the result of applying UTF-8\n  //    decode without BOM to the WebSocket connection close\n  //    reason.\n  fireEvent('close', ws, CloseEvent, {\n    wasClean, code, reason\n  })\n\n  if (channels.close.hasSubscribers) {\n    channels.close.publish({\n      websocket: ws,\n      code,\n      reason\n    })\n  }\n}\n\nfunction onSocketError (error) {\n  const { ws } = this\n\n  ws[kReadyState] = states.CLOSING\n\n  if (channels.socketError.hasSubscribers) {\n    channels.socketError.publish(error)\n  }\n\n  this.destroy()\n}\n\nmodule.exports = {\n  establishWebSocketConnection\n}\n","'use strict'\n\n// This is a Globally Unique Identifier unique used\n// to validate that the endpoint accepts websocket\n// connections.\n// See https://www.rfc-editor.org/rfc/rfc6455.html#section-1.3\nconst uid = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11'\n\n/** @type {PropertyDescriptor} */\nconst staticPropertyDescriptors = {\n  enumerable: true,\n  writable: false,\n  configurable: false\n}\n\nconst states = {\n  CONNECTING: 0,\n  OPEN: 1,\n  CLOSING: 2,\n  CLOSED: 3\n}\n\nconst opcodes = {\n  CONTINUATION: 0x0,\n  TEXT: 0x1,\n  BINARY: 0x2,\n  CLOSE: 0x8,\n  PING: 0x9,\n  PONG: 0xA\n}\n\nconst maxUnsigned16Bit = 2 ** 16 - 1 // 65535\n\nconst parserStates = {\n  INFO: 0,\n  PAYLOADLENGTH_16: 2,\n  PAYLOADLENGTH_64: 3,\n  READ_DATA: 4\n}\n\nconst emptyBuffer = Buffer.allocUnsafe(0)\n\nmodule.exports = {\n  uid,\n  staticPropertyDescriptors,\n  states,\n  opcodes,\n  maxUnsigned16Bit,\n  parserStates,\n  emptyBuffer\n}\n","'use strict'\n\nconst { webidl } = require('../fetch/webidl')\nconst { kEnumerableProperty } = require('../core/util')\nconst { MessagePort } = require('worker_threads')\n\n/**\n * @see https://html.spec.whatwg.org/multipage/comms.html#messageevent\n */\nclass MessageEvent extends Event {\n  #eventInit\n\n  constructor (type, eventInitDict = {}) {\n    webidl.argumentLengthCheck(arguments, 1, { header: 'MessageEvent constructor' })\n\n    type = webidl.converters.DOMString(type)\n    eventInitDict = webidl.converters.MessageEventInit(eventInitDict)\n\n    super(type, eventInitDict)\n\n    this.#eventInit = eventInitDict\n  }\n\n  get data () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.data\n  }\n\n  get origin () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.origin\n  }\n\n  get lastEventId () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.lastEventId\n  }\n\n  get source () {\n    webidl.brandCheck(this, MessageEvent)\n\n    return this.#eventInit.source\n  }\n\n  get ports () {\n    webidl.brandCheck(this, MessageEvent)\n\n    if (!Object.isFrozen(this.#eventInit.ports)) {\n      Object.freeze(this.#eventInit.ports)\n    }\n\n    return this.#eventInit.ports\n  }\n\n  initMessageEvent (\n    type,\n    bubbles = false,\n    cancelable = false,\n    data = null,\n    origin = '',\n    lastEventId = '',\n    source = null,\n    ports = []\n  ) {\n    webidl.brandCheck(this, MessageEvent)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'MessageEvent.initMessageEvent' })\n\n    return new MessageEvent(type, {\n      bubbles, cancelable, data, origin, lastEventId, source, ports\n    })\n  }\n}\n\n/**\n * @see https://websockets.spec.whatwg.org/#the-closeevent-interface\n */\nclass CloseEvent extends Event {\n  #eventInit\n\n  constructor (type, eventInitDict = {}) {\n    webidl.argumentLengthCheck(arguments, 1, { header: 'CloseEvent constructor' })\n\n    type = webidl.converters.DOMString(type)\n    eventInitDict = webidl.converters.CloseEventInit(eventInitDict)\n\n    super(type, eventInitDict)\n\n    this.#eventInit = eventInitDict\n  }\n\n  get wasClean () {\n    webidl.brandCheck(this, CloseEvent)\n\n    return this.#eventInit.wasClean\n  }\n\n  get code () {\n    webidl.brandCheck(this, CloseEvent)\n\n    return this.#eventInit.code\n  }\n\n  get reason () {\n    webidl.brandCheck(this, CloseEvent)\n\n    return this.#eventInit.reason\n  }\n}\n\n// https://html.spec.whatwg.org/multipage/webappapis.html#the-errorevent-interface\nclass ErrorEvent extends Event {\n  #eventInit\n\n  constructor (type, eventInitDict) {\n    webidl.argumentLengthCheck(arguments, 1, { header: 'ErrorEvent constructor' })\n\n    super(type, eventInitDict)\n\n    type = webidl.converters.DOMString(type)\n    eventInitDict = webidl.converters.ErrorEventInit(eventInitDict ?? {})\n\n    this.#eventInit = eventInitDict\n  }\n\n  get message () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.message\n  }\n\n  get filename () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.filename\n  }\n\n  get lineno () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.lineno\n  }\n\n  get colno () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.colno\n  }\n\n  get error () {\n    webidl.brandCheck(this, ErrorEvent)\n\n    return this.#eventInit.error\n  }\n}\n\nObject.defineProperties(MessageEvent.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'MessageEvent',\n    configurable: true\n  },\n  data: kEnumerableProperty,\n  origin: kEnumerableProperty,\n  lastEventId: kEnumerableProperty,\n  source: kEnumerableProperty,\n  ports: kEnumerableProperty,\n  initMessageEvent: kEnumerableProperty\n})\n\nObject.defineProperties(CloseEvent.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'CloseEvent',\n    configurable: true\n  },\n  reason: kEnumerableProperty,\n  code: kEnumerableProperty,\n  wasClean: kEnumerableProperty\n})\n\nObject.defineProperties(ErrorEvent.prototype, {\n  [Symbol.toStringTag]: {\n    value: 'ErrorEvent',\n    configurable: true\n  },\n  message: kEnumerableProperty,\n  filename: kEnumerableProperty,\n  lineno: kEnumerableProperty,\n  colno: kEnumerableProperty,\n  error: kEnumerableProperty\n})\n\nwebidl.converters.MessagePort = webidl.interfaceConverter(MessagePort)\n\nwebidl.converters['sequence<MessagePort>'] = webidl.sequenceConverter(\n  webidl.converters.MessagePort\n)\n\nconst eventInit = [\n  {\n    key: 'bubbles',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'cancelable',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'composed',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  }\n]\n\nwebidl.converters.MessageEventInit = webidl.dictionaryConverter([\n  ...eventInit,\n  {\n    key: 'data',\n    converter: webidl.converters.any,\n    defaultValue: null\n  },\n  {\n    key: 'origin',\n    converter: webidl.converters.USVString,\n    defaultValue: ''\n  },\n  {\n    key: 'lastEventId',\n    converter: webidl.converters.DOMString,\n    defaultValue: ''\n  },\n  {\n    key: 'source',\n    // Node doesn't implement WindowProxy or ServiceWorker, so the only\n    // valid value for source is a MessagePort.\n    converter: webidl.nullableConverter(webidl.converters.MessagePort),\n    defaultValue: null\n  },\n  {\n    key: 'ports',\n    converter: webidl.converters['sequence<MessagePort>'],\n    get defaultValue () {\n      return []\n    }\n  }\n])\n\nwebidl.converters.CloseEventInit = webidl.dictionaryConverter([\n  ...eventInit,\n  {\n    key: 'wasClean',\n    converter: webidl.converters.boolean,\n    defaultValue: false\n  },\n  {\n    key: 'code',\n    converter: webidl.converters['unsigned short'],\n    defaultValue: 0\n  },\n  {\n    key: 'reason',\n    converter: webidl.converters.USVString,\n    defaultValue: ''\n  }\n])\n\nwebidl.converters.ErrorEventInit = webidl.dictionaryConverter([\n  ...eventInit,\n  {\n    key: 'message',\n    converter: webidl.converters.DOMString,\n    defaultValue: ''\n  },\n  {\n    key: 'filename',\n    converter: webidl.converters.USVString,\n    defaultValue: ''\n  },\n  {\n    key: 'lineno',\n    converter: webidl.converters['unsigned long'],\n    defaultValue: 0\n  },\n  {\n    key: 'colno',\n    converter: webidl.converters['unsigned long'],\n    defaultValue: 0\n  },\n  {\n    key: 'error',\n    converter: webidl.converters.any\n  }\n])\n\nmodule.exports = {\n  MessageEvent,\n  CloseEvent,\n  ErrorEvent\n}\n","'use strict'\n\nconst { maxUnsigned16Bit } = require('./constants')\n\n/** @type {import('crypto')} */\nlet crypto\ntry {\n  crypto = require('crypto')\n} catch {\n\n}\n\nclass WebsocketFrameSend {\n  /**\n   * @param {Buffer|undefined} data\n   */\n  constructor (data) {\n    this.frameData = data\n    this.maskKey = crypto.randomBytes(4)\n  }\n\n  createFrame (opcode) {\n    const bodyLength = this.frameData?.byteLength ?? 0\n\n    /** @type {number} */\n    let payloadLength = bodyLength // 0-125\n    let offset = 6\n\n    if (bodyLength > maxUnsigned16Bit) {\n      offset += 8 // payload length is next 8 bytes\n      payloadLength = 127\n    } else if (bodyLength > 125) {\n      offset += 2 // payload length is next 2 bytes\n      payloadLength = 126\n    }\n\n    const buffer = Buffer.allocUnsafe(bodyLength + offset)\n\n    // Clear first 2 bytes, everything else is overwritten\n    buffer[0] = buffer[1] = 0\n    buffer[0] |= 0x80 // FIN\n    buffer[0] = (buffer[0] & 0xF0) + opcode // opcode\n\n    /*! ws. MIT License. Einar Otto Stangvik <einaros@gmail.com> */\n    buffer[offset - 4] = this.maskKey[0]\n    buffer[offset - 3] = this.maskKey[1]\n    buffer[offset - 2] = this.maskKey[2]\n    buffer[offset - 1] = this.maskKey[3]\n\n    buffer[1] = payloadLength\n\n    if (payloadLength === 126) {\n      buffer.writeUInt16BE(bodyLength, 2)\n    } else if (payloadLength === 127) {\n      // Clear extended payload length\n      buffer[2] = buffer[3] = 0\n      buffer.writeUIntBE(bodyLength, 4, 6)\n    }\n\n    buffer[1] |= 0x80 // MASK\n\n    // mask body\n    for (let i = 0; i < bodyLength; i++) {\n      buffer[offset + i] = this.frameData[i] ^ this.maskKey[i % 4]\n    }\n\n    return buffer\n  }\n}\n\nmodule.exports = {\n  WebsocketFrameSend\n}\n","'use strict'\n\nconst { Writable } = require('stream')\nconst diagnosticsChannel = require('diagnostics_channel')\nconst { parserStates, opcodes, states, emptyBuffer } = require('./constants')\nconst { kReadyState, kSentClose, kResponse, kReceivedClose } = require('./symbols')\nconst { isValidStatusCode, failWebsocketConnection, websocketMessageReceived } = require('./util')\nconst { WebsocketFrameSend } = require('./frame')\n\n// This code was influenced by ws released under the MIT license.\n// Copyright (c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n// Copyright (c) 2013 Arnout Kazemier and contributors\n// Copyright (c) 2016 Luigi Pinca and contributors\n\nconst channels = {}\nchannels.ping = diagnosticsChannel.channel('undici:websocket:ping')\nchannels.pong = diagnosticsChannel.channel('undici:websocket:pong')\n\nclass ByteParser extends Writable {\n  #buffers = []\n  #byteOffset = 0\n\n  #state = parserStates.INFO\n\n  #info = {}\n  #fragments = []\n\n  constructor (ws) {\n    super()\n\n    this.ws = ws\n  }\n\n  /**\n   * @param {Buffer} chunk\n   * @param {() => void} callback\n   */\n  _write (chunk, _, callback) {\n    this.#buffers.push(chunk)\n    this.#byteOffset += chunk.length\n\n    this.run(callback)\n  }\n\n  /**\n   * Runs whenever a new chunk is received.\n   * Callback is called whenever there are no more chunks buffering,\n   * or not enough bytes are buffered to parse.\n   */\n  run (callback) {\n    while (true) {\n      if (this.#state === parserStates.INFO) {\n        // If there aren't enough bytes to parse the payload length, etc.\n        if (this.#byteOffset < 2) {\n          return callback()\n        }\n\n        const buffer = this.consume(2)\n\n        this.#info.fin = (buffer[0] & 0x80) !== 0\n        this.#info.opcode = buffer[0] & 0x0F\n\n        // If we receive a fragmented message, we use the type of the first\n        // frame to parse the full message as binary/text, when it's terminated\n        this.#info.originalOpcode ??= this.#info.opcode\n\n        this.#info.fragmented = !this.#info.fin && this.#info.opcode !== opcodes.CONTINUATION\n\n        if (this.#info.fragmented && this.#info.opcode !== opcodes.BINARY && this.#info.opcode !== opcodes.TEXT) {\n          // Only text and binary frames can be fragmented\n          failWebsocketConnection(this.ws, 'Invalid frame type was fragmented.')\n          return\n        }\n\n        const payloadLength = buffer[1] & 0x7F\n\n        if (payloadLength <= 125) {\n          this.#info.payloadLength = payloadLength\n          this.#state = parserStates.READ_DATA\n        } else if (payloadLength === 126) {\n          this.#state = parserStates.PAYLOADLENGTH_16\n        } else if (payloadLength === 127) {\n          this.#state = parserStates.PAYLOADLENGTH_64\n        }\n\n        if (this.#info.fragmented && payloadLength > 125) {\n          // A fragmented frame can't be fragmented itself\n          failWebsocketConnection(this.ws, 'Fragmented frame exceeded 125 bytes.')\n          return\n        } else if (\n          (this.#info.opcode === opcodes.PING ||\n            this.#info.opcode === opcodes.PONG ||\n            this.#info.opcode === opcodes.CLOSE) &&\n          payloadLength > 125\n        ) {\n          // Control frames can have a payload length of 125 bytes MAX\n          failWebsocketConnection(this.ws, 'Payload length for control frame exceeded 125 bytes.')\n          return\n        } else if (this.#info.opcode === opcodes.CLOSE) {\n          if (payloadLength === 1) {\n            failWebsocketConnection(this.ws, 'Received close frame with a 1-byte body.')\n            return\n          }\n\n          const body = this.consume(payloadLength)\n\n          this.#info.closeInfo = this.parseCloseBody(false, body)\n\n          if (!this.ws[kSentClose]) {\n            // If an endpoint receives a Close frame and did not previously send a\n            // Close frame, the endpoint MUST send a Close frame in response.  (When\n            // sending a Close frame in response, the endpoint typically echos the\n            // status code it received.)\n            const body = Buffer.allocUnsafe(2)\n            body.writeUInt16BE(this.#info.closeInfo.code, 0)\n            const closeFrame = new WebsocketFrameSend(body)\n\n            this.ws[kResponse].socket.write(\n              closeFrame.createFrame(opcodes.CLOSE),\n              (err) => {\n                if (!err) {\n                  this.ws[kSentClose] = true\n                }\n              }\n            )\n          }\n\n          // Upon either sending or receiving a Close control frame, it is said\n          // that _The WebSocket Closing Handshake is Started_ and that the\n          // WebSocket connection is in the CLOSING state.\n          this.ws[kReadyState] = states.CLOSING\n          this.ws[kReceivedClose] = true\n\n          this.end()\n\n          return\n        } else if (this.#info.opcode === opcodes.PING) {\n          // Upon receipt of a Ping frame, an endpoint MUST send a Pong frame in\n          // response, unless it already received a Close frame.\n          // A Pong frame sent in response to a Ping frame must have identical\n          // \"Application data\"\n\n          const body = this.consume(payloadLength)\n\n          if (!this.ws[kReceivedClose]) {\n            const frame = new WebsocketFrameSend(body)\n\n            this.ws[kResponse].socket.write(frame.createFrame(opcodes.PONG))\n\n            if (channels.ping.hasSubscribers) {\n              channels.ping.publish({\n                payload: body\n              })\n            }\n          }\n\n          this.#state = parserStates.INFO\n\n          if (this.#byteOffset > 0) {\n            continue\n          } else {\n            callback()\n            return\n          }\n        } else if (this.#info.opcode === opcodes.PONG) {\n          // A Pong frame MAY be sent unsolicited.  This serves as a\n          // unidirectional heartbeat.  A response to an unsolicited Pong frame is\n          // not expected.\n\n          const body = this.consume(payloadLength)\n\n          if (channels.pong.hasSubscribers) {\n            channels.pong.publish({\n              payload: body\n            })\n          }\n\n          if (this.#byteOffset > 0) {\n            continue\n          } else {\n            callback()\n            return\n          }\n        }\n      } else if (this.#state === parserStates.PAYLOADLENGTH_16) {\n        if (this.#byteOffset < 2) {\n          return callback()\n        }\n\n        const buffer = this.consume(2)\n\n        this.#info.payloadLength = buffer.readUInt16BE(0)\n        this.#state = parserStates.READ_DATA\n      } else if (this.#state === parserStates.PAYLOADLENGTH_64) {\n        if (this.#byteOffset < 8) {\n          return callback()\n        }\n\n        const buffer = this.consume(8)\n        const upper = buffer.readUInt32BE(0)\n\n        // 2^31 is the maxinimum bytes an arraybuffer can contain\n        // on 32-bit systems. Although, on 64-bit systems, this is\n        // 2^53-1 bytes.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\n        // https://source.chromium.org/chromium/chromium/src/+/main:v8/src/common/globals.h;drc=1946212ac0100668f14eb9e2843bdd846e510a1e;bpv=1;bpt=1;l=1275\n        // https://source.chromium.org/chromium/chromium/src/+/main:v8/src/objects/js-array-buffer.h;l=34;drc=1946212ac0100668f14eb9e2843bdd846e510a1e\n        if (upper > 2 ** 31 - 1) {\n          failWebsocketConnection(this.ws, 'Received payload length > 2^31 bytes.')\n          return\n        }\n\n        const lower = buffer.readUInt32BE(4)\n\n        this.#info.payloadLength = (upper << 8) + lower\n        this.#state = parserStates.READ_DATA\n      } else if (this.#state === parserStates.READ_DATA) {\n        if (this.#byteOffset < this.#info.payloadLength) {\n          // If there is still more data in this chunk that needs to be read\n          return callback()\n        } else if (this.#byteOffset >= this.#info.payloadLength) {\n          // If the server sent multiple frames in a single chunk\n\n          const body = this.consume(this.#info.payloadLength)\n\n          this.#fragments.push(body)\n\n          // If the frame is unfragmented, or a fragmented frame was terminated,\n          // a message was received\n          if (!this.#info.fragmented || (this.#info.fin && this.#info.opcode === opcodes.CONTINUATION)) {\n            const fullMessage = Buffer.concat(this.#fragments)\n\n            websocketMessageReceived(this.ws, this.#info.originalOpcode, fullMessage)\n\n            this.#info = {}\n            this.#fragments.length = 0\n          }\n\n          this.#state = parserStates.INFO\n        }\n      }\n\n      if (this.#byteOffset > 0) {\n        continue\n      } else {\n        callback()\n        break\n      }\n    }\n  }\n\n  /**\n   * Take n bytes from the buffered Buffers\n   * @param {number} n\n   * @returns {Buffer|null}\n   */\n  consume (n) {\n    if (n > this.#byteOffset) {\n      return null\n    } else if (n === 0) {\n      return emptyBuffer\n    }\n\n    if (this.#buffers[0].length === n) {\n      this.#byteOffset -= this.#buffers[0].length\n      return this.#buffers.shift()\n    }\n\n    const buffer = Buffer.allocUnsafe(n)\n    let offset = 0\n\n    while (offset !== n) {\n      const next = this.#buffers[0]\n      const { length } = next\n\n      if (length + offset === n) {\n        buffer.set(this.#buffers.shift(), offset)\n        break\n      } else if (length + offset > n) {\n        buffer.set(next.subarray(0, n - offset), offset)\n        this.#buffers[0] = next.subarray(n - offset)\n        break\n      } else {\n        buffer.set(this.#buffers.shift(), offset)\n        offset += next.length\n      }\n    }\n\n    this.#byteOffset -= n\n\n    return buffer\n  }\n\n  parseCloseBody (onlyCode, data) {\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-7.1.5\n    /** @type {number|undefined} */\n    let code\n\n    if (data.length >= 2) {\n      // _The WebSocket Connection Close Code_ is\n      // defined as the status code (Section 7.4) contained in the first Close\n      // control frame received by the application\n      code = data.readUInt16BE(0)\n    }\n\n    if (onlyCode) {\n      if (!isValidStatusCode(code)) {\n        return null\n      }\n\n      return { code }\n    }\n\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-7.1.6\n    /** @type {Buffer} */\n    let reason = data.subarray(2)\n\n    // Remove BOM\n    if (reason[0] === 0xEF && reason[1] === 0xBB && reason[2] === 0xBF) {\n      reason = reason.subarray(3)\n    }\n\n    if (code !== undefined && !isValidStatusCode(code)) {\n      return null\n    }\n\n    try {\n      // TODO: optimize this\n      reason = new TextDecoder('utf-8', { fatal: true }).decode(reason)\n    } catch {\n      return null\n    }\n\n    return { code, reason }\n  }\n\n  get closingInfo () {\n    return this.#info.closeInfo\n  }\n}\n\nmodule.exports = {\n  ByteParser\n}\n","'use strict'\n\nmodule.exports = {\n  kWebSocketURL: Symbol('url'),\n  kReadyState: Symbol('ready state'),\n  kController: Symbol('controller'),\n  kResponse: Symbol('response'),\n  kBinaryType: Symbol('binary type'),\n  kSentClose: Symbol('sent close'),\n  kReceivedClose: Symbol('received close'),\n  kByteParser: Symbol('byte parser')\n}\n","'use strict'\n\nconst { kReadyState, kController, kResponse, kBinaryType, kWebSocketURL } = require('./symbols')\nconst { states, opcodes } = require('./constants')\nconst { MessageEvent, ErrorEvent } = require('./events')\n\n/* globals Blob */\n\n/**\n * @param {import('./websocket').WebSocket} ws\n */\nfunction isEstablished (ws) {\n  // If the server's response is validated as provided for above, it is\n  // said that _The WebSocket Connection is Established_ and that the\n  // WebSocket Connection is in the OPEN state.\n  return ws[kReadyState] === states.OPEN\n}\n\n/**\n * @param {import('./websocket').WebSocket} ws\n */\nfunction isClosing (ws) {\n  // Upon either sending or receiving a Close control frame, it is said\n  // that _The WebSocket Closing Handshake is Started_ and that the\n  // WebSocket connection is in the CLOSING state.\n  return ws[kReadyState] === states.CLOSING\n}\n\n/**\n * @param {import('./websocket').WebSocket} ws\n */\nfunction isClosed (ws) {\n  return ws[kReadyState] === states.CLOSED\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#concept-event-fire\n * @param {string} e\n * @param {EventTarget} target\n * @param {EventInit | undefined} eventInitDict\n */\nfunction fireEvent (e, target, eventConstructor = Event, eventInitDict) {\n  // 1. If eventConstructor is not given, then let eventConstructor be Event.\n\n  // 2. Let event be the result of creating an event given eventConstructor,\n  //    in the relevant realm of target.\n  // 3. Initialize event’s type attribute to e.\n  const event = new eventConstructor(e, eventInitDict) // eslint-disable-line new-cap\n\n  // 4. Initialize any other IDL attributes of event as described in the\n  //    invocation of this algorithm.\n\n  // 5. Return the result of dispatching event at target, with legacy target\n  //    override flag set if set.\n  target.dispatchEvent(event)\n}\n\n/**\n * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol\n * @param {import('./websocket').WebSocket} ws\n * @param {number} type Opcode\n * @param {Buffer} data application data\n */\nfunction websocketMessageReceived (ws, type, data) {\n  // 1. If ready state is not OPEN (1), then return.\n  if (ws[kReadyState] !== states.OPEN) {\n    return\n  }\n\n  // 2. Let dataForEvent be determined by switching on type and binary type:\n  let dataForEvent\n\n  if (type === opcodes.TEXT) {\n    // -> type indicates that the data is Text\n    //      a new DOMString containing data\n    try {\n      dataForEvent = new TextDecoder('utf-8', { fatal: true }).decode(data)\n    } catch {\n      failWebsocketConnection(ws, 'Received invalid UTF-8 in text frame.')\n      return\n    }\n  } else if (type === opcodes.BINARY) {\n    if (ws[kBinaryType] === 'blob') {\n      // -> type indicates that the data is Binary and binary type is \"blob\"\n      //      a new Blob object, created in the relevant Realm of the WebSocket\n      //      object, that represents data as its raw data\n      dataForEvent = new Blob([data])\n    } else {\n      // -> type indicates that the data is Binary and binary type is \"arraybuffer\"\n      //      a new ArrayBuffer object, created in the relevant Realm of the\n      //      WebSocket object, whose contents are data\n      dataForEvent = new Uint8Array(data).buffer\n    }\n  }\n\n  // 3. Fire an event named message at the WebSocket object, using MessageEvent,\n  //    with the origin attribute initialized to the serialization of the WebSocket\n  //    object’s url's origin, and the data attribute initialized to dataForEvent.\n  fireEvent('message', ws, MessageEvent, {\n    origin: ws[kWebSocketURL].origin,\n    data: dataForEvent\n  })\n}\n\n/**\n * @see https://datatracker.ietf.org/doc/html/rfc6455\n * @see https://datatracker.ietf.org/doc/html/rfc2616\n * @see https://bugs.chromium.org/p/chromium/issues/detail?id=398407\n * @param {string} protocol\n */\nfunction isValidSubprotocol (protocol) {\n  // If present, this value indicates one\n  // or more comma-separated subprotocol the client wishes to speak,\n  // ordered by preference.  The elements that comprise this value\n  // MUST be non-empty strings with characters in the range U+0021 to\n  // U+007E not including separator characters as defined in\n  // [RFC2616] and MUST all be unique strings.\n  if (protocol.length === 0) {\n    return false\n  }\n\n  for (const char of protocol) {\n    const code = char.charCodeAt(0)\n\n    if (\n      code < 0x21 ||\n      code > 0x7E ||\n      char === '(' ||\n      char === ')' ||\n      char === '<' ||\n      char === '>' ||\n      char === '@' ||\n      char === ',' ||\n      char === ';' ||\n      char === ':' ||\n      char === '\\\\' ||\n      char === '\"' ||\n      char === '/' ||\n      char === '[' ||\n      char === ']' ||\n      char === '?' ||\n      char === '=' ||\n      char === '{' ||\n      char === '}' ||\n      code === 32 || // SP\n      code === 9 // HT\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @see https://datatracker.ietf.org/doc/html/rfc6455#section-7-4\n * @param {number} code\n */\nfunction isValidStatusCode (code) {\n  if (code >= 1000 && code < 1015) {\n    return (\n      code !== 1004 && // reserved\n      code !== 1005 && // \"MUST NOT be set as a status code\"\n      code !== 1006 // \"MUST NOT be set as a status code\"\n    )\n  }\n\n  return code >= 3000 && code <= 4999\n}\n\n/**\n * @param {import('./websocket').WebSocket} ws\n * @param {string|undefined} reason\n */\nfunction failWebsocketConnection (ws, reason) {\n  const { [kController]: controller, [kResponse]: response } = ws\n\n  controller.abort()\n\n  if (response?.socket && !response.socket.destroyed) {\n    response.socket.destroy()\n  }\n\n  if (reason) {\n    fireEvent('error', ws, ErrorEvent, {\n      error: new Error(reason)\n    })\n  }\n}\n\nmodule.exports = {\n  isEstablished,\n  isClosing,\n  isClosed,\n  fireEvent,\n  isValidSubprotocol,\n  isValidStatusCode,\n  failWebsocketConnection,\n  websocketMessageReceived\n}\n","'use strict'\n\nconst { webidl } = require('../fetch/webidl')\nconst { DOMException } = require('../fetch/constants')\nconst { URLSerializer } = require('../fetch/dataURL')\nconst { getGlobalOrigin } = require('../fetch/global')\nconst { staticPropertyDescriptors, states, opcodes, emptyBuffer } = require('./constants')\nconst {\n  kWebSocketURL,\n  kReadyState,\n  kController,\n  kBinaryType,\n  kResponse,\n  kSentClose,\n  kByteParser\n} = require('./symbols')\nconst { isEstablished, isClosing, isValidSubprotocol, failWebsocketConnection, fireEvent } = require('./util')\nconst { establishWebSocketConnection } = require('./connection')\nconst { WebsocketFrameSend } = require('./frame')\nconst { ByteParser } = require('./receiver')\nconst { kEnumerableProperty, isBlobLike } = require('../core/util')\nconst { getGlobalDispatcher } = require('../global')\nconst { types } = require('util')\n\nlet experimentalWarned = false\n\n// https://websockets.spec.whatwg.org/#interface-definition\nclass WebSocket extends EventTarget {\n  #events = {\n    open: null,\n    error: null,\n    close: null,\n    message: null\n  }\n\n  #bufferedAmount = 0\n  #protocol = ''\n  #extensions = ''\n\n  /**\n   * @param {string} url\n   * @param {string|string[]} protocols\n   */\n  constructor (url, protocols = []) {\n    super()\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'WebSocket constructor' })\n\n    if (!experimentalWarned) {\n      experimentalWarned = true\n      process.emitWarning('WebSockets are experimental, expect them to change at any time.', {\n        code: 'UNDICI-WS'\n      })\n    }\n\n    const options = webidl.converters['DOMString or sequence<DOMString> or WebSocketInit'](protocols)\n\n    url = webidl.converters.USVString(url)\n    protocols = options.protocols\n\n    // 1. Let baseURL be this's relevant settings object's API base URL.\n    const baseURL = getGlobalOrigin()\n\n    // 1. Let urlRecord be the result of applying the URL parser to url with baseURL.\n    let urlRecord\n\n    try {\n      urlRecord = new URL(url, baseURL)\n    } catch (e) {\n      // 3. If urlRecord is failure, then throw a \"SyntaxError\" DOMException.\n      throw new DOMException(e, 'SyntaxError')\n    }\n\n    // 4. If urlRecord’s scheme is \"http\", then set urlRecord’s scheme to \"ws\".\n    if (urlRecord.protocol === 'http:') {\n      urlRecord.protocol = 'ws:'\n    } else if (urlRecord.protocol === 'https:') {\n      // 5. Otherwise, if urlRecord’s scheme is \"https\", set urlRecord’s scheme to \"wss\".\n      urlRecord.protocol = 'wss:'\n    }\n\n    // 6. If urlRecord’s scheme is not \"ws\" or \"wss\", then throw a \"SyntaxError\" DOMException.\n    if (urlRecord.protocol !== 'ws:' && urlRecord.protocol !== 'wss:') {\n      throw new DOMException(\n        `Expected a ws: or wss: protocol, got ${urlRecord.protocol}`,\n        'SyntaxError'\n      )\n    }\n\n    // 7. If urlRecord’s fragment is non-null, then throw a \"SyntaxError\"\n    //    DOMException.\n    if (urlRecord.hash || urlRecord.href.endsWith('#')) {\n      throw new DOMException('Got fragment', 'SyntaxError')\n    }\n\n    // 8. If protocols is a string, set protocols to a sequence consisting\n    //    of just that string.\n    if (typeof protocols === 'string') {\n      protocols = [protocols]\n    }\n\n    // 9. If any of the values in protocols occur more than once or otherwise\n    //    fail to match the requirements for elements that comprise the value\n    //    of `Sec-WebSocket-Protocol` fields as defined by The WebSocket\n    //    protocol, then throw a \"SyntaxError\" DOMException.\n    if (protocols.length !== new Set(protocols.map(p => p.toLowerCase())).size) {\n      throw new DOMException('Invalid Sec-WebSocket-Protocol value', 'SyntaxError')\n    }\n\n    if (protocols.length > 0 && !protocols.every(p => isValidSubprotocol(p))) {\n      throw new DOMException('Invalid Sec-WebSocket-Protocol value', 'SyntaxError')\n    }\n\n    // 10. Set this's url to urlRecord.\n    this[kWebSocketURL] = new URL(urlRecord.href)\n\n    // 11. Let client be this's relevant settings object.\n\n    // 12. Run this step in parallel:\n\n    //    1. Establish a WebSocket connection given urlRecord, protocols,\n    //       and client.\n    this[kController] = establishWebSocketConnection(\n      urlRecord,\n      protocols,\n      this,\n      (response) => this.#onConnectionEstablished(response),\n      options\n    )\n\n    // Each WebSocket object has an associated ready state, which is a\n    // number representing the state of the connection. Initially it must\n    // be CONNECTING (0).\n    this[kReadyState] = WebSocket.CONNECTING\n\n    // The extensions attribute must initially return the empty string.\n\n    // The protocol attribute must initially return the empty string.\n\n    // Each WebSocket object has an associated binary type, which is a\n    // BinaryType. Initially it must be \"blob\".\n    this[kBinaryType] = 'blob'\n  }\n\n  /**\n   * @see https://websockets.spec.whatwg.org/#dom-websocket-close\n   * @param {number|undefined} code\n   * @param {string|undefined} reason\n   */\n  close (code = undefined, reason = undefined) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (code !== undefined) {\n      code = webidl.converters['unsigned short'](code, { clamp: true })\n    }\n\n    if (reason !== undefined) {\n      reason = webidl.converters.USVString(reason)\n    }\n\n    // 1. If code is present, but is neither an integer equal to 1000 nor an\n    //    integer in the range 3000 to 4999, inclusive, throw an\n    //    \"InvalidAccessError\" DOMException.\n    if (code !== undefined) {\n      if (code !== 1000 && (code < 3000 || code > 4999)) {\n        throw new DOMException('invalid code', 'InvalidAccessError')\n      }\n    }\n\n    let reasonByteLength = 0\n\n    // 2. If reason is present, then run these substeps:\n    if (reason !== undefined) {\n      // 1. Let reasonBytes be the result of encoding reason.\n      // 2. If reasonBytes is longer than 123 bytes, then throw a\n      //    \"SyntaxError\" DOMException.\n      reasonByteLength = Buffer.byteLength(reason)\n\n      if (reasonByteLength > 123) {\n        throw new DOMException(\n          `Reason must be less than 123 bytes; received ${reasonByteLength}`,\n          'SyntaxError'\n        )\n      }\n    }\n\n    // 3. Run the first matching steps from the following list:\n    if (this[kReadyState] === WebSocket.CLOSING || this[kReadyState] === WebSocket.CLOSED) {\n      // If this's ready state is CLOSING (2) or CLOSED (3)\n      // Do nothing.\n    } else if (!isEstablished(this)) {\n      // If the WebSocket connection is not yet established\n      // Fail the WebSocket connection and set this's ready state\n      // to CLOSING (2).\n      failWebsocketConnection(this, 'Connection was closed before it was established.')\n      this[kReadyState] = WebSocket.CLOSING\n    } else if (!isClosing(this)) {\n      // If the WebSocket closing handshake has not yet been started\n      // Start the WebSocket closing handshake and set this's ready\n      // state to CLOSING (2).\n      // - If neither code nor reason is present, the WebSocket Close\n      //   message must not have a body.\n      // - If code is present, then the status code to use in the\n      //   WebSocket Close message must be the integer given by code.\n      // - If reason is also present, then reasonBytes must be\n      //   provided in the Close message after the status code.\n\n      const frame = new WebsocketFrameSend()\n\n      // If neither code nor reason is present, the WebSocket Close\n      // message must not have a body.\n\n      // If code is present, then the status code to use in the\n      // WebSocket Close message must be the integer given by code.\n      if (code !== undefined && reason === undefined) {\n        frame.frameData = Buffer.allocUnsafe(2)\n        frame.frameData.writeUInt16BE(code, 0)\n      } else if (code !== undefined && reason !== undefined) {\n        // If reason is also present, then reasonBytes must be\n        // provided in the Close message after the status code.\n        frame.frameData = Buffer.allocUnsafe(2 + reasonByteLength)\n        frame.frameData.writeUInt16BE(code, 0)\n        // the body MAY contain UTF-8-encoded data with value /reason/\n        frame.frameData.write(reason, 2, 'utf-8')\n      } else {\n        frame.frameData = emptyBuffer\n      }\n\n      /** @type {import('stream').Duplex} */\n      const socket = this[kResponse].socket\n\n      socket.write(frame.createFrame(opcodes.CLOSE), (err) => {\n        if (!err) {\n          this[kSentClose] = true\n        }\n      })\n\n      // Upon either sending or receiving a Close control frame, it is said\n      // that _The WebSocket Closing Handshake is Started_ and that the\n      // WebSocket connection is in the CLOSING state.\n      this[kReadyState] = states.CLOSING\n    } else {\n      // Otherwise\n      // Set this's ready state to CLOSING (2).\n      this[kReadyState] = WebSocket.CLOSING\n    }\n  }\n\n  /**\n   * @see https://websockets.spec.whatwg.org/#dom-websocket-send\n   * @param {NodeJS.TypedArray|ArrayBuffer|Blob|string} data\n   */\n  send (data) {\n    webidl.brandCheck(this, WebSocket)\n\n    webidl.argumentLengthCheck(arguments, 1, { header: 'WebSocket.send' })\n\n    data = webidl.converters.WebSocketSendData(data)\n\n    // 1. If this's ready state is CONNECTING, then throw an\n    //    \"InvalidStateError\" DOMException.\n    if (this[kReadyState] === WebSocket.CONNECTING) {\n      throw new DOMException('Sent before connected.', 'InvalidStateError')\n    }\n\n    // 2. Run the appropriate set of steps from the following list:\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-6.1\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-5.2\n\n    if (!isEstablished(this) || isClosing(this)) {\n      return\n    }\n\n    /** @type {import('stream').Duplex} */\n    const socket = this[kResponse].socket\n\n    // If data is a string\n    if (typeof data === 'string') {\n      // If the WebSocket connection is established and the WebSocket\n      // closing handshake has not yet started, then the user agent\n      // must send a WebSocket Message comprised of the data argument\n      // using a text frame opcode; if the data cannot be sent, e.g.\n      // because it would need to be buffered but the buffer is full,\n      // the user agent must flag the WebSocket as full and then close\n      // the WebSocket connection. Any invocation of this method with a\n      // string argument that does not throw an exception must increase\n      // the bufferedAmount attribute by the number of bytes needed to\n      // express the argument as UTF-8.\n\n      const value = Buffer.from(data)\n      const frame = new WebsocketFrameSend(value)\n      const buffer = frame.createFrame(opcodes.TEXT)\n\n      this.#bufferedAmount += value.byteLength\n      socket.write(buffer, () => {\n        this.#bufferedAmount -= value.byteLength\n      })\n    } else if (types.isArrayBuffer(data)) {\n      // If the WebSocket connection is established, and the WebSocket\n      // closing handshake has not yet started, then the user agent must\n      // send a WebSocket Message comprised of data using a binary frame\n      // opcode; if the data cannot be sent, e.g. because it would need\n      // to be buffered but the buffer is full, the user agent must flag\n      // the WebSocket as full and then close the WebSocket connection.\n      // The data to be sent is the data stored in the buffer described\n      // by the ArrayBuffer object. Any invocation of this method with an\n      // ArrayBuffer argument that does not throw an exception must\n      // increase the bufferedAmount attribute by the length of the\n      // ArrayBuffer in bytes.\n\n      const value = Buffer.from(data)\n      const frame = new WebsocketFrameSend(value)\n      const buffer = frame.createFrame(opcodes.BINARY)\n\n      this.#bufferedAmount += value.byteLength\n      socket.write(buffer, () => {\n        this.#bufferedAmount -= value.byteLength\n      })\n    } else if (ArrayBuffer.isView(data)) {\n      // If the WebSocket connection is established, and the WebSocket\n      // closing handshake has not yet started, then the user agent must\n      // send a WebSocket Message comprised of data using a binary frame\n      // opcode; if the data cannot be sent, e.g. because it would need to\n      // be buffered but the buffer is full, the user agent must flag the\n      // WebSocket as full and then close the WebSocket connection. The\n      // data to be sent is the data stored in the section of the buffer\n      // described by the ArrayBuffer object that data references. Any\n      // invocation of this method with this kind of argument that does\n      // not throw an exception must increase the bufferedAmount attribute\n      // by the length of data’s buffer in bytes.\n\n      const ab = Buffer.from(data, data.byteOffset, data.byteLength)\n\n      const frame = new WebsocketFrameSend(ab)\n      const buffer = frame.createFrame(opcodes.BINARY)\n\n      this.#bufferedAmount += ab.byteLength\n      socket.write(buffer, () => {\n        this.#bufferedAmount -= ab.byteLength\n      })\n    } else if (isBlobLike(data)) {\n      // If the WebSocket connection is established, and the WebSocket\n      // closing handshake has not yet started, then the user agent must\n      // send a WebSocket Message comprised of data using a binary frame\n      // opcode; if the data cannot be sent, e.g. because it would need to\n      // be buffered but the buffer is full, the user agent must flag the\n      // WebSocket as full and then close the WebSocket connection. The data\n      // to be sent is the raw data represented by the Blob object. Any\n      // invocation of this method with a Blob argument that does not throw\n      // an exception must increase the bufferedAmount attribute by the size\n      // of the Blob object’s raw data, in bytes.\n\n      const frame = new WebsocketFrameSend()\n\n      data.arrayBuffer().then((ab) => {\n        const value = Buffer.from(ab)\n        frame.frameData = value\n        const buffer = frame.createFrame(opcodes.BINARY)\n\n        this.#bufferedAmount += value.byteLength\n        socket.write(buffer, () => {\n          this.#bufferedAmount -= value.byteLength\n        })\n      })\n    }\n  }\n\n  get readyState () {\n    webidl.brandCheck(this, WebSocket)\n\n    // The readyState getter steps are to return this's ready state.\n    return this[kReadyState]\n  }\n\n  get bufferedAmount () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#bufferedAmount\n  }\n\n  get url () {\n    webidl.brandCheck(this, WebSocket)\n\n    // The url getter steps are to return this's url, serialized.\n    return URLSerializer(this[kWebSocketURL])\n  }\n\n  get extensions () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#extensions\n  }\n\n  get protocol () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#protocol\n  }\n\n  get onopen () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#events.open\n  }\n\n  set onopen (fn) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (this.#events.open) {\n      this.removeEventListener('open', this.#events.open)\n    }\n\n    if (typeof fn === 'function') {\n      this.#events.open = fn\n      this.addEventListener('open', fn)\n    } else {\n      this.#events.open = null\n    }\n  }\n\n  get onerror () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#events.error\n  }\n\n  set onerror (fn) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (this.#events.error) {\n      this.removeEventListener('error', this.#events.error)\n    }\n\n    if (typeof fn === 'function') {\n      this.#events.error = fn\n      this.addEventListener('error', fn)\n    } else {\n      this.#events.error = null\n    }\n  }\n\n  get onclose () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#events.close\n  }\n\n  set onclose (fn) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (this.#events.close) {\n      this.removeEventListener('close', this.#events.close)\n    }\n\n    if (typeof fn === 'function') {\n      this.#events.close = fn\n      this.addEventListener('close', fn)\n    } else {\n      this.#events.close = null\n    }\n  }\n\n  get onmessage () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this.#events.message\n  }\n\n  set onmessage (fn) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (this.#events.message) {\n      this.removeEventListener('message', this.#events.message)\n    }\n\n    if (typeof fn === 'function') {\n      this.#events.message = fn\n      this.addEventListener('message', fn)\n    } else {\n      this.#events.message = null\n    }\n  }\n\n  get binaryType () {\n    webidl.brandCheck(this, WebSocket)\n\n    return this[kBinaryType]\n  }\n\n  set binaryType (type) {\n    webidl.brandCheck(this, WebSocket)\n\n    if (type !== 'blob' && type !== 'arraybuffer') {\n      this[kBinaryType] = 'blob'\n    } else {\n      this[kBinaryType] = type\n    }\n  }\n\n  /**\n   * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol\n   */\n  #onConnectionEstablished (response) {\n    // processResponse is called when the \"response’s header list has been received and initialized.\"\n    // once this happens, the connection is open\n    this[kResponse] = response\n\n    const parser = new ByteParser(this)\n    parser.on('drain', function onParserDrain () {\n      this.ws[kResponse].socket.resume()\n    })\n\n    response.socket.ws = this\n    this[kByteParser] = parser\n\n    // 1. Change the ready state to OPEN (1).\n    this[kReadyState] = states.OPEN\n\n    // 2. Change the extensions attribute’s value to the extensions in use, if\n    //    it is not the null value.\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-9.1\n    const extensions = response.headersList.get('sec-websocket-extensions')\n\n    if (extensions !== null) {\n      this.#extensions = extensions\n    }\n\n    // 3. Change the protocol attribute’s value to the subprotocol in use, if\n    //    it is not the null value.\n    // https://datatracker.ietf.org/doc/html/rfc6455#section-1.9\n    const protocol = response.headersList.get('sec-websocket-protocol')\n\n    if (protocol !== null) {\n      this.#protocol = protocol\n    }\n\n    // 4. Fire an event named open at the WebSocket object.\n    fireEvent('open', this)\n  }\n}\n\n// https://websockets.spec.whatwg.org/#dom-websocket-connecting\nWebSocket.CONNECTING = WebSocket.prototype.CONNECTING = states.CONNECTING\n// https://websockets.spec.whatwg.org/#dom-websocket-open\nWebSocket.OPEN = WebSocket.prototype.OPEN = states.OPEN\n// https://websockets.spec.whatwg.org/#dom-websocket-closing\nWebSocket.CLOSING = WebSocket.prototype.CLOSING = states.CLOSING\n// https://websockets.spec.whatwg.org/#dom-websocket-closed\nWebSocket.CLOSED = WebSocket.prototype.CLOSED = states.CLOSED\n\nObject.defineProperties(WebSocket.prototype, {\n  CONNECTING: staticPropertyDescriptors,\n  OPEN: staticPropertyDescriptors,\n  CLOSING: staticPropertyDescriptors,\n  CLOSED: staticPropertyDescriptors,\n  url: kEnumerableProperty,\n  readyState: kEnumerableProperty,\n  bufferedAmount: kEnumerableProperty,\n  onopen: kEnumerableProperty,\n  onerror: kEnumerableProperty,\n  onclose: kEnumerableProperty,\n  close: kEnumerableProperty,\n  onmessage: kEnumerableProperty,\n  binaryType: kEnumerableProperty,\n  send: kEnumerableProperty,\n  extensions: kEnumerableProperty,\n  protocol: kEnumerableProperty,\n  [Symbol.toStringTag]: {\n    value: 'WebSocket',\n    writable: false,\n    enumerable: false,\n    configurable: true\n  }\n})\n\nObject.defineProperties(WebSocket, {\n  CONNECTING: staticPropertyDescriptors,\n  OPEN: staticPropertyDescriptors,\n  CLOSING: staticPropertyDescriptors,\n  CLOSED: staticPropertyDescriptors\n})\n\nwebidl.converters['sequence<DOMString>'] = webidl.sequenceConverter(\n  webidl.converters.DOMString\n)\n\nwebidl.converters['DOMString or sequence<DOMString>'] = function (V) {\n  if (webidl.util.Type(V) === 'Object' && Symbol.iterator in V) {\n    return webidl.converters['sequence<DOMString>'](V)\n  }\n\n  return webidl.converters.DOMString(V)\n}\n\n// This implements the propsal made in https://github.com/whatwg/websockets/issues/42\nwebidl.converters.WebSocketInit = webidl.dictionaryConverter([\n  {\n    key: 'protocols',\n    converter: webidl.converters['DOMString or sequence<DOMString>'],\n    get defaultValue () {\n      return []\n    }\n  },\n  {\n    key: 'dispatcher',\n    converter: (V) => V,\n    get defaultValue () {\n      return getGlobalDispatcher()\n    }\n  },\n  {\n    key: 'headers',\n    converter: webidl.nullableConverter(webidl.converters.HeadersInit)\n  }\n])\n\nwebidl.converters['DOMString or sequence<DOMString> or WebSocketInit'] = function (V) {\n  if (webidl.util.Type(V) === 'Object' && !(Symbol.iterator in V)) {\n    return webidl.converters.WebSocketInit(V)\n  }\n\n  return { protocols: webidl.converters['DOMString or sequence<DOMString>'](V) }\n}\n\nwebidl.converters.WebSocketSendData = function (V) {\n  if (webidl.util.Type(V) === 'Object') {\n    if (isBlobLike(V)) {\n      return webidl.converters.Blob(V, { strict: false })\n    }\n\n    if (ArrayBuffer.isView(V) || types.isAnyArrayBuffer(V)) {\n      return webidl.converters.BufferSource(V)\n    }\n  }\n\n  return webidl.converters.USVString(V)\n}\n\nmodule.exports = {\n  WebSocket\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport actions.core.*\nimport actions.core.ext.getInput\nimport actions.core.ext.getListInput\nimport actions.io.mkdirP\nimport com.github.burrunan.gradle.GradleCacheAction\nimport com.github.burrunan.gradle.Parameters\nimport com.github.burrunan.gradle.github.stateVariable\nimport com.github.burrunan.gradle.proxy.CacheProxy\nimport com.github.burrunan.launcher.LaunchParams\nimport com.github.burrunan.launcher.install\nimport com.github.burrunan.launcher.launchGradle\nimport com.github.burrunan.launcher.resolveDistribution\nimport com.github.burrunan.wrappers.nodejs.normalizedPath\nimport js.globals.globalThis\nimport node.buffer.BufferEncoding\nimport node.fs.writeFile\nimport node.path.path\nimport node.process.process\nimport octokit.currentTrigger\n\nfun String.splitLines() =\n    split(Regex(\"\\\\s*[\\r\\n]+\\\\s*\"))\n        .filter { !it.startsWith(\"#\") && it.contains(\"=\") }\n        .associate {\n            val values = it.split(Regex(\"\\\\s*=\\\\s*\"), limit = 2)\n            values[0] to (values.getOrNull(1) ?: \"\")\n        }\n\nfun isMochaRunning() =\n    arrayOf(\"afterEach\", \"after\", \"beforeEach\", \"before\", \"describe\", \"it\").all {\n        globalThis[it] is Function<*>\n    }\n\nsuspend fun main() {\n    if (isMochaRunning()) {\n        // Ignore if called from tests\n        return\n    }\n    val stageVar = stateVariable(\"stage\") { \"MAIN\" }\n    val stage = ActionStage.values().firstOrNull { it.name == stageVar.get() }\n    // Set next stage\n    stageVar.set(\n        when (stage) {\n            ActionStage.MAIN -> ActionStage.POST\n            null -> {\n                setFailed(\"Unable to find action stage: ${stageVar.get()}\")\n                return\n            }\n            else -> null\n        }?.name ?: \"FINAL\",\n    )\n    try {\n        mainInternal(stage)\n    } catch (e: ActionFailedException) {\n        setFailed(e.message)\n    }\n}\n\nsuspend fun mainInternal(stage: ActionStage) {\n    val homeDirectory = getInput(\"home-directory\").trimEnd('/', '\\\\')\n    if (homeDirectory != \"\") {\n        info(\"Overriding home directory to $homeDirectory\")\n        process.env[\"HOME\"] = homeDirectory\n    }\n\n    val gradleStartArguments = parseArgsStringToArgv(getInput(\"arguments\")).toList()\n    val cacheProxyEnabled = getInput(\"remote-build-cache-proxy-enabled\").ifBlank { \"true\" }.toBoolean()\n\n    val executionOnlyCaches = getInput(\"execution-only-caches\").ifBlank { \"false\" }.toBoolean()\n    val enableBuildScanReport = getInput(\"gradle-build-scan-report\").ifBlank { \"true\" }.toBoolean()\n\n    val buildRootDirectory = getInput(\"build-root-directory\").trimEnd('/', '\\\\')\n    if (buildRootDirectory != \"\") {\n        info(\"changing working directory to $buildRootDirectory\")\n        process.chdir(buildRootDirectory)\n    }\n\n    val params = Parameters(\n        jobId = ActionsEnvironment.RUNNER_OS + \"-\" + getInput(\"job-id\"),\n        path = \".\",\n        debug = getInput(\"debug\").toBoolean(),\n        generatedGradleJars = getInput(\"save-generated-gradle-jars\").ifBlank { \"true\" }.toBoolean(),\n        localBuildCache = (!cacheProxyEnabled || gradleStartArguments.isEmpty()) && getInput(\"save-local-build-cache\").ifBlank { \"true\" }\n            .toBoolean(),\n        gradleDependenciesCache = !executionOnlyCaches && getInput(\"save-gradle-dependencies-cache\").ifBlank { \"true\" }.toBoolean(),\n        gradleDependenciesCacheKey = getListInput(\"gradle-dependencies-cache-key\"),\n        mavenDependenciesCache = !executionOnlyCaches && getInput(\"save-maven-dependencies-cache\").ifBlank { \"true\" }.toBoolean(),\n        mavenLocalIgnorePaths = getListInput(\"maven-local-ignore-paths\"),\n        concurrent = getInput(\"concurrent\").ifBlank { \"false\" }.toBoolean(),\n        readOnly = getInput(\"read-only\").ifBlank { \"false\" }.toBoolean(),\n    )\n\n    val gradleDistribution = resolveDistribution(\n        versionSpec = getInput(\"gradle-version\").ifBlank { \"wrapper\" },\n        projectPath = params.path,\n        distributionUrl = getInput(\"gradle-distribution-url\").ifBlank { null },\n        distributionSha256Sum = getInput(\"gradle-distribution-sha-256-sum\").ifBlank { null },\n        enableDistributionSha256SumWarning = getInput(\"gradle-distribution-sha-256-sum-warning\").ifBlank { \"true\" }.toBoolean(),\n    )\n\n    if (stage == ActionStage.MAIN || stage == ActionStage.POST) {\n        val cacheAction = GradleCacheAction(currentTrigger(), params, gradleDistribution)\n\n        if (params.generatedGradleJars || params.localBuildCache ||\n            params.gradleDependenciesCache || params.mavenDependenciesCache\n        ) {\n            cacheAction.execute(stage)\n        }\n    }\n\n    if (stage == ActionStage.MAIN && gradleStartArguments.isNotEmpty()) {\n        val args = when (params.localBuildCache || cacheProxyEnabled) {\n            true -> listOf(\"--build-cache\") + gradleStartArguments\n            else -> gradleStartArguments\n        }\n        val launchParams = LaunchParams(\n            gradle = install(gradleDistribution),\n            daemon = getInput(\"daemon\").ifBlank { \"false\" }.toBoolean(),\n            projectPath = params.path,\n            arguments = args,\n            properties = getInput(\"properties\").splitLines(),\n        )\n\n        val cacheProxy = CacheProxy()\n\n        if (cacheProxyEnabled) {\n            info(\"Starting remote cache proxy, adding it via ~/.gradle/init.gradle\")\n            cacheProxy.start()\n            val gradleHome = path.join(\"~\".normalizedPath, \".gradle\")\n            mkdirP(gradleHome)\n            writeFile(\n                path.join(gradleHome, \"init.gradle\"),\n                cacheProxy.getMultiCacheConfiguration(\n                    multiCacheEnabled = getInput(\"multi-cache-enabled\").ifBlank { \"true\" }.toBoolean(),\n                    multiCacheVersion = getInput(\"multi-cache-version\").ifBlank { \"1.0\" },\n                    multiCacheRepository = getInput(\"multi-cache-repository\"),\n                    multiCacheGroupIdFilter = getInput(\"multi-cache-group-id-filter\").ifBlank { \"com[.]github[.]burrunan[.]multi-?cache\" },\n                    push = !params.readOnly,\n                ),\n                BufferEncoding.utf8,\n            )\n        }\n\n        try {\n            val result = launchGradle(launchParams)\n            if (enableBuildScanReport) {\n                result.buildScanUrl?.let {\n                    warning(\"Gradle Build Scan: $it\")\n                    setOutput(\"build-scan-url\", it)\n                }\n            }\n        } finally {\n            if (cacheProxyEnabled) {\n                cacheProxy.stop()\n            }\n        }\n    }\n    return\n}\n",null,null,null,null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.gradle.proxy\n\nimport actions.cache.RestoreType\nimport actions.cache.restoreAndLog\nimport actions.core.LogLevel\nimport actions.glob.removeFiles\nimport com.github.burrunan.gradle.cache.HttpException\nimport com.github.burrunan.gradle.cache.handle\nimport com.github.burrunan.wrappers.nodejs.mkdir\nimport com.github.burrunan.wrappers.nodejs.pipeAndWait\nimport js.objects.unsafeJso\nimport kotlinx.coroutines.GlobalScope\nimport kotlinx.coroutines.launch\nimport node.fs.createReadStream\nimport node.fs.createWriteStream\nimport node.fs.stat\nimport node.http.IncomingMessage\nimport node.http.OutgoingHttpHeaders\nimport node.http.ServerResponse\nimport node.net.AddressInfo\nimport node.path.path\nimport node.process.process\nimport kotlin.coroutines.resume\nimport kotlin.coroutines.suspendCoroutine\n\nclass CacheProxy {\n    companion object {\n        const val GHA_CACHE_URL = \"GHA_CACHE_URL\"\n        private const val TEMP_DIR = \".cache-proxy\"\n        private val cacheVersion = \"1-\"\n    }\n\n    private var _cacheUrl: String? = null\n\n    val cacheUrl: String? get() = _cacheUrl\n\n    private val server = node.http.createServer<IncomingMessage, ServerResponse<*>> { req, res ->\n        val query = node.url.parse(req.url!!, true)\n        val path = query.pathname ?: \"\"\n        res.handle {\n            val id = path.removePrefix(\"/\")\n            when (req.method) {\n                \"GET\" -> getEntry(id, res)\n                \"PUT\" -> putEntry(id, req, res)\n                else -> HttpException.notImplemented(\"Not implemented: ${req.method}\")\n            }\n        }\n    }\n\n//    private val compression = jso<InternalCacheOptions> { compressionMethod = CompressionMethod.Gzip }\n\n    private suspend fun putEntry(id: String, req: IncomingMessage, res: ServerResponse<*>) {\n        val fileName = path.join(TEMP_DIR, \"bc-$id\")\n        try {\n            req.pipeAndWait(createWriteStream(fileName))\n            res.writeHead(200, \"OK\", undefined.unsafeCast<OutgoingHttpHeaders>())\n        } finally {\n            GlobalScope.launch {\n                try {\n                    actions.cache.saveAndLog(listOf(fileName), id, cacheVersion, logLevel = LogLevel.DEBUG)\n                } finally {\n                    removeFiles(listOf(fileName))\n                }\n            }\n        }\n    }\n\n    private suspend fun getEntry(id: String, res: ServerResponse<*>) {\n        val fileName = path.join(TEMP_DIR, \"bc-$id\")\n        val restoreType = restoreAndLog(listOf(fileName), id, restoreKeys = listOf(), version = cacheVersion, logLevel = LogLevel.DEBUG)\n        if (restoreType == RestoreType.None) {\n            throw HttpException.notFound(\"No cache entry found for $id\")\n        }\n        res.writeHead(\n            200, \"Ok\",\n            unsafeJso<OutgoingHttpHeaders> {\n                contentLength = stat(fileName).size\n            },\n        )\n        createReadStream(fileName).pipeAndWait(res)\n    }\n\n    private val pluginId = \"com.github.burrunan.multi-cache\"\n\n    fun getMultiCacheConfiguration(\n        multiCacheEnabled: Boolean = true,\n        multiCacheVersion: String = \"1.0\",\n        multiCacheRepository: String = \"\",\n        multiCacheGroupIdFilter: String = \"com[.]github[.]burrunan[.]multi-?cache\",\n        push: Boolean = true,\n    ): String {\n        val multiCacheGroupIdFilterEscaped = multiCacheGroupIdFilter.replace(\"\\\\\", \"\\\\\\\\\")\n        //language=Groovy\n        return \"\"\"\n            def pluginId = 'com.github.burrunan.multi-cache'\n            def multiCacheVersion = '1.0'\n            def multiCacheGroupIdFilter = 'com[.]github[.]burrunan[.]multi-?cache'\n            boolean multiCacheEnabled = $multiCacheEnabled\n            String multiCacheRepository = '$multiCacheRepository'\n            boolean gradle6Plus = org.gradle.util.GradleVersion.current() >= org.gradle.util.GradleVersion.version('6.0')\n            // beforeSettings is Gradle 6.0+\n            if (multiCacheEnabled && !gradle6Plus) {\n                println(\"Multiple remote build caches ($pluginId) are supported in Gradle 6.0+ only\")\n                multiCacheEnabled = false\n            }\n            if (multiCacheEnabled) {\n                beforeSettings { settings ->\n                    def repos = settings.buildscript.repositories\n                    if (multiCacheRepository != '') {\n                        repos.add(\n                            repos.maven {\n                                url = multiCacheRepository\n                                if ('$multiCacheGroupIdFilterEscaped' != '') {\n                                    content {\n                                        includeGroupByRegex('$multiCacheGroupIdFilterEscaped')\n                                    }\n                                }\n                            }\n                        )\n                    } else if (repos.isEmpty()) {\n                        repos.add(repos.gradlePluginPortal())\n                    }\n                    settings.buildscript.dependencies {\n                        classpath(\"$pluginId:${pluginId}.gradle.plugin:$multiCacheVersion\")\n                    }\n                }\n            }\n\n            settingsEvaluated { settings ->\n                settings.buildCache {\n                    boolean needMulticache = remote != null\n                    if (needMulticache && !multiCacheEnabled) {\n                        println(\"$pluginId is disabled\")\n                        return\n                    }\n\n                    local {\n                        enabled = true\n                        push = $push\n                    }\n                    if (needMulticache) {\n                        settings.pluginManager.apply(\"$pluginId\")\n                        settings.multicache.push('base')\n                    }\n                    remote(HttpBuildCache) {\n                        url = '$cacheUrl'\n                        push = $push\n                        // Build cache is located on localhost, so it is fine to use http protocol\n                        if (gradle6Plus) {\n                            allowInsecureProtocol = true\n                        }\n                    }\n                    if (needMulticache) {\n                        settings.multicache.pushAndConfigure('actions-cache') {\n                            loadSequentiallyWriteConcurrently('actions-cache', 'base')\n                        }\n                    }\n                }\n            }\n        \"\"\".trimIndent()\n    }\n\n    suspend fun start() {\n        suspendCoroutine<Nothing?> { cont ->\n            server.listen(0) {\n                cont.resume(null)\n            }\n        }\n\n        mkdir(TEMP_DIR)\n        val url = \"http://localhost:${(server.address().unsafeCast<AddressInfo>()).port}/\"\n        _cacheUrl = url\n        process.env[GHA_CACHE_URL] = url\n    }\n\n    fun stop() {\n        server.close()\n    }\n\n    suspend inline operator fun <T> invoke(block: () -> T): T {\n        start()\n        try {\n            return block()\n        } finally {\n            stop()\n        }\n    }\n}\n",null,null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nclass HttpException(val code: Int, message: String) : Throwable(message) {\n    companion object {\n        fun noContent(message: String) = HttpException(204, message)\n        fun notImplemented(message: String) = HttpException(501, message)\n        fun notFound(message: String) = HttpException(404, message)\n        fun badRequest(message: String) = HttpException(400, message)\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nimport kotlinx.coroutines.CoroutineScope\nimport kotlinx.coroutines.GlobalScope\nimport kotlinx.coroutines.launch\nimport kotlinx.coroutines.supervisorScope\nimport node.http.OutgoingHttpHeaders\nimport node.http.ServerResponse\n\nfun ServerResponse<*>.handle(action: suspend CoroutineScope.() -> Unit) =\n    GlobalScope.launch {\n        try {\n            supervisorScope {\n                action()\n            }\n        } catch (e: HttpException) {\n            writeHead(e.code, e.message ?: \"no message\", undefined.unsafeCast<OutgoingHttpHeaders>())\n        } catch (e: Throwable) {\n            e.printStackTrace()\n            writeHead(500, \"Error processing ${e.message}\", undefined.unsafeCast<OutgoingHttpHeaders>())\n        } finally {\n            end()\n        }\n    }\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.launcher\n\ndata class GradleDistribution(\n    val version: String,\n    val distributionUrl: String,\n    val distributionSha256Sum: String?,\n)\n\nsuspend fun resolveDistribution(\n    versionSpec: String,\n    projectPath: String,\n    distributionUrl: String? = null,\n    distributionSha256Sum: String? = null,\n    enableDistributionSha256SumWarning: Boolean = true\n): GradleDistribution {\n    return if (distributionUrl == null) {\n        when (val version = GradleVersion(versionSpec)) {\n            is GradleVersion.Official -> version.findUrl()\n            is GradleVersion.Dynamic -> version.findUrl()\n            is GradleVersion.Wrapper -> findVersionFromWrapper(projectPath, enableDistributionSha256SumWarning)\n        }\n    } else {\n        GradleDistribution(\n            version = versionSpec,\n            distributionUrl = distributionUrl,\n            distributionSha256Sum = distributionSha256Sum ?: \"$distributionUrl.sha256\",\n        )\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.launcher\n\nimport actions.core.ActionFailedException\nimport actions.core.info\nimport actions.core.warning\nimport actions.http.client.HttpClient\nimport actions.http.client.HttpCodes\nimport actions.io.rmRF\nimport actions.tool.cache.cacheDir\nimport actions.tool.cache.downloadTool\nimport actions.tool.cache.extractZip\nimport com.github.burrunan.hashing.hashFiles\nimport com.github.burrunan.wrappers.nodejs.exists\nimport js.objects.unsafeJso\nimport kotlinx.coroutines.GlobalScope\nimport kotlinx.coroutines.launch\nimport node.buffer.BufferEncoding\nimport node.fs.chmod\nimport node.fs.readFile\nimport node.http.OutgoingHttpHeaders\nimport node.path.path\nimport node.process.Platform\n\nsuspend fun install(distribution: GradleDistribution): String {\n    val cachedTool = actions.tool.cache.find(\"gradle\", distribution.version)\n    val gradleDir = if (cachedTool.isNotEmpty()) {\n        info(\"Detected Gradle ${distribution.version} at $cachedTool\")\n        cachedTool\n    } else {\n        val gradleZip = downloadTool(distribution.distributionUrl)\n        distribution.distributionSha256Sum?.let { expectedSha256 ->\n            val hash = hashFiles(gradleZip, algorithm = \"sha256\", includeFileName = false).hash\n            if (hash != expectedSha256) {\n                throw ActionFailedException(\n                    \"Checksum mismatch for Gradle ${distribution.version} (${distribution.distributionUrl}). \" +\n                        \"Expected: $expectedSha256, actual: $hash\",\n                )\n            }\n        }\n        val extractedGradleDir = extractZip(gradleZip)\n        cacheDir(path.join(extractedGradleDir, \"gradle-${distribution.version}\"), \"gradle\", distribution.version).also {\n            GlobalScope.launch {\n                // Remove temporary files\n                rmRF(gradleZip)\n                rmRF(extractedGradleDir)\n            }\n        }\n    }\n    return path.join(gradleDir, \"bin\", if (node.os.platform() == Platform.win32) \"gradle.bat\" else \"gradle\").also {\n        if (node.os.platform() != Platform.win32) {\n            chmod(it, \"755\".toInt(8))\n        }\n    }\n}\n\nprivate val HTTP_AGENT =\n    unsafeJso<OutgoingHttpHeaders> {\n        set(\"User-Agent\", \"burrunan/gradle-cache-action\")\n    }\n\nsuspend fun GradleVersion.Official.findUrl(): GradleDistribution {\n    val url = \"https://services.gradle.org/versions/all\"\n    val response =\n        HttpClient().getJson<Array<GradleVersionResponse>>(url, HTTP_AGENT).await()\n    if (response.statusCode.unsafeCast<HttpCodes>() != HttpCodes.OK) {\n        throw ActionFailedException(\"Unable to lookup $url Gradle version: ${response.statusCode}, ${JSON.stringify(response.result)}\")\n    }\n    return response.result?.firstOrNull { it.version == name }?.resolveChecksum()\n        ?: throw ActionFailedException(\"Unable to find Gradle version $name\")\n}\n\nsuspend fun GradleVersion.Dynamic.findUrl(): GradleDistribution {\n    val url = \"https://services.gradle.org/versions/$apiPath\"\n    val response = HttpClient().getJson<dynamic>(url, HTTP_AGENT).await()\n    if (response.statusCode.unsafeCast<HttpCodes>() != HttpCodes.OK) {\n        throw ActionFailedException(\"Unable to lookup $url Gradle version: ${response.statusCode}, ${JSON.stringify(response.result)}\")\n    }\n    if (response.result?.version != null) {\n        return response.result.unsafeCast<GradleVersionResponse>().resolveChecksum()\n    }\n    if (this is GradleVersion.ReleaseCandidate) {\n        return GradleVersion.Current.findUrl()\n    }\n    throw ActionFailedException(\"Empty result from $url: ${JSON.stringify(response.result)}\")\n}\n\nsuspend fun GradleVersionResponse.resolveChecksum() =\n    GradleDistribution(\n        version = version,\n        distributionUrl = downloadUrl,\n        distributionSha256Sum = HttpClient().get(checksumUrl, HTTP_AGENT).await().readBody().await().trim(),\n    )\n\nsuspend fun findVersionFromWrapper(projectPath: String, enableDistributionSha256SumWarning: Boolean): GradleDistribution {\n    val gradleWrapperProperties = path.join(projectPath, \"gradle\", \"wrapper\", \"gradle-wrapper.properties\")\n    if (!exists(gradleWrapperProperties)) {\n        warning(\"Gradle wrapper configuration is not found at ${path.resolve(gradleWrapperProperties)}.\\nWill use the current release Gradle version\")\n        return GradleVersion.Current.findUrl()\n    }\n    val propString = readFile(gradleWrapperProperties, BufferEncoding.utf8)\n    val props = javaproperties.parseString(propString).run {\n        getKeys().associateWith { getFirst(it)!! }\n    }\n\n    val distributionUrl = props.getValue(\"distributionUrl\")\n    val distributionSha256Sum = props[\"distributionSha256Sum\"]\n\n    val version = distributionUrl.substringAfterLast(\"/\")\n        .substringAfter(\"gradle-\")\n        .removeSuffix(\"-all.zip\")\n        .removeSuffix(\"-bin.zip\")\n        .removeSuffix(\".zip\")\n\n    if (enableDistributionSha256SumWarning && distributionSha256Sum == null) {\n        warning(\n            \"distributionSha256Sum is not set in $gradleWrapperProperties.\\n\" +\n                \"Please consider adding the checksum, \" +\n                \"see https://docs.gradle.org/current/userguide/gradle_wrapper.html#configuring_checksum_verification\",\n        )\n    }\n\n    return if (distributionUrl.removePrefix(\"https\").removePrefix(\"http\")\n            .startsWith(\"://services.gradle.org/\")\n    ) {\n        // Official release, use shorter version\n        //   https://services.gradle.org/distributions-snapshots/gradle-6.7-20200730220045+0000-all.zip\n        //   https://services.gradle.org/distributions/gradle-6.6-rc-4-all.zip\n        //   https://services.gradle.org/distributions/gradle-6.5.1-all.zip\n        if (distributionUrl.endsWith(\"-bin.zip\") && distributionSha256Sum != null) {\n            GradleDistribution(version, distributionUrl, distributionSha256Sum)\n        } else {\n            // Resolve checksum from the official site\n            // This would switch to -bin distribution which is smaller\n            GradleVersion.Official(version).findUrl()\n        }\n    } else {\n        GradleDistribution(version, distributionUrl, distributionSha256Sum)\n    }\n}\n",null,null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.launcher\n\nimport actions.core.AnnotationProperties\nimport actions.core.ExitCode\nimport actions.core.setFailed\nimport actions.core.setOutput\nimport actions.exec.ExecListeners\nimport actions.exec.exec\nimport com.github.burrunan.launcher.internal.GradleErrorCollector\nimport com.github.burrunan.launcher.internal.GradleOutErrorCollector\nimport node.process.process\n\nclass GradleResult(\n    val buildScanUrl: String?,\n)\n\nsuspend fun launchGradle(params: LaunchParams): GradleResult {\n    var buildScanUrl: String? = null\n    // See https://youtrack.jetbrains.com/issue/KT-41107\n    var failureDetected = false\n    val errorCollector = GradleErrorCollector()\n    val outCollector = GradleOutErrorCollector()\n\n    @Suppress(\"REDUNDANT_SPREAD_OPERATOR_IN_NAMED_FORM_IN_FUNCTION\")\n    val result = exec(\n        params.gradle,\n        args = *(listOf(if (params.daemon) \"\" else \"--no-daemon\") +\n            params.properties.map { \"-P${it.key}=${it.value}\" } +\n            params.arguments).toTypedArray(),\n    ) {\n        it.copy(\n            cwd = params.projectPath,\n            ignoreReturnCode = true,\n            listeners = ExecListeners(\n                stdline = {\n                    val str = it.trimEnd()\n                    if (str.startsWith(\"https://gradle.com/s/\")) {\n                        setOutput(\"build-scan-url\", str)\n                        buildScanUrl = str\n                    }\n                    outCollector.process(str)\n                },\n                errline = {\n                    errorCollector.process(it)\n                    outCollector.process(it)\n                },\n            )\n        )\n    }\n    errorCollector.done()\n    outCollector.done()\n    for (error in errorCollector.errors + outCollector.errors) {\n        failureDetected = true\n        val shortFile = error.file\n            ?.removePrefix(process.cwd())\n        actions.core.error(\n            error.message,\n            AnnotationProperties(\n                file = shortFile,\n                startLine = error.line,\n                startColumn = error.col,\n            ),\n        )\n    }\n    if (failureDetected) {\n        process.exitCode = ExitCode.Failure.unsafeCast<Double>()\n    }\n    if (!failureDetected && result.exitCode != 0) {\n        setFailed(\"Gradle process finished with a non-zero exit code: ${result.exitCode}\")\n    }\n    return GradleResult(buildScanUrl)\n}\n",null,null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.launcher\n\nsealed class GradleVersion(val name: String, unused: Int = 0) {\n    companion object {\n        val DYNAMIC_VERSIONS = listOf(\n            Current,\n            ReleaseCandidate,\n            Nightly,\n            ReleaseNightly,\n        )\n        val FIXED_VERSIONS = DYNAMIC_VERSIONS + Wrapper\n    }\n\n    abstract class Dynamic(label: String, val apiPath: String) : GradleVersion(label)\n    class Official(label: String) : GradleVersion(label) {\n        override fun toString() = \"Official($name)\"\n    }\n\n    object Current : Dynamic(\"current\", \"current\") {\n        override fun toString() = \"Current\"\n    }\n\n    object ReleaseCandidate : Dynamic(\"rc\", \"release-candidate\") {\n        override fun toString() = \"ReleaseCandidate\"\n    }\n\n    object Nightly : Dynamic(\"nightly\", \"nightly\") {\n        override fun toString() = \"Nightly\"\n    }\n\n    object ReleaseNightly : Dynamic(\"release-nightly\", \"release-nightly\") {\n        override fun toString() = \"ReleaseNightly\"\n    }\n\n    object Wrapper : GradleVersion(\"wrapper\") {\n        override fun toString() = \"Wrapper\"\n    }\n}\n\nfun GradleVersion(version: String) =\n    GradleVersion.FIXED_VERSIONS.firstOrNull { it.name == version }\n        ?: GradleVersion.Official(version)\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.launcher\n\nclass LaunchParams(\n    val gradle: String,\n    val daemon: Boolean,\n    val projectPath: String,\n    val arguments: List<String>,\n    val properties: Map<String, String>,\n)\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.launcher.internal\n\nclass GradleError(\n    val message: String,\n    val file: String? = null,\n    val line: Int? = null,\n    val col: Int? = null,\n) {\n    override fun toString() = \"GradleError(line=$line, col=$col, file=$file, message='$message')\"\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.launcher.internal\n\nprivate enum class ErrorHeader(val message: String) {\n    FAILURE(\"FAILURE: \"),\n    WHERE(\"* Where:\"),\n    WHAT_WENT_WRONG(\"* What went wrong:\"),\n    TRY(\"* Try:\"),\n}\n\nprivate val errorHeaderValues = ErrorHeader.values()\n\nclass GradleErrorCollector {\n    private val _errors = mutableListOf<GradleError>()\n    val errors: List<GradleError> = _errors\n\n    private val sb = StringBuilder()\n    private var nextKey: ErrorHeader? = null\n    private val data = mutableMapOf<ErrorHeader, String>()\n\n    fun done() {\n        if (data.isNotEmpty()) {\n            val message = data[ErrorHeader.WHAT_WENT_WRONG] ?: \"Unknown error\"\n\n            _errors += data[ErrorHeader.WHERE]?.let { location ->\n                Regex(\"^Build file '(.+)' line: (\\\\d+)$\").matchEntire(location)?.let {\n                    GradleError(\n                        message = message,\n                        file = it.groupValues[1],\n                        line = it.groupValues[2].toInt(),\n                    )\n                }\n            } ?: GradleError(message)\n        }\n        data.clear()\n        sb.clear()\n    }\n\n    fun process(line: String) {\n        val str = line.trimEnd()\n        if (str.startsWith(ErrorHeader.FAILURE.message)) {\n            done()\n            data[ErrorHeader.FAILURE] = str.removePrefix(ErrorHeader.FAILURE.message)\n            return\n        }\n\n        if (str.startsWith(\"* Get more help\") ||\n            str.startsWith(\"BUILD FAILED \")\n        ) {\n            done()\n            nextKey = null\n            return\n        }\n\n        errorHeaderValues.firstOrNull { str.startsWith(it.message) }?.let {\n            nextKey?.let {\n                data[it] = sb.toString().trimEnd()\n            }\n            sb.clear()\n            nextKey = it\n            return\n        }\n\n        if (nextKey != null) {\n            sb.appendLine(line)\n        }\n    }\n}\n",null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.launcher.internal\n\n// e: /../build.gradle.kts:62:1: Unresolved reference: invalid\nprivate val KOTLIN_COMPILE_ERROR = Regex(\"^e: (\\\\S.+?):(\\\\d+):(?:(\\\\d+):)? (.+)$\")\n// [ant:checkstyle] [ERROR] /.../SqlHopTableFunction.java:56:35: ',' is not followed by whitespace. [WhitespaceAfter]\nprivate val CHECKSTYLE_ERROR = Regex(\"^\\\\[ant:checkstyle\\\\] \\\\[ERROR\\\\] (\\\\S.+?):(\\\\d+):(?:(\\\\d+):)? (.+) \\\\[([^\\\\]]+)\\\\]\\$\")\n// /.../RelDataType.java:249: error: reference not found\nprivate val JAVA_ERROR = Regex(\"^(\\\\S.+?):(\\\\d+): error: (.+)$\")\n\nclass GradleOutErrorCollector {\n    private val _errors = mutableListOf<GradleError>()\n    val errors: List<GradleError> = _errors\n    private var taskName: String = \"Unknown task\"\n    private var javaError: MatchResult? = null\n    private val javaErrorLines = mutableListOf<String>()\n\n    fun process(line: String) {\n        if (line.startsWith(\"> Task \") ||\n            line.startsWith(\"> Configure\")\n        ) {\n            taskName = line.removePrefix(\"> \").let { \"[$it]\" }\n        }\n        if (line.startsWith(\"e: \")) {\n            // Looks like Kotlin error\n            // e: /../build.gradle.kts:62:1: Unresolved reference: invalid\n            KOTLIN_COMPILE_ERROR.matchEntire(line)?.let {\n                _errors += GradleError(\n                    message = \"$taskName ${it.groupValues[4]}\",\n                    file = it.groupValues[1],\n                    line = it.groupValues[2].toInt(),\n                    col = it.groupValues[3].takeIf { it.isNotBlank() }?.toInt(),\n                )\n            }\n            return\n        }\n        // Checkstyle error:\n        // [ant:checkstyle] [ERROR] /.../SqlHopTableFunction.java:56:35: ',' is not followed by whitespace. [WhitespaceAfter]\n        CHECKSTYLE_ERROR.matchEntire(line)?.let {\n            _errors += GradleError(\n                message = \"$taskName ${\"[${it.groupValues[5]}] \".removePrefix(\"[] \")}${it.groupValues[4]}\",\n                file = it.groupValues[1],\n                line = it.groupValues[2].toInt(),\n                col = it.groupValues[3].takeIf { it.isNotBlank() }?.toInt(),\n            )\n        }\n        processJavaError(line)\n    }\n\n    private fun processJavaError(line: String) {\n        // /.../RelDataType.java:249: error: reference not found\n        JAVA_ERROR.matchEntire(line)?.let {\n            done()\n            javaError = it\n            return\n        }\n        if (javaError != null) {\n            val errorContinuation = line.startsWith(\" \")\n            if (errorContinuation) {\n                javaErrorLines += line\n            }\n            if (!errorContinuation || javaErrorLines.size >= 3) {\n                done()\n            }\n        }\n    }\n\n    fun done() {\n        javaError?.let {\n            _errors += GradleError(\n                message = \"$taskName ${it.groupValues[3]}\\n${javaErrorLines.joinToString(\"\\n\")}\",\n                file = it.groupValues[1],\n                line = it.groupValues[2].toInt(),\n            )\n        }\n        javaError = null\n        javaErrorLines.clear()\n    }\n}\n",null,null,null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.hashing\n\nimport actions.core.ActionFailedException\nimport actions.core.warning\nimport com.github.burrunan.wrappers.nodejs.normalizedPath\nimport com.github.burrunan.wrappers.nodejs.pipeAndWait\nimport kotlinx.serialization.Serializable\nimport node.crypto.BinaryToTextEncoding\nimport node.crypto.createHash\nimport node.fs.createReadStream\nimport node.fs.stat\nimport node.process.process\n\n@Serializable\nclass HashDetails(\n    val info: HashInfo,\n    val contents: HashContents,\n)\n\n@Serializable\nclass HashInfo(\n    val totalBytes: Long,\n    val hash: String,\n    val totalFiles: Int,\n)\n\n@Serializable\nclass HashContents(\n    val files: Map<String, FileDetails>,\n)\n\n@Serializable\nclass FileDetails(\n    val fileSize: Long,\n    val hash: String,\n)\n\n/**\n * Sample: ~/.gradle/caches/modules-2/files-2.1/com.google.errorprone/error_prone_annotations/2.0.18/5f65affce1684999e2f4024983835efc3504012e/error_prone_annotations-2.0.18.jar\n */\nprivate fun sha1FromModulesFileName(key: String): String {\n    val lastSlash = key.lastIndexOf('/')\n    val hashStart = key.lastIndexOf('/', startIndex = lastSlash - 1) + 1\n    return key.substring(hashStart, lastSlash).padStart(40, '0')\n}\n\nsuspend fun hashFilesDetailed(\n    vararg paths: String,\n    algorithm: String = \"sha1\",\n    includeFileName: Boolean = true,\n): HashDetails = try {\n    val globber = actions.glob.create(paths.joinToString(\"\\n\"))\n    val fileNames = globber.glob().await()\n    // Sorting is needed for stable overall hash\n    fileNames.sort()\n\n    val githubWorkspace = process.cwd()\n    val homeDir = \"~\".normalizedPath\n\n    var totalBytes = 0L\n    val files = mutableMapOf<String, FileDetails>()\n    val overallHash = createHash(algorithm)\n    for (name in fileNames) {\n        val statSync = stat(name)\n        if (statSync.isDirectory()) {\n            continue\n        }\n        val fileSize = statSync.size.toLong()\n        totalBytes += fileSize\n        val key = when {\n            name.startsWith(githubWorkspace) ->\n                \"ws://\" + name.substring(githubWorkspace.length)\n            name.startsWith(homeDir) ->\n                \"~\" + name.substring(homeDir.length)\n            else -> name\n        }.replace('\\\\', '/')\n        // Avoid hashing the contents when we know the hash from the file path\n        val digest = when {\n            algorithm == \"sha1\" && key.startsWith(\"~/.gradle/caches/modules-2/files-2.1/\") ->\n                sha1FromModulesFileName(key)\n            key.startsWith(\"~/.gradle/caches/build-cache-1/\") ->\n                key.substringAfterLast('/')\n            else -> {\n                val hash = createHash(algorithm)\n                try {\n                    createReadStream(name).pipeAndWait(hash, end = true)\n                } catch (e: Throwable) {\n                    warning(\"Unable to hash $name, will ignore the file: ${e.stackTraceToString()}\")\n                    continue\n                }\n                hash.digest(BinaryToTextEncoding.hex)\n            }\n        }\n        files[key] = FileDetails(fileSize, digest)\n        // Add filename\n        if (includeFileName) {\n            overallHash.update(key)\n        }\n        overallHash.update(digest)\n    }\n    HashDetails(\n        HashInfo(totalBytes, overallHash.digest(BinaryToTextEncoding.hex), files.size),\n        HashContents(files),\n    )\n} catch (e: Throwable) {\n    throw ActionFailedException(\"Unable to hash ${paths.joinToString(\", \")}: $e\", e)\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.hashing\n\nimport com.github.burrunan.formatBytes\n\nclass Diff(\n    val newFiles: Int,\n    val totalUpdated: Long,\n    val totalDeleted: Long,\n    val messages: List<String>,\n    val updatedFiles: List<String>,\n    val deletedFiles: List<String>,\n) {\n    val summary: String\n        get() =\n            (if (updatedFiles.isNotEmpty()) \"${updatedFiles.size} updates (${totalUpdated.formatBytes()})\" else \"\") +\n                (if (deletedFiles.isNotEmpty()) (if (updatedFiles.isNotEmpty()) \", \" else \"\") +\n                    \"${deletedFiles.size} deletes (${totalDeleted.formatBytes()})\" else \"\") +\n                \"\\n  \" + messages.joinToString(\"\\n  \")\n}\n\nfun diff(\n    oldContents: HashContents,\n    newContents: HashContents,\n    maxUpdatesToPrint: Int = 50,\n): Diff {\n    val messages = mutableListOf<String>()\n    val updatedFiles = mutableListOf<String>()\n    val deletedFiles = mutableListOf<String>()\n    var newFiles = 0\n    var totalUpdated = 0L\n    var totalDeleted = 0L\n    for ((file, hash) in newContents.files) {\n        val oldHash = oldContents.files[file]\n        if (oldHash?.hash == hash.hash) {\n            continue\n        }\n        updatedFiles.add(file)\n        if (messages.size >= maxUpdatesToPrint) {\n            continue\n        }\n        messages.add(\n            if (oldHash == null) {\n                newFiles += 1\n                totalUpdated += hash.fileSize\n                \"N ${hash.fileSize} $file ${hash.hash}\"\n            } else {\n                totalUpdated += hash.fileSize\n                \"U ${hash.fileSize} $file ${oldHash.fileSize} ${oldHash.hash} => ${hash.hash}\"\n            },\n        )\n    }\n    if (oldContents.files.size + newFiles != newContents.files.size) {\n        for ((file, hash) in oldContents.files) {\n            if (file !in newContents.files) {\n                deletedFiles.add(file)\n                totalDeleted += hash.fileSize\n                if (messages.size < maxUpdatesToPrint) {\n                    messages.add(\"D $file $hash\")\n                }\n            }\n        }\n    }\n    return Diff(\n        newFiles = newFiles,\n        totalUpdated = totalUpdated,\n        totalDeleted = totalDeleted,\n        messages = messages,\n        updatedFiles = updatedFiles,\n        deletedFiles = deletedFiles,\n    )\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.hashing\n\nimport actions.core.ActionFailedException\nimport actions.core.warning\nimport com.github.burrunan.wrappers.nodejs.normalizedPath\nimport com.github.burrunan.wrappers.nodejs.pipeAndWait\nimport node.WritableStream\nimport node.buffer.BufferEncoding\nimport node.crypto.BinaryToTextEncoding\nimport node.crypto.createHash\nimport node.fs.createReadStream\nimport node.fs.stat\nimport node.process.process\n\ndata class HashResult(\n    val hash: String,\n    val numFiles: Int,\n    val totalBytes: Int,\n)\n\nsuspend fun hashFiles(\n    vararg paths: String,\n    algorithm: String = \"sha1\",\n    includeFileName: Boolean = true,\n): HashResult = try {\n    val globber = actions.glob.create(paths.joinToString(\"\\n\"))\n    val fileNames = globber.glob().await()\n    fileNames.sort()\n\n    val githubWorkspace = process.cwd()\n    val homeDir = \"~\".normalizedPath\n    val hash = createHash(algorithm)\n\n    var totalBytes = 0\n    var numFiles = 0\n    for (name in fileNames) {\n        val statSync = stat(name)\n        if (statSync.isDirectory()) {\n            continue\n        }\n        val key = when {\n            name.startsWith(githubWorkspace) ->\n                \"ws://\" + name.substring(githubWorkspace.length)\n            name.startsWith(homeDir) ->\n                \"~\" + name.substring(homeDir.length)\n            else -> name\n        }.replace('\\\\', '/')\n\n        numFiles += 1\n        totalBytes += statSync.size.toInt()\n        // Add filename\n\n        try {\n            createReadStream(name).pipeAndWait(hash, end = false)\n        } catch (e: Throwable) {\n            warning(\"Unable to hash $name, will ignore the file: ${e.stackTraceToString()}\")\n            continue\n        }\n\n        if (includeFileName) {\n            hash.update(key, BufferEncoding.utf8)\n        }\n    }\n    hash.unsafeCast<WritableStream>().end()\n    HashResult(\n        hash = hash.digest(BinaryToTextEncoding.hex),\n        numFiles = numFiles,\n        totalBytes = totalBytes,\n    )\n} catch (e: Throwable) {\n    throw ActionFailedException(\"Unable to hash ${paths.joinToString(\", \")}: $e\", e)\n}\n",null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle\n\nimport actions.core.ActionFailedException\nimport actions.core.ActionStage\nimport actions.core.info\nimport actions.exec.exec\nimport com.github.burrunan.gradle.cache.*\nimport com.github.burrunan.gradle.github.suspendingStateVariable\nimport com.github.burrunan.launcher.GradleDistribution\nimport octokit.ActionsTrigger\nimport kotlin.js.Date\nimport kotlin.math.roundToInt\n\nclass GradleCacheAction(\n    val trigger: ActionsTrigger,\n    val params: Parameters,\n    val gradleDistribution: GradleDistribution,\n) {\n    companion object {\n        const val DEFAULT_BRANCH_VAR = \"defaultbranch\"\n    }\n\n    private val treeId = suspendingStateVariable(\"tree_id\") {\n        // Sometimes the output might include a newline, so trim it\n        // See https://github.com/burrunan/gradle-cache-action/issues/63\n        exec(\"git\", \"log\", \"-1\", \"--quiet\", \"--format=%T\", captureOutput = true).stdout.trim()\n    }\n\n    suspend fun execute(stage: ActionStage) {\n        val gradleVersion = gradleDistribution.version\n\n        val caches = mutableListOf<Cache>()\n\n        if (params.generatedGradleJars) {\n            caches.add(gradleGeneratedJarsCache(gradleVersion))\n        }\n\n        if (params.localBuildCache) {\n            caches.add(localBuildCache(params.jobId, trigger, gradleVersion, treeId.get()))\n        }\n\n        if (params.gradleDependenciesCache) {\n            caches.add(gradleDependenciesCache(trigger, params.path, params.gradleDependenciesCacheKey))\n        }\n\n        if (params.mavenDependenciesCache) {\n            caches.add(mavenDependenciesCache(trigger, params.path, params.mavenLocalIgnorePaths))\n        }\n\n        val cache = CompositeCache(\"all-caches\", caches, concurrent = params.concurrent)\n        when (stage) {\n            ActionStage.MAIN -> {\n                val started = Date.now()\n                val restore = cache.restore()\n                val elapsed = Date.now() - started\n                info(\"Cache restore took ${(elapsed / 1000).roundToInt()} seconds\")\n            }\n            ActionStage.POST -> {\n                if (params.readOnly) {\n                    info(\"read-only == true, so will skip cache upload\")\n                } else {\n                    cache.save()\n                }\n            }\n            else -> throw ActionFailedException(\"Cache action should be called in PRE or POST stages only. \" +\n                \"Current stage is $stage\")\n        }\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle\n\ndata class Parameters(\n    val jobId: String,\n    val path: String,\n    val debug: Boolean,\n    val generatedGradleJars: Boolean,\n    val localBuildCache: Boolean,\n    val gradleDependenciesCache: Boolean,\n    val gradleDependenciesCacheKey: List<String>,\n    val mavenDependenciesCache: Boolean,\n    val mavenLocalIgnorePaths: List<String>,\n    val concurrent: Boolean,\n    val readOnly: Boolean,\n)\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.gradle.cache\n\nimport actions.core.ActionsEnvironment\nimport com.github.burrunan.gradle.GradleCacheAction\nimport octokit.ActionsTrigger\n\nval ActionsTrigger.cacheKey: String\n    get() = when (this) {\n        is ActionsTrigger.PullRequest -> \"PR${event.pull_request.number}\"\n        is ActionsTrigger.BranchPush -> when (val ref = event.ref.removePrefix(\"refs/heads/\")) {\n            event.repository.default_branch.removePrefix(\"refs/heads/\") ->\n                GradleCacheAction.DEFAULT_BRANCH_VAR\n            else -> ref\n        }\n        is ActionsTrigger.Schedule, is ActionsTrigger.WorkflowDispatch ->\n            GradleCacheAction.DEFAULT_BRANCH_VAR\n        is ActionsTrigger.Other -> \"$name-${ActionsEnvironment.GITHUB_WORKFLOW}-${ActionsEnvironment.GITHUB_SHA}\"\n    }\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nimport actions.cache.RestoreType\nimport actions.core.ext.group\nimport kotlinx.coroutines.launch\nimport kotlinx.coroutines.supervisorScope\n\nclass CompositeCache(\n    override val name: String,\n    private val caches: List<Cache>,\n    private val concurrent: Boolean,\n) : Cache {\n    override suspend fun save() {\n        if (!concurrent) {\n            for (cache in caches) {\n                group(\"Save ${cache.name}\") {\n                    cache.save()\n                }\n            }\n            return\n        }\n\n        supervisorScope {\n            for (cache in caches) {\n                launch {\n                    cache.save()\n                }\n            }\n        }\n    }\n\n    override suspend fun restore(): RestoreType {\n        if (!concurrent) {\n            for (cache in caches) {\n                group(\"Restore ${cache.name}\") {\n                    cache.restore()\n                }\n            }\n            return RestoreType.Unknown\n        }\n\n        supervisorScope {\n            for (cache in caches) {\n                launch {\n                    cache.restore()\n                }\n            }\n        }\n        return RestoreType.Unknown\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nimport actions.cache.RestoreType\nimport actions.cache.restoreAndLog\nimport actions.cache.saveAndLog\nimport actions.core.debug\nimport actions.core.info\nimport actions.glob.removeFiles\nimport com.github.burrunan.formatBytes\nimport com.github.burrunan.gradle.github.stateVariable\nimport com.github.burrunan.gradle.github.toBoolean\nimport com.github.burrunan.gradle.github.toInt\nimport com.github.burrunan.hashing.HashContents\nimport com.github.burrunan.hashing.HashDetails\nimport com.github.burrunan.hashing.HashInfo\nimport com.github.burrunan.hashing.hashFilesDetailed\nimport com.github.burrunan.wrappers.nodejs.exists\nimport kotlin.math.absoluteValue\n\nclass DefaultCache(\n    name: String,\n    val primaryKey: String,\n    private val restoreKeys: List<String> = listOf(),\n    private val paths: List<String>,\n    private val readOnlyMessage: String? = null,\n    stateKey: String = \"\",\n    private val skipRestoreIfPathExists: String? = null\n) : Cache {\n    @Suppress(\"CanBePrimaryConstructorProperty\")\n    override val name: String = name\n\n    private val version = \"1-\"\n\n    private val cacheInfo =\n        MetadataFile(\"$name-info\", HashInfo.serializer())\n    private val cacheContents =\n        MetadataFile(\"$name-contents\", HashContents.serializer())\n    private val saveRestorePaths = paths + cacheInfo.cachedName + cacheContents.cachedName\n\n    private val isExactMatch = stateVariable(\"${name}_${stateKey}_exact\").toBoolean()\n    private val isSkipped = stateVariable(\"${name}_${stateKey}_skip\").toBoolean()\n    private val restoredKeyIndex = stateVariable(\"${name}_${stateKey}_key\").toInt(-1)\n\n    private val restoredKey: String?\n        get() = when {\n            isExactMatch.get() -> primaryKey\n            restoredKeyIndex.get() >= 0 -> restoreKeys[restoredKeyIndex.get()]\n            else -> null\n        }\n\n    private var details: HashDetails? = null\n\n    suspend fun info(): HashInfo? {\n        details?.info?.let { return it }\n        restoredKey?.let { cacheContents.prepare(it) }\n        if (!isExactMatch.get() && restoredKeyIndex.get() == -1) {\n            // Cache was not restored => no information known\n            return null\n        }\n        return cacheInfo.decode()\n    }\n\n    suspend fun contents(): HashContents? {\n        details?.contents?.let { return it }\n        restoredKey?.let { cacheContents.prepare(it) }\n        if (!isExactMatch.get() && restoredKeyIndex.get() == -1) {\n            // Cache was not restored => no information known\n            return null\n        }\n        return cacheContents.decode()\n    }\n\n    override suspend fun restore(): RestoreType {\n        skipRestoreIfPathExists?.let {\n            if (exists(it)) {\n                debug { \"$name: $it already exists, so the cache restore and upload will be skipped\" }\n                isSkipped.set(true)\n            }\n        }\n        debug { \"$name: restoring $primaryKey, $restoreKeys, $saveRestorePaths\" }\n        return restoreAndLog(saveRestorePaths, primaryKey, restoreKeys, version = version).also {\n            isExactMatch.set(it is RestoreType.Exact)\n            restoredKeyIndex.set(\n                when (it) {\n                    is RestoreType.Partial -> restoreKeys.indexOfFirst { key -> it.path.startsWith(key) }\n                    else -> -1\n                },\n            )\n            debug { \"$name: restore type $it, ${isExactMatch.get()}, ${restoredKeyIndex.get()}\" }\n\n            restoredKey?.let { key ->\n                cacheInfo.restore(key)\n                cacheContents.restore(key)\n            }\n        }\n    }\n\n    override suspend fun save() {\n        debug { \"$name: saving ${isExactMatch.get()} ${restoredKeyIndex.get()} $primaryKey, $restoreKeys, $saveRestorePaths\" }\n        if (isSkipped.get()) {\n            debug { \"$name: cache save skipped\" }\n            return\n        }\n        if (isExactMatch.get()) {\n            info(\"$name loaded from exact match, no need to update the cache entry\")\n            return\n        }\n        readOnlyMessage?.let {\n            info(\"$name is configured as read-only: $it\")\n            return\n        }\n\n        restoredKey?.let { key ->\n            cacheInfo.prepare(key)\n            cacheContents.prepare(key)\n        }\n\n        val oldHash = info()\n\n        val newHash = hashFilesDetailed(*paths.toTypedArray())\n        details = newHash\n\n        if (newHash.contents.files.isEmpty()) {\n            info(\"$name: no files to cache => won't upload empty cache\")\n            return\n        }\n        if (oldHash != null) {\n            info(\"$name: comparing modifications of the cache contents\")\n            if (newHash.info.hash == oldHash.hash) {\n                info(\"$name: contents did not change => no need to upload it\")\n                return\n            }\n            val delta = newHash.info.totalBytes - oldHash.totalBytes\n            info(\"$name: hash content differs (${delta.absoluteValue} bytes ${if (delta >= 0) \"increase\" else \"decrease\"})\")\n        }\n        info(\"$name: uploading ${newHash.info.totalBytes.formatBytes()}, ${newHash.contents.files.size} files as $primaryKey\")\n        cacheInfo.encode(newHash.info)\n        cacheContents.encode(newHash.contents)\n        saveAndLog(saveRestorePaths, primaryKey, version = version)\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.github\n\nimport actions.core.getState\nimport actions.core.saveState\n\ninterface MutableStateVariable<T : Any> {\n    fun set(value: T)\n}\n\nopen class BaseStateVariable<T : Any>(protected val name: String) : MutableStateVariable<T> {\n    protected var value: T? = null\n\n    override fun set(value: T) {\n        this.value = value\n        saveState(name, value)\n    }\n}\n\ninterface SuspendingStateVariable<T : Any> : MutableStateVariable<T> {\n    suspend fun get(): T\n}\n\nclass DefaultSuspendingStateVariable(name: String, val default: suspend () -> String) :\n    BaseStateVariable<String>(name), SuspendingStateVariable<String> {\n    override suspend fun get(): String =\n        value ?: getState(name).ifBlank { default() }.also { set(it) }\n}\n\ninterface StateVariable<T : Any> : MutableStateVariable<T> {\n    fun get(): T\n}\n\nclass DefaultStateVariable(name: String, private val default: () -> String) :\n    BaseStateVariable<String>(name), StateVariable<String> {\n    override fun get(): String =\n        value ?: getState(name).ifBlank { default() }.also { set(it) }\n}\n\nfun suspendingStateVariable(name: String, default: suspend () -> String): SuspendingStateVariable<String> =\n    DefaultSuspendingStateVariable(name, default)\n\nfun stateVariable(name: String, default: () -> String = { \"\" }): StateVariable<String> =\n    DefaultStateVariable(name, default)\n\nfun <T : Any, R : Any> StateVariable<T>.transform(decode: (T) -> R, encode: (R) -> T) = object : StateVariable<R> {\n    override fun get(): R = decode(this@transform.get())\n\n    override fun set(value: R) {\n        this@transform.set(encode(value))\n    }\n}\n\nfun StateVariable<String>.toBoolean() = transform({ it == \"Y\" }, { if (it) \"Y\" else \"N\" })\nfun StateVariable<String>.toInt(default: Int) = transform({ if (it.isBlank()) default else it.toInt() }, { it.toString() })\nfun StateVariable<String>.toLong(default: Long) = transform({ if (it.isBlank()) default else it.toLong() }, { it.toString() })\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nimport actions.cache.RestoreType\nimport actions.core.ActionFailedException\nimport actions.core.debug\nimport actions.core.info\nimport actions.core.warning\nimport actions.glob.removeFiles\nimport com.github.burrunan.formatBytes\nimport com.github.burrunan.gradle.github.stateVariable\nimport com.github.burrunan.gradle.github.toBoolean\nimport com.github.burrunan.hashing.*\nimport kotlinx.serialization.Serializable\n\n@Serializable\nclass CacheLayers(\n    val layers: List<CacheLayer>,\n    val deletedFiles: List<String>,\n)\n\n@Serializable\nclass CacheLayer(\n    // format is $version-...\n    val primaryKey: String,\n    val paths: List<String>,\n)\n\nclass LayeredCache(\n    override val name: String,\n    private val baseline: String,\n    val maxLayers: Int = 5,\n    private val primaryKey: String,\n    private val restoreKeys: List<String> = listOf(),\n    private val paths: List<String>,\n) : Cache {\n    private val version = \"1\"\n\n    private val layers = MetadataFile(\"layer-$name\", CacheLayers.serializer())\n\n    private val isExactMatch = stateVariable(\"${name}_exact\").toBoolean()\n\n    private val index = DefaultCache(\n        name = \"$version-index-$name\",\n        primaryKey = \"$version-index-$primaryKey\",\n        restoreKeys = restoreKeys.map { \"$version-index-$it\" },\n        paths = listOf(layers.cachedName),\n    )\n\n    override fun toString(): String =\n        \"Cache $name, primaryKey=$primaryKey, restoreKeys=$restoreKeys, \"\n\n    private fun CacheLayer.toCache(stateKey: String) =\n        DefaultCache(\n            name = name,\n            stateKey = stateKey,\n            primaryKey = primaryKey,\n            restoreKeys = if (paths.isNotEmpty()) listOf() else restoreKeys.map { \"$version-$it\" },\n            paths = this@toCache.paths.ifEmpty { this@LayeredCache.paths },\n        )\n\n    private fun Diff.toLayer(): CacheLayer {\n        // @actions/cache treats \"paths\" as a part of the cache key, so \"delta-\" is not important here for correctness\n        // delta- is here for readability\n        return CacheLayer(\n            primaryKey = \"$version-delta-$primaryKey\",\n            paths = updatedFiles,\n        )\n    }\n\n    override suspend fun restore(): RestoreType {\n        val indexRestoreType = index.restore()\n        if (indexRestoreType == RestoreType.None) {\n            return RestoreType.None\n        }\n        val cacheIndex = layers.decode() ?: run {\n            warning(\"Unable to restore cache $this\")\n            return RestoreType.Unknown\n        }\n\n        var restoreType: RestoreType = when (indexRestoreType) {\n            is RestoreType.Exact -> RestoreType.Exact(indexRestoreType.path.removePrefix(\"$version-index-\"))\n            is RestoreType.Partial -> RestoreType.Partial(indexRestoreType.path.removePrefix(\"$version-index-\"))\n            else -> indexRestoreType\n        }\n\n        info(\n            cacheIndex.layers.joinToString(\", \", \"$name: ${cacheIndex.layers.size} layers. \") {\n                if (it.paths.isEmpty()) it.primaryKey else \"${it.primaryKey} (${it.paths.size} files)\"\n            },\n        )\n\n        // Restore layers one by one, so newer layers can overwrite the old files\n        for ((index, layer) in cacheIndex.layers.withIndex()) {\n            val cache = layer.toCache(index.toString())\n            val restore = cache.restore()\n            if (restore !is RestoreType.Exact) {\n                restoreType = RestoreType.Unknown\n            }\n            debug { \"$name: layer $index, restore=$restore\" }\n        }\n        removeFiles(cacheIndex.deletedFiles)\n        isExactMatch.set(restoreType is RestoreType.Exact)\n        return restoreType\n    }\n\n    override suspend fun save() {\n        if (isExactMatch.get()) {\n            info(\"$name loaded from exact match, no need to update the cache entry\")\n            return\n        }\n\n        val cacheIndex = layers.decode(warnOnMissing = false)\n        val isBaseline = primaryKey.startsWith(baseline)\n        if (cacheIndex == null) {\n            if (!isBaseline) {\n                info(\"$name: old contents is not found, and the current cache $primaryKey does not start with $baseline, so cache saving can't be done\")\n                return\n            }\n            saveSingleLayerCache()\n            return\n        }\n\n        // PR: keep all baseline layers, add one new for PR\n        // branch:\n\n        val caches = cacheIndex.layers\n            .mapIndexed { index, cacheLayer -> cacheLayer.toCache(index.toString()) }\n        val oldContents = caches.associateWith { it.contents() }\n\n        if (isBaseline) {\n            val missing = oldContents.mapNotNull { (cache, contents) ->\n                if (contents == null) cache.primaryKey else null\n            }\n\n            if (missing.isNotEmpty()) {\n                info(\"$name: there are missing layers: $missing\")\n                saveSingleLayerCache()\n                return\n            }\n            if (cacheIndex.layers.size > maxLayers) {\n                info(\"$name: ${cacheIndex.layers.size} layers reached, will create new snapshot\")\n                saveSingleLayerCache()\n                return\n            }\n        }\n\n        // non-baseline\n\n        if (!isBaseline) {\n            val firstLayer = cacheIndex.layers.firstOrNull()\n            val firstBaseline = caches.firstOrNull { it.name.startsWith(baseline) }?.name\n            if (firstLayer?.primaryKey?.startsWith(\"$version-$baseline\") != true) {\n                info(\"$name: the first baseline is not found, and the current cache $primaryKey does not start with $version-$baseline, so cache saving can't be done\")\n                return\n            }\n            if (oldContents.values.firstOrNull() == null) {\n                info(\"$name: the first baseline $firstBaseline was not received, and the current cache $primaryKey does not start with $baseline, so cache saving can't be done\")\n                return\n            }\n        }\n\n        val newContents = hashFilesDetailed(*paths.toTypedArray())\n\n        val oldFiles = mutableMapOf<String, FileDetails>()\n        val reusedFiles = mutableMapOf<String, FileDetails>()\n        val deletedFiles = mutableSetOf<String>()\n        val newLayers = mutableListOf<CacheLayer>()\n        val layerInfo = mutableListOf<String>()\n        for ((layer, contents) in cacheIndex.layers.zip(oldContents.values)) {\n            if (contents == null) {\n                info(\"$name: unknown contents for layer ${layer.primaryKey}\")\n                continue\n            }\n            var helpfulBytes = 0L\n            var wastedBytes = 0L\n            val helpfulLayerFiles = mutableMapOf<String, FileDetails>()\n            val deletedLayerFiles = mutableListOf<String>()\n            for ((file, details) in contents.files) {\n                val newDetails = newContents.contents.files[file]\n                if (details.hash == newDetails?.hash && file !in reusedFiles) {\n                    // same file => previous layer is helpful\n                    helpfulBytes += details.fileSize\n                    helpfulLayerFiles[file] = details\n                } else {\n                    // file is different or removed => previous layer is not useful\n                    if (newDetails == null) {\n                        deletedLayerFiles.add(file)\n                    }\n                    wastedBytes += details.fileSize\n                }\n            }\n            if (wastedBytes >= helpfulBytes) {\n                // Too much waste => remove the layer\n                info(\"$name: layer ${layer.primaryKey} has too much waste (${wastedBytes.formatBytes()} > ${helpfulBytes.formatBytes()}), so the layer will be skipped\")\n                continue\n            }\n            oldFiles += contents.files\n            reusedFiles += helpfulLayerFiles\n            deletedFiles += deletedLayerFiles\n            newLayers += layer\n            layerInfo += \"${layer.primaryKey} ${(helpfulBytes + wastedBytes).formatBytes()} total (${contents.files.size} files), ${wastedBytes.formatBytes()} outdated\"\n        }\n\n        if (!isBaseline && newLayers.isEmpty()) {\n            info(\"$name: at least one layer from the default branch is needed. The new contents is ${newContents.info.totalBytes.formatBytes()} (${newContents.info.totalFiles} files)\")\n            return\n        }\n\n        val diff = diff(HashContents(oldFiles), newContents.contents)\n        if (diff.messages.isNotEmpty()) {\n            info(\"$name: cache contents is changed: ${diff.summary}\")\n        }\n\n        val layer = diff.toLayer()\n        val cache = layer.toCache(\"newlayer\")\n        // TODO: reuse HashDetails when saving cache\n        cache.save()\n\n        newLayers += layer\n        layerInfo += \"${layer.primaryKey} ${diff.totalUpdated.formatBytes()} total (${diff.updatedFiles.size} files), ${diff.totalDeleted.formatBytes()} deleted (${diff.deletedFiles.size} files)\"\n\n        info(layerInfo.joinToString(\"; \", \"$name: ${newLayers.size} layers. \"))\n\n        layers.encode(CacheLayers(newLayers, deletedFiles = deletedFiles.toList()))\n        // Save the index\n        index.save()\n    }\n\n    private suspend fun saveSingleLayerCache() {\n        info(\"$name: creating single-layer cache image\")\n        val layer = CacheLayer(\n            primaryKey = \"$version-$primaryKey\",\n            paths = listOf(),\n        )\n        val cache = layer.toCache(\"single-layer\")\n        cache.save()\n        if (cache.info()?.totalFiles == 0) {\n            // cache is empty => skip creating empty file\n            return\n        }\n        layers.encode(CacheLayers(listOf(layer), deletedFiles = listOf()))\n        index.save()\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nimport actions.core.warning\nimport com.github.burrunan.wrappers.nodejs.exists\nimport com.github.burrunan.wrappers.nodejs.normalizedPath\nimport kotlinx.serialization.KSerializer\nimport kotlinx.serialization.SerializationException\nimport kotlinx.serialization.json.Json\nimport node.buffer.BufferEncoding\nimport node.fs.*\n\nclass MetadataFile<T>(name: String, private val serializer: KSerializer<T>, private val extension: String = \".json\") {\n    companion object {\n        const val ROOT_FOLDER = \"~/.gradle-cache-action\"\n        val SPECIAL_CHARS = Regex(\"\"\"[!@#$%^&*:;'\"{}\\r\\n\\[\\]\\\\]\"\"\")\n\n        init {\n            val path = ROOT_FOLDER.normalizedPath\n            if (!existsSync(path)) {\n                try {\n                    mkdirSync(path)\n                } catch (ignored: Throwable) {\n                }\n            }\n        }\n    }\n\n    val cachedName = \"$ROOT_FOLDER/$name$extension\"\n    private var uniqueName = cachedName.normalizedPath\n\n    fun prepare(key: String) {\n        uniqueName = \"${cachedName.normalizedPath}.${key.replace('/', '-')}\"\n    }\n\n    suspend fun restore(key: String) {\n        val path = cachedName.normalizedPath\n        if (exists(path)) {\n            prepare(key)\n            rename(path, uniqueName)\n        } else {\n            warning(\"$cachedName: $path does not exist\")\n        }\n    }\n\n    suspend fun decode(warnOnMissing: Boolean = true): T? {\n        if (!exists(uniqueName)) {\n            if (warnOnMissing) {\n                warning(\"$cachedName: $uniqueName does not exist\")\n            }\n            return null\n        }\n        return try {\n            Json.decodeFromString(\n                serializer,\n                readFile(uniqueName, BufferEncoding.utf8)\n            )\n        } catch (e: SerializationException) {\n            warning(\"$cachedName: error deserializing $uniqueName with ${serializer.descriptor.serialName}, message: $e\")\n            return null\n        }\n    }\n\n    suspend fun encode(value: T) {\n        writeFile(\n            cachedName.normalizedPath,\n            Json.encodeToString(serializer, value),\n            BufferEncoding.utf8,\n        )\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.gradle.cache\n\nimport actions.core.ActionsEnvironment\nimport actions.core.debug\nimport com.github.burrunan.gradle.GradleCacheAction\nimport com.github.burrunan.gradle.github.suspendingStateVariable\nimport com.github.burrunan.hashing.hashFiles\nimport octokit.ActionsTrigger\n\n/**\n * Populate cache only when building a default branch, otherwise treat the cache as read-only.\n */\nsuspend fun dependenciesCache(\n    name: String,\n    trigger: ActionsTrigger,\n    cacheLocation: List<String>,\n    pathDependencies: List<String>,\n): Cache {\n    val defaultBranch = GradleCacheAction.DEFAULT_BRANCH_VAR\n    val pkPrefix = trigger.cacheKey\n    val cacheName = \"dependencies-$name\"\n\n    // Avoid re-computing the hash for saving the cache\n    val dependencyDeclarationHash = suspendingStateVariable(cacheName) {\n        hashFiles(*pathDependencies.toTypedArray()).hash\n    }\n    debug { \"$cacheName: dependencyDeclarationHash=${dependencyDeclarationHash.get()}\" }\n    val prefix = \"dependencies-$name-${ActionsEnvironment.RUNNER_OS}\"\n    return LayeredCache(\n        name = cacheName,\n        baseline = prefix,\n        primaryKey = \"$prefix-$pkPrefix-${dependencyDeclarationHash.get()}\",\n        restoreKeys = listOf(\n            \"$prefix-$pkPrefix\",\n            \"$prefix-$defaultBranch\",\n            \"$prefix-master\",\n            \"$prefix-main\",\n        ),\n        paths = cacheLocation,\n    )\n}\n\nsuspend fun gradleDependenciesCache(trigger: ActionsTrigger, path: String, gradleDependenciesCacheKey: List<String>): Cache =\n    dependenciesCache(\n        \"gradle\",\n        trigger,\n        cacheLocation = listOf(\n            \"~/.gradle/caches/modules-2/*\",\n            \"!~/.gradle/caches/modules-2/gc.properties\",\n            \"!~/.gradle/caches/modules-2/modules-2.lock\",\n        ),\n        pathDependencies = listOf(\n            \"$path/**/*.gradle\",\n            \"$path/**/*.gradle.kts\",\n            \"$path/**/gradle/dependency-locking/**\",\n            \"$path/**/*.properties\",\n            \"$path/**/gradle/libs.versions.toml\",\n        ) + gradleDependenciesCacheKey.map {\n                (if (it.startsWith(\"!\")) \"!\" else \"\") +\n                    \"$path/**/\" + it.trim().trimStart('!')\n            } +\n            // Excludes must go the last so they win\n            listOf(\"!$path/**/.gradle/\"),\n    )\n\nsuspend fun mavenDependenciesCache(trigger: ActionsTrigger, path: String, mavenLocalIgnorePaths: List<String>): Cache =\n    dependenciesCache(\n        \"maven\",\n        trigger,\n        cacheLocation = listOf(\"~/.m2/repository\") +\n            mavenLocalIgnorePaths.map { \"!~/.m2/repository/$it\" },\n        pathDependencies = listOf(\n            \"$path/**/pom.xml\",\n        ),\n    )\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nimport com.github.burrunan.gradle.GradleCacheAction\nimport octokit.ActionsTrigger\n\nfun localBuildCache(jobId: String, trigger: ActionsTrigger, gradleVersion: String, treeId: String): Cache {\n    val buildCacheLocation = \"~/.gradle/caches/build-cache-1\"\n    val defaultBranch = GradleCacheAction.DEFAULT_BRANCH_VAR\n    val pkPrefix = trigger.cacheKey\n\n    val restoreKeys = when (trigger) {\n        is ActionsTrigger.PullRequest -> arrayOf(\n            pkPrefix,\n            trigger.event.pull_request.base.ref.removePrefix(\"refs/heads/\"),\n        )\n        is ActionsTrigger.BranchPush -> arrayOf(\n            pkPrefix,\n        )\n        else -> arrayOf()\n    } + arrayOf(\n        defaultBranch,\n        \"master\",\n        \"main\",\n    )\n    val prefix = \"gradle-build-cache-$jobId-gradle-$gradleVersion\"\n    return LayeredCache(\n        name = \"local-build-cache\",\n        baseline = \"$prefix-$defaultBranch\",\n        primaryKey = \"$prefix-$pkPrefix-$treeId\",\n        restoreKeys = restoreKeys.map { \"$prefix-$it\" },\n        paths = listOf(\n            \"$buildCacheLocation/*\",\n            \"!$buildCacheLocation/gc.properties\",\n            \"!$buildCacheLocation/build-cache-1.lock\",\n        ),\n    )\n}\n",null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nfun gradleGeneratedJarsCache(gradleVersion: String): Cache =\n    DefaultCache(\n        name = \"gradle-generated-jars\",\n        primaryKey = \"generated-gradle-jars-gradle-$gradleVersion\",\n        paths = listOf(\n            \"~/.gradle/caches/$gradleVersion/generated-gradle-jars/*\",\n            \"!~/.gradle/caches/$gradleVersion/generated-gradle-jars/*.lock\",\n        ),\n        skipRestoreIfPathExists = \"~/.gradle/caches/$gradleVersion/generated-gradle-jars\",\n    )\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage actions.cache\n\nimport actions.core.LogLevel\nimport actions.core.info\nimport actions.core.log\nimport actions.core.warning\n\nsuspend fun restoreAndLog(\n    paths: List<String>, primaryKey: String,\n    restoreKeys: List<String> = listOf(),\n    version: String,\n    logLevel: LogLevel = LogLevel.INFO,\n): RestoreType {\n    val result = try {\n        when {\n            restoreKeys.isEmpty() -> restoreCache(paths.toTypedArray(), version + primaryKey)\n            else -> restoreCache(\n                paths.toTypedArray(),\n                version + primaryKey,\n                restoreKeys.map { version + it }.toTypedArray(),\n            )\n        }\n    } catch (t: Throwable) {\n        when (t.asDynamic().name) {\n            \"ValidationError\" -> throw t\n            else -> {\n                warning(\"Error while loading $primaryKey: ${t.message}\")\n                return RestoreType.None\n            }\n        }\n    }\n    result?.removePrefix(version)?.let {\n        return if (it.endsWith(primaryKey)) RestoreType.Exact(it) else RestoreType.Partial(it)\n    }\n    log(logLevel) { \"Cache was not found for version=$version, primaryKey=$primaryKey, restore keys=${restoreKeys.joinToString(\", \")}\" }\n    return RestoreType.None\n}\n\nsuspend fun saveAndLog(\n    paths: List<String>,\n    key: String,\n    version: String,\n    logLevel: LogLevel = LogLevel.INFO,\n) {\n    try {\n        saveCache(paths.toTypedArray(), version + key)\n    } catch (t: Throwable) {\n        // TODO: propagate error\n        when (t.asDynamic().name) {\n            \"ValidationError\" -> throw t\n            \"ReserveCacheError\" -> info(t.message ?: \"Unknown ReserveCacheError\")\n            else -> when {\n                t.message?.contains(\"Cache already exists\") == true ->\n                    log(logLevel) { \"Error while uploading $key: ${t.message}\" }\n                else ->\n                    warning(\"Error while uploading $key: ${t.message}\")\n            }\n        }\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage actions.cache\n\nsealed class RestoreType {\n    data class Exact(val path: String) : RestoreType()\n    data class Partial(val path: String) : RestoreType()\n    object None : RestoreType() {\n        override fun toString() = \"None\"\n    }\n    object Unknown : RestoreType() {\n        override fun toString() = \"Unknown\"\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage actions.core\n\nclass ActionFailedException(override val message: String, cause: Throwable? = null) :\n    Throwable(message, cause)\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage actions.core\n\nenum class ActionStage {\n    PRE, MAIN, POST\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage actions.core\n\nimport node.process.process\nimport kotlin.reflect.KProperty\n\n/**\n * See https://docs.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables#default-environment-variables\n */\nobject ActionsEnvironment {\n    val HOME by Environment\n    val GITHUB_WORKFLOW by Environment\n    val GITHUB_RUN_ID by Environment\n    val GITHUB_RUN_NUMBER by Environment\n    val GITHUB_ACTION by Environment\n    val GITHUB_ACTOR by Environment\n    val GITHUB_REPOSITORY by Environment\n    val GITHUB_EVENT_NAME by Environment\n    val GITHUB_EVENT_PATH by Environment\n    val GITHUB_WORKSPACE by Environment\n    val GITHUB_SHA by Environment\n    val GITHUB_REF by Environment\n    val GITHUB_HEAD_REF by Environment\n    val GITHUB_BASE_REF by Environment\n    val GITHUB_SERVER_URL by Environment\n    val GITHUB_API_URL by Environment\n    val GITHUB_GRAPHQL_URL by Environment\n    val RUNNER_OS by Environment\n}\n\nprivate object Environment {\n    operator fun getValue(environment: Any, property: KProperty<*>): String =\n        process.env[property.name] ?: throw ActionFailedException(\"${property.name} is not found in process.env\")\n}\n","package actions.core\n\nenum class LogLevel {\n    DEBUG,\n    INFO,\n    NONE,\n}\n","package actions.core.ext\n\nimport actions.core.InputOptions\n\nfun getInput(name: String, required: Boolean = false): String =\n    actions.core.getInput(name, InputOptions(required = required))\n\nprivate val LINE_SEPARATOR = Regex(\"[\\r\\n]+\")\n\nfun getListInput(name: String, required: Boolean = false): List<String> =\n    actions.core.getInput(name, InputOptions(required = required))\n        .split(LINE_SEPARATOR)\n        .map { it.trim() }\n        .filterNot { it.isEmpty() }\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage actions.exec\n\nclass ExecResult(\n    val exitCode: Int,\n    val stdout: String,\n    val stderr: String,\n)\n\nsuspend fun exec(\n    commandLine: String, vararg args: String,\n    captureOutput: Boolean = false,\n    options: (ExecOptions) -> ExecOptions = { it }\n): ExecResult {\n    val stdout = mutableListOf<String>()\n    val stderr = mutableListOf<String>()\n    val execOptions = if (!captureOutput) {\n        ExecOptions()\n    } else {\n        ExecOptions(\n            listeners = ExecListeners(\n                stdout = {\n                    // it.toString() results in [...] for unknown reason\n                    stdout.add(\"\" + it.unsafeCast<String>())\n                },\n                stderr = {\n                    // it.toString() results in [...] for unknown reason\n                    stderr.add(\"\" + it.unsafeCast<String>())\n                }\n            )\n        )\n    }\n    val exitCode = exec(\n        commandLine,\n        args.copyOf(),\n        options(execOptions),\n    )\n    return ExecResult(\n        exitCode = exitCode.toInt(),\n        stdout = stdout.joinToString(\"\\n\"),\n        stderr = stderr.joinToString(\"\\n\")\n    )\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage actions.glob\n\nimport kotlinx.coroutines.launch\nimport kotlinx.coroutines.supervisorScope\nimport node.fs.unlink\n\nsuspend fun removeFiles(files: List<String>) {\n    if (files.isEmpty()) {\n        return\n    }\n    val globber = create(files.joinToString(\"\\n\"))\n    val fileNames = globber.glob().await()\n    supervisorScope {\n        for (file in fileNames) {\n            launch {\n                unlink(file)\n            }\n        }\n    }\n}\n",null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage javaproperties\n\nprivate val NEWLINE = Regex(\"\\\\s*[\\r\\n]+\\\\s*\")\n\nfun parseString(text: String) = PropertiesFile().apply {\n    for(line in text.split(NEWLINE)) {\n        makeKeys(line)\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan\n\nfun Long.formatBytes() = when {\n    this < 5 * 1024 -> \"${this} B\"\n    this < 5 * 1024 * 1204 -> \"${(this + 512L) / (1024L)} KiB\"\n    this < 5L * 1024 * 1204 * 1024 -> \"${(this + 512L * 1024) / (1024L * 1024)} MiB\"\n    else -> \"${(this + 512L * 1024 * 1024) / (1024L * 1024 * 1024)} GiB\"\n}\n",null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.wrappers.nodejs\n\nimport js.objects.unsafeJso\nimport node.fs.MakeDirectoryOptions\nimport node.fs.existsSync\nimport node.fs.mkdir\n\nsuspend fun mkdir(path: String) {\n    if (!exists(path)) {\n        mkdir(path, unsafeJso<MakeDirectoryOptions> { recursive = true })\n    }\n}\n\n@Deprecated(message = \"catch errors instead\", level = DeprecationLevel.WARNING)\nfun exists(path: String) =\n    existsSync(path.normalizedPath)\n\nval String.normalizedPath: String\n    get() = when {\n        startsWith(\"~\") -> node.os.homedir() + substring(1)\n        else -> this\n    }\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.wrappers.nodejs\n\nimport js.objects.unsafeJso\nimport node.ReadableStream\nimport node.WritableStream\nimport node.buffer.Buffer\nimport node.stream.Readable\nimport node.stream.consumers.buffer\nimport node.stream.consumers.json\nimport node.stream.finished\n\nsuspend fun <T> Readable.readJson(): T = json(this) as T\n\nsuspend fun Readable.readToBuffer(): Buffer<*> = buffer(this)\n\nsuspend fun <T : ReadableStream, D: WritableStream> T.pipeAndWait(destination: D, end : Boolean = false) {\n    pipe(destination = destination, options = unsafeJso { this.end = end })\n    finished(this)\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage octokit\n\nimport actions.core.ActionsEnvironment\nimport node.buffer.BufferEncoding\nimport node.fs.readFile\nimport octokit.webhooks.WebhookPayloadPullRequest\nimport octokit.webhooks.WebhookPayloadPush\nimport octokit.webhooks.WebhookPayloadWorkflowDispatch\n\nsealed class ActionsTrigger(val name: String, open val event: Any) {\n    class PullRequest(override val event: WebhookPayloadPullRequest) : ActionsTrigger(\"pull_request\", event)\n    class BranchPush(override val event: WebhookPayloadPush) : ActionsTrigger(\"push\", event)\n    class WorkflowDispatch(override val event: WebhookPayloadWorkflowDispatch) : ActionsTrigger(\"workflow_dispatch\", event)\n    class Schedule(name: String, event: Any) : ActionsTrigger(name, event)\n    class Other(name: String, event: Any) : ActionsTrigger(name, event)\n}\n\nsuspend fun currentTrigger(): ActionsTrigger {\n    val eventString = readFile(ActionsEnvironment.GITHUB_EVENT_PATH, BufferEncoding.utf8)\n    val event = JSON.parse<Any>(eventString)\n    @Suppress(\"UNCHECKED_CAST_TO_EXTERNAL_INTERFACE\")\n    return when (val eventName = ActionsEnvironment.GITHUB_EVENT_NAME) {\n        \"pull_request\" -> ActionsTrigger.PullRequest(event as WebhookPayloadPullRequest)\n        \"push\" -> ActionsTrigger.BranchPush(event as WebhookPayloadPush)\n        \"workflow_dispatch\" -> ActionsTrigger.WorkflowDispatch(event as WebhookPayloadWorkflowDispatch)\n        \"schedule\" -> ActionsTrigger.Schedule(eventName, event)\n        else -> ActionsTrigger.Other(eventName, event)\n    }\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"module.exports = require(\"assert\");","module.exports = require(\"async_hooks\");","module.exports = require(\"buffer\");","module.exports = require(\"child_process\");","module.exports = require(\"console\");","module.exports = require(\"crypto\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"http2\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"node:crypto\");","module.exports = require(\"node:events\");","module.exports = require(\"node:fs\");","module.exports = require(\"node:fs/promises\");","module.exports = require(\"node:http\");","module.exports = require(\"node:os\");","module.exports = require(\"node:path\");","module.exports = require(\"node:process\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:stream/promises\");","module.exports = require(\"node:url\");","module.exports = require(\"node:util\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"querystring\");","module.exports = require(\"stream\");","module.exports = require(\"stream/web\");","module.exports = require(\"string_decoder\");","module.exports = require(\"timers\");","module.exports = require(\"tls\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"util/types\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Holds the singleton operationRequestMap, to be shared across CJS and ESM imports.\n */\nexport const state = {\n  operationRequestMap: new WeakMap(),\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * @internal\n *\n * Holds the singleton instrumenter, to be shared across CJS and ESM imports.\n */\nexport const state = {\n  instrumenterImplementation: undefined,\n};\n","'use strict'\n\nconst WritableStream = require('node:stream').Writable\nconst inherits = require('node:util').inherits\n\nconst StreamSearch = require('../../streamsearch/sbmh')\n\nconst PartStream = require('./PartStream')\nconst HeaderParser = require('./HeaderParser')\n\nconst DASH = 45\nconst B_ONEDASH = Buffer.from('-')\nconst B_CRLF = Buffer.from('\\r\\n')\nconst EMPTY_FN = function () {}\n\nfunction Dicer (cfg) {\n  if (!(this instanceof Dicer)) { return new Dicer(cfg) }\n  WritableStream.call(this, cfg)\n\n  if (!cfg || (!cfg.headerFirst && typeof cfg.boundary !== 'string')) { throw new TypeError('Boundary required') }\n\n  if (typeof cfg.boundary === 'string') { this.setBoundary(cfg.boundary) } else { this._bparser = undefined }\n\n  this._headerFirst = cfg.headerFirst\n\n  this._dashes = 0\n  this._parts = 0\n  this._finished = false\n  this._realFinish = false\n  this._isPreamble = true\n  this._justMatched = false\n  this._firstWrite = true\n  this._inHeader = true\n  this._part = undefined\n  this._cb = undefined\n  this._ignoreData = false\n  this._partOpts = { highWaterMark: cfg.partHwm }\n  this._pause = false\n\n  const self = this\n  this._hparser = new HeaderParser(cfg)\n  this._hparser.on('header', function (header) {\n    self._inHeader = false\n    self._part.emit('header', header)\n  })\n}\ninherits(Dicer, WritableStream)\n\nDicer.prototype.emit = function (ev) {\n  if (ev === 'finish' && !this._realFinish) {\n    if (!this._finished) {\n      const self = this\n      process.nextTick(function () {\n        self.emit('error', new Error('Unexpected end of multipart data'))\n        if (self._part && !self._ignoreData) {\n          const type = (self._isPreamble ? 'Preamble' : 'Part')\n          self._part.emit('error', new Error(type + ' terminated early due to unexpected end of multipart data'))\n          self._part.push(null)\n          process.nextTick(function () {\n            self._realFinish = true\n            self.emit('finish')\n            self._realFinish = false\n          })\n          return\n        }\n        self._realFinish = true\n        self.emit('finish')\n        self._realFinish = false\n      })\n    }\n  } else { WritableStream.prototype.emit.apply(this, arguments) }\n}\n\nDicer.prototype._write = function (data, encoding, cb) {\n  // ignore unexpected data (e.g. extra trailer data after finished)\n  if (!this._hparser && !this._bparser) { return cb() }\n\n  if (this._headerFirst && this._isPreamble) {\n    if (!this._part) {\n      this._part = new PartStream(this._partOpts)\n      if (this.listenerCount('preamble') !== 0) { this.emit('preamble', this._part) } else { this._ignore() }\n    }\n    const r = this._hparser.push(data)\n    if (!this._inHeader && r !== undefined && r < data.length) { data = data.slice(r) } else { return cb() }\n  }\n\n  // allows for \"easier\" testing\n  if (this._firstWrite) {\n    this._bparser.push(B_CRLF)\n    this._firstWrite = false\n  }\n\n  this._bparser.push(data)\n\n  if (this._pause) { this._cb = cb } else { cb() }\n}\n\nDicer.prototype.reset = function () {\n  this._part = undefined\n  this._bparser = undefined\n  this._hparser = undefined\n}\n\nDicer.prototype.setBoundary = function (boundary) {\n  const self = this\n  this._bparser = new StreamSearch('\\r\\n--' + boundary)\n  this._bparser.on('info', function (isMatch, data, start, end) {\n    self._oninfo(isMatch, data, start, end)\n  })\n}\n\nDicer.prototype._ignore = function () {\n  if (this._part && !this._ignoreData) {\n    this._ignoreData = true\n    this._part.on('error', EMPTY_FN)\n    // we must perform some kind of read on the stream even though we are\n    // ignoring the data, otherwise node's Readable stream will not emit 'end'\n    // after pushing null to the stream\n    this._part.resume()\n  }\n}\n\nDicer.prototype._oninfo = function (isMatch, data, start, end) {\n  let buf; const self = this; let i = 0; let r; let shouldWriteMore = true\n\n  if (!this._part && this._justMatched && data) {\n    while (this._dashes < 2 && (start + i) < end) {\n      if (data[start + i] === DASH) {\n        ++i\n        ++this._dashes\n      } else {\n        if (this._dashes) { buf = B_ONEDASH }\n        this._dashes = 0\n        break\n      }\n    }\n    if (this._dashes === 2) {\n      if ((start + i) < end && this.listenerCount('trailer') !== 0) { this.emit('trailer', data.slice(start + i, end)) }\n      this.reset()\n      this._finished = true\n      // no more parts will be added\n      if (self._parts === 0) {\n        self._realFinish = true\n        self.emit('finish')\n        self._realFinish = false\n      }\n    }\n    if (this._dashes) { return }\n  }\n  if (this._justMatched) { this._justMatched = false }\n  if (!this._part) {\n    this._part = new PartStream(this._partOpts)\n    this._part._read = function (n) {\n      self._unpause()\n    }\n    if (this._isPreamble && this.listenerCount('preamble') !== 0) {\n      this.emit('preamble', this._part)\n    } else if (this._isPreamble !== true && this.listenerCount('part') !== 0) {\n      this.emit('part', this._part)\n    } else {\n      this._ignore()\n    }\n    if (!this._isPreamble) { this._inHeader = true }\n  }\n  if (data && start < end && !this._ignoreData) {\n    if (this._isPreamble || !this._inHeader) {\n      if (buf) { shouldWriteMore = this._part.push(buf) }\n      shouldWriteMore = this._part.push(data.slice(start, end))\n      if (!shouldWriteMore) { this._pause = true }\n    } else if (!this._isPreamble && this._inHeader) {\n      if (buf) { this._hparser.push(buf) }\n      r = this._hparser.push(data.slice(start, end))\n      if (!this._inHeader && r !== undefined && r < end) { this._oninfo(false, data, start + r, end) }\n    }\n  }\n  if (isMatch) {\n    this._hparser.reset()\n    if (this._isPreamble) { this._isPreamble = false } else {\n      if (start !== end) {\n        ++this._parts\n        this._part.on('end', function () {\n          if (--self._parts === 0) {\n            if (self._finished) {\n              self._realFinish = true\n              self.emit('finish')\n              self._realFinish = false\n            } else {\n              self._unpause()\n            }\n          }\n        })\n      }\n    }\n    this._part.push(null)\n    this._part = undefined\n    this._ignoreData = false\n    this._justMatched = true\n    this._dashes = 0\n  }\n}\n\nDicer.prototype._unpause = function () {\n  if (!this._pause) { return }\n\n  this._pause = false\n  if (this._cb) {\n    const cb = this._cb\n    this._cb = undefined\n    cb()\n  }\n}\n\nmodule.exports = Dicer\n","'use strict'\n\nconst EventEmitter = require('node:events').EventEmitter\nconst inherits = require('node:util').inherits\nconst getLimit = require('../../../lib/utils/getLimit')\n\nconst StreamSearch = require('../../streamsearch/sbmh')\n\nconst B_DCRLF = Buffer.from('\\r\\n\\r\\n')\nconst RE_CRLF = /\\r\\n/g\nconst RE_HDR = /^([^:]+):[ \\t]?([\\x00-\\xFF]+)?$/ // eslint-disable-line no-control-regex\n\nfunction HeaderParser (cfg) {\n  EventEmitter.call(this)\n\n  cfg = cfg || {}\n  const self = this\n  this.nread = 0\n  this.maxed = false\n  this.npairs = 0\n  this.maxHeaderPairs = getLimit(cfg, 'maxHeaderPairs', 2000)\n  this.maxHeaderSize = getLimit(cfg, 'maxHeaderSize', 80 * 1024)\n  this.buffer = ''\n  this.header = {}\n  this.finished = false\n  this.ss = new StreamSearch(B_DCRLF)\n  this.ss.on('info', function (isMatch, data, start, end) {\n    if (data && !self.maxed) {\n      if (self.nread + end - start >= self.maxHeaderSize) {\n        end = self.maxHeaderSize - self.nread + start\n        self.nread = self.maxHeaderSize\n        self.maxed = true\n      } else { self.nread += (end - start) }\n\n      self.buffer += data.toString('binary', start, end)\n    }\n    if (isMatch) { self._finish() }\n  })\n}\ninherits(HeaderParser, EventEmitter)\n\nHeaderParser.prototype.push = function (data) {\n  const r = this.ss.push(data)\n  if (this.finished) { return r }\n}\n\nHeaderParser.prototype.reset = function () {\n  this.finished = false\n  this.buffer = ''\n  this.header = {}\n  this.ss.reset()\n}\n\nHeaderParser.prototype._finish = function () {\n  if (this.buffer) { this._parseHeader() }\n  this.ss.matches = this.ss.maxMatches\n  const header = this.header\n  this.header = {}\n  this.buffer = ''\n  this.finished = true\n  this.nread = this.npairs = 0\n  this.maxed = false\n  this.emit('header', header)\n}\n\nHeaderParser.prototype._parseHeader = function () {\n  if (this.npairs === this.maxHeaderPairs) { return }\n\n  const lines = this.buffer.split(RE_CRLF)\n  const len = lines.length\n  let m, h\n\n  for (var i = 0; i < len; ++i) { // eslint-disable-line no-var\n    if (lines[i].length === 0) { continue }\n    if (lines[i][0] === '\\t' || lines[i][0] === ' ') {\n      // folded header content\n      // RFC2822 says to just remove the CRLF and not the whitespace following\n      // it, so we follow the RFC and include the leading whitespace ...\n      if (h) {\n        this.header[h][this.header[h].length - 1] += lines[i]\n        continue\n      }\n    }\n\n    const posColon = lines[i].indexOf(':')\n    if (\n      posColon === -1 ||\n      posColon === 0\n    ) {\n      return\n    }\n    m = RE_HDR.exec(lines[i])\n    h = m[1].toLowerCase()\n    this.header[h] = this.header[h] || []\n    this.header[h].push((m[2] || ''))\n    if (++this.npairs === this.maxHeaderPairs) { break }\n  }\n}\n\nmodule.exports = HeaderParser\n","'use strict'\n\nconst inherits = require('node:util').inherits\nconst ReadableStream = require('node:stream').Readable\n\nfunction PartStream (opts) {\n  ReadableStream.call(this, opts)\n}\ninherits(PartStream, ReadableStream)\n\nPartStream.prototype._read = function (n) {}\n\nmodule.exports = PartStream\n","'use strict'\n\n/**\n * Copyright Brian White. All rights reserved.\n *\n * @see https://github.com/mscdex/streamsearch\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n * Based heavily on the Streaming Boyer-Moore-Horspool C++ implementation\n * by Hongli Lai at: https://github.com/FooBarWidget/boyer-moore-horspool\n */\nconst EventEmitter = require('node:events').EventEmitter\nconst inherits = require('node:util').inherits\n\nfunction SBMH (needle) {\n  if (typeof needle === 'string') {\n    needle = Buffer.from(needle)\n  }\n\n  if (!Buffer.isBuffer(needle)) {\n    throw new TypeError('The needle has to be a String or a Buffer.')\n  }\n\n  const needleLength = needle.length\n\n  if (needleLength === 0) {\n    throw new Error('The needle cannot be an empty String/Buffer.')\n  }\n\n  if (needleLength > 256) {\n    throw new Error('The needle cannot have a length bigger than 256.')\n  }\n\n  this.maxMatches = Infinity\n  this.matches = 0\n\n  this._occ = new Array(256)\n    .fill(needleLength) // Initialize occurrence table.\n  this._lookbehind_size = 0\n  this._needle = needle\n  this._bufpos = 0\n\n  this._lookbehind = Buffer.alloc(needleLength)\n\n  // Populate occurrence table with analysis of the needle,\n  // ignoring last letter.\n  for (var i = 0; i < needleLength - 1; ++i) { // eslint-disable-line no-var\n    this._occ[needle[i]] = needleLength - 1 - i\n  }\n}\ninherits(SBMH, EventEmitter)\n\nSBMH.prototype.reset = function () {\n  this._lookbehind_size = 0\n  this.matches = 0\n  this._bufpos = 0\n}\n\nSBMH.prototype.push = function (chunk, pos) {\n  if (!Buffer.isBuffer(chunk)) {\n    chunk = Buffer.from(chunk, 'binary')\n  }\n  const chlen = chunk.length\n  this._bufpos = pos || 0\n  let r\n  while (r !== chlen && this.matches < this.maxMatches) { r = this._sbmh_feed(chunk) }\n  return r\n}\n\nSBMH.prototype._sbmh_feed = function (data) {\n  const len = data.length\n  const needle = this._needle\n  const needleLength = needle.length\n  const lastNeedleChar = needle[needleLength - 1]\n\n  // Positive: points to a position in `data`\n  //           pos == 3 points to data[3]\n  // Negative: points to a position in the lookbehind buffer\n  //           pos == -2 points to lookbehind[lookbehind_size - 2]\n  let pos = -this._lookbehind_size\n  let ch\n\n  if (pos < 0) {\n    // Lookbehind buffer is not empty. Perform Boyer-Moore-Horspool\n    // search with character lookup code that considers both the\n    // lookbehind buffer and the current round's haystack data.\n    //\n    // Loop until\n    //   there is a match.\n    // or until\n    //   we've moved past the position that requires the\n    //   lookbehind buffer. In this case we switch to the\n    //   optimized loop.\n    // or until\n    //   the character to look at lies outside the haystack.\n    while (pos < 0 && pos <= len - needleLength) {\n      ch = this._sbmh_lookup_char(data, pos + needleLength - 1)\n\n      if (\n        ch === lastNeedleChar &&\n        this._sbmh_memcmp(data, pos, needleLength - 1)\n      ) {\n        this._lookbehind_size = 0\n        ++this.matches\n        this.emit('info', true)\n\n        return (this._bufpos = pos + needleLength)\n      }\n      pos += this._occ[ch]\n    }\n\n    // No match.\n\n    if (pos < 0) {\n      // There's too few data for Boyer-Moore-Horspool to run,\n      // so let's use a different algorithm to skip as much as\n      // we can.\n      // Forward pos until\n      //   the trailing part of lookbehind + data\n      //   looks like the beginning of the needle\n      // or until\n      //   pos == 0\n      while (pos < 0 && !this._sbmh_memcmp(data, pos, len - pos)) { ++pos }\n    }\n\n    if (pos >= 0) {\n      // Discard lookbehind buffer.\n      this.emit('info', false, this._lookbehind, 0, this._lookbehind_size)\n      this._lookbehind_size = 0\n    } else {\n      // Cut off part of the lookbehind buffer that has\n      // been processed and append the entire haystack\n      // into it.\n      const bytesToCutOff = this._lookbehind_size + pos\n      if (bytesToCutOff > 0) {\n        // The cut off data is guaranteed not to contain the needle.\n        this.emit('info', false, this._lookbehind, 0, bytesToCutOff)\n      }\n\n      this._lookbehind.copy(this._lookbehind, 0, bytesToCutOff,\n        this._lookbehind_size - bytesToCutOff)\n      this._lookbehind_size -= bytesToCutOff\n\n      data.copy(this._lookbehind, this._lookbehind_size)\n      this._lookbehind_size += len\n\n      this._bufpos = len\n      return len\n    }\n  }\n\n  pos += (pos >= 0) * this._bufpos\n\n  // Lookbehind buffer is now empty. We only need to check if the\n  // needle is in the haystack.\n  if (data.indexOf(needle, pos) !== -1) {\n    pos = data.indexOf(needle, pos)\n    ++this.matches\n    if (pos > 0) { this.emit('info', true, data, this._bufpos, pos) } else { this.emit('info', true) }\n\n    return (this._bufpos = pos + needleLength)\n  } else {\n    pos = len - needleLength\n  }\n\n  // There was no match. If there's trailing haystack data that we cannot\n  // match yet using the Boyer-Moore-Horspool algorithm (because the trailing\n  // data is less than the needle size) then match using a modified\n  // algorithm that starts matching from the beginning instead of the end.\n  // Whatever trailing data is left after running this algorithm is added to\n  // the lookbehind buffer.\n  while (\n    pos < len &&\n    (\n      data[pos] !== needle[0] ||\n      (\n        (Buffer.compare(\n          data.subarray(pos, pos + len - pos),\n          needle.subarray(0, len - pos)\n        ) !== 0)\n      )\n    )\n  ) {\n    ++pos\n  }\n  if (pos < len) {\n    data.copy(this._lookbehind, 0, pos, pos + (len - pos))\n    this._lookbehind_size = len - pos\n  }\n\n  // Everything until pos is guaranteed not to contain needle data.\n  if (pos > 0) { this.emit('info', false, data, this._bufpos, pos < len ? pos : len) }\n\n  this._bufpos = len\n  return len\n}\n\nSBMH.prototype._sbmh_lookup_char = function (data, pos) {\n  return (pos < 0)\n    ? this._lookbehind[this._lookbehind_size + pos]\n    : data[pos]\n}\n\nSBMH.prototype._sbmh_memcmp = function (data, pos, len) {\n  for (var i = 0; i < len; ++i) { // eslint-disable-line no-var\n    if (this._sbmh_lookup_char(data, pos + i) !== this._needle[i]) { return false }\n  }\n  return true\n}\n\nmodule.exports = SBMH\n","'use strict'\n\nconst WritableStream = require('node:stream').Writable\nconst { inherits } = require('node:util')\nconst Dicer = require('../deps/dicer/lib/Dicer')\n\nconst MultipartParser = require('./types/multipart')\nconst UrlencodedParser = require('./types/urlencoded')\nconst parseParams = require('./utils/parseParams')\n\nfunction Busboy (opts) {\n  if (!(this instanceof Busboy)) { return new Busboy(opts) }\n\n  if (typeof opts !== 'object') {\n    throw new TypeError('Busboy expected an options-Object.')\n  }\n  if (typeof opts.headers !== 'object') {\n    throw new TypeError('Busboy expected an options-Object with headers-attribute.')\n  }\n  if (typeof opts.headers['content-type'] !== 'string') {\n    throw new TypeError('Missing Content-Type-header.')\n  }\n\n  const {\n    headers,\n    ...streamOptions\n  } = opts\n\n  this.opts = {\n    autoDestroy: false,\n    ...streamOptions\n  }\n  WritableStream.call(this, this.opts)\n\n  this._done = false\n  this._parser = this.getParserByHeaders(headers)\n  this._finished = false\n}\ninherits(Busboy, WritableStream)\n\nBusboy.prototype.emit = function (ev) {\n  if (ev === 'finish') {\n    if (!this._done) {\n      this._parser?.end()\n      return\n    } else if (this._finished) {\n      return\n    }\n    this._finished = true\n  }\n  WritableStream.prototype.emit.apply(this, arguments)\n}\n\nBusboy.prototype.getParserByHeaders = function (headers) {\n  const parsed = parseParams(headers['content-type'])\n\n  const cfg = {\n    defCharset: this.opts.defCharset,\n    fileHwm: this.opts.fileHwm,\n    headers,\n    highWaterMark: this.opts.highWaterMark,\n    isPartAFile: this.opts.isPartAFile,\n    limits: this.opts.limits,\n    parsedConType: parsed,\n    preservePath: this.opts.preservePath\n  }\n\n  if (MultipartParser.detect.test(parsed[0])) {\n    return new MultipartParser(this, cfg)\n  }\n  if (UrlencodedParser.detect.test(parsed[0])) {\n    return new UrlencodedParser(this, cfg)\n  }\n  throw new Error('Unsupported Content-Type.')\n}\n\nBusboy.prototype._write = function (chunk, encoding, cb) {\n  this._parser.write(chunk, cb)\n}\n\nmodule.exports = Busboy\nmodule.exports.default = Busboy\nmodule.exports.Busboy = Busboy\n\nmodule.exports.Dicer = Dicer\n","'use strict'\n\n// TODO:\n//  * support 1 nested multipart level\n//    (see second multipart example here:\n//     http://www.w3.org/TR/html401/interact/forms.html#didx-multipartform-data)\n//  * support limits.fieldNameSize\n//     -- this will require modifications to utils.parseParams\n\nconst { Readable } = require('node:stream')\nconst { inherits } = require('node:util')\n\nconst Dicer = require('../../deps/dicer/lib/Dicer')\n\nconst parseParams = require('../utils/parseParams')\nconst decodeText = require('../utils/decodeText')\nconst basename = require('../utils/basename')\nconst getLimit = require('../utils/getLimit')\n\nconst RE_BOUNDARY = /^boundary$/i\nconst RE_FIELD = /^form-data$/i\nconst RE_CHARSET = /^charset$/i\nconst RE_FILENAME = /^filename$/i\nconst RE_NAME = /^name$/i\n\nMultipart.detect = /^multipart\\/form-data/i\nfunction Multipart (boy, cfg) {\n  let i\n  let len\n  const self = this\n  let boundary\n  const limits = cfg.limits\n  const isPartAFile = cfg.isPartAFile || ((fieldName, contentType, fileName) => (contentType === 'application/octet-stream' || fileName !== undefined))\n  const parsedConType = cfg.parsedConType || []\n  const defCharset = cfg.defCharset || 'utf8'\n  const preservePath = cfg.preservePath\n  const fileOpts = { highWaterMark: cfg.fileHwm }\n\n  for (i = 0, len = parsedConType.length; i < len; ++i) {\n    if (Array.isArray(parsedConType[i]) &&\n      RE_BOUNDARY.test(parsedConType[i][0])) {\n      boundary = parsedConType[i][1]\n      break\n    }\n  }\n\n  function checkFinished () {\n    if (nends === 0 && finished && !boy._done) {\n      finished = false\n      self.end()\n    }\n  }\n\n  if (typeof boundary !== 'string') { throw new Error('Multipart: Boundary not found') }\n\n  const fieldSizeLimit = getLimit(limits, 'fieldSize', 1 * 1024 * 1024)\n  const fileSizeLimit = getLimit(limits, 'fileSize', Infinity)\n  const filesLimit = getLimit(limits, 'files', Infinity)\n  const fieldsLimit = getLimit(limits, 'fields', Infinity)\n  const partsLimit = getLimit(limits, 'parts', Infinity)\n  const headerPairsLimit = getLimit(limits, 'headerPairs', 2000)\n  const headerSizeLimit = getLimit(limits, 'headerSize', 80 * 1024)\n\n  let nfiles = 0\n  let nfields = 0\n  let nends = 0\n  let curFile\n  let curField\n  let finished = false\n\n  this._needDrain = false\n  this._pause = false\n  this._cb = undefined\n  this._nparts = 0\n  this._boy = boy\n\n  const parserCfg = {\n    boundary,\n    maxHeaderPairs: headerPairsLimit,\n    maxHeaderSize: headerSizeLimit,\n    partHwm: fileOpts.highWaterMark,\n    highWaterMark: cfg.highWaterMark\n  }\n\n  this.parser = new Dicer(parserCfg)\n  this.parser.on('drain', function () {\n    self._needDrain = false\n    if (self._cb && !self._pause) {\n      const cb = self._cb\n      self._cb = undefined\n      cb()\n    }\n  }).on('part', function onPart (part) {\n    if (++self._nparts > partsLimit) {\n      self.parser.removeListener('part', onPart)\n      self.parser.on('part', skipPart)\n      boy.hitPartsLimit = true\n      boy.emit('partsLimit')\n      return skipPart(part)\n    }\n\n    // hack because streams2 _always_ doesn't emit 'end' until nextTick, so let\n    // us emit 'end' early since we know the part has ended if we are already\n    // seeing the next part\n    if (curField) {\n      const field = curField\n      field.emit('end')\n      field.removeAllListeners('end')\n    }\n\n    part.on('header', function (header) {\n      let contype\n      let fieldname\n      let parsed\n      let charset\n      let encoding\n      let filename\n      let nsize = 0\n\n      if (header['content-type']) {\n        parsed = parseParams(header['content-type'][0])\n        if (parsed[0]) {\n          contype = parsed[0].toLowerCase()\n          for (i = 0, len = parsed.length; i < len; ++i) {\n            if (RE_CHARSET.test(parsed[i][0])) {\n              charset = parsed[i][1].toLowerCase()\n              break\n            }\n          }\n        }\n      }\n\n      if (contype === undefined) { contype = 'text/plain' }\n      if (charset === undefined) { charset = defCharset }\n\n      if (header['content-disposition']) {\n        parsed = parseParams(header['content-disposition'][0])\n        if (!RE_FIELD.test(parsed[0])) { return skipPart(part) }\n        for (i = 0, len = parsed.length; i < len; ++i) {\n          if (RE_NAME.test(parsed[i][0])) {\n            fieldname = parsed[i][1]\n          } else if (RE_FILENAME.test(parsed[i][0])) {\n            filename = parsed[i][1]\n            if (!preservePath) { filename = basename(filename) }\n          }\n        }\n      } else { return skipPart(part) }\n\n      if (header['content-transfer-encoding']) { encoding = header['content-transfer-encoding'][0].toLowerCase() } else { encoding = '7bit' }\n\n      let onData,\n        onEnd\n\n      if (isPartAFile(fieldname, contype, filename)) {\n        // file/binary field\n        if (nfiles === filesLimit) {\n          if (!boy.hitFilesLimit) {\n            boy.hitFilesLimit = true\n            boy.emit('filesLimit')\n          }\n          return skipPart(part)\n        }\n\n        ++nfiles\n\n        if (boy.listenerCount('file') === 0) {\n          self.parser._ignore()\n          return\n        }\n\n        ++nends\n        const file = new FileStream(fileOpts)\n        curFile = file\n        file.on('end', function () {\n          --nends\n          self._pause = false\n          checkFinished()\n          if (self._cb && !self._needDrain) {\n            const cb = self._cb\n            self._cb = undefined\n            cb()\n          }\n        })\n        file._read = function (n) {\n          if (!self._pause) { return }\n          self._pause = false\n          if (self._cb && !self._needDrain) {\n            const cb = self._cb\n            self._cb = undefined\n            cb()\n          }\n        }\n        boy.emit('file', fieldname, file, filename, encoding, contype)\n\n        onData = function (data) {\n          if ((nsize += data.length) > fileSizeLimit) {\n            const extralen = fileSizeLimit - nsize + data.length\n            if (extralen > 0) { file.push(data.slice(0, extralen)) }\n            file.truncated = true\n            file.bytesRead = fileSizeLimit\n            part.removeAllListeners('data')\n            file.emit('limit')\n            return\n          } else if (!file.push(data)) { self._pause = true }\n\n          file.bytesRead = nsize\n        }\n\n        onEnd = function () {\n          curFile = undefined\n          file.push(null)\n        }\n      } else {\n        // non-file field\n        if (nfields === fieldsLimit) {\n          if (!boy.hitFieldsLimit) {\n            boy.hitFieldsLimit = true\n            boy.emit('fieldsLimit')\n          }\n          return skipPart(part)\n        }\n\n        ++nfields\n        ++nends\n        let buffer = ''\n        let truncated = false\n        curField = part\n\n        onData = function (data) {\n          if ((nsize += data.length) > fieldSizeLimit) {\n            const extralen = (fieldSizeLimit - (nsize - data.length))\n            buffer += data.toString('binary', 0, extralen)\n            truncated = true\n            part.removeAllListeners('data')\n          } else { buffer += data.toString('binary') }\n        }\n\n        onEnd = function () {\n          curField = undefined\n          if (buffer.length) { buffer = decodeText(buffer, 'binary', charset) }\n          boy.emit('field', fieldname, buffer, false, truncated, encoding, contype)\n          --nends\n          checkFinished()\n        }\n      }\n\n      /* As of node@2efe4ab761666 (v0.10.29+/v0.11.14+), busboy had become\n         broken. Streams2/streams3 is a huge black box of confusion, but\n         somehow overriding the sync state seems to fix things again (and still\n         seems to work for previous node versions).\n      */\n      part._readableState.sync = false\n\n      part.on('data', onData)\n      part.on('end', onEnd)\n    }).on('error', function (err) {\n      if (curFile) { curFile.emit('error', err) }\n    })\n  }).on('error', function (err) {\n    boy.emit('error', err)\n  }).on('finish', function () {\n    finished = true\n    checkFinished()\n  })\n}\n\nMultipart.prototype.write = function (chunk, cb) {\n  const r = this.parser.write(chunk)\n  if (r && !this._pause) {\n    cb()\n  } else {\n    this._needDrain = !r\n    this._cb = cb\n  }\n}\n\nMultipart.prototype.end = function () {\n  const self = this\n\n  if (self.parser.writable) {\n    self.parser.end()\n  } else if (!self._boy._done) {\n    process.nextTick(function () {\n      self._boy._done = true\n      self._boy.emit('finish')\n    })\n  }\n}\n\nfunction skipPart (part) {\n  part.resume()\n}\n\nfunction FileStream (opts) {\n  Readable.call(this, opts)\n\n  this.bytesRead = 0\n\n  this.truncated = false\n}\n\ninherits(FileStream, Readable)\n\nFileStream.prototype._read = function (n) {}\n\nmodule.exports = Multipart\n","'use strict'\n\nconst Decoder = require('../utils/Decoder')\nconst decodeText = require('../utils/decodeText')\nconst getLimit = require('../utils/getLimit')\n\nconst RE_CHARSET = /^charset$/i\n\nUrlEncoded.detect = /^application\\/x-www-form-urlencoded/i\nfunction UrlEncoded (boy, cfg) {\n  const limits = cfg.limits\n  const parsedConType = cfg.parsedConType\n  this.boy = boy\n\n  this.fieldSizeLimit = getLimit(limits, 'fieldSize', 1 * 1024 * 1024)\n  this.fieldNameSizeLimit = getLimit(limits, 'fieldNameSize', 100)\n  this.fieldsLimit = getLimit(limits, 'fields', Infinity)\n\n  let charset\n  for (var i = 0, len = parsedConType.length; i < len; ++i) { // eslint-disable-line no-var\n    if (Array.isArray(parsedConType[i]) &&\n        RE_CHARSET.test(parsedConType[i][0])) {\n      charset = parsedConType[i][1].toLowerCase()\n      break\n    }\n  }\n\n  if (charset === undefined) { charset = cfg.defCharset || 'utf8' }\n\n  this.decoder = new Decoder()\n  this.charset = charset\n  this._fields = 0\n  this._state = 'key'\n  this._checkingBytes = true\n  this._bytesKey = 0\n  this._bytesVal = 0\n  this._key = ''\n  this._val = ''\n  this._keyTrunc = false\n  this._valTrunc = false\n  this._hitLimit = false\n}\n\nUrlEncoded.prototype.write = function (data, cb) {\n  if (this._fields === this.fieldsLimit) {\n    if (!this.boy.hitFieldsLimit) {\n      this.boy.hitFieldsLimit = true\n      this.boy.emit('fieldsLimit')\n    }\n    return cb()\n  }\n\n  let idxeq; let idxamp; let i; let p = 0; const len = data.length\n\n  while (p < len) {\n    if (this._state === 'key') {\n      idxeq = idxamp = undefined\n      for (i = p; i < len; ++i) {\n        if (!this._checkingBytes) { ++p }\n        if (data[i] === 0x3D/* = */) {\n          idxeq = i\n          break\n        } else if (data[i] === 0x26/* & */) {\n          idxamp = i\n          break\n        }\n        if (this._checkingBytes && this._bytesKey === this.fieldNameSizeLimit) {\n          this._hitLimit = true\n          break\n        } else if (this._checkingBytes) { ++this._bytesKey }\n      }\n\n      if (idxeq !== undefined) {\n        // key with assignment\n        if (idxeq > p) { this._key += this.decoder.write(data.toString('binary', p, idxeq)) }\n        this._state = 'val'\n\n        this._hitLimit = false\n        this._checkingBytes = true\n        this._val = ''\n        this._bytesVal = 0\n        this._valTrunc = false\n        this.decoder.reset()\n\n        p = idxeq + 1\n      } else if (idxamp !== undefined) {\n        // key with no assignment\n        ++this._fields\n        let key; const keyTrunc = this._keyTrunc\n        if (idxamp > p) { key = (this._key += this.decoder.write(data.toString('binary', p, idxamp))) } else { key = this._key }\n\n        this._hitLimit = false\n        this._checkingBytes = true\n        this._key = ''\n        this._bytesKey = 0\n        this._keyTrunc = false\n        this.decoder.reset()\n\n        if (key.length) {\n          this.boy.emit('field', decodeText(key, 'binary', this.charset),\n            '',\n            keyTrunc,\n            false)\n        }\n\n        p = idxamp + 1\n        if (this._fields === this.fieldsLimit) { return cb() }\n      } else if (this._hitLimit) {\n        // we may not have hit the actual limit if there are encoded bytes...\n        if (i > p) { this._key += this.decoder.write(data.toString('binary', p, i)) }\n        p = i\n        if ((this._bytesKey = this._key.length) === this.fieldNameSizeLimit) {\n          // yep, we actually did hit the limit\n          this._checkingBytes = false\n          this._keyTrunc = true\n        }\n      } else {\n        if (p < len) { this._key += this.decoder.write(data.toString('binary', p)) }\n        p = len\n      }\n    } else {\n      idxamp = undefined\n      for (i = p; i < len; ++i) {\n        if (!this._checkingBytes) { ++p }\n        if (data[i] === 0x26/* & */) {\n          idxamp = i\n          break\n        }\n        if (this._checkingBytes && this._bytesVal === this.fieldSizeLimit) {\n          this._hitLimit = true\n          break\n        } else if (this._checkingBytes) { ++this._bytesVal }\n      }\n\n      if (idxamp !== undefined) {\n        ++this._fields\n        if (idxamp > p) { this._val += this.decoder.write(data.toString('binary', p, idxamp)) }\n        this.boy.emit('field', decodeText(this._key, 'binary', this.charset),\n          decodeText(this._val, 'binary', this.charset),\n          this._keyTrunc,\n          this._valTrunc)\n        this._state = 'key'\n\n        this._hitLimit = false\n        this._checkingBytes = true\n        this._key = ''\n        this._bytesKey = 0\n        this._keyTrunc = false\n        this.decoder.reset()\n\n        p = idxamp + 1\n        if (this._fields === this.fieldsLimit) { return cb() }\n      } else if (this._hitLimit) {\n        // we may not have hit the actual limit if there are encoded bytes...\n        if (i > p) { this._val += this.decoder.write(data.toString('binary', p, i)) }\n        p = i\n        if ((this._val === '' && this.fieldSizeLimit === 0) ||\n            (this._bytesVal = this._val.length) === this.fieldSizeLimit) {\n          // yep, we actually did hit the limit\n          this._checkingBytes = false\n          this._valTrunc = true\n        }\n      } else {\n        if (p < len) { this._val += this.decoder.write(data.toString('binary', p)) }\n        p = len\n      }\n    }\n  }\n  cb()\n}\n\nUrlEncoded.prototype.end = function () {\n  if (this.boy._done) { return }\n\n  if (this._state === 'key' && this._key.length > 0) {\n    this.boy.emit('field', decodeText(this._key, 'binary', this.charset),\n      '',\n      this._keyTrunc,\n      false)\n  } else if (this._state === 'val') {\n    this.boy.emit('field', decodeText(this._key, 'binary', this.charset),\n      decodeText(this._val, 'binary', this.charset),\n      this._keyTrunc,\n      this._valTrunc)\n  }\n  this.boy._done = true\n  this.boy.emit('finish')\n}\n\nmodule.exports = UrlEncoded\n","'use strict'\n\nconst RE_PLUS = /\\+/g\n\nconst HEX = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n]\n\nfunction Decoder () {\n  this.buffer = undefined\n}\nDecoder.prototype.write = function (str) {\n  // Replace '+' with ' ' before decoding\n  str = str.replace(RE_PLUS, ' ')\n  let res = ''\n  let i = 0; let p = 0; const len = str.length\n  for (; i < len; ++i) {\n    if (this.buffer !== undefined) {\n      if (!HEX[str.charCodeAt(i)]) {\n        res += '%' + this.buffer\n        this.buffer = undefined\n        --i // retry character\n      } else {\n        this.buffer += str[i]\n        ++p\n        if (this.buffer.length === 2) {\n          res += String.fromCharCode(parseInt(this.buffer, 16))\n          this.buffer = undefined\n        }\n      }\n    } else if (str[i] === '%') {\n      if (i > p) {\n        res += str.substring(p, i)\n        p = i\n      }\n      this.buffer = ''\n      ++p\n    }\n  }\n  if (p < len && this.buffer === undefined) { res += str.substring(p) }\n  return res\n}\nDecoder.prototype.reset = function () {\n  this.buffer = undefined\n}\n\nmodule.exports = Decoder\n","'use strict'\n\nmodule.exports = function basename (path) {\n  if (typeof path !== 'string') { return '' }\n  for (var i = path.length - 1; i >= 0; --i) { // eslint-disable-line no-var\n    switch (path.charCodeAt(i)) {\n      case 0x2F: // '/'\n      case 0x5C: // '\\'\n        path = path.slice(i + 1)\n        return (path === '..' || path === '.' ? '' : path)\n    }\n  }\n  return (path === '..' || path === '.' ? '' : path)\n}\n","'use strict'\n\n// Node has always utf-8\nconst utf8Decoder = new TextDecoder('utf-8')\nconst textDecoders = new Map([\n  ['utf-8', utf8Decoder],\n  ['utf8', utf8Decoder]\n])\n\nfunction getDecoder (charset) {\n  let lc\n  while (true) {\n    switch (charset) {\n      case 'utf-8':\n      case 'utf8':\n        return decoders.utf8\n      case 'latin1':\n      case 'ascii': // TODO: Make these a separate, strict decoder?\n      case 'us-ascii':\n      case 'iso-8859-1':\n      case 'iso8859-1':\n      case 'iso88591':\n      case 'iso_8859-1':\n      case 'windows-1252':\n      case 'iso_8859-1:1987':\n      case 'cp1252':\n      case 'x-cp1252':\n        return decoders.latin1\n      case 'utf16le':\n      case 'utf-16le':\n      case 'ucs2':\n      case 'ucs-2':\n        return decoders.utf16le\n      case 'base64':\n        return decoders.base64\n      default:\n        if (lc === undefined) {\n          lc = true\n          charset = charset.toLowerCase()\n          continue\n        }\n        return decoders.other.bind(charset)\n    }\n  }\n}\n\nconst decoders = {\n  utf8: (data, sourceEncoding) => {\n    if (data.length === 0) {\n      return ''\n    }\n    if (typeof data === 'string') {\n      data = Buffer.from(data, sourceEncoding)\n    }\n    return data.utf8Slice(0, data.length)\n  },\n\n  latin1: (data, sourceEncoding) => {\n    if (data.length === 0) {\n      return ''\n    }\n    if (typeof data === 'string') {\n      return data\n    }\n    return data.latin1Slice(0, data.length)\n  },\n\n  utf16le: (data, sourceEncoding) => {\n    if (data.length === 0) {\n      return ''\n    }\n    if (typeof data === 'string') {\n      data = Buffer.from(data, sourceEncoding)\n    }\n    return data.ucs2Slice(0, data.length)\n  },\n\n  base64: (data, sourceEncoding) => {\n    if (data.length === 0) {\n      return ''\n    }\n    if (typeof data === 'string') {\n      data = Buffer.from(data, sourceEncoding)\n    }\n    return data.base64Slice(0, data.length)\n  },\n\n  other: (data, sourceEncoding) => {\n    if (data.length === 0) {\n      return ''\n    }\n    if (typeof data === 'string') {\n      data = Buffer.from(data, sourceEncoding)\n    }\n\n    if (textDecoders.has(this.toString())) {\n      try {\n        return textDecoders.get(this).decode(data)\n      } catch {}\n    }\n    return typeof data === 'string'\n      ? data\n      : data.toString()\n  }\n}\n\nfunction decodeText (text, sourceEncoding, destEncoding) {\n  if (text) {\n    return getDecoder(destEncoding)(text, sourceEncoding)\n  }\n  return text\n}\n\nmodule.exports = decodeText\n","'use strict'\n\nmodule.exports = function getLimit (limits, name, defaultLimit) {\n  if (\n    !limits ||\n    limits[name] === undefined ||\n    limits[name] === null\n  ) { return defaultLimit }\n\n  if (\n    typeof limits[name] !== 'number' ||\n    isNaN(limits[name])\n  ) { throw new TypeError('Limit ' + name + ' is not a valid number') }\n\n  return limits[name]\n}\n","/* eslint-disable object-property-newline */\n'use strict'\n\nconst decodeText = require('./decodeText')\n\nconst RE_ENCODED = /%[a-fA-F0-9][a-fA-F0-9]/g\n\nconst EncodedLookup = {\n  '%00': '\\x00', '%01': '\\x01', '%02': '\\x02', '%03': '\\x03', '%04': '\\x04',\n  '%05': '\\x05', '%06': '\\x06', '%07': '\\x07', '%08': '\\x08', '%09': '\\x09',\n  '%0a': '\\x0a', '%0A': '\\x0a', '%0b': '\\x0b', '%0B': '\\x0b', '%0c': '\\x0c',\n  '%0C': '\\x0c', '%0d': '\\x0d', '%0D': '\\x0d', '%0e': '\\x0e', '%0E': '\\x0e',\n  '%0f': '\\x0f', '%0F': '\\x0f', '%10': '\\x10', '%11': '\\x11', '%12': '\\x12',\n  '%13': '\\x13', '%14': '\\x14', '%15': '\\x15', '%16': '\\x16', '%17': '\\x17',\n  '%18': '\\x18', '%19': '\\x19', '%1a': '\\x1a', '%1A': '\\x1a', '%1b': '\\x1b',\n  '%1B': '\\x1b', '%1c': '\\x1c', '%1C': '\\x1c', '%1d': '\\x1d', '%1D': '\\x1d',\n  '%1e': '\\x1e', '%1E': '\\x1e', '%1f': '\\x1f', '%1F': '\\x1f', '%20': '\\x20',\n  '%21': '\\x21', '%22': '\\x22', '%23': '\\x23', '%24': '\\x24', '%25': '\\x25',\n  '%26': '\\x26', '%27': '\\x27', '%28': '\\x28', '%29': '\\x29', '%2a': '\\x2a',\n  '%2A': '\\x2a', '%2b': '\\x2b', '%2B': '\\x2b', '%2c': '\\x2c', '%2C': '\\x2c',\n  '%2d': '\\x2d', '%2D': '\\x2d', '%2e': '\\x2e', '%2E': '\\x2e', '%2f': '\\x2f',\n  '%2F': '\\x2f', '%30': '\\x30', '%31': '\\x31', '%32': '\\x32', '%33': '\\x33',\n  '%34': '\\x34', '%35': '\\x35', '%36': '\\x36', '%37': '\\x37', '%38': '\\x38',\n  '%39': '\\x39', '%3a': '\\x3a', '%3A': '\\x3a', '%3b': '\\x3b', '%3B': '\\x3b',\n  '%3c': '\\x3c', '%3C': '\\x3c', '%3d': '\\x3d', '%3D': '\\x3d', '%3e': '\\x3e',\n  '%3E': '\\x3e', '%3f': '\\x3f', '%3F': '\\x3f', '%40': '\\x40', '%41': '\\x41',\n  '%42': '\\x42', '%43': '\\x43', '%44': '\\x44', '%45': '\\x45', '%46': '\\x46',\n  '%47': '\\x47', '%48': '\\x48', '%49': '\\x49', '%4a': '\\x4a', '%4A': '\\x4a',\n  '%4b': '\\x4b', '%4B': '\\x4b', '%4c': '\\x4c', '%4C': '\\x4c', '%4d': '\\x4d',\n  '%4D': '\\x4d', '%4e': '\\x4e', '%4E': '\\x4e', '%4f': '\\x4f', '%4F': '\\x4f',\n  '%50': '\\x50', '%51': '\\x51', '%52': '\\x52', '%53': '\\x53', '%54': '\\x54',\n  '%55': '\\x55', '%56': '\\x56', '%57': '\\x57', '%58': '\\x58', '%59': '\\x59',\n  '%5a': '\\x5a', '%5A': '\\x5a', '%5b': '\\x5b', '%5B': '\\x5b', '%5c': '\\x5c',\n  '%5C': '\\x5c', '%5d': '\\x5d', '%5D': '\\x5d', '%5e': '\\x5e', '%5E': '\\x5e',\n  '%5f': '\\x5f', '%5F': '\\x5f', '%60': '\\x60', '%61': '\\x61', '%62': '\\x62',\n  '%63': '\\x63', '%64': '\\x64', '%65': '\\x65', '%66': '\\x66', '%67': '\\x67',\n  '%68': '\\x68', '%69': '\\x69', '%6a': '\\x6a', '%6A': '\\x6a', '%6b': '\\x6b',\n  '%6B': '\\x6b', '%6c': '\\x6c', '%6C': '\\x6c', '%6d': '\\x6d', '%6D': '\\x6d',\n  '%6e': '\\x6e', '%6E': '\\x6e', '%6f': '\\x6f', '%6F': '\\x6f', '%70': '\\x70',\n  '%71': '\\x71', '%72': '\\x72', '%73': '\\x73', '%74': '\\x74', '%75': '\\x75',\n  '%76': '\\x76', '%77': '\\x77', '%78': '\\x78', '%79': '\\x79', '%7a': '\\x7a',\n  '%7A': '\\x7a', '%7b': '\\x7b', '%7B': '\\x7b', '%7c': '\\x7c', '%7C': '\\x7c',\n  '%7d': '\\x7d', '%7D': '\\x7d', '%7e': '\\x7e', '%7E': '\\x7e', '%7f': '\\x7f',\n  '%7F': '\\x7f', '%80': '\\x80', '%81': '\\x81', '%82': '\\x82', '%83': '\\x83',\n  '%84': '\\x84', '%85': '\\x85', '%86': '\\x86', '%87': '\\x87', '%88': '\\x88',\n  '%89': '\\x89', '%8a': '\\x8a', '%8A': '\\x8a', '%8b': '\\x8b', '%8B': '\\x8b',\n  '%8c': '\\x8c', '%8C': '\\x8c', '%8d': '\\x8d', '%8D': '\\x8d', '%8e': '\\x8e',\n  '%8E': '\\x8e', '%8f': '\\x8f', '%8F': '\\x8f', '%90': '\\x90', '%91': '\\x91',\n  '%92': '\\x92', '%93': '\\x93', '%94': '\\x94', '%95': '\\x95', '%96': '\\x96',\n  '%97': '\\x97', '%98': '\\x98', '%99': '\\x99', '%9a': '\\x9a', '%9A': '\\x9a',\n  '%9b': '\\x9b', '%9B': '\\x9b', '%9c': '\\x9c', '%9C': '\\x9c', '%9d': '\\x9d',\n  '%9D': '\\x9d', '%9e': '\\x9e', '%9E': '\\x9e', '%9f': '\\x9f', '%9F': '\\x9f',\n  '%a0': '\\xa0', '%A0': '\\xa0', '%a1': '\\xa1', '%A1': '\\xa1', '%a2': '\\xa2',\n  '%A2': '\\xa2', '%a3': '\\xa3', '%A3': '\\xa3', '%a4': '\\xa4', '%A4': '\\xa4',\n  '%a5': '\\xa5', '%A5': '\\xa5', '%a6': '\\xa6', '%A6': '\\xa6', '%a7': '\\xa7',\n  '%A7': '\\xa7', '%a8': '\\xa8', '%A8': '\\xa8', '%a9': '\\xa9', '%A9': '\\xa9',\n  '%aa': '\\xaa', '%Aa': '\\xaa', '%aA': '\\xaa', '%AA': '\\xaa', '%ab': '\\xab',\n  '%Ab': '\\xab', '%aB': '\\xab', '%AB': '\\xab', '%ac': '\\xac', '%Ac': '\\xac',\n  '%aC': '\\xac', '%AC': '\\xac', '%ad': '\\xad', '%Ad': '\\xad', '%aD': '\\xad',\n  '%AD': '\\xad', '%ae': '\\xae', '%Ae': '\\xae', '%aE': '\\xae', '%AE': '\\xae',\n  '%af': '\\xaf', '%Af': '\\xaf', '%aF': '\\xaf', '%AF': '\\xaf', '%b0': '\\xb0',\n  '%B0': '\\xb0', '%b1': '\\xb1', '%B1': '\\xb1', '%b2': '\\xb2', '%B2': '\\xb2',\n  '%b3': '\\xb3', '%B3': '\\xb3', '%b4': '\\xb4', '%B4': '\\xb4', '%b5': '\\xb5',\n  '%B5': '\\xb5', '%b6': '\\xb6', '%B6': '\\xb6', '%b7': '\\xb7', '%B7': '\\xb7',\n  '%b8': '\\xb8', '%B8': '\\xb8', '%b9': '\\xb9', '%B9': '\\xb9', '%ba': '\\xba',\n  '%Ba': '\\xba', '%bA': '\\xba', '%BA': '\\xba', '%bb': '\\xbb', '%Bb': '\\xbb',\n  '%bB': '\\xbb', '%BB': '\\xbb', '%bc': '\\xbc', '%Bc': '\\xbc', '%bC': '\\xbc',\n  '%BC': '\\xbc', '%bd': '\\xbd', '%Bd': '\\xbd', '%bD': '\\xbd', '%BD': '\\xbd',\n  '%be': '\\xbe', '%Be': '\\xbe', '%bE': '\\xbe', '%BE': '\\xbe', '%bf': '\\xbf',\n  '%Bf': '\\xbf', '%bF': '\\xbf', '%BF': '\\xbf', '%c0': '\\xc0', '%C0': '\\xc0',\n  '%c1': '\\xc1', '%C1': '\\xc1', '%c2': '\\xc2', '%C2': '\\xc2', '%c3': '\\xc3',\n  '%C3': '\\xc3', '%c4': '\\xc4', '%C4': '\\xc4', '%c5': '\\xc5', '%C5': '\\xc5',\n  '%c6': '\\xc6', '%C6': '\\xc6', '%c7': '\\xc7', '%C7': '\\xc7', '%c8': '\\xc8',\n  '%C8': '\\xc8', '%c9': '\\xc9', '%C9': '\\xc9', '%ca': '\\xca', '%Ca': '\\xca',\n  '%cA': '\\xca', '%CA': '\\xca', '%cb': '\\xcb', '%Cb': '\\xcb', '%cB': '\\xcb',\n  '%CB': '\\xcb', '%cc': '\\xcc', '%Cc': '\\xcc', '%cC': '\\xcc', '%CC': '\\xcc',\n  '%cd': '\\xcd', '%Cd': '\\xcd', '%cD': '\\xcd', '%CD': '\\xcd', '%ce': '\\xce',\n  '%Ce': '\\xce', '%cE': '\\xce', '%CE': '\\xce', '%cf': '\\xcf', '%Cf': '\\xcf',\n  '%cF': '\\xcf', '%CF': '\\xcf', '%d0': '\\xd0', '%D0': '\\xd0', '%d1': '\\xd1',\n  '%D1': '\\xd1', '%d2': '\\xd2', '%D2': '\\xd2', '%d3': '\\xd3', '%D3': '\\xd3',\n  '%d4': '\\xd4', '%D4': '\\xd4', '%d5': '\\xd5', '%D5': '\\xd5', '%d6': '\\xd6',\n  '%D6': '\\xd6', '%d7': '\\xd7', '%D7': '\\xd7', '%d8': '\\xd8', '%D8': '\\xd8',\n  '%d9': '\\xd9', '%D9': '\\xd9', '%da': '\\xda', '%Da': '\\xda', '%dA': '\\xda',\n  '%DA': '\\xda', '%db': '\\xdb', '%Db': '\\xdb', '%dB': '\\xdb', '%DB': '\\xdb',\n  '%dc': '\\xdc', '%Dc': '\\xdc', '%dC': '\\xdc', '%DC': '\\xdc', '%dd': '\\xdd',\n  '%Dd': '\\xdd', '%dD': '\\xdd', '%DD': '\\xdd', '%de': '\\xde', '%De': '\\xde',\n  '%dE': '\\xde', '%DE': '\\xde', '%df': '\\xdf', '%Df': '\\xdf', '%dF': '\\xdf',\n  '%DF': '\\xdf', '%e0': '\\xe0', '%E0': '\\xe0', '%e1': '\\xe1', '%E1': '\\xe1',\n  '%e2': '\\xe2', '%E2': '\\xe2', '%e3': '\\xe3', '%E3': '\\xe3', '%e4': '\\xe4',\n  '%E4': '\\xe4', '%e5': '\\xe5', '%E5': '\\xe5', '%e6': '\\xe6', '%E6': '\\xe6',\n  '%e7': '\\xe7', '%E7': '\\xe7', '%e8': '\\xe8', '%E8': '\\xe8', '%e9': '\\xe9',\n  '%E9': '\\xe9', '%ea': '\\xea', '%Ea': '\\xea', '%eA': '\\xea', '%EA': '\\xea',\n  '%eb': '\\xeb', '%Eb': '\\xeb', '%eB': '\\xeb', '%EB': '\\xeb', '%ec': '\\xec',\n  '%Ec': '\\xec', '%eC': '\\xec', '%EC': '\\xec', '%ed': '\\xed', '%Ed': '\\xed',\n  '%eD': '\\xed', '%ED': '\\xed', '%ee': '\\xee', '%Ee': '\\xee', '%eE': '\\xee',\n  '%EE': '\\xee', '%ef': '\\xef', '%Ef': '\\xef', '%eF': '\\xef', '%EF': '\\xef',\n  '%f0': '\\xf0', '%F0': '\\xf0', '%f1': '\\xf1', '%F1': '\\xf1', '%f2': '\\xf2',\n  '%F2': '\\xf2', '%f3': '\\xf3', '%F3': '\\xf3', '%f4': '\\xf4', '%F4': '\\xf4',\n  '%f5': '\\xf5', '%F5': '\\xf5', '%f6': '\\xf6', '%F6': '\\xf6', '%f7': '\\xf7',\n  '%F7': '\\xf7', '%f8': '\\xf8', '%F8': '\\xf8', '%f9': '\\xf9', '%F9': '\\xf9',\n  '%fa': '\\xfa', '%Fa': '\\xfa', '%fA': '\\xfa', '%FA': '\\xfa', '%fb': '\\xfb',\n  '%Fb': '\\xfb', '%fB': '\\xfb', '%FB': '\\xfb', '%fc': '\\xfc', '%Fc': '\\xfc',\n  '%fC': '\\xfc', '%FC': '\\xfc', '%fd': '\\xfd', '%Fd': '\\xfd', '%fD': '\\xfd',\n  '%FD': '\\xfd', '%fe': '\\xfe', '%Fe': '\\xfe', '%fE': '\\xfe', '%FE': '\\xfe',\n  '%ff': '\\xff', '%Ff': '\\xff', '%fF': '\\xff', '%FF': '\\xff'\n}\n\nfunction encodedReplacer (match) {\n  return EncodedLookup[match]\n}\n\nconst STATE_KEY = 0\nconst STATE_VALUE = 1\nconst STATE_CHARSET = 2\nconst STATE_LANG = 3\n\nfunction parseParams (str) {\n  const res = []\n  let state = STATE_KEY\n  let charset = ''\n  let inquote = false\n  let escaping = false\n  let p = 0\n  let tmp = ''\n  const len = str.length\n\n  for (var i = 0; i < len; ++i) { // eslint-disable-line no-var\n    const char = str[i]\n    if (char === '\\\\' && inquote) {\n      if (escaping) { escaping = false } else {\n        escaping = true\n        continue\n      }\n    } else if (char === '\"') {\n      if (!escaping) {\n        if (inquote) {\n          inquote = false\n          state = STATE_KEY\n        } else { inquote = true }\n        continue\n      } else { escaping = false }\n    } else {\n      if (escaping && inquote) { tmp += '\\\\' }\n      escaping = false\n      if ((state === STATE_CHARSET || state === STATE_LANG) && char === \"'\") {\n        if (state === STATE_CHARSET) {\n          state = STATE_LANG\n          charset = tmp.substring(1)\n        } else { state = STATE_VALUE }\n        tmp = ''\n        continue\n      } else if (state === STATE_KEY &&\n        (char === '*' || char === '=') &&\n        res.length) {\n        state = char === '*'\n          ? STATE_CHARSET\n          : STATE_VALUE\n        res[p] = [tmp, undefined]\n        tmp = ''\n        continue\n      } else if (!inquote && char === ';') {\n        state = STATE_KEY\n        if (charset) {\n          if (tmp.length) {\n            tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer),\n              'binary',\n              charset)\n          }\n          charset = ''\n        } else if (tmp.length) {\n          tmp = decodeText(tmp, 'binary', 'utf8')\n        }\n        if (res[p] === undefined) { res[p] = tmp } else { res[p][1] = tmp }\n        tmp = ''\n        ++p\n        continue\n      } else if (!inquote && (char === ' ' || char === '\\t')) { continue }\n    }\n    tmp += char\n  }\n  if (charset && tmp.length) {\n    tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer),\n      'binary',\n      charset)\n  } else if (tmp) {\n    tmp = decodeText(tmp, 'binary', 'utf8')\n  }\n\n  if (res[p] === undefined) {\n    if (tmp) { res[p] = tmp }\n  } else { res[p][1] = tmp }\n\n  return res\n}\n\nmodule.exports = parseParams\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(1718);\n"],"names":["root","factory","exports","module","define","amd","this","leafPrototypes","getProto","listenersMap","WeakMap","abortedMap","AbortSignal","constructor","onabort","set","aborted","has","TypeError","get","none","addEventListener","_type","listener","push","removeEventListener","listeners","index","indexOf","splice","dispatchEvent","_event","Error","abortSignal","signal","call","slice","forEach","type","AbortError","message","super","name","AbortController","parentSignals","_signal","Array","isArray","arguments","parentSignal","abort","timeout","ms","timer","setTimeout","unref","debugEnvVariable","process","env","DEBUG","undefined","enabledString","enabledNamespaces","skippedNamespaces","debuggers","enable","debugObj","Object","assign","namespace","createDebugger","enabled","disable","result","log","args","write","EOL","namespaces","wildcard","namespaceList","split","map","ns","trim","replace","startsWith","RegExp","substr","instance","endsWith","skipped","test","enabledNamespace","newDebugger","length","destroy","extend","TYPESPEC_RUNTIME_LOG_LEVELS","levelMap","verbose","info","warning","error","patchLogMethod","parent","child","isTypeSpecRuntimeLogLevel","level","includes","createLoggerContext","options","registeredLoggers","Set","logLevelFromEnv","logLevelEnvVarName","logLevel","clientLogger","debug","shouldEnable","logger","Boolean","createLogger","add","context","setLogLevel","console","join","getLogLevel","createClientLogger","clientRootLogger","normalizeName","toLowerCase","HttpHeadersImpl","rawHeaders","_headersMap","Map","headerName","keys","value","String","delete","toJSON","preserveCase","entry","values","normalizedName","toString","JSON","stringify","Symbol","iterator","headerIterator","uuidFunction","globalThis","crypto","randomUUID","bind","PipelineRequestImpl","url","body","headers","method","multipartBody","formData","disableKeepAlive","proxySettings","streamResponseStatusCodes","withCredentials","onUploadProgress","onDownloadProgress","requestId","allowInsecureConnection","enableBrowserStreams","requestOverrides","ValidPhaseNames","HttpPipeline","policies","_policies","_orderedPolicies","addPolicy","policy","phase","afterPhase","removePolicy","removedPolicies","filter","policyDescriptor","sendRequest","httpClient","request","getOrderedPolicies","reduceRight","next","req","pipeline","orderPolicies","clone","create","policyMap","createPhase","hasRun","hasAfterPolicies","serializePhase","noPhase","deserializePhase","retryPhase","signPhase","orderedPhases","getPhase","descriptor","policyName","node","dependsOn","dependants","afterPolicies","afterPolicyName","afterNode","beforePolicies","beforePolicyName","beforeNode","walkPhase","size","dependant","walkPhases","iteration","initialResultLength","isObject","input","Date","isError","e","hasName","hasMessage","custom","inspect","defaultAllowedHeaderNames","defaultAllowedQueryParameters","Sanitizer","additionalAllowedHeaderNames","allowedHeaderNames","additionalAllowedQueryParameters","allowedQueryParameters","concat","n","p","sanitize","obj","seen","key","sanitizeHeaders","sanitizeUrl","sanitizeQuery","URL","search","searchParams","sanitized","k","errorSanitizer","code","statusCode","defineProperty","enumerable","response","setPrototypeOf","prototype","REQUEST_SEND_ERROR","PARSE_ERROR","require","DEFAULT_TLS_SETTINGS","pipe","isStreamComplete","stream","readable","Promise","resolve","handler","removeListener","on","isArrayBuffer","byteLength","ReportTransform","Transform","_transform","chunk","_encoding","callback","loadedBytes","progressCallback","NodeHttpClient","cachedHttpsAgents","abortController","abortListener","timeoutId","event","sanitizer","acceptEncoding","shouldDecompress","responseStream","bodyLength","Buffer","isBuffer","from","getBodyLength","uploadReportStream","end","res","makeRequest","clearTimeout","header","getResponseHeaders","status","resume","contentEncoding","unzip","inflate","getDecodedResponseStream","downloadReportStream","Number","POSITIVE_INFINITY","readableStreamBody","bodyAsText","reject","buffer","uploadStreamDone","downloadStreamDone","all","then","catch","isInsecure","protocol","agent","getOrCreateAgent","hostname","path","pathname","port","once","err","abortError","ArrayBuffer","isView","cachedHttpAgent","keepAlive","tlsSettings","calculateRetryDelay","retryAttempt","config","exponentialDelay","retryDelayInMs","Math","pow","clampedDelay","min","maxRetryDelayInMs","max","retryAfterInMs","ceil","floor","random","delayInMs","onAborted","rejectOnAbort","abortErrorMsg","removeListeners","parseHeaderValueAsNumber","valueAsNum","isNaN","AllRetryAfterHeaders","getRetryAfterInMs","retryAfterValue","retryAfterHeader","diff","parse","now","isFinite","retryInterval","maxRetryInterval","retry","matchedSystemError","isSystemError","responseError","ignoreSystemErrors","isExponential","isExponentialRetryResponse","ignoreExponentialResponse","ignoreHttpStatusCodes","unknownResponse","isThrottlingRetryResponse","skipStrategy","retryCount","errorToThrow","retryPolicyLogger","strategies","maxRetries","retryRequest","strategiesLoop","strategy","strategyLogger","modifiers","redirectTo","format","window","document","self","importScripts","Deno","version","deno","Bun","versions","navigator","product","FormData","formDataMap","entries","formDataToFormDataMap","contentType","urlSearchParams","URLSearchParams","subValue","append","wwwFormUrlEncode","async","parts","fieldName","fileName","prepareFormData","globalNoProxyList","noProxyListLoaded","globalBypassedMap","getEnvironmentValue","loadEnvironmentProxyValue","httpsProxy","allProxy","httpProxy","getUrlFromProxySettings","settings","parsedProxyUrl","host","username","password","setProxyAgentOnRequest","cachedAgents","proxyUrl","httpProxyAgent","HttpProxyAgent","httpsProxyAgent","HttpsProxyAgent","noProxy","item","loadNoProxy","defaultProxy","envProxy","getDefaultProxySettingsInternal","uri","noProxyList","bypassedMap","isBypassedFlag","pattern","isBypassed","customNoProxyList","isBlob","x","__rest","s","t","hasOwnProperty","getOwnPropertySymbols","i","propertyIsEnumerable","__values","o","m","done","__await","v","__asyncGenerator","thisArg","_arguments","generator","asyncIterator","g","apply","q","AsyncIterator","verb","f","a","b","r","fulfill","settle","shift","__asyncDelegator","__asyncValues","d","SuppressedError","streamAsyncIterator","reader","getReader","read","releaseLock","ensureNodeStream","ReadableStream","webStream","Readable","fromWeb","toStream","source","Uint8Array","encodeHeaders","getLength","buildRequestBody","boundary","sources","flatMap","part","contentLength","total","partLength","getTotalLength","streams","validBoundaryCharacters","contentTypeHeader","parsedHeader","match","parsedBoundary","some","assertValidBoundary","allowedRedirect","handleRedirect","currentRetries","locationHeader","prefix","runtimeInfo","bun","defaultAgent","telemetryInfo","token","timeInMs","buildPromise","onAbort","cleanupBeforeAbort","createAbortablePromise","getErrorMessage","stringified","rawContent","hasRawContent","parsedUrl","parseInt","knownContextKeys","span","for","createTracingContext","TracingContextImpl","parentContext","setValue","initialContext","_contextMap","newContext","getValue","deleteValue","getInstrumenter","instrumenterImplementation","createRequestHeaders","parseTraceparentHeader","startSpan","_name","spanOptions","isRecording","recordException","setAttribute","setStatus","addEvent","tracingContext","withContext","_context","callbackArgs","createTracingClient","operationOptions","startSpanResult","packageName","packageVersion","tracingOptions","updatedOptions","withSpan","traceparentHeader","tracingPolicy","userAgentPromise","userAgentPrefix","tracingClient","tryCreateTracingClient","userAgent","spanAttributes","spanKind","tryCreateSpan","serviceRequestId","tryProcessResponse","tryProcessError","wrapAbortSignalLike","abortSignalLike","reason","controller","needsCleanup","cleanup","tlsOptions","proxyOptions","wrapAbortSignalLikePolicy","userAgentValue","userAgentOptions","requestIdHeaderName","setClientRequestIdPolicy","telemetryOptions","clientRequestIdHeaderName","tspPolicy","blob","retryOptions","loggingOptions","redirectOptions","client","DEFAULT_CYCLER_OPTIONS","forcedRefreshWindowInMs","retryIntervalInMs","refreshWindowInMs","credential","tokenCyclerOptions","tenantId","refreshWorker","cycler","isRefreshing","shouldRefresh","refreshAfterTimestamp","expiresOnTimestamp","mustRefresh","refresh","scopes","getTokenOptions","getAccessToken","refreshTimeout","tryGetAccessToken","finalToken","beginRefresh","getToken","_token","tokenOptions","hasClaimChallenge","claims","tenantIdChanged","trySendRequest","defaultAuthorizeRequest","enableCae","accessToken","isChallengeResponse","authorizeRequestOnCaeChallenge","onChallengeOptions","caeClaims","tokenType","bearerTokenAuthenticationPolicy","callbacks","authorizeRequest","challengeCallbacks","authorizeRequestOnChallenge","shouldSendRequest","getCaeChallengeClaims","parsedClaim","atob","challenges","parsedChallenges","challengeRegex","paramRegex","exec","scheme","paramsString","params","paramMatch","parseChallenges","find","isTokenCredential","castCredential","signRequest","encodeByteArray","decodeString","XML_ATTRKEY","validateISODuration","validUuidRegex","flattenResponse","fullResponse","responseSpec","parsedHeaders","parsedBody","bodyMapper","isNullable","nullable","expectedBodyTypeName","blobBody","modelProperties","isPageableResponse","serializedName","arrayResponse","getOwnPropertyNames","responseObject","combinedHeadersAndBody","hasNullableType","shouldWrapBody","handleNullableResponseAndWrappableBody","mapperTypeName","SerializerImpl","modelMappers","isXML","validateConstraints","mapper","objectName","failValidation","constraintName","constraintValue","constraints","ExclusiveMaximum","ExclusiveMinimum","InclusiveMaximum","InclusiveMinimum","MaxItems","MaxLength","MinItems","MinLength","MultipleOf","Pattern","UniqueItems","ar","serialize","object","xml","rootName","includeRoot","xmlCharKey","payload","mapperType","isConstant","defaultValue","required","typeName","valueOf","uuid","objectType","tee","Blob","serializeBasicTypes","allowedValues","serializeEnumType","toISOString","substring","toUTCString","getTime","dateToUnixTime","isDuration","serializeDateTypes","serializeByteArrayType","str","ch","len","trimEnd","bufferToBase64Url","serializeBase64UrlType","serializer","isXml","elementType","element","className","tempArray","serializedValue","xmlNamespace","xmlnsKey","xmlNamespacePrefix","serializeSequenceType","valueType","tempDictionary","getXmlObjectValue","serializeDictionaryType","getPolymorphicDiscriminatorRecursively","getPolymorphicMapper","modelProps","resolveModelProperties","propertyMapper","readOnly","propName","parentObject","xmlIsWrapped","xmlName","xmlElementName","paths","splitSerializeName","pop","pathName","childObject","propertyObjectName","toSerialize","polymorphicDiscriminator","clientName","xmlIsAttribute","additionalPropertiesMapper","additionalProperties","modelMapper","resolveReferencedMapper","resolveAdditionalProperties","propNames","clientPropName","every","pn","serializeCompositeType","deserialize","responseBody","ignoreUnknownProperties","handledPropertyNames","headerCollectionPrefix","dictionary","headerKey","xmlIsMsText","propertyName","wrapped","elementList","property","propertyInstance","steps","arrayInstance","isAdditionalProperty","responsePropName","isSpecialXmlProperty","deserializeCompositeType","parseFloat","unixTimeToDate","base64UrlToByteArray","deserializeSequenceType","deserializeDictionaryType","createSerializer","prop","classes","partialclass","subwords","charAt","polymorphicPropertyName","discriminatorName","discriminatorValue","uberParent","polymorphicMapper","discriminators","typeNamesToCheck","currentName","indexDiscriminator","getIndexDiscriminator","getPolymorphicDiscriminatorSafely","MapperTypeNames","getOperationArgumentValueFromParameter","operationArguments","parameter","fallbackObject","parameterPath","parameterMapper","propertySearchResult","getPropertyFromParameterPath","propertyFound","useDefaultValue","propertyValue","parameterPathPart","originalRequestSymbol","getOperationRequestInfo","hasOriginalRequest","operationRequestMap","defaultJsonContentTypes","defaultXmlContentTypes","deserializationPolicy","jsonContentTypes","expectedContentTypes","json","xmlContentTypes","parseXML","serializerOptions","parsedResponse","operationResponse","opts","text","contentComponents","component","msg","errCode","operationInfo","shouldDeserialize","shouldDeserializeResponse","operationSpec","responses","operationResponseGetter","getOperationResponseMap","isSuccessByStatus","isExpectedStatusCode","expectedStatusCodes","isOperationSpecEmpty","shouldReturnResponse","errorResponseSpec","default","initialErrorMessage","defaultBodyMapper","defaultHeadersMapper","headersMapper","deserializedError","valueToDeserialize","elementName","internalError","defaultError","handleErrorResponse","deserializeError","httpMethod","deserializeResponseBody","getPathStringFromParameter","serializationPolicy","stringifyXML","headerParameters","headerParameter","headerValue","customHeaders","requestOptions","customHeaderName","serializeHeaders","requestBody","requestBodyParameterPathString","isStream","getXmlValueWithNamespace","xmlNamespaceKey","prepareXMLRootList","mediaType","formDataParameters","formDataParameter","formDataParameterValue","formDataParameterPropertyName","serializeRequestBody","createClientPipeline","credentialOptions","credentialScopes","serializationOptions","deserializationOptions","CollectionFormatToDelimiterMap","CSV","SSV","Multi","TSV","Pipes","getRequestUrl","baseUri","urlReplacements","urlParameters","urlParameter","urlParameterValue","parameterPathString","skipEncoding","encodeURIComponent","calculateUrlReplacements","isAbsolutePath","requestUrl","replaceAll","isAbsoluteUrl","pathToAppend","newPath","searchStart","appendPath","sequenceParams","queryParameters","queryParameter","queryParameterValue","delimiter","collectionFormat","queryParams","calculateQueryParameters","noOverwrite","combinedParams","queryString","pairs","pair","existingValue","simpleParseQueryParams","valueSet","unshift","searchPieces","appendQueryParams","replacements","searchValue","replaceValue","ServiceClient","_requestContentType","requestContentType","_endpoint","endpoint","_allowInsecureConnection","_httpClient","getCredentialScopes","additionalPolicies","position","sendOperationRequest","baseUrl","getStreamingResponseStatusCodes","rawResponse","flatResponse","onResponse","details","Constants","AUTHORIZATION","authorizeRequestOnTenantChallenge","challengeOptions","challenge","getChallenge","challengeInfo","bearerChallenge","challengeParts","keyValue","reduce","parseChallenge","challengeScopes","resource_id","scope","buildScopes","parsedAuthUri","authorization_uri","extractTenantId","originalClientRequestSymbol","toPipelineRequest","webResource","toJson","newRequest","originalRequest","toWebResourceLike","toHttpHeadersLike","prepare","validateRequestProperties","createProxy","Proxy","target","receiver","Reflect","HttpHeaders","getHeaderKey","contains","remove","headersArray","headerNames","headerValues","resultPreservingCasing","originalResponse","toCompatResponse","compatResponse","ExtendedServiceClient","keepAliveOptions","handleRedirects","userProvidedCallBack","lastResponse","HttpPipelineLogLevel","mockRequestPolicyOptions","_logLevel","_message","shouldLog","createRequestPolicyFactoryPolicy","factories","orderedFactories","reverse","httpPipeline","httpRequest","webResourceLike","toXml","jArray","indentation","indentBy","arrToStr","arr","jPath","xmlStr","isPreviousElementTag","tagObj","tagName","newJPath","textNodeName","tagText","isStopNode","tagValueProcessor","replaceEntitiesValue","cdataPropName","commentPropName","attStr","attr_to_str","tempInd","piTextNodeName","newIdentation","tagStart","tagValue","unpairedTags","suppressUnpairedNode","suppressEmptyNode","attrMap","attrStr","ignoreAttributes","attr","attrVal","attributeValueProcessor","suppressBooleanAttributes","attributeNamePrefix","lastIndexOf","stopNodes","textValue","processEntities","entities","entity","regex","val","getIgnoreAttributesFn","attrName","defaultOptions","attributesGroupName","preserveOrder","oneListGroup","Builder","isAttribute","ignoreAttributesFn","attrPrefixLen","processTextOrObjNode","indentate","tagEndChar","newLine","ajPath","j2x","buildTextValNode","buildObjectNode","repeat","build","jObj","arrayNodeName","buildAttrPairStr","newval","arrLen","listTagVal","listTagAttr","j","Ks","L","closeTag","tagEndExp","piClosingChar","nameStartChar","regexName","getAllMatches","string","matches","allmatches","startIndex","lastIndex","isName","allowBooleanAttributes","validate","xmlData","tags","tagFound","reachedRoot","readPI","isWhiteSpace","getErrorObject","getLineNumberForPosition","tagStartPos","readCommentAndCDATA","closingTag","readAttributeStr","attrStrStart","isValid","validateAttributeString","line","tagClosed","otg","openPos","col","afterAmp","validateAmpersand","char","start","tagname","angleBracketsCount","doubleQuote","singleQuote","startChar","validAttrStrRegxp","attrNames","getPositionFromMatch","validateAttrName","re","validateNumberAmpersand","count","lineNumber","lines","XMLValidator","removeNSPrefix","parseTagValue","parseAttributeValue","trimValues","numberParseOptions","hex","leadingZeros","eNotation","alwaysCreateTextNode","htmlEntities","ignoreDeclaration","ignorePiTags","transformTagName","transformAttributeName","updateTag","attrs","captureMetaData","METADATA_SYMBOL","XmlNode","addChild","getMetaDataSymbol","readDocType","hasBody","comment","exp","isEntity","entityName","readEntityExp","regx","isElement","readElementExp","isAttlist","isNotation","readNotationExp","isComment","skipWhitespace","data","validateEntityName","toUpperCase","entityValue","readIdentifierVal","notationName","identifierType","publicIdentifier","systemIdentifier","identifierVal","contentModel","hexRegex","numRegex","consider","decimalPoint","toNumber","trimmedStr","skipLike","numStr","base","parse_int","notation","eNotationRegx","sign","eChar","eAdjacentToLeadingZeros","resolveEnotation","numTrimmedByZeros","trimZeros","decimalAdjacentToLeadingZeros","num","parsedStr","OrderedObjParser","currentNode","tagsNodeStack","docTypeEntities","lastEntities","ampEntity","_","fromCodePoint","addExternalEntities","parseXml","parseTextData","resolveNameSpace","buildAttributesMap","isItStopNode","readStopNodeData","saveTextToParentTag","externalEntities","entKeys","ent","dontTrim","hasAttributes","isLeafNode","escapeEntities","parseValue","attrsRegx","oldVal","aName","newVal","attrCollection","xmlObj","textData","closeIndex","findClosingIndex","colonIndex","lastTagName","propIndex","tagData","readTagExp","childNode","tagExp","attrExpPresent","endIndex","rawTagName","lastTag","tagContent","currentTagName","allNodesExp","stopNodePath","stopNodeExp","errMsg","closingIndex","closingChar","attrBoundary","tagExpWithClosingIndex","separatorIndex","trimStart","openTagCount","shouldParse","prettify","compress","compressedObj","newJpath","isLeaf","isLeafTag","assignAttributes","jpath","atrrName","propCount","XMLParser","buildOptions","validationOption","orderedObjParser","orderedResult","addEntity","getCommonOptions","parserOptions","rootNodeName","getSerializerOptions","validation","parsedXml","getParserOptions","BaseRequestPolicy","_nextPolicy","_options","SERVICE_VERSION","StorageOAuthScopes","FORCE_BROWSER_NO_CACHE","SIGNATURE","SNAPSHOT","VERSIONID","TIMEOUT","HTTPURLConnection","StorageBlobLoggingAllowedHeaderNames","StorageBlobLoggingAllowedQueryParameters","PathStylePorts","escapeURLPath","urlParsed","getValueInConnString","connectionString","argument","elements","extractConnectionStringParts","proxyUri","matchCredentials","getProxyUriFromDevConnString","blobEndpoint","defaultEndpointsProtocol","accountName","accountKey","endpointSuffix","kind","accountSas","getAccountNameFromUrl","appendToURLPath","setURLParameter","encodedName","encodedValue","searchString","getURLParameter","setURLHost","getURLPath","getURLPathAndQuery","pathString","RangeError","getURLQueries","querySubStrings","indexOfEqual","lastIndexOfEqual","queries","querySubString","splitResults","appendToURLQuery","queryParts","query","truncatedISO8061Date","date","withMilliseconds","dateString","generateBlockID","blockIDPrefix","blockIndex","maxSourceStringLength","currentString","targetLength","padString","padStart","content","btoa","aborter","abortHandler","iEqual","str1","str2","toLocaleLowerCase","isIpEndpointStyle","toBlobTagsString","tagPairs","toBlobTags","blobTagSet","toTags","blobTag","toQuerySerialization","textConfiguration","delimitedTextConfiguration","columnSeparator","fieldQuote","recordSeparator","escapeChar","escapeCharacter","headersPresent","hasHeaders","jsonTextConfiguration","arrowConfiguration","schema","parseObjectReplicationRecord","objectReplicationRecord","orProperties","ids","policyPrefix","rule","ruleId","replicationStatus","policyIndex","findIndex","policyId","rules","httpAuthorizationToString","httpAuthorization","BlobNameToString","encoded","decodeURIComponent","ConvertInternalResponseOfListBlobHierarchy","internalResponse","segment","blobPrefixes","blobPrefixInternal","blobItems","blobItemInteral","ExtractPageRangeInfoItems","getPageRangesSegment","pageRange","clearRange","pageRangeIndex","clearRangeIndex","isClear","EscapePath","blobName","assertResponse","StorageRetryPolicyType","DEFAULT_RETRY_OPTIONS","maxTries","retryPolicyType","EXPONENTIAL","secondaryHost","tryTimeoutInMs","RETRY_ABORT_ERROR","StorageRetryPolicy","nextPolicy","attemptSendRequest","secondaryHas404","attempt","isPrimaryRetry","shouldRetry","delay","retriableErrors","retriableError","delayTimeInMs","FIXED","StorageRetryPolicyFactory","CredentialPolicy","table_lv0","Uint32Array","table_lv2","table_lv4","compareHeader","lhs","rhs","tables","curr_level","weight1","charCodeAt","weight2","isLessThan","StorageSharedKeyCredentialPolicy","stringToSign","getHeaderValueToSign","getCanonicalizedHeadersString","getCanonicalizedResourceString","signature","computeHMACSHA256","sort","array","canonicalizedHeadersStringToSign","trimRight","trimLeft","canonicalizedResourceString","lowercaseQueries","queryKeys","lowercaseKey","Credential","StorageSharedKeyCredential","createHmac","update","digest","AnonymousCredentialPolicy","AnonymousCredential","_defaultHttpClient","storageSharedKeyCredentialPolicy","StorageBrowserPolicy","StorageBrowserPolicyFactory","storageCorrectContentLengthPolicy","correctContentLength","isPipelineLike","castPipeline","toServiceClientOptions","Pipeline","requestPolicyFactories","newPipeline","pipelineOptions","_credential","getCoreClientOptions","v1Client","restOptions","_coreHttpClient","requestPolicyClient","corePipeline","_corePipeline","packageDetails","calculateDelay","primaryUrl","secondaryUrl","retryAgain","storageRetryPolicy","downlevelResults","knownFactoryFunctions","isAnonymousCredential","isStorageSharedKeyCredential","isCoreHttpBearerTokenFactory","isStorageBrowserPolicyFactory","isStorageRetryPolicyFactory","isStorageTelemetryPolicyFactory","isCoreHttpPolicyFactory","novelFactories","knownFactory","hasInjector","isInjectorPolicyFactory","wrappedPolicies","afterRetry","processDownlevelPipeline","getCredentialFromPipeline","audience","knownPolicyName","BlobServiceProperties","blobAnalyticsLogging","hourMetrics","minuteMetrics","cors","defaultServiceVersion","deleteRetentionPolicy","staticWebsite","Logging","deleteProperty","retentionPolicy","RetentionPolicy","days","Metrics","includeAPIs","CorsRule","allowedOrigins","allowedMethods","allowedHeaders","exposedHeaders","maxAgeInSeconds","StaticWebsite","indexDocument","errorDocument404Path","defaultIndexDocumentPath","StorageError","authenticationErrorDetail","BlobServiceStatistics","geoReplication","GeoReplication","lastSyncOn","ListContainersSegmentResponse","serviceEndpoint","marker","maxPageSize","containerItems","continuationToken","ContainerItem","deleted","properties","metadata","ContainerProperties","lastModified","etag","leaseStatus","leaseState","leaseDuration","publicAccess","hasImmutabilityPolicy","hasLegalHold","defaultEncryptionScope","preventEncryptionScopeOverride","deletedOn","remainingRetentionDays","isImmutableStorageWithVersioningEnabled","KeyInfo","startsOn","expiresOn","UserDelegationKey","signedObjectId","signedTenantId","signedStartsOn","signedExpiresOn","signedService","signedVersion","FilterBlobSegment","where","blobs","FilterBlobItem","containerName","BlobTags","BlobTag","SignedIdentifier","id","accessPolicy","AccessPolicy","permissions","ListBlobsFlatSegmentResponse","BlobFlatListSegment","BlobItemInternal","snapshot","versionId","isCurrentVersion","blobTags","objectReplicationMetadata","hasVersionsOnly","BlobName","BlobPropertiesInternal","createdOn","contentLanguage","contentMD5","contentDisposition","cacheControl","blobSequenceNumber","blobType","copyId","copyStatus","copySource","copyProgress","copyCompletedOn","copyStatusDescription","serverEncrypted","incrementalCopy","destinationSnapshot","accessTier","accessTierInferred","archiveStatus","customerProvidedKeySha256","encryptionScope","accessTierChangedOn","tagCount","isSealed","rehydratePriority","lastAccessedOn","immutabilityPolicyExpiresOn","immutabilityPolicyMode","legalHold","ListBlobsHierarchySegmentResponse","BlobHierarchyListSegment","BlobPrefix","BlockLookupList","committed","uncommitted","latest","BlockList","committedBlocks","uncommittedBlocks","Block","PageList","PageRange","ClearRange","QueryRequest","queryType","expression","inputSerialization","outputSerialization","QuerySerialization","QueryFormat","parquetTextConfiguration","DelimitedTextConfiguration","JsonTextConfiguration","ArrowConfiguration","ArrowField","precision","scale","ServiceSetPropertiesHeaders","clientRequestId","errorCode","ServiceSetPropertiesExceptionHeaders","ServiceGetPropertiesHeaders","ServiceGetPropertiesExceptionHeaders","ServiceGetStatisticsHeaders","ServiceGetStatisticsExceptionHeaders","ServiceListContainersSegmentHeaders","ServiceListContainersSegmentExceptionHeaders","ServiceGetUserDelegationKeyHeaders","ServiceGetUserDelegationKeyExceptionHeaders","ServiceGetAccountInfoHeaders","skuName","accountKind","isHierarchicalNamespaceEnabled","ServiceGetAccountInfoExceptionHeaders","ServiceSubmitBatchHeaders","ServiceSubmitBatchExceptionHeaders","ServiceFilterBlobsHeaders","ServiceFilterBlobsExceptionHeaders","ContainerCreateHeaders","ContainerCreateExceptionHeaders","ContainerGetPropertiesHeaders","blobPublicAccess","denyEncryptionScopeOverride","ContainerGetPropertiesExceptionHeaders","ContainerDeleteHeaders","ContainerDeleteExceptionHeaders","ContainerSetMetadataHeaders","ContainerSetMetadataExceptionHeaders","ContainerGetAccessPolicyHeaders","ContainerGetAccessPolicyExceptionHeaders","ContainerSetAccessPolicyHeaders","ContainerSetAccessPolicyExceptionHeaders","ContainerRestoreHeaders","ContainerRestoreExceptionHeaders","ContainerRenameHeaders","ContainerRenameExceptionHeaders","ContainerSubmitBatchHeaders","ContainerSubmitBatchExceptionHeaders","ContainerFilterBlobsHeaders","ContainerFilterBlobsExceptionHeaders","ContainerAcquireLeaseHeaders","leaseId","ContainerAcquireLeaseExceptionHeaders","ContainerReleaseLeaseHeaders","ContainerReleaseLeaseExceptionHeaders","ContainerRenewLeaseHeaders","ContainerRenewLeaseExceptionHeaders","ContainerBreakLeaseHeaders","leaseTime","ContainerBreakLeaseExceptionHeaders","ContainerChangeLeaseHeaders","ContainerChangeLeaseExceptionHeaders","ContainerListBlobFlatSegmentHeaders","ContainerListBlobFlatSegmentExceptionHeaders","ContainerListBlobHierarchySegmentHeaders","ContainerListBlobHierarchySegmentExceptionHeaders","ContainerGetAccountInfoHeaders","ContainerGetAccountInfoExceptionHeaders","BlobDownloadHeaders","objectReplicationPolicyId","objectReplicationRules","contentRange","acceptRanges","blobCommittedBlockCount","isServerEncrypted","encryptionKeySha256","blobContentMD5","lastAccessed","contentCrc64","BlobDownloadExceptionHeaders","BlobGetPropertiesHeaders","isIncrementalCopy","BlobGetPropertiesExceptionHeaders","BlobDeleteHeaders","BlobDeleteExceptionHeaders","BlobUndeleteHeaders","BlobUndeleteExceptionHeaders","BlobSetExpiryHeaders","BlobSetExpiryExceptionHeaders","BlobSetHttpHeadersHeaders","BlobSetHttpHeadersExceptionHeaders","BlobSetImmutabilityPolicyHeaders","immutabilityPolicyExpiry","BlobSetImmutabilityPolicyExceptionHeaders","BlobDeleteImmutabilityPolicyHeaders","BlobDeleteImmutabilityPolicyExceptionHeaders","BlobSetLegalHoldHeaders","BlobSetLegalHoldExceptionHeaders","BlobSetMetadataHeaders","BlobSetMetadataExceptionHeaders","BlobAcquireLeaseHeaders","BlobAcquireLeaseExceptionHeaders","BlobReleaseLeaseHeaders","BlobReleaseLeaseExceptionHeaders","BlobRenewLeaseHeaders","BlobRenewLeaseExceptionHeaders","BlobChangeLeaseHeaders","BlobChangeLeaseExceptionHeaders","BlobBreakLeaseHeaders","BlobBreakLeaseExceptionHeaders","BlobCreateSnapshotHeaders","BlobCreateSnapshotExceptionHeaders","BlobStartCopyFromURLHeaders","BlobStartCopyFromURLExceptionHeaders","BlobCopyFromURLHeaders","xMsContentCrc64","BlobCopyFromURLExceptionHeaders","BlobAbortCopyFromURLHeaders","BlobAbortCopyFromURLExceptionHeaders","BlobSetTierHeaders","BlobSetTierExceptionHeaders","BlobGetAccountInfoHeaders","BlobGetAccountInfoExceptionHeaders","BlobQueryHeaders","copyCompletionTime","BlobQueryExceptionHeaders","BlobGetTagsHeaders","BlobGetTagsExceptionHeaders","BlobSetTagsHeaders","BlobSetTagsExceptionHeaders","PageBlobCreateHeaders","PageBlobCreateExceptionHeaders","PageBlobUploadPagesHeaders","PageBlobUploadPagesExceptionHeaders","PageBlobClearPagesHeaders","PageBlobClearPagesExceptionHeaders","PageBlobUploadPagesFromURLHeaders","PageBlobUploadPagesFromURLExceptionHeaders","PageBlobGetPageRangesHeaders","blobContentLength","PageBlobGetPageRangesExceptionHeaders","PageBlobGetPageRangesDiffHeaders","PageBlobGetPageRangesDiffExceptionHeaders","PageBlobResizeHeaders","PageBlobResizeExceptionHeaders","PageBlobUpdateSequenceNumberHeaders","PageBlobUpdateSequenceNumberExceptionHeaders","PageBlobCopyIncrementalHeaders","PageBlobCopyIncrementalExceptionHeaders","AppendBlobCreateHeaders","AppendBlobCreateExceptionHeaders","AppendBlobAppendBlockHeaders","blobAppendOffset","AppendBlobAppendBlockExceptionHeaders","AppendBlobAppendBlockFromUrlHeaders","AppendBlobAppendBlockFromUrlExceptionHeaders","AppendBlobSealHeaders","AppendBlobSealExceptionHeaders","BlockBlobUploadHeaders","BlockBlobUploadExceptionHeaders","BlockBlobPutBlobFromUrlHeaders","BlockBlobPutBlobFromUrlExceptionHeaders","BlockBlobStageBlockHeaders","BlockBlobStageBlockExceptionHeaders","BlockBlobStageBlockFromURLHeaders","BlockBlobStageBlockFromURLExceptionHeaders","BlockBlobCommitBlockListHeaders","BlockBlobCommitBlockListExceptionHeaders","BlockBlobGetBlockListHeaders","BlockBlobGetBlockListExceptionHeaders","blobServiceProperties","accept","restype","comp","timeoutInSeconds","accept1","comp2","keyInfo","restype1","comp4","multipartContentType","comp5","restype2","access","ifModifiedSince","ifUnmodifiedSince","comp6","comp7","comp8","comp10","action","duration","proposedLeaseId","action1","leaseId1","action2","action3","breakPeriod","action4","proposedLeaseId1","include1","range","encryptionKey","encryptionAlgorithm","ifMatch","ifNoneMatch","ifTags","blobCacheControl","blobContentType","blobContentEncoding","blobContentLanguage","blobContentDisposition","comp12","tier","sourceIfModifiedSince","sourceIfUnmodifiedSince","sourceIfMatch","sourceIfNoneMatch","sourceIfTags","blobTagsString","legalHold1","sourceContentMD5","copySourceAuthorization","copySourceTags","queryRequest","comp18","transactionalContentMD5","transactionalContentCrc64","contentType1","body1","accept2","comp19","pageWrite","ifSequenceNumberLessThanOrEqualTo","ifSequenceNumberLessThan","ifSequenceNumberEqualTo","sourceUrl","sourceContentCrc64","comp20","comp22","maxSize","appendPosition","sourceRange1","blobType2","comp24","blockId","blocks","comp25","ServiceImpl","setProperties","setPropertiesOperationSpec","getProperties","getPropertiesOperationSpec","getStatistics","getStatisticsOperationSpec","listContainersSegment","listContainersSegmentOperationSpec","getUserDelegationKey","getUserDelegationKeyOperationSpec","getAccountInfo","getAccountInfoOperationSpec","submitBatch","submitBatchOperationSpec","filterBlobs","filterBlobsOperationSpec","xmlSerializer","ContainerImpl","createOperationSpec","deleteOperationSpec","setMetadata","setMetadataOperationSpec","getAccessPolicy","getAccessPolicyOperationSpec","setAccessPolicy","setAccessPolicyOperationSpec","restore","restoreOperationSpec","rename","sourceContainerName","renameOperationSpec","acquireLease","acquireLeaseOperationSpec","releaseLease","releaseLeaseOperationSpec","renewLease","renewLeaseOperationSpec","breakLease","breakLeaseOperationSpec","changeLease","changeLeaseOperationSpec","listBlobFlatSegment","listBlobFlatSegmentOperationSpec","listBlobHierarchySegment","listBlobHierarchySegmentOperationSpec","BlobImpl","download","downloadOperationSpec","undelete","undeleteOperationSpec","setExpiry","expiryOptions","setExpiryOperationSpec","setHttpHeaders","setHttpHeadersOperationSpec","setImmutabilityPolicy","setImmutabilityPolicyOperationSpec","deleteImmutabilityPolicy","deleteImmutabilityPolicyOperationSpec","setLegalHold","setLegalHoldOperationSpec","createSnapshot","createSnapshotOperationSpec","startCopyFromURL","startCopyFromURLOperationSpec","copyFromURL","copyFromURLOperationSpec","abortCopyFromURL","abortCopyFromURLOperationSpec","setTier","setTierOperationSpec","queryOperationSpec","getTags","getTagsOperationSpec","setTags","setTagsOperationSpec","PageBlobImpl","uploadPages","uploadPagesOperationSpec","clearPages","clearPagesOperationSpec","uploadPagesFromURL","sourceRange","uploadPagesFromURLOperationSpec","getPageRanges","getPageRangesOperationSpec","getPageRangesDiff","getPageRangesDiffOperationSpec","resize","resizeOperationSpec","updateSequenceNumber","sequenceNumberAction","updateSequenceNumberOperationSpec","copyIncremental","copyIncrementalOperationSpec","AppendBlobImpl","appendBlock","appendBlockOperationSpec","appendBlockFromUrl","appendBlockFromUrlOperationSpec","seal","sealOperationSpec","BlockBlobImpl","upload","uploadOperationSpec","putBlobFromUrl","putBlobFromUrlOperationSpec","stageBlock","stageBlockOperationSpec","stageBlockFromURL","stageBlockFromURLOperationSpec","commitBlockList","commitBlockListOperationSpec","getBlockList","listType","getBlockListOperationSpec","StorageClient","service","container","pageBlob","appendBlob","blockBlob","StorageContextClient","operationSpecToSend","storageClientContext","isHttps","getURLScheme","BlobSASPermissions","deleteVersion","tag","move","execute","permanentDelete","blobSASPermissions","permissionLike","ContainerSASPermissions","list","filterByTags","containerSASPermissions","UserDelegationKeyCredential","userDelegationKey","ipRangeToString","ipRange","SASProtocol","SASQueryParameters","ipRangeInner","permissionsOrOptions","services","resourceTypes","identifier","resource","preauthorizedAgentObjectId","correlationId","signedOid","param","tryAppendQueryParameter","generateBlobSASQueryParameters","blobSASSignatureValues","sharedKeyCredentialOrUserDelegationKey","generateBlobSASQueryParametersInternal","sasQueryParameters","sharedKeyCredential","userDelegationKeyCredential","SASSignatureValuesSanityCheckAndAutofill","verifiedPermissions","timestamp","snapshotTime","getCanonicalName","generateBlobSASQueryParameters20201206","generateBlobSASQueryParametersUDK20201206","generateBlobSASQueryParameters20181109","generateBlobSASQueryParametersUDK20200210","generateBlobSASQueryParametersUDK20181109","generateBlobSASQueryParameters20150405","BlobLeaseClient","_leaseId","_url","clientContext","_isContainer","_containerOrBlobOperation","conditions","tagConditions","modifiedAccessConditions","RetriableReadableStream","getter","offset","highWaterMark","retries","sourceDataHandler","doInjectErrorOnce","pause","sourceErrorOrEndHandler","onProgress","sourceAbortedHandler","removeSourceEventHandlers","maxRetryRequests","newSource","setSourceEventHandlers","_read","_destroy","BlobDownloadResponse","objectReplicationDestinationPolicyId","objectReplicationSourceProperties","contentAsBlob","blobDownloadStream","_response","AVRO_INIT_BYTES","AvroParser","readFixedBytes","bytes","readByte","readZigZagLong","byte","haveMoreByte","significanceInFloat","zigZagEncoded","significanceInBit","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","readLong","readInt","readNull","readBoolean","readFloat","u8arr","DataView","byteOffset","getFloat32","readDouble","getFloat64","readBytes","readString","TextDecoder","decode","readMapPair","readItemMethod","readMap","readArray","dict","items","AvroComplex","AvroPrimitive","AvroType","fromSchema","fromStringSchema","fromArraySchema","fromObjectSchema","NULL","BOOLEAN","INT","LONG","FLOAT","DOUBLE","BYTES","STRING","AvroPrimitiveType","AvroUnionType","RECORD","aliases","fields","field","AvroRecordType","ENUM","symbols","AvroEnumType","MAP","AvroMapType","ARRAY","primitive","_primitive","_symbols","types","_types","typeIndex","itemType","_itemType","_fields","record","arraysEqual","AvroReader","blockOffset","_blockOffset","objectIndex","_objectIndex","dataStream","headerStream","currentBlockOffset","indexWithinCurrentBlock","_dataStream","_headerStream","_initialized","_initialBlockOffset","initialize","_metadata","codec","_syncMarker","_itemsRemainingInBlock","hasNext","parseObjects","AvroReadable","ABORT_ERROR","AvroReadableFromStream","toUint8Array","_readable","_position","cleanUp","readableCallback","rejectCallback","callbackChunk","BlobQuickQueryStream","avroPaused","onError","avroReader","avroIter","readInternal","emit","avroNext","$schema","bytesScanned","totalBytes","fatal","description","isFatal","BlobQueryResponse","BlockBlobTier","PremiumPageBlobTier","StorageBlobAudience","toAccessTier","ensureCpkIfSpecified","cpk","getBlobServiceAccountAudience","storageAccountName","rangeResponseFromModel","PollerStoppedError","PollerCancelledError","Poller","operation","resolveOnUnsuccessful","stopped","pollProgressCallbacks","promise","startPolling","pollOptions","isStopped","isDone","poll","pollOnce","fireProgress","processUpdatedState","state","cancelOnce","cancel","pollOncePromise","clearPollOncePromise","isCancelled","getResult","pollUntilDone","c","isCompleted","stopPolling","cancelOperation","cancelPromise","getOperationState","BlobBeginCopyFromUrlPoller","resumeFrom","makeBlobBeginCopyFromURLPollOperation","blobClient","startCopyFromURLOptions","intervalInMs","isStarted","prevCopyProgress","rangeToString","iRange","BatchStates","Batch","concurrency","actives","completed","operations","Good","emitter","EventEmitter","addOperation","parallelExecute","nextOperation","BuffersStream","buffers","byteOffsetInCurrentBuffer","bufferIndex","pushedBytesLength","buffersLength","buf","readableHighWaterMark","outBuffers","remainingDataInAllBuffers","remainingCapacityInThisBuffer","remaining","maxBufferLength","MAX_LENGTH","PooledBuffer","_size","capacity","totalLength","bufferNum","allocUnsafe","fill","targetOffset","sourceOffset","totalCopiedNum","copiedNum","copy","getReadableStream","BufferScheduler","bufferSize","maxBuffers","outgoingHandler","encoding","isStreamEnd","executingOutgoingHandlers","numBuffers","unresolvedDataArray","unresolvedLength","incoming","outgoing","appendUnresolvedData","resolveData","triggerOutgoingHandlers","shiftBufferFromUnresolvedDataArray","triggerOutgoingHandler","bufferLength","reuseBuffer","streamToBuffer","pos","chunkLength","fsStat","fsCreateReadStream","BlobClient","_containerName","urlOrConnectionString","credentialOrPipelineOrContainerName","blobNameOrOptions","extractedCreds","getBlobAndContainerNamesFromUrl","blobContext","_snapshot","_versionId","withSnapshot","withVersion","getAppendBlobClient","AppendBlobClient","getBlockBlobClient","BlockBlobClient","getPageBlobClient","PageBlobClient","customerProvidedKey","leaseAccessConditions","rangeGetContentMD5","rangeGetContentCRC64","rangeGetContentCrc64","cpkInfo","wrappedRes","updatedDownloadOptions","exists","deleteSnapshots","deleteIfExists","succeeded","setHTTPHeaders","blobHTTPHeaders","blobHttpHeaders","getBlobLeaseClient","proposeLeaseId","beginCopyFromURL","poller","syncCopyFromURL","sourceConditions","sourceModifiedAccessConditions","sourceAuthorization","immutabilityPolicy","expiriesOn","policyMode","setAccessTier","downloadToBuffer","param1","param2","param3","param4","blockSize","alloc","transferProgress","batch","off","chunkEnd","maxRetryRequestsPerBlock","do","downloadToFile","filePath","rs","file","ws","readStreamToLocalFile","pathComponents","sealBlob","generateSasUrl","sas","generateSasStringToSign","generateUserDelegationSasUrl","generateUserDelegationSasStringToSign","legalHoldEnabled","appendBlobContext","createIfNotExists","appendPositionAccessConditions","appendBlockFromURL","sourceURL","blockBlobContext","_blobContext","inputTextConfiguration","outputTextConfiguration","syncUploadFromURL","uploadData","uploadSeekableInternal","browserBlob","uploadBrowserData","browserData","bodyFactory","maxSingleShotSize","BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES","numBlocks","blockList","blockID","uploadFile","autoClose","Infinity","uploadStream","maxConcurrency","blockNum","scheduler","pageBlobContext","sequenceNumberAccessConditions","destOffset","listPageRangesSegment","listPageRangeItemSegments","getPageRangeItemSegmentsResponse","listPageRangeItems","listPageRanges","iter","byPage","prevSnapshot","prevsnapshot","listPageRangesDiffSegment","prevSnapshotOrUrl","listPageRangeDiffItemSegments","listPageRangeDiffItems","listPageRangesDiff","getPageRangesDiffForManagedDisks","prevSnapshotUrl","sequenceNumber","startCopyIncremental","getBodyAsText","batchResponse","responseLength","streamToBuffer2","BatchResponseParser","subRequests","responseBatchBoundary","perResponsePrefix","batchResponseEnding","parseBatchResponse","subResponses","subResponseCount","deserializedSubResponses","subResponsesSucceededCount","subResponsesFailedCount","subResponse","deserializedSubResponse","responseLines","subRespHeaderStartFound","subRespHeaderEndFound","subRespFailed","contentId","responseLine","tokens","statusMessage","isInteger","_request","MutexLockStatus","KnownEncryptionAlgorithmType","Mutex","lock","UNLOCKED","LOCKED","onUnlockEvent","unlock","emitUnlockEvent","setImmediate","BlobBatch","batchRequest","InnerBatchRequest","getMultiPartContentType","getMultipartContentType","getHttpRequestBody","getSubRequests","addSubRequestInternal","subRequest","assembleSubRequestFunc","preAddSubRequest","postAddSubRequest","setBatchType","batchType","deleteBlob","urlOrBlobClient","credentialOrOptions","createPipeline","setBlobAccessTier","credentialOrTier","tierOrOptions","operationCount","tempGuid","subRequestPrefix","batchRequestEnding","xMsHeaderName","appendSubRequestToBody","BlobBatchClient","credentialOrPipeline","serviceOrContainerContext","createBatch","deleteBlobs","urlsOrBlobClients","setBlobsAccessTier","batchRequestBody","rawBatchResponse","batchResponseParser","responseSummary","ContainerClient","getContainerNameFromUrl","containerContext","getBlobClient","signedIdentifiers","containerAcl","acl","uploadBlockBlob","blockBlobClient","blobItemInternal","listSegments","listBlobsFlatSegmentResponse","listItems","listBlobsFlat","include","includeCopy","includeDeleted","includeMetadata","includeSnapshots","includeVersions","includeUncommitedBlobs","includeTags","includeDeletedWithVersions","includeImmutabilityPolicy","includeLegalHold","listHierarchySegments","listBlobsHierarchySegmentResponse","listItemsByHierarchy","listBlobsByHierarchy","findBlobsByTagsSegment","tagFilterSqlExpression","wrappedResponse","findBlobsByTagsSegments","findBlobsByTagsItems","findBlobsByTags","listSegmentOptions","getBlobBatchClient","AccountSASPermissions","accountSASPermissions","AccountSASResourceTypes","accountSASResourceTypes","AccountSASServices","queue","table","accountSASServices","generateAccountSASQueryParameters","accountSASSignatureValues","generateAccountSASQueryParametersInternal","parsedPermissions","parsedServices","parsedResourceTypes","BlobServiceClient","fromConnectionString","serviceContext","getContainerClient","createContainer","containerClient","containerCreateResponse","deleteContainer","undeleteContainer","deletedContainerName","deletedContainerVersion","destinationContainerName","containerUndeleteResponse","renameContainer","containerRenameResponse","sourceLeaseId","sourceCondition","listContainersSegmentResponse","listContainers","includeSystem","generateAccountSasUrl","readMethodOptions","methodName","extensionName","extensionType","_a","methods","localName","fromJson","readMethodOption","optionVal","readServiceOption","ServiceType","_b","_c","serverStreaming","clientStreaming","idempotency","normalizeMethodInfo","RpcError","meta","l","serviceName","DeferredState","mergeRpcOptions","defaults","jsonOptions","binaryOptions","interceptors","into","Deferred","preventUnhandledRejectionWarning","_state","PENDING","_promise","_resolve","_reject","RESOLVED","REJECTED","resolvePending","rejectPending","RpcOutputStreamController","_lis","nxt","cmp","_closed","_itState","onNext","addLis","onMessage","onComplete","clearLis","closed","notifyNext","complete","assert","notifyMessage","notifyError","notifyComplete","pushIt","first","__awaiter","P","fulfilled","step","rejected","UnaryCall","requestHeaders","trailers","onfulfilled","onrejected","promiseFinished","ServerStreamingCall","ClientStreamingCall","requests","DuplexStreamingCall","TestTransport","suppressUncaughtRejections","headerDelay","responseDelay","betweenResponseDelay","afterResponseDelay","sentMessages","lastInput","TestInputStream","sent","single","sendComplete","promiseHeaders","defaultHeaders","promiseSingleResponse","O","is","streamResponses","messages","promiseStatus","defaultStatus","promiseTrailers","defaultTrailers","maybeSuppressUncaught","mergeOptions","unary","headersPromise","responsePromise","statusPromise","trailersPromise","outputStream","responseStreamClosedPromise","duplex","ev","responseHeader","detail","responseTrailer","_completed","_sent","send","inputMessage","delayMs","inputComplete","stackIntercept","transport","_d","tail","mtd","inp","opt","curr","interceptUnary","interceptServerStreaming","interceptClientStreaming","interceptDuplex","stackUnaryInterceptors","stackServerStreamingInterceptors","stackClientStreamingInterceptors","stackDuplexStreamingInterceptors","ServerCallContextController","deadline","sendResponseHeadersFn","_cancelled","_listeners","_sendRH","notifyCancelled","sendResponseHeaders","cancelled","onCancel","condition","assertNever","FLOAT32_MAX","FLOAT32_MIN","UINT32_MAX","INT32_MAX","INT32_MIN","assertInt32","arg","assertUInt32","assertFloat32","UnknownFieldHandler","WireType","mergeBinaryOptions","symbol","onRead","fieldNo","wireType","no","onWrite","writer","raw","uf","last","typeofJsonValue","isJsonObject","encTable","decTable","base64decode","base64Str","es","bytePos","groupPos","subarray","base64encode","base64","fromCharCodes","fromCharCode","utf8read","varint64read","lowBits","highBits","assertBounds","middleByte","varint64write","lo","hi","splitBits","hasMoreBits","int64fromString","dec","minus","add1e6digit","begin","digit1e6","int64toString","bitsLow","bitsHigh","mid","high","digitA","digitB","digitC","decimalFrom1e7","digit1e7","needLeadingZeros","partial","varint32write","varint32read","BI","assertBi","bi","dv","ok","BigInt","getBigInt64","getBigUint64","setBigInt64","setBigUint64","MIN","MAX","UMIN","UMAX","C","V","detectBi","RE_DECIMAL_STR","SharedPbLong","isZero","isSafeInteger","PbULong","ZERO","getInt32","toBigInt","setInt32","PbLong","pbl","negate","isNegative","defaultsRead","readUnknownField","readerFactory","BinaryReader","binaryReadOptions","textDecoder","varint64","uint32","view","ignoreBOM","skip","Varint","Bit64","Bit32","LengthDelimited","StartGroup","EndGroup","int32","sint32","zze","int64","uint64","sint64","bool","fixed32","getUint32","sfixed32","fixed64","sfixed64","float","double","defaultsWrite","writeUnknownFields","writerFactory","BinaryWriter","binaryWriteOptions","textEncoder","stack","TextEncoder","chunks","finish","fork","prev","encode","setFloat32","setFloat64","setUint32","long","MESSAGE_TYPE","ScalarType","LongType","RepeatType","normalizeFieldInfo","jsonName","NO","oneof","readFieldOptions","messageType","readFieldOption","readMessageOption","isOneofGroup","any","oneofKind","getOneofValue","setOneofValue","clearOneofValue","getSelectedOneofValue","ReflectionTypeCheck","known","oneofs","depth","allowExcessProperties","group","repeated","scalars","T","scalar","INT32","mapKeys","K","isAssignable","longType","argType","UINT64","FIXED64","INT64","SFIXED64","SINT64","BIGINT","NUMBER","BOOL","FIXED32","SFIXED32","SINT32","UINT32","reflectionLongConvert","ReflectionJsonReader","fMap","fieldsInput","jsonValue","what","oneofsHandled","jsonKey","ignoreUnknownFields","fieldObj","jsonObjKey","jsonObjValue","internalJsonRead","enum","fieldArr","jsonItem","localEnumName","enumNumber","NaN","NEGATIVE_INFINITY","ReflectionJsonWriter","useProtoFieldName","emitDefaultValues","jsonObj","entryKey","entryValue","enumInfo","enumAsInteger","jsonArr","optional","internalJsonWrite","ed","ulong","reflectionScalarDefault","ReflectionBinaryReader","fieldNoToField","u","internalBinaryRead","mapKey","mapVal","mapEntry","keyRaw","ReflectionBinaryWriter","emitDefault","PACKED","packed","internalBinaryWrite","isDefault","scalarInfo","reflectionCreate","messagePrototype","reflectionMergePartial","fieldValue","output","mergePartial","reflectionEquals","val_a","val_b","repeatedPrimitiveEq","primitiveEq","repeatedMsgEq","objectValues","equals","ba","bb","baseDescriptors","getOwnPropertyDescriptors","getPrototypeOf","MessageType","defaultCheckDepth","refTypeCheck","refJsonReader","refJsonWriter","refBinReader","refBinWriter","fromBinary","fromJsonString","toJsonString","prettySpaces","toBinary","containsMessageType","isEnumObject","nam","listEnumValues","enumObject","number","listEnumNames","listEnumNumbers","jsonReadOptions","jsonWriteOptions","mergeJsonOptions","typeRegistry","lowerCamelCase","snakeCase","capNext","sb","balanced","maybeMatch","pre","post","reg","begs","beg","left","right","ai","concatMap","expand","escSlash","escOpen","escClose","escComma","escPeriod","escapeBraces","unescapeBraces","numeric","parseCommaParts","postParts","embrace","isPadded","el","lte","y","gte","isTop","expansions","isNumericSequence","isAlphaSequence","isSequence","isOptions","N","width","incr","abs","pad","need","z","expansion","xs","fn","flag","argv","terminatorPosition","formatArgs","useColors","humanize","color","lastC","save","storage","setItem","removeItem","load","getItem","__nwjs","documentElement","style","WebkitAppearance","firebug","exception","localStorage","localstorage","warned","warn","colors","formatters","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","coerce","formatter","selectColor","configurable","init","newDebug","matchesTemplate","template","searchIndex","templateIndex","starIndex","matchIndex","names","skips","hash","browser","tty","util","inspectOpts","stderr","formatWithOptions","colorCode","hideDate","getDate","isatty","fd","deprecate","supportsColor","of","PropertiesFile","_fs","__esModule","objs","makeKeys","separatorPositions","sep","splitIndex","oldValue","escapedValue","unescape","addFile","readFileSync","me","ret","interpolate","getLast","lg","getFirst","getInt","defaultIntValue","getFloat","defaultFloatValue","getBoolean","defaultBooleanValue","getKeys","getMatchingKeys","matchstr","reset","globalFile","minimatch","Minimatch","GLOBSTAR","plTypes","open","close","reSpecials","slashSplit","ext","assertValidPattern","nocomment","allowWindowsEscape","regexp","empty","make","braceExpand","nobrace","def","orig","makeRe","parseNegate","globSet","globParts","si","negateOffset","nonegate","isSub","noglobstar","stateChar","hasMagic","nocase","escaping","patternListStack","negativeLists","inClass","reClassStart","classStart","patternStart","dot","clearStateChar","qmark","noext","reStart","pl","reEnd","cs","er","sp","SUBPARSE","$1","$2","addPatternStart","nl","nlBefore","nlFirst","nlLast","nlAfter","openParensBefore","cleanAfter","dollar","globUnescape","flags","regExp","_glob","_src","twoStar","regExpEscape","ex","mm","nonull","filename","matchBase","matchOne","flipNegate","fi","pi","fl","hit","fr","pr","swallowee","h","w","plural","msAbs","isPlural","round","fmtLong","fmtShort","SemVer","NODE_DEBUG","SEMVER_SPEC_VERSION","MAX_SAFE_BUILD_LENGTH","safeRe","src","R","tok","safeRegexReplacements","makeSafeRe","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","LETTERDASHNUMBER","BUILD","FULLPLAIN","FULL","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","COERCERTL","LONETILDE","TILDETRIM","TILDE","TILDELOOSE","LONECARET","CARETTRIM","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","HYPHENRANGE","HYPHENRANGELOOSE","STAR","loose","includePrerelease","major","minor","patch","prerelease","valid","clean","compare","other","compareMain","comparePre","compareIdentifiers","compareBuild","inc","release","version1","version2","eq","v1","v2","defaultResult","anum","bnum","gt","lt","neq","op","Comparator","semver","ANY","operator","rcompareIdentifiers","compareLoose","versionA","versionB","rcompare","rsort","Range","parseRange","isSatisfiable","comparators","remainingComparators","testComparator","otherComparator","intersects","isX","hyphenReplace","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","satisfies","outside","hilo","gtfn","ltefn","ltfn","ecomp","low","comparator","rangeTmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","comps","hr","compRe","M","replaceCaret","replaceCarets","replaceTilde","replaceTildes","gtlt","xM","xm","xp","anyX","replaceXRange","replaceXRanges","replaceStars","parseComparator","thisComparators","rangeComparators","thisComparator","rangeComparator","toComparators","maxSatisfying","maxSV","rangeObj","minSatisfying","minSV","minVersion","minver","compver","validRange","ltr","gtr","parsed","r1","r2","rtl","parseArgsStringToArgv","myRegexp","myString","myArray","firstString","_i","os","hasFlag","flagForceColor","haveStream","noFlagForceColor","FORCE_COLOR","envForceColor","forceColor","sniffFlags","streamIsTTY","TERM","platform","osRelease","CI_NAME","TEAMCITY_VERSION","COLORTERM","TERM_PROGRAM_VERSION","TERM_PROGRAM","getSupportLevel","hasBasic","has256","has16m","translateLevel","isTTY","stdout","tls","http","https","events","TunnelingAgent","proxy","maxSockets","Agent","defaultMaxSockets","sockets","socket","localAddress","toOptions","pending","onSocket","removeSocket","createSecureSocket","cb","createSocket","hostHeader","getHeader","servername","secureSocket","connect","overrides","keyLen","httpOverHttp","httpsOverHttp","defaultPort","httpOverHttps","httpsOverHttps","inherits","addRequest","onFree","onCloseOrRemove","placeholder","connectOptions","proxyAuth","connectReq","onConnect","head","removeAllListeners","useChunkedEncodingByDefault","upgrade","nextTick","cause","Client","Dispatcher","errors","Pool","BalancedPool","api","buildConnector","MockClient","MockAgent","MockPool","mockErrors","ProxyAgent","RetryHandler","DecoratorHandler","RedirectHandler","createRedirectInterceptor","hasCrypto","makeDispatcher","InvalidArgumentError","parseOrigin","origin","parseURL","getGlobalDispatcher","dispatcher","setGlobalDispatcher","nodeMajor","nodeMinor","fetchImpl","fetch","captureStackTrace","Headers","Response","Request","File","FileReader","setGlobalOrigin","getGlobalOrigin","caches","CacheStorage","kConstruct","deleteCookie","getCookies","getSetCookies","setCookie","parseMIMEType","serializeAMimeType","WebSocket","DispatcherBase","kOnConnect","kOnDisconnect","kOnConnectionError","kMaxRedirections","kOnDrain","kFactory","kFinalizer","kOptions","defaultFactory","connections","maxRedirections","kInterceptors","deepClone","kClients","FinalizationRegistry","ref","deref","targets","kRunning","kDispatch","WeakRef","register","dispatch","kClose","closePromises","kDestroy","destroyPromises","kListener","kSignal","RequestAbortedError","addSignal","addAbortListener","removeSignal","ConnectHandler","AsyncResource","opaque","responseHeaders","onHeaders","SocketError","onUpgrade","parseRawHeaders","parseHeaders","runInAsyncScope","queueMicrotask","connectHandler","kResume","PipelineRequest","autoDestroy","PipelineResponse","_readableState","endEmitted","PipelineHandler","onInfo","nop","Duplex","readableObjectMode","objectMode","destroyed","InvalidReturnValueError","ended","onData","pipelineHandler","PassThrough","RequestHandler","throwOnError","getResolveErrorBodyCallback","StreamHandler","finished","writableNeedDrain","_writableState","needDrain","UpgradeHandler","strictEqual","upgradeHandler","kConsume","kReading","kBody","kAbort","kContentType","noop","isUnusable","isDisturbed","locked","isLocked","consume","consumeFinish","consumeStart","consumePush","consumeEnd","toUSVString","dst","dataEmitted","errorEmitted","addListener","listenerCount","readableLength","arrayBuffer","NotSupportedError","bodyUsed","ReadableStreamFrom","dump","limit","throwIfAborted","signalListenerCleanup","ResponseStatusCodeError","kGreatestCommonDivisor","kCurrentWeight","kIndex","kWeight","kMaxWeightPerServer","kErrorPenalty","getGreatestCommonDivisor","PoolBase","upstreams","maxWeightPerServer","errorPenalty","upstream","addUpstream","_updateBalancedPoolStats","upstreamOrigin","pool","kUrl","kAddClient","removeUpstream","kRemoveClient","kGetDispatcher","BalancedPoolMissingUpstreamError","kNeedDrain","counter","maxWeightIndex","fieldValues","getFieldValues","Cache","webidl","illegalConstructor","brandCheck","argumentLengthCheck","converters","RequestInfo","CacheQueryOptions","matchAll","kState","ignoreMethod","requestResponse","requestResponses","responseList","kHeaders","kHeadersList","headersList","kGuard","freeze","responseArrayPromise","addAll","responsePromises","requestList","urlIsHttpHttpsScheme","fetchControllers","initiator","destination","createDeferredPromise","fetching","processResponse","processResponseEndOfBody","DOMException","cacheJobPromise","errorData","put","innerRequest","innerResponse","clonedResponse","cloneResponse","bodyReadPromise","readAllBytes","requestObject","kRealm","cache","backupCache","addedItems","resultList","idx","requestQuery","targetStorage","cachedRequest","cachedResponse","queryURL","cachedURL","ignoreSearch","urlEquals","ignoreVary","defineProperties","toStringTag","kEnumerableProperty","cacheQueryOptionConverters","converter","boolean","dictionaryConverter","MultiCacheQueryOptions","DOMString","interfaceConverter","sequenceConverter","cacheName","cacheList","A","B","excludeFragment","URLSerializer","isValidHeaderName","net","timers","http2","constants","h2ExperimentalWarned","FastBuffer","species","kClosedResolve","channels","diagnosticsChannel","sendHeaders","channel","beforeConnect","connectError","connected","hasSubscribers","onHttp2SessionError","kSocket","kError","kClient","onHttp2FrameError","InformationalError","onHttp2SessionEnd","onHTTP2GoAway","kHTTP2Session","kPending","kQueue","kRunningIdx","errorRequest","kPendingIdx","EMPTY_BUF","llhttpInstance","llhttpPromise","llhttpWasmData","JEST_WORKER_ID","mod","WebAssembly","compile","instantiate","wasm_on_url","at","wasm_on_status","currentParser","ptr","currentBufferPtr","currentBufferRef","onStatus","wasm_on_message_begin","onMessageBegin","wasm_on_header_field","onHeaderField","wasm_on_header_value","onHeaderValue","wasm_on_headers_complete","shouldKeepAlive","onHeadersComplete","wasm_on_body","onBody","wasm_on_message_complete","onMessageComplete","lazyllhttp","currentBufferSize","TIMEOUT_HEADERS","TIMEOUT_IDLE","Parser","kMaxHeadersSize","llhttp","llhttp_alloc","TYPE","RESPONSE","timeoutValue","timeoutType","statusText","headersSize","headersMaxSize","paused","bytesRead","connection","maxResponseSize","kMaxResponseSize","onParserTimeout","llhttp_resume","readMore","free","malloc","memory","llhttp_execute","llhttp_get_error_pos","ERROR","PAUSED_UPGRADE","PAUSED","OK","llhttp_get_error_reason","HTTPParserError","llhttp_free","trackHeader","HeadersOverflowError","kParser","onSocketError","onSocketReadable","onSocketEnd","onSocketClose","getSocketInfo","kReset","bodyTimeout","kBodyTimeout","kPipelining","keepAliveTimeout","parseKeepAliveTimeout","kKeepAliveTimeoutThreshold","kKeepAliveMaxTimeout","kKeepAliveTimeoutValue","kKeepAliveDefaultTimeout","kBlocking","ResponseExceededMaxSizeError","ResponseContentLengthMismatchError","kWriting","parser","HeadersTimeoutError","BodyTimeoutError","kHTTPConnVersion","kSize","kConnecting","ip","isIP","publish","connectParams","kServerName","kLocalAddress","connector","kConnector","ClientDestroyedError","alpnProtocol","emitWarning","session","createConnection","peerMaxConcurrentStreams","kHTTP2SessionState","maxConcurrentStreams","kNoRef","kCounter","kMaxRequests","emitDrain","sync","kResuming","headersTimeout","kHeadersTimeout","kBusy","idempotent","isAsyncIterable","_resume","shouldSendContentLength","reqHeaders","kHTTP2CopyHeaders","h2State","HTTP2_HEADER_AUTHORITY","kHost","HTTP2_HEADER_METHOD","endStream","openStreams","HTTP2_HEADER_PATH","HTTP2_HEADER_SCHEME","expectsPayload","kStrictContentLength","RequestContentLengthMismatchError","HTTP2_HEADER_CONTENT_LENGTH","shouldEndStream","expectContinue","HTTP2_HEADER_EXPECT","writeBodyH2","HTTP2_HEADER_STATUS","realHeaders","cork","uncork","onBodySent","onRequestSent","isBlobLike","writeIterable","h2stream","writeBlob","writeStream","isIterable","writeH2","blocking","kHostHeader","onPipeData","AsyncWriter","onDrain","onFinished","isH2","waitForDrain","bytesWritten","socketTimeout","requestTimeout","idleTimeout","maxKeepAliveTimeout","maxHeaderSize","socketPath","connectTimeout","keepAliveMaxTimeout","keepAliveTimeoutThreshold","maxRequestsPerClient","autoSelectFamilyAttemptTimeout","allowH2","maxCachedSessions","nodeHasAutoSelectFamily","autoSelectFamily","pipelining","strictContentLength","kConnected","kConnect","kHTTP2BuildRequest","kHTTP1BuildRequest","CompatWeakRef","CompatFinalizer","finalizer","NODE_V8_COVERAGE","global","maxAttributeValueSize","maxNameValuePairSize","cookie","strict","Cookie","DeleteCookieAttributes","nullableConverter","USVString","out","piece","attributes","expires","cookies","getSetCookie","parseSetCookie","parseUnparsedAttributes","unparsedAttributes","cookieAttributeList","cookieAv","collectASequenceOfCodePointsFast","attributeName","attributeValue","attributeNameLowercase","expiryTime","charCode","deltaSeconds","maxAge","cookieDomain","domain","cookiePath","secure","httpOnly","enforcement","attributeValueLowercase","sameSite","unparsed","isCTLExcludingHtab","nameValuePair","validateCookieName","validateCookieValue","validateCookiePath","toIMFDate","getUTCDay","getUTCDate","getUTCMonth","getUTCFullYear","getUTCHours","getUTCMinutes","getUTCSeconds","validateCookieMaxAge","validateCookieDomain","SessionCache","_maxCachedSessions","_sessionCache","_sessionRegistry","sessionKey","oldestKey","sessionCache","getServerName","ALPNProtocols","httpSocket","keepAliveInitialDelay","setKeepAlive","cancelTimeout","onConnectTimeout","s1","s2","clearImmediate","setupTimeout","ConnectTimeoutError","setNoDelay","headerNameLowerCasedRecord","wellknownHeaderNames","lowerCasedKey","UndiciError","ClientClosedError","RequestRetryError","tokenRegExp","headerCharRegex","invalidPathRegex","kHandler","extractBody","bodySent","rState","endHandler","errorHandler","isFormDataLike","buildURL","processHeader","bodyStream","validateHandler","onFinally","addHeader","processHeaderValue","skipAppend","kKeepAlive","kBodyUsed","kQueued","kFree","kClosed","kDestroyed","kOnDestroyed","kProxy","kRetryHandlerDefaultRetry","nodeUtil","isDestroyed","isReadableAborted","KEEPALIVE_TIMEOUT_EXPR","hasToWellFormed","toWellFormed","readableDidRead","isErrored","isReadable","getHostname","headerNameToString","hasContentLength","contentDispositionIdx","IncomingMessage","iterable","convertIterableToBuffer","pull","enqueue","desiredSize","return","localPort","remoteAddress","remotePort","remoteFamily","getAll","parseRangeHeader","safeHTTPMethods","kOnClosed","kInterceptedDispatch","newInterceptors","onClosed","onDestroyed","Busboy","NativeFile","UndiciFile","randomInt","keepalive","readableStreamClose","isReadableStreamLike","escape","normalizeLinefeeds","blobParts","rn","hasUnknownSizeValue","consumeBody","isUint8Array","bodyMixinMethods","specConsumeBody","mimeType","bodyMimeType","utf8DecodeBytes","parseJSONFromBytes","responseFormData","busboy","preservePath","base64chunk","busboyResolve","streamingDecoder","convertBytesToJSValue","errorSteps","successSteps","fullyReadBody","safelyExtractBody","cloneBody","out1","out2","out2Clone","structuredClone","transfer","finalClone","mixinBody","corsSafeListedMethods","corsSafeListedMethodsSet","redirectStatus","redirectStatusSet","badPorts","badPortsSet","referrerPolicy","referrerPolicySet","safeMethods","safeMethodsSet","forbiddenMethods","forbiddenMethodsSet","subresource","subresourceSet","MessageChannel","port1","port2","postMessage","receiveMessageOnPort","requestBodyHeader","requestRedirect","requestMode","requestCredentials","requestCache","nullBodyStatus","requestDuplex","encoder","HTTP_TOKEN_CODEPOINTS","HTTP_WHITESPACE_REGEX","HTTP_QUOTED_STRING_TOKENS","href","hashLength","collectASequenceOfCodePoints","stringPercentDecode","nextTwoBytes","bytePoint","percentDecode","removeHTTPWhitespace","subtype","typeLowercase","subtypeLowercase","parameters","essence","parameterName","parameterValue","collectAnHTTPQuotedString","extractValue","positionStart","quoteOrBackslash","isHTTPWhiteSpace","leading","trailing","lead","trail","isASCIIWhitespace","dataURLProcessor","dataURL","mimeTypeLength","removeASCIIWhitespace","binary","forgivingBase64","isomorphicDecode","mimeTypeRecord","serialization","fileBits","FilePropertyBag","substep","endings","convertLineEndingsNative","isAnyArrayBuffer","isTypedArray","processBlobParts","FileLike","blobLike","nativeLineEnding","BlobPart","Type","BufferSource","isFileLike","form","conversionFailed","makeEntry","makeIterator","callbackFn","globalOrigin","newOrigin","writable","parsedURL","kHeadersMap","kHeadersSortedMap","isHTTPWhiteSpaceCharCode","headerValueNormalize","potentialValue","appendHeader","invalidArgument","isValidHeaderValue","HeadersList","clear","lowercaseName","HeadersInit","ByteString","zlib","EE","GET_OR_HEAD","resolveObjectURL","Fetch","setMaxListeners","terminate","serializedAbortReason","finalizeAndReportTiming","initiatorType","urlList","originalURL","timingInfo","cacheState","timingAllowPassed","createOpaqueTimingInfo","startTime","endTime","coarsenedSharedCurrentTime","performance","markResourceTiming","abortFetch","taskDestination","crossOriginIsolatedCapability","globalObject","currenTime","fetchParams","processRequestBodyChunkLength","processRequestEndOfBody","processResponseConsumeBody","policyContainer","clonePolicyContainer","makePolicyContainer","priority","mainFetch","recursive","localURLsOnly","urlIsLocal","requestCurrentURL","makeNetworkError","tryUpgradeRequestToAPotentiallyTrustworthyURL","requestBadPort","referrer","determineRequestsReferrer","currentURL","sameOrigin","responseTainting","mode","schemeFetch","redirect","httpFetch","filterResponse","timingAllowFailed","rangeRequested","integrity","processBodyError","fetchFinale","processBody","bytesMatch","redirectCount","makeAppropriateNetworkError","blobURLEntry","blobURLEntryObject","bodyWithType","isomorphicEncode","makeResponse","dataURLStruct","finalizeResponse","processResponseDone","identityTransformAlgorithm","transformStream","TransformStream","transform","flush","pipeThrough","nullOrBytes","failure","actualResponse","serviceWorkers","httpNetworkOrCacheFetch","corsCheck","TAOCheck","crossOriginResourcePolicyCheck","locationURL","responseLocationURL","redirectEndTime","postRedirectStartTime","redirectStartTime","setRequestReferrerPolicyOnRedirect","httpRedirectFetch","isAuthenticationFetch","isNewConnectionFetch","httpFetchParams","includeCredentials","credentials","contentLengthHeaderValue","appendRequestOriginHeader","appendFetchMetadata","esbuildDetection","preventNoCacheCacheControlHeaderModification","urlHasHttpsScheme","forwardResponse","httpCache","processBodyChunk","processEndOfBody","pullAlgorithm","cancelAlgorithm","isAborted","isErrorLike","isFailure","encodedBodySize","decodedBodySize","isMockActive","codings","location","decoders","willFollow","coding","createGunzip","Z_SYNC_FLUSH","finishFlush","createInflate","createBrotliDecompress","STATUS_CODES","httpNetworkFetch","requestIncludesCredentials","locallyAborted","fillHeaders","kAbortController","requestFinalizer","RequestInit","settingsObject","fallbackMode","unsafeRequest","reloadNavigation","historyNavigation","initHasKey","parsedReferrer","isValidHTTPToken","normalizeMethodRecord","normalizeMethod","ac","acRef","getMaxListeners","defaultMaxListeners","getEventListeners","inputBody","initBody","extractedBody","inputOrInitBody","useCORSPreflightFlag","finalBody","identityTransform","isReloadNavigation","isHistoryNavigation","clonedRequest","cloneRequest","clonedRequestObject","reservedClient","replacesClientId","useCredentials","cryptoGraphicsNonceMetadata","parserMetadata","userActivation","taintedOrigin","attribute","BodyInit","relevantRealm","ResponseInit","serializeJavascriptValueToJSONString","initializeResponse","redirected","clonedResponseObject","newResponse","makeFilteredResponse","isValidReasonPhrase","XMLHttpRequestBodyInit","isDataView","referrerPolicyTokens","supportedHashes","possibleRelevantHashes","getHashes","responseURL","isTokenCharCode","characters","stripURLForReferrer","originOnly","isURLPotentiallyTrustworthy","originAsURL","isOriginPotentiallyTrustworthy","parseHashWithOptions","parseMetadata","parsedToken","groups","algo","algorithm","compareBase64Mixed","actualValue","expectedValue","DELETE","GET","HEAD","OPTIONS","POST","PUT","esIteratorPrototype","hasOwn","rej","referrerSource","referrerURL","referrerOrigin","areSameOrigin","isNonPotentiallyTrustWorthy","serializedOrigin","finalServiceWorkerStartTime","finalNetworkResponseStartTime","finalNetworkRequestStartTime","finalConnectionTimingInfo","policyHeader","requestFragment","iteratorResult","metadataList","parsedMetadata","strongest","getStrongestMetadata","filterMetadataListByAlgorithm","createHash","previous","current","I","ctx","ConvertToInt","bitLength","signedness","upperBound","lowerBound","enforceRange","IntegerPart","clamp","seq","recordConverter","keyConverter","valueConverter","isProxy","typedKey","typedValue","ownKeys","desc","getOwnPropertyDescriptor","hasDefault","legacyNullToEmptyString","allowShared","isSharedArrayBuffer","TypedArray","getEncoding","label","EventTarget","kResult","kEvents","loadend","progress","loadstart","readAsArrayBuffer","readOperation","readAsBinaryString","readAsText","readAsDataURL","kAborted","fireAProgressEvent","readyState","EMPTY","LOADING","DONE","onloadend","onerror","onloadstart","onprogress","onload","staticPropertyDescriptors","ProgressEvent","Event","eventInitDict","ProgressEventInit","lengthComputable","loaded","kLastProgressEventFired","bubbles","cancelable","packageData","encodingName","decoder","StringDecoder","ioQueue","combineByteSequences","BOMEncoding","BOMSniffing","sliced","binaryString","sequences","chunkPromise","isFirstChunk","globalDispatcher","redirectableStatusCodes","BodyAsyncIterable","shouldRemoveHeader","removeContent","unknownOrigin","history","pipeTo","parseLocation","cleanRequestHeaders","handlers","dispatchOpts","retryFn","retryOpts","retryAfter","maxTimeout","minTimeout","timeoutFactor","statusCodes","errorCodes","currentTimeout","calculateRetryAfterHeader","retryTimeout","rawTrailers","defaultMaxRedirections","redirectHandler","Pluralizer","PendingInterceptorsFormatter","FakeWeakRef","kNetConnect","kIsMockActive","kAgent","buildMockOptions","kMockAgentGet","kMockAgentSet","deactivate","activate","enableNetConnect","matcher","disableNetConnect","mockOptions","keyMatcher","nonExplicitRef","nonExplicitDispatcher","matchValue","kDispatches","kGetNetConnect","pendingInterceptors","mockAgentClients","assertNoPendingInterceptors","pluralizer","pluralize","noun","pendingInterceptorsFormatter","Symbols","kMockAgent","kOrigin","kOriginalDispatch","kOriginalClose","buildMockDispatch","intercept","MockInterceptor","promisify","MockNotMatchedError","MockScope","mockDispatch","kMockDispatch","waitInMs","persist","times","repeatTimes","mockDispatches","kDispatchKey","buildKey","kDefaultHeaders","kDefaultTrailers","kContentLength","createMockScopeDispatchData","responseOptions","responseData","getResponseData","validateReplyParameters","reply","replyData","wrappedDefaultsCallback","resolvedData","newMockDispatch","addMockDispatch","dispatchData","replyWithError","defaultReplyHeaders","defaultReplyTrailers","replyContentLength","lowerCaseEntries","fromEntries","getHeaderByName","buildHeadersFromArray","matchHeaders","matchHeaderName","matchHeaderValue","safeUrl","pathSegments","qp","getMockDispatch","basePath","resolvedPath","matchedMockDispatches","consumed","deleteMockDispatch","pathMatch","methodMatch","bodyMatch","headersMatch","matchKey","generateKeyValues","keyValuePairs","getStatusText","timesInvoked","handleReply","_data","optsHeaders","isPromise","newData","responseTrailers","checkNetConnect","netConnect","getResponse","originalDispatch","_enc","Console","inspectOptions","disableColors","CI","withPrettyHeaders","Method","Origin","Path","Persistent","Invocations","Remaining","singulars","pronoun","was","plurals","singular","one","FixedCircularBuffer","bottom","top","isEmpty","isFull","nextItem","FixedQueue","PoolStats","kStats","running","stats","kPool","queued","kConnections","kProxyHeaders","kRequestTls","kProxyTls","kConnectEndpoint","buildProxyOptions","clientFactory","requestTls","proxyTls","resolvedUrl","auth","requestedHost","headersPair","buildHeaders","existProxyAuth","throwIfProxyAuthIsSent","fastNowTimeout","fastNow","fastTimers","onTimeout","Timeout","socketError","onSocketData","kByteParser","wasClean","kSentClose","kReceivedClose","closingInfo","kReadyState","states","CLOSED","fireEvent","CloseEvent","websocket","CLOSING","establishWebSocketConnection","protocols","onEstablish","requestURL","randomBytes","useParallelQueue","failWebsocketConnection","uid","secExtension","secProtocol","address","extensions","emptyBuffer","CONNECTING","OPEN","opcodes","CONTINUATION","TEXT","BINARY","CLOSE","PING","PONG","maxUnsigned16Bit","parserStates","INFO","PAYLOADLENGTH_16","PAYLOADLENGTH_64","READ_DATA","MessageEvent","MessageEventInit","lastEventId","ports","isFrozen","initMessageEvent","CloseEventInit","ErrorEvent","ErrorEventInit","lineno","colno","MessagePort","eventInit","WebsocketFrameSend","frameData","maskKey","createFrame","opcode","payloadLength","writeUInt16BE","writeUIntBE","ping","pong","ByteParser","Writable","_write","run","fin","originalOpcode","fragmented","closeInfo","parseCloseBody","closeFrame","kResponse","frame","readUInt16BE","upper","readUInt32BE","lower","fullMessage","websocketMessageReceived","onlyCode","isValidStatusCode","kWebSocketURL","kController","kBinaryType","eventConstructor","isEstablished","isClosing","isClosed","isValidSubprotocol","dataForEvent","experimentalWarned","baseURL","urlRecord","reasonByteLength","WebSocketSendData","ab","bufferedAmount","onopen","onclose","onmessage","binaryType","WebSocketInit","$completion","<this>","getOrNull","stage","isMochaRunning","stateVariable","setFailed","mainInternal","getInput","toList","toBoolean","chdir","getListInput","Parameters","resolveDistribution","currentTrigger","GradleCacheAction","listOf","install","LaunchParams","splitLines","CacheProxy","launchGradle","setOutput","$path","$req","$res","handle","$this$handle","$fileName","$id","$this$launch","CacheProxy$start$lambda","createServer","removePrefix","getEntry","putEntry","saveAndLog","removeFiles","pipeAndWait","createWriteStream","writeHead","launch","restoreAndLog","createReadStream","safe","listen","mkdir","multiCacheEnabled","multiCacheVersion","multiCacheRepository","multiCacheGroupIdFilter","multiCacheGroupIdFilterEscaped","trimIndent","$action","$this$supervisorScope","HttpException","supervisorScope","printStackTrace","distributionUrl","distributionSha256Sum","versionSpec","projectPath","enableDistributionSha256SumWarning","$gradleZip","$extractedGradleDir","distribution","buildScanUrl","$buildScanUrl","$outCollector","it","$errorCollector","$params","apiPath","GradleVersion","Dynamic","unused","Official","gradle","daemon","<init>","ma","errorContinuation","GradleDistribution","findUrl","findVersionFromWrapper","hashFiles","ActionFailedException","toInt","HttpClient","getJson","resolveChecksum","parseString","removeSuffix","substringAfter","substringAfterLast","downloadUrl","checksumUrl","readBody","GradleErrorCollector","GradleOutErrorCollector","shortFile","cwd","exitCode","GradleResult","GradleError","processJavaError","joinToString","totalFiles","files","contents","fileSize","includeFileName","newFiles","totalUpdated","totalDeleted","updatedFiles","deletedFiles","numFiles","lastSlash","hashStart","glob","isDirectory","stackTraceToString","FileDetails","HashDetails","HashInfo","HashContents","formatBytes","HashResult","oldContents","newContents","maxUpdatesToPrint","oldHash","Diff","trigger","gradleDistribution","suspendingStateVariable","jobId","generatedGradleJars","localBuildCache","gradleDependenciesCache","gradleDependenciesCacheKey","mavenDependenciesCache","mavenLocalIgnorePaths","concurrent","pull_request","repository","default_branch","$cache","primaryKey","restoreKeys","readOnlyMessage","stateKey","skipRestoreIfPathExists","MetadataFile","$default","isBlank","DefaultCache","baseline","maxLayers","layers","existsSync","mkdirSync","warnOnMissing","extension","dependenciesCache","cacheLocation","pathDependencies","$pathDependencies","gradleVersion","treeId","pkPrefix","LayeredCache","buildCacheLocation","DefaultStateVariable","BaseStateVariable","DefaultSuspendingStateVariable","$decode","$encode","CompositeCache","elapsed","roundToInt","hashFilesDetailed","delta","Exact","Partial","withIndex","toCache","saveSingleLayerCache","firstLayer","firstOrNull","firstBaseline","zip","layer","helpfulBytes","wastedBytes","helpfulLayerFiles","deletedLayerFiles","newDetails","CacheLayer","CacheLayers","getState","saveState","RestoreType","$stdout","$stderr","commandLine","captureOutput","$file","$fileNames","environment","ExecResult","homedir","ActionsTrigger","eventString","eventName","PullRequest","BranchPush","WorkflowDispatch","Schedule","Other","$continuation","LN2","relativeStart","relativeEnd","finalValue","asUint","subjectString","initial","separator","postfix","truncated","minimumValue","maximumValue","ordinal","interfaces","masks","currentSize","imask","iid","iidImask","mask","activeBit","numberIndex","intArray","numberWithSettledBit","initValue","$array","ia","proto","obj1","obj2","typeOf","shiftNumber","MASK","bigNumber","hashCode","signum","hashCodeMap","cachedHashCode","constructorFunction","this_","errorInfo","thisNeg","otherNeg","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","b00","numBits","radix","radixLong","div","rem","digitsPerTime","radixToPower","remDiv","digits","defaultConstructor","associatedObjectKey","associatedObjects","suspendArity","ctor","endInclusive","iface","possibleActiveBit","jsClass","objType","klassMetadata","parentProto","newSize","srcLen","dstLen","fromIndex","toIndex","collection","expectedSize","destinationOffset","rangeSize","subrange","ArrayList_init_$Init$","initialCapacity","median","leftIndex","rightIndex","leftValue","rightValue","internalMap","HashMap_init_$Init$","loadFactor","original","backing","$entryIterator","backingMap","HashSet_init_$Init$","hashSize","InternalHashMap_init_$Init$","extraCapacity","spareCapacity","gaps","minCapacity","newHashSize","curValuesArray","newValuesArray","updateHashArray","valuesArray","probesLeft","tentativeMaxProbeDistance","probeDistance","putIndex","removedHash","hole","patchAttemptsLeft","keysArray","presenceArray","hashArray","maxProbeDistance","LinkedHashMap_init_$Init$","LinkedHashSet_init_$Init$","resultContinuation","delegate","initialResult","completion","wrappedCompletion","$receiver","$completion$1","Exception_init_$Init$","IllegalArgumentException_init_$Init$","IllegalStateException_init_$Init$","UnsupportedOperationException_init_$Init$","RuntimeException_init_$Init$","NoSuchElementException_init_$Init$","ConcurrentModificationException_init_$Init$","NullPointerException_init_$Init$","NoWhenBranchMatchedException_init_$Init$","ClassCastException_init_$Init$","jClass","givenSimpleName","isInstanceFunction","jClasses","kClass","sequence","StringBuilder_init_$Init$","uppercase","needle","middle","ignoreCase","prepend","nextPattern","$match","$range","$nextPattern","$input","thisOffset","otherOffset","suffix","indent","qualifier","shortInfo","stackStart","commonFrames","lastBreak","preLastBreak","messageLines","suppressed","suppressedIndent","ArrayDeque_init_$Init$","newCapacity","newElements","internalFromIndex","internalToIndex","isVarargs","iteratorFactory","getInitialValue","getNextValue","transformer","acc","removed","interceptor","cur","baseKey","safeCast","thisUpper","otherUpper","firstChar","limitBeforeMul","digit","chars","charAtIndex","indices","block","arity","initializer","second","that","CancellationException_init_$Init$","Error_init_$Init$","IndexOutOfBoundsException_init_$Init$","NumberFormatException_init_$Init$","ArithmeticException_init_$Init$","UninitializedPropertyAccessException_init_$Init$","halfThis","approx","approxDouble","approx2","log2","approxRes","approxRem","bitCount","modified","amount","updated","currentResult","currentException","outcome","intercepted","$arity","newLength","stringCsq","literal","$startIndex","lastStart","code1","code2","oldCapacity","otherIterator","ourValue","internalLastIndex","internalIndex","decrementedInternalIndex","decrementedHead","reference","dest","collectionSize","copyFromIndex","copyToIndex","copyCount","segmentLength","newHead","newLeft","rangeStart","rangeEnd","_delimiterLength","_delimiterStartIndex","firstIndex","cont","comparison","setter","paramCount","superType","throwable","isPositive","nextFunction","$nextFunction","padChar","newValue","oldChar","newChar","missingDelimiterValue","newIndent","minCommonIndent","$indent","startFound","$type","$handler","$options","signal1","signal2","$handlers","$controller","cancellable","abortOptions","event1","event2","event3","event4","<set-?>","expect","trace","initParentJob","active","undispatched","eventLoop","proposedUpdate","resumeMode","onCancellation","cancelHandler","idempotentResume","cancelCause","handled","continuation","uCont","reportException","originalException","thrownException","unconfined","invokeImmediately","JobNode$invoke$ref","JobNode$invoke$ref$lambda","isActive","wasCancelling","proposedException","exceptions","finalCause","firstNonCancellation","rootCause","seenExceptions","unwrappedCause","unwrapped","finalException","finalState","isCancellation","cancelling","notifyRootCause","finishing","anotherChild","isCompleting","childJob","runnable","job","forbiddenElementsBitmask","fatalCompletion","takenState","dispatched","isReusable","cancellationCause","caller","actualCompletion","task","eh","lastChild","waitChild","waitChildAgain","onCancelling","parentJob","causeExceptionCache","causeException","addedBeforeCompletion","latestState","main","immediate","yieldContext","permissionsBitmask","forbiddenElementsBit","coroutine","alwaysRethrow","combined","deserializer","previousValue","missingFields","serialName","subClassName","baseClass","elementDesc","keyDesc","valueDesc","elementDescriptor","keyDescriptor","valueDescriptor","kSerializer","vSerializer","keySerializer","valueSerializer","elementSerializer","readIfAbsent","elementsCount","elementsInLastSlot","highMarks","slotsCount","generatedSerializer","$primitiveSerializer","typeParams","elementDescriptors","accumulator","namesHash","kindHash","class2ContextualFactory","polyBase2Serializers","polyBase2DefaultSerializerProvider","polyBase2NamedSerializers","polyBase2DefaultDeserializerProvider","hasInterfaceContextualSerializers","SerializationException_init_$Init$","klassName","builder","checkIndex","vIndex","composite","compositeDecoder","slot","offsetInSlot","slotOffset","slotMarks","indexInSlot","isOptional","nestedName","parentName","childName","$deserializer","$previousValue","typeArgumentsSerializers","registered","serializedClassName","primitiveSerializer","goldenMask","missingFieldsBits","subClass","configuration","serializersModule","encodeDefaults","ignoreUnknownKeys","isLenient","allowStructuredMapKeys","prettyPrint","explicitNulls","prettyPrintIndent","coerceInputValues","useArrayPolymorphism","classDiscriminator","allowSpecialFloatingPointValues","useAlternativeNames","namingStrategy","decodeEnumsCaseInsensitive","allowTrailingComma","allowComments","classDiscriminatorMode","isString","coerceToInlineType","JsonElementMarker$readIfAbsent$ref","JsonElementMarker$readIfAbsent$ref$lambda","$strategy","baseName","$descriptor","useLowercaseEnums","strategyForClasses","nameToPut","$this_buildDeserializationNamesMap","lastToken","$this$DeepRecursiveFunction","lexer","annotation","actualSerializer","actualName","discriminatorToSkip","enumIndex","coerceToNull","unknownKey","discriminatorHolder","composer","modeReuseCache","lastPos","c1","c2","c3","c4","polyDescriptor","discriminator","keyKind","lastPosition","startPosition","currentPosition","currentChar","startPos","character","esc","cl","sd","answer","jsonTree","hint","newMode","isMapKey","hasComma","isUnknown","decodingKey","isPolymorphicSerializer","baseClassDiscriminator","needDiscriminator","casted","actual","currentTag","currentObject","deserializationNamesMap","fallbackName","expected","cpos","doConsume","endPos","usedAppend","eof","allowLenientStrings","tokenStack","processed","hintMessage","hasQuotation","exponentAccumulator","isExponentPositive","hasExponent","hasChars","doubleAccumulator","closingQuote","keyToMatch","positionSnapshot","WritableStream","StreamSearch","PartStream","HeaderParser","B_ONEDASH","B_CRLF","EMPTY_FN","Dicer","cfg","headerFirst","setBoundary","_bparser","_headerFirst","_dashes","_parts","_finished","_realFinish","_isPreamble","_justMatched","_firstWrite","_inHeader","_part","_cb","_ignoreData","_partOpts","partHwm","_pause","_hparser","_ignore","isMatch","_oninfo","shouldWriteMore","_unpause","getLimit","B_DCRLF","RE_CRLF","RE_HDR","nread","maxed","npairs","maxHeaderPairs","ss","_finish","_parseHeader","maxMatches","posColon","SBMH","needleLength","_occ","_lookbehind_size","_needle","_bufpos","_lookbehind","chlen","_sbmh_feed","lastNeedleChar","_sbmh_lookup_char","_sbmh_memcmp","bytesToCutOff","MultipartParser","UrlencodedParser","parseParams","streamOptions","_done","_parser","getParserByHeaders","defCharset","fileHwm","isPartAFile","limits","parsedConType","detect","decodeText","basename","RE_BOUNDARY","RE_FIELD","RE_CHARSET","RE_FILENAME","RE_NAME","Multipart","boy","fileOpts","checkFinished","nends","fieldSizeLimit","fileSizeLimit","filesLimit","fieldsLimit","partsLimit","headerPairsLimit","headerSizeLimit","curFile","curField","nfiles","nfields","_needDrain","_nparts","_boy","parserCfg","onPart","skipPart","hitPartsLimit","contype","fieldname","charset","onEnd","nsize","hitFilesLimit","FileStream","extralen","hitFieldsLimit","Decoder","UrlEncoded","fieldNameSizeLimit","_checkingBytes","_bytesKey","_bytesVal","_key","_val","_keyTrunc","_valTrunc","_hitLimit","idxeq","idxamp","keyTrunc","RE_PLUS","HEX","utf8Decoder","textDecoders","utf8","sourceEncoding","utf8Slice","latin1","latin1Slice","utf16le","ucs2Slice","base64Slice","destEncoding","lc","getDecoder","defaultLimit","RE_ENCODED","EncodedLookup","encodedReplacer","inquote","tmp","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition"],"sourceRoot":""}